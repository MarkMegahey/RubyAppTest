/*!
 * jQuery JavaScript Library v1.12.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:17Z
 */


(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//"use strict";
var deletedIds = [];

var document = window.document;

var slice = deletedIds.slice;

var concat = deletedIds.concat;

var push = deletedIds.push;

var indexOf = deletedIds.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "1.12.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1, IE<9
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: deletedIds.sort,
	splice: deletedIds.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type( obj ) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {

		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		var realStringObj = obj && obj.toString();
		return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {

			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call( obj, "constructor" ) &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}
		} catch ( e ) {

			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( !support.ownFirst ) {
			for ( key in obj ) {
				return hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {

			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data ); // jscs:ignore requireDotNotation
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1, IE<9
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( indexOf ) {
				return indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {

				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		while ( j < len ) {
			first[ i++ ] = second[ j++ ];
		}

		// Support: IE<9
		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
		if ( len !== len ) {
			while ( second[ j ] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: function() {
		return +( new Date() );
	},

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

// JSHint would error on this code due to the Symbol not being defined in ES5.
// Defining this global in .jshintrc would create a danger of using the global
// unguarded in another place, it seems safer to just disable JSHint for these
// three lines.
/* jshint ignore: start */
if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = deletedIds[ Symbol.iterator ];
}
/* jshint ignore: end */

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.1
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-10-17
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, nidselect, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
					while ( i-- ) {
						groups[i] = nidselect + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( (parent = document.defaultView) && parent.top !== parent ) {
		// Support: IE 11
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				return m ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( (oldCache = uniqueCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		} );

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) > -1 ) !== not;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// init accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt( 0 ) === "<" &&
				selector.charAt( selector.length - 1 ) === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {

						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[ 2 ] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[ 0 ] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof root.ready !== "undefined" ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter( function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

				// Always skip document fragments
				if ( cur.nodeType < 11 && ( pos ?
					pos.index( cur ) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector( cur, selectors ) ) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[ 0 ], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem, this );
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.uniqueSort( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
} );
var rnotwhite = ( /\S+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = true;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this === promise ? newDefer.promise() : this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add( function() {

					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 ||
				( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred.
			// If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );

					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.progress( updateFunc( i, progressContexts, progressValues ) )
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
} );


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {

	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
} );

/**
 * Clean-up method for dom ready events
 */
function detach() {
	if ( document.addEventListener ) {
		document.removeEventListener( "DOMContentLoaded", completed );
		window.removeEventListener( "load", completed );

	} else {
		document.detachEvent( "onreadystatechange", completed );
		window.detachEvent( "onload", completed );
	}
}

/**
 * The ready event handler and self cleanup method
 */
function completed() {

	// readyState === "complete" is good enough for us to call the dom ready in oldIE
	if ( document.addEventListener ||
		window.event.type === "load" ||
		document.readyState === "complete" ) {

		detach();
		jQuery.ready();
	}
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE6-10
		// Older IE sometimes signals "interactive" too soon
		if ( document.readyState === "complete" ||
			( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed );

		// If IE event model is used
		} else {

			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch ( e ) {}

			if ( top && top.doScroll ) {
				( function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {

							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll( "left" );
						} catch ( e ) {
							return window.setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				} )();
			}
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Support: IE<9
// Iteration over object's inherited properties before its own
var i;
for ( i in jQuery( support ) ) {
	break;
}
support.ownFirst = i === "0";

// Note: most support tests are defined in their respective modules.
// false until the test is run
support.inlineBlockNeedsLayout = false;

// Execute ASAP in case we need to set body.style.zoom
jQuery( function() {

	// Minified: var a,b,c,d
	var val, div, body, container;

	body = document.getElementsByTagName( "body" )[ 0 ];
	if ( !body || !body.style ) {

		// Return for frameset docs that don't have a body
		return;
	}

	// Setup
	div = document.createElement( "div" );
	container = document.createElement( "div" );
	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
	body.appendChild( container ).appendChild( div );

	if ( typeof div.style.zoom !== "undefined" ) {

		// Support: IE<8
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
		if ( val ) {

			// Prevent IE 6 from affecting layout for positioned elements #11048
			// Prevent IE from shrinking the body in IE 7 mode #12869
			// Support: IE<8
			body.style.zoom = 1;
		}
	}

	body.removeChild( container );
} );


( function() {
	var div = document.createElement( "div" );

	// Support: IE<9
	support.deleteExpando = true;
	try {
		delete div.test;
	} catch ( e ) {
		support.deleteExpando = false;
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();
var acceptData = function( elem ) {
	var noData = jQuery.noData[ ( elem.nodeName + " " ).toLowerCase() ],
		nodeType = +elem.nodeType || 1;

	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
	return nodeType !== 1 && nodeType !== 9 ?
		false :

		// Nodes accept data unless otherwise specified; rejection can be conditional
		!noData || noData !== true && elem.getAttribute( "classid" ) === noData;
};




var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :

					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[ name ] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}

function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( ( !id || !cache[ id ] || ( !pvt && !cache[ id ].data ) ) &&
		data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {

		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {

		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split( " " );
					}
				}
			} else {

				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[ i ] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject( thisCache ) : !jQuery.isEmptyObject( thisCache ) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, undefined
	} else {
		cache[ id ] = undefined;
	}
}

jQuery.extend( {
	cache: {},

	// The following elements (space-suffixed to avoid Object.prototype collisions)
	// throw uncatchable exceptions if you attempt to set expando properties
	noData: {
		"applet ": true,
		"embed ": true,

		// ...but Flash objects (which have this classid) *can* handle expandos
		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[ jQuery.expando ] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				jQuery.data( this, key );
			} );
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each( function() {
				jQuery.data( this, key, value );
			} ) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
	},

	removeData: function( key ) {
		return this.each( function() {
			jQuery.removeData( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object,
	// or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );


( function() {
	var shrinkWrapBlocksVal;

	support.shrinkWrapBlocks = function() {
		if ( shrinkWrapBlocksVal != null ) {
			return shrinkWrapBlocksVal;
		}

		// Will be changed later if needed.
		shrinkWrapBlocksVal = false;

		// Minified: var b,c,d
		var div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {

			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		// Support: IE6
		// Check if elements with layout shrink-wrap their children
		if ( typeof div.style.zoom !== "undefined" ) {

			// Reset CSS: box-sizing; display; margin; border
			div.style.cssText =

				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;" +
				"padding:1px;width:1px;zoom:1";
			div.appendChild( document.createElement( "div" ) ).style.width = "5px";
			shrinkWrapBlocksVal = div.offsetWidth !== 3;
		}

		body.removeChild( container );

		return shrinkWrapBlocksVal;
	};

} )();
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {

		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" ||
			!jQuery.contains( elem.ownerDocument, elem );
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() { return tween.cur(); } :
			function() { return jQuery.css( elem, prop, "" ); },
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		length = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < length; i++ ) {
				fn(
					elems[ i ],
					key,
					raw ? value : value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			length ? fn( elems[ 0 ], key ) : emptyGet;
};
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([\w:-]+)/ );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );

var rleadingWhitespace = ( /^\s+/ );

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|" +
		"details|dialog|figcaption|figure|footer|header|hgroup|main|" +
		"mark|meter|nav|output|picture|progress|section|summary|template|time|video";



function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}


( function() {
	var div = document.createElement( "div" ),
		fragment = document.createDocumentFragment(),
		input = document.createElement( "input" );

	// Setup
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName( "tbody" ).length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone =
		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	input.type = "checkbox";
	input.checked = true;
	fragment.appendChild( input );
	support.appendChecked = input.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE6-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// #11217 - WebKit loses check when the name is after the checked attribute
	fragment.appendChild( div );

	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input = document.createElement( "input" );
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Cloned elements keep attachEvent handlers, we use addEventListener on IE9+
	support.noCloneEvent = !!div.addEventListener;

	// Support: IE<9
	// Since attributes and properties are the same in IE,
	// cleanData must set properties to undefined rather than use removeAttribute
	div[ jQuery.expando ] = 1;
	support.attributes = !div.getAttribute( jQuery.expando );
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {
	option: [ 1, "<select multiple='multiple'>", "</select>" ],
	legend: [ 1, "<fieldset>", "</fieldset>" ],
	area: [ 1, "<map>", "</map>" ],

	// Support: IE8
	param: [ 1, "<object>", "</object>" ],
	thead: [ 1, "<table>", "</table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
	// unless wrapped in a div with non-breaking characters in front of it.
	_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>" ]
};

// Support: IE8-IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== "undefined" ?
				context.querySelectorAll( tag || "*" ) :
				undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context;
			( elem = elems[ i ] ) != null;
			i++
		) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; ( elem = elems[ i ] ) != null; i++ ) {
		jQuery._data(
			elem,
			"globalEval",
			!refElements || jQuery._data( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/,
	rtbody = /<tbody/i;

function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

function buildFragment( elems, context, scripts, selection, ignored ) {
	var j, elem, contains,
		tmp, tag, tbody, wrap,
		l = elems.length,

		// Ensure a safe fragment
		safe = createSafeFragment( context ),

		nodes = [],
		i = 0;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || safe.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;

				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Manually add leading whitespace removed by IE
				if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
					nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[ 0 ] ) );
				}

				// Remove IE's autoinserted <tbody> from table fragments
				if ( !support.tbody ) {

					// String was a <table>, *may* have spurious <tbody>
					elem = tag === "table" && !rtbody.test( elem ) ?
						tmp.firstChild :

						// String was a bare <thead> or <tfoot>
						wrap[ 1 ] === "<table>" && !rtbody.test( elem ) ?
							tmp :
							0;

					j = elem && elem.childNodes.length;
					while ( j-- ) {
						if ( jQuery.nodeName( ( tbody = elem.childNodes[ j ] ), "tbody" ) &&
							!tbody.childNodes.length ) {

							elem.removeChild( tbody );
						}
					}
				}

				jQuery.merge( nodes, tmp.childNodes );

				// Fix #12392 for WebKit and IE > 9
				tmp.textContent = "";

				// Fix #12392 for oldIE
				while ( tmp.firstChild ) {
					tmp.removeChild( tmp.firstChild );
				}

				// Remember the top-level container for proper cleanup
				tmp = safe.lastChild;
			}
		}
	}

	// Fix #11356: Clear elements from fragment
	if ( tmp ) {
		safe.removeChild( tmp );
	}

	// Reset defaultChecked for any radios and checkboxes
	// about to be appended to the DOM in IE 6/7 (#8060)
	if ( !support.appendChecked ) {
		jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
	}

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}

			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( safe.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	tmp = null;

	return safe;
}


( function() {
	var i, eventName,
		div = document.createElement( "div" );

	// Support: IE<9 (lack submit/change bubble), Firefox (lack focus(in | out) events)
	for ( i in { submit: true, change: true, focusin: true } ) {
		eventName = "on" + i;

		if ( !( support[ i ] = eventName in window ) ) {

			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
			div.setAttribute( eventName, "t" );
			support[ i ] = div.attributes[ eventName ].expando === false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();


var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE9
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" &&
					( !e || jQuery.event.triggered !== e.type ) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};

			// Add elem as a property of the handle fn to prevent a memory leak
			// with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] &&
				jQuery._data( cur, "handle" );

			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if (
				( !special._default ||
				 special._default.apply( eventPath.pop(), data ) === false
				) && acceptData( elem )
			) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {

						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Support (at least): Chrome, IE9
		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		//
		// Support: Firefox<=42+
		// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
		if ( delegateCount && cur.nodeType &&
			( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push( { elem: cur, handlers: matches } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Safari 6-8+
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
		"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split( " " ),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: ( "button buttons clientX clientY fromElement offsetX offsetY " +
			"pageX pageY screenX screenY toElement" ).split( " " ),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX +
					( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
					( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY +
					( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
					( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ?
					original.toElement :
					fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {

						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	// Piggyback on a donor event to simulate a different one
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true

				// Previously, `originalEvent: {}` was set here, so stopPropagation call
				// would not be triggered on donor event, since in our own
				// jQuery.event.stopPropagation function we had a check for existence of
				// originalEvent.stopPropagation method, so, consequently it would be a noop.
				//
				// Guard for simulated events was moved to jQuery.event.stopPropagation function
				// since `originalEvent` should point to the original event for the
				// constancy with other events and for more focused logic
			}
		);

		jQuery.event.trigger( e, null, elem );

		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {

		// This "if" is needed for plain objects
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event,
			// to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: IE < 9, Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( !e || this.isSimulated ) {
			return;
		}

		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://code.google.com/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

// IE submit delegation
if ( !support.submit ) {

	jQuery.event.special.submit = {
		setup: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {

				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ?

						// Support: IE <=8
						// We use jQuery.prop instead of elem.form
						// to allow fixing the IE8 delegated submit issue (gh-2332)
						// by 3rd party polyfills/workarounds.
						jQuery.prop( elem, "form" ) :
						undefined;

				if ( form && !jQuery._data( form, "submit" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submitBubble = true;
					} );
					jQuery._data( form, "submit", true );
				}
			} );

			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {

			// If form was submitted by the user, bubble the event up the tree
			if ( event._submitBubble ) {
				delete event._submitBubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event );
				}
			}
		},

		teardown: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !support.change ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {

				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._justChanged = true;
						}
					} );
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._justChanged && !event.isTrigger ) {
							this._justChanged = false;
						}

						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event );
					} );
				}
				return false;
			}

			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "change" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event );
						}
					} );
					jQuery._data( elem, "change", true );
				}
			} );
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger ||
				( elem.type !== "radio" && elem.type !== "checkbox" ) ) {

				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Support: Firefox
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome, Safari
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					jQuery._removeData( doc, fix );
				} else {
					jQuery._data( doc, fix, attaches );
				}
			}
		};
	} );
}

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	},

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


var rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp( "<(?:" + nodeNames + ")[\\s/>]", "i" ),
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

	// Support: IE 10-11, Edge 10240+
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement( "div" ) );

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName( "tbody" )[ 0 ] ||
			elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( jQuery.find.attr( elem, "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}
	return elem;
}

function cloneCopyEvent( src, dest ) {
	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( support.html5Clone && ( src.innerHTML && !jQuery.trim( dest.innerHTML ) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {

		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var first, node, hasScripts,
		scripts, doc, fragment,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android<4.1, PhantomJS<2
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!jQuery._data( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							jQuery.globalEval(
								( node.text || node.textContent || node.innerHTML || "" )
									.replace( rcleanScript, "" )
							);
						}
					}
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		elems = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = elems[ i ] ) != null; i++ ) {

		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( support.html5Clone || jQuery.isXMLDoc( elem ) ||
			!rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {

			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( ( !support.noCloneEvent || !support.noCloneChecked ) &&
				( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; ( node = srcElements[ i ] ) != null; ++i ) {

				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[ i ] ) {
					fixCloneNodeIssues( node, destElements[ i ] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; ( node = srcElements[ i ] ) != null; i++ ) {
					cloneCopyEvent( node, destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems, /* internal */ forceAcceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			attributes = support.attributes,
			special = jQuery.event.special;

		for ( ; ( elem = elems[ i ] ) != null; i++ ) {
			if ( forceAcceptData || acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// Support: IE<9
						// IE does not allow us to delete expando properties from nodes
						// IE creates expando attributes along with the property
						// IE does not have a removeAttribute function on Document nodes
						if ( !attributes && typeof elem.removeAttribute !== "undefined" ) {
							elem.removeAttribute( internalKey );

						// Webkit & Blink performance suffers when deleting properties
						// from DOM nodes, so set to undefined instead
						// https://code.google.com/p/chromium/issues/detail?id=378607
						} else {
							elem[ internalKey ] = undefined;
						}

						deletedIds.push( id );
					}
				}
			}
		}
	}
} );

jQuery.fn.extend( {

	// Keep domManip exposed until 3.0 (gh-2225)
	domManip: domManip,

	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append(
					( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value )
				);
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {

			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {

						// Remove element nodes and prevent memory leaks
						elem = this[ i ] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );


var iframe,
	elemdisplay = {

		// Support: Firefox
		// We have to pre-define these values for FF (#10227)
		HTML: "block",
		BODY: "block"
	};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */

// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		display = jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
				.appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var documentElement = document.documentElement;



( function() {
	var pixelPositionVal, pixelMarginRightVal, boxSizingReliableVal,
		reliableHiddenOffsetsVal, reliableMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	div.style.cssText = "float:left;opacity:.5";

	// Support: IE<9
	// Make sure that element opacity exists (as opposed to filter)
	support.opacity = div.style.opacity === "0.5";

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!div.style.cssFloat;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container = document.createElement( "div" );
	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	div.innerHTML = "";
	container.appendChild( div );

	// Support: Firefox<29, Android 2.3
	// Vendor-prefix box-sizing
	support.boxSizing = div.style.boxSizing === "" || div.style.MozBoxSizing === "" ||
		div.style.WebkitBoxSizing === "";

	jQuery.extend( support, {
		reliableHiddenOffsets: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableHiddenOffsetsVal;
		},

		boxSizingReliable: function() {

			// We're checking for pixelPositionVal here instead of boxSizingReliableVal
			// since that compresses better and they're computed together anyway.
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},

		pixelMarginRight: function() {

			// Support: Android 4.0-4.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelMarginRightVal;
		},

		pixelPosition: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelPositionVal;
		},

		reliableMarginRight: function() {

			// Support: Android 2.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginRightVal;
		},

		reliableMarginLeft: function() {

			// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginLeftVal;
		}
	} );

	function computeStyleTests() {
		var contents, divStyle,
			documentElement = document.documentElement;

		// Setup
		documentElement.appendChild( container );

		div.style.cssText =

			// Support: Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";

		// Support: IE<9
		// Assume reasonable values in the absence of getComputedStyle
		pixelPositionVal = boxSizingReliableVal = reliableMarginLeftVal = false;
		pixelMarginRightVal = reliableMarginRightVal = true;

		// Check for getComputedStyle so that this code is not run in IE<9.
		if ( window.getComputedStyle ) {
			divStyle = window.getComputedStyle( div );
			pixelPositionVal = ( divStyle || {} ).top !== "1%";
			reliableMarginLeftVal = ( divStyle || {} ).marginLeft === "2px";
			boxSizingReliableVal = ( divStyle || { width: "4px" } ).width === "4px";

			// Support: Android 4.0 - 4.3 only
			// Some styles come back with percentage values, even though they shouldn't
			div.style.marginRight = "50%";
			pixelMarginRightVal = ( divStyle || { marginRight: "4px" } ).marginRight === "4px";

			// Support: Android 2.3 only
			// Div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			contents = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			contents.style.cssText = div.style.cssText =

				// Support: Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
			contents.style.marginRight = contents.style.width = "0";
			div.style.width = "1px";

			reliableMarginRightVal =
				!parseFloat( ( window.getComputedStyle( contents ) || {} ).marginRight );

			div.removeChild( contents );
		}

		// Support: IE6-8
		// First check that getClientRects works as expected
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.style.display = "none";
		reliableHiddenOffsetsVal = div.getClientRects().length === 0;
		if ( reliableHiddenOffsetsVal ) {
			div.style.display = "";
			div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
			div.childNodes[ 0 ].style.borderCollapse = "separate";
			contents = div.getElementsByTagName( "td" );
			contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			if ( reliableHiddenOffsetsVal ) {
				contents[ 0 ].style.display = "";
				contents[ 1 ].style.display = "none";
				reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			}
		}

		// Teardown
		documentElement.removeChild( container );
	}

} )();


var getStyles, curCSS,
	rposition = /^(top|right|bottom|left)$/;

if ( window.getComputedStyle ) {
	getStyles = function( elem ) {

		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

	curCSS = function( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		// Support: Opera 12.1x only
		// Fall back to style even without computed
		// computed is undefined for elems on document fragments
		if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		if ( computed ) {

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value"
			// instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values,
			// but width seems to be reliably pixels
			// this is against the CSSOM draft spec:
			// http://dev.w3.org/csswg/cssom/#resolved-values
			if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "";
	};
} else if ( documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, computed ) {
		var left, rs, rsLeft, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed[ name ] : undefined;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are
		// proportional to the parent element instead
		// and we can't measure the parent instead because it
		// might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "" || "auto";
	};
}




function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

		ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/i,

	// swappable if display is none or starts with table except
	// "table", "table-cell", or "table-caption"
	// see here for display values:
	// https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;


// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt( 0 ).toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {

			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] =
					jQuery._data( elem, "olddisplay", defaultDisplay( elem.nodeName ) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display && display !== "none" || !hidden ) {
				jQuery._data(
					elem,
					"olddisplay",
					hidden ? display : jQuery.css( elem, "display" )
				);
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?

		// If we already have the right measurement, avoid augmentation
		4 :

		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {

		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = support.boxSizing &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {

		// normalize float css property
		"float": support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight
			// (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				// Support: IE
				// Swallow errors from 'invalid' CSS values (#5509)
				try {
					style[ name ] = value;
				} catch ( e ) {}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
					elem.offsetWidth === 0 ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					support.boxSizing &&
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
} );

if ( !support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {

			// IE uses filters for opacity
			return ropacity.test( ( computed && elem.currentStyle ?
				elem.currentStyle.filter :
				elem.style.filter ) || "" ) ?
					( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
					computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist -
			// attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule
				// or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return (
				parseFloat( curCSS( elem, "marginLeft" ) ) ||

				// Support: IE<=11+
				// Running getBoundingClientRect on a disconnected node in IE throws an error
				// Support: IE8 only
				// getClientRects() errors on disconnected elems
				( jQuery.contains( elem.ownerDocument, elem ) ?
					elem.getBoundingClientRect().left -
						swap( elem, { marginLeft: 0 }, function() {
							return elem.getBoundingClientRect().left;
						} ) :
					0
				)
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";
			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !support.shrinkWrapBlocks() ) {
			anim.always( function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			} );
		}
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show
				// and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done( function() {
				jQuery( elem ).hide();
			} );
		}
		anim.done( function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		} );
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnotwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ?
			jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	window.clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var a,
		input = document.createElement( "input" ),
		div = document.createElement( "div" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	// Setup
	div = document.createElement( "div" );
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Support: Windows Web Apps (WWA)
	// `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "checkbox" );
	div.appendChild( input );

	a = div.getElementsByTagName( "a" )[ 0 ];

	// First batch of tests.
	a.style.cssText = "top:1px";

	// Test setAttribute on camelCase class.
	// If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute( "style" ) );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute( "href" ) === "/a";

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement( "form" ).enctype;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE8 only
	// Check if we can trust getAttribute("value")
	input = document.createElement( "input" );
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";
} )();


var rreturn = /\r/g,
	rspaces = /[\x20\t\r\n\f]+/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if (
					hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?

					// handle most common string cases
					ret.replace( rreturn, "" ) :

					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ?
								!option.disabled :
								option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1 ) {

						// Support: IE6
						// When new option element is added to select box we need to
						// force reflow of newly added node in order to workaround delay
						// of initialization properties
						try {
							option.selected = optionSet = true;

						} catch ( _ ) {

							// Will be executed only in IE6
							option.scrollHeight;
						}

					} else {
						option.selected = false;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}

				return options;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = support.getSetAttribute,
	getSetInput = support.input;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {

					// Setting the type on a radio button after the value resets the value in IE8-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {

					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;

					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {

			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		} else {

			// Support: IE<9
			// Use defaultChecked and defaultSelected for oldIE
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {

				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	} else {
		attrHandle[ name ] = function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
			}
		};
	}
} );

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {

				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {

				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {

			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					( ret = elem.ownerDocument.createAttribute( name ) )
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			if ( name === "value" || value === elem.getAttribute( name ) ) {
				return value;
			}
		}
	};

	// Some attributes are constructed with empty-string values when not defined
	attrHandle.id = attrHandle.name = attrHandle.coords =
		function( elem, name, isXML ) {
			var ret;
			if ( !isXML ) {
				return ( ret = elem.getAttributeNode( name ) ) && ret.value !== "" ?
					ret.value :
					null;
			}
		};

	// Fixing value retrieval on a button requires this module
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			if ( ret && ret.specified ) {
				return ret.value;
			}
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each( [ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	} );
}

if ( !support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {

			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case sensitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}




var rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each( function() {

			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch ( e ) {}
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) ||
						rclickable.test( elem.nodeName ) && elem.href ?
							0 :
							-1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !support.hrefNormalized ) {

	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each( [ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	} );
}

// Support: Safari, IE9+
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		},
		set: function( elem ) {
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );

// IE6/7 call enctype encoding
if ( !support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}




var rclass = /[\t\r\n\f]/g;

function getClass( elem ) {
	return jQuery.attr( elem, "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnotwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// store className if set
					jQuery._data( this, "__className__", className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				jQuery.attr( this, "class",
					className || value === false ?
					"" :
					jQuery._data( this, "__className__" ) || ""
				);
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + getClass( elem ) + " " ).replace( rclass, " " )
					.indexOf( className ) > -1
			) {
				return true;
			}
		}

		return false;
	}
} );




// Return jQuery for attributes-only inclusion


jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );


var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

jQuery.parseJSON = function( data ) {

	// Attempt to parse using the native JSON parser first
	if ( window.JSON && window.JSON.parse ) {

		// Support: Android 2.3
		// Workaround failure to string-cast null input
		return window.JSON.parse( data + "" );
	}

	var requireNonComma,
		depth = null,
		str = jQuery.trim( data + "" );

	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
	// after removing valid tokens
	return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

		// Force termination if we see a misplaced comma
		if ( requireNonComma && comma ) {
			depth = 0;
		}

		// Perform no more replacements after returning to outermost depth
		if ( depth === 0 ) {
			return token;
		}

		// Commas must not follow "[", "{", or ","
		requireNonComma = open || comma;

		// Determine new depth
		// array/object open ("[" or "{"): depth += true - false (increment)
		// array/object close ("]" or "}"): depth += false - true (decrement)
		// other cases ("," or primitive): depth += true - true (numeric cast)
		depth += !close - !open;

		// Remove this token
		return "";
	} ) ) ?
		( Function( "return " + str ) )() :
		jQuery.error( "Invalid JSON: " + data );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	try {
		if ( window.DOMParser ) { // Standard
			tmp = new window.DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} else { // IE
			xml = new window.ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}
	} catch ( e ) {
		xml = undefined;
	}
	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,

	// IE leaves an \r character at EOL
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Document location
	ajaxLocation = location.href,

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType.charAt( 0 ) === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) { // jscs:ignore requireDotNotation
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var

			// Cross-domain detection vars
			parts,

			// Loop variable
			i,

			// URL without anti-cache param
			cacheURL,

			// Response headers as string
			responseHeadersString,

			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,

			// Response headers
			responseHeaders,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// The jqXHR state
			state = 0,

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {

								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" )
			.replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );

				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapAll( html.call( this, i ) );
			} );
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			var wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function() {
		return this.parent().each( function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		} ).end();
	}
} );


function getDisplay( elem ) {
	return elem.style && elem.style.display || jQuery.css( elem, "display" );
}

function filterHidden( elem ) {

	// Disconnected elements are considered hidden
	if ( !jQuery.contains( elem.ownerDocument || document, elem ) ) {
		return true;
	}
	while ( elem && elem.nodeType === 1 ) {
		if ( getDisplay( elem ) === "none" || elem.type === "hidden" ) {
			return true;
		}
		elem = elem.parentNode;
	}
	return false;
}

jQuery.expr.filters.hidden = function( elem ) {

	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return support.reliableHiddenOffsets() ?
		( elem.offsetWidth <= 0 && elem.offsetHeight <= 0 &&
			!elem.getClientRects().length ) :
			filterHidden( elem );
};

jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {

			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					} ) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?

	// Support: IE6-IE8
	function() {

		// XHR cannot access local files, always use ActiveX for that case
		if ( this.isLocal ) {
			return createActiveXHR();
		}

		// Support: IE 9-11
		// IE seems to error on cross-domain PATCH requests when ActiveX XHR
		// is used. In IE 9+ always use the native XHR.
		// Note: this condition won't catch Edge as it doesn't define
		// document.documentMode but it also doesn't support ActiveX so it won't
		// reach this code.
		if ( document.documentMode > 8 ) {
			return createStandardXHR();
		}

		// Support: IE<9
		// oldIE XHR does not support non-RFC2616 methods (#13240)
		// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
		// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
		// Although this check for six methods instead of eight
		// since IE also does not support "trace" and "connect"
		return /^(get|post|head|put|delete|options)$/i.test( this.type ) &&
			createStandardXHR() || createActiveXHR();
	} :

	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

var xhrId = 0,
	xhrCallbacks = {},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE<10
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	} );
}

// Determine support properties
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport( function( options ) {

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !options.crossDomain || support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					// Open the socket
					xhr.open(
						options.type,
						options.url,
						options.async,
						options.username,
						options.password
					);

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {

						// Support: IE<9
						// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
						// request header to a null-value.
						//
						// To keep consistent with other XHR implementations, cast the value
						// to string and ignore `undefined`.
						if ( headers[ i ] !== undefined ) {
							xhr.setRequestHeader( i, headers[ i ] + "" );
						}
					}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( options.hasContent && options.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, statusText, responses;

						// Was never called and is aborted or complete
						if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

							// Clean up
							delete xhrCallbacks[ id ];
							callback = undefined;
							xhr.onreadystatechange = jQuery.noop;

							// Abort manually if needed
							if ( isAbort ) {
								if ( xhr.readyState !== 4 ) {
									xhr.abort();
								}
							} else {
								responses = {};
								status = xhr.status;

								// Support: IE<10
								// Accessing binary-data responseText throws an exception
								// (#11426)
								if ( typeof xhr.responseText === "string" ) {
									responses.text = xhr.responseText;
								}

								// Firefox throws an exception when accessing
								// statusText for faulty cross-domain requests
								try {
									statusText = xhr.statusText;
								} catch ( e ) {

									// We normalize with Webkit giving an empty statusText
									statusText = "";
								}

								// Filter status for non standard behaviors

								// If the request is local and we have data: assume a success
								// (success with no data won't get notified, that's the best we
								// can do given current implementations)
								if ( !status && options.isLocal && !options.crossDomain ) {
									status = responses.text ? 200 : 404;

								// IE - #1450: sometimes returns 1223 when it should be 204
								} else if ( status === 1223 ) {
									status = 204;
								}
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, xhr.getAllResponseHeaders() );
						}
					};

					// Do send the request
					// `xhr.send` may raise an exception, but it will be
					// handled in jQuery.ajax (so no try/catch here)
					if ( !options.async ) {

						// If we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {

						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						window.setTimeout( callback );
					} else {

						// Register the callback, but delay it in case `xhr.send` throws
						// Add to the list of active xhr callbacks
						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	} );
}

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch ( e ) {}
}




// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery( "head" )[ 0 ] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// data: string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = jQuery.trim( url.slice( off, url.length ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};





/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			jQuery.inArray( "auto", [ curCSSTop, curCSSLeft ] ) > -1;

		// need to be able to calculate position if either top or left
		// is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win,
			box = { top: 0, left: 0 },
			elem = this[ 0 ],
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== "undefined" ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? ( prop in win ) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
} );

// Support: Safari<7-8+, Chrome<37-44+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
	function( defaultExtra, funcName ) {

		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only,
					// but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}



var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}

return jQuery;
}));
(function($, undefined) {

/**
 * Unobtrusive scripting adapter for jQuery
 * https://github.com/rails/jquery-ujs
 *
 * Requires jQuery 1.8.0 or later.
 *
 * Released under the MIT license
 *
 */

  // Cut down on the number of issues from people inadvertently including jquery_ujs twice
  // by detecting and raising an error when it happens.
  'use strict';

  if ( $.rails !== undefined ) {
    $.error('jquery-ujs has already been loaded!');
  }

  // Shorthand to make it a little easier to call public rails functions from within rails.js
  var rails;
  var $document = $(document);

  $.rails = rails = {
    // Link elements bound by jquery-ujs
    linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',

    // Button elements bound by jquery-ujs
    buttonClickSelector: 'button[data-remote]:not([form]):not(form button), button[data-confirm]:not([form]):not(form button)',

    // Select elements bound by jquery-ujs
    inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',

    // Form elements bound by jquery-ujs
    formSubmitSelector: 'form',

    // Form input elements bound by jquery-ujs
    formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',

    // Form input elements disabled during form submission
    disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',

    // Form input elements re-enabled after form submission
    enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',

    // Form required input elements
    requiredInputSelector: 'input[name][required]:not([disabled]), textarea[name][required]:not([disabled])',

    // Form file input elements
    fileInputSelector: 'input[name][type=file]:not([disabled])',

    // Link onClick disable selector with possible reenable after remote submission
    linkDisableSelector: 'a[data-disable-with], a[data-disable]',

    // Button onClick disable selector with possible reenable after remote submission
    buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',

    // Up-to-date Cross-Site Request Forgery token
    csrfToken: function() {
     return $('meta[name=csrf-token]').attr('content');
    },

    // URL param that must contain the CSRF token
    csrfParam: function() {
     return $('meta[name=csrf-param]').attr('content');
    },

    // Make sure that every Ajax request sends the CSRF token
    CSRFProtection: function(xhr) {
      var token = rails.csrfToken();
      if (token) xhr.setRequestHeader('X-CSRF-Token', token);
    },

    // Make sure that all forms have actual up-to-date tokens (cached forms contain old ones)
    refreshCSRFTokens: function(){
      $('form input[name="' + rails.csrfParam() + '"]').val(rails.csrfToken());
    },

    // Triggers an event on an element and returns false if the event result is false
    fire: function(obj, name, data) {
      var event = $.Event(name);
      obj.trigger(event, data);
      return event.result !== false;
    },

    // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm
    confirm: function(message) {
      return confirm(message);
    },

    // Default ajax function, may be overridden with custom function in $.rails.ajax
    ajax: function(options) {
      return $.ajax(options);
    },

    // Default way to get an element's href. May be overridden at $.rails.href.
    href: function(element) {
      return element[0].href;
    },

    // Checks "data-remote" if true to handle the request through a XHR request.
    isRemote: function(element) {
      return element.data('remote') !== undefined && element.data('remote') !== false;
    },

    // Submits "remote" forms and links with ajax
    handleRemote: function(element) {
      var method, url, data, withCredentials, dataType, options;

      if (rails.fire(element, 'ajax:before')) {
        withCredentials = element.data('with-credentials') || null;
        dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);

        if (element.is('form')) {
          method = element.data('ujs:submit-button-formmethod') || element.attr('method');
          url = element.data('ujs:submit-button-formaction') || element.attr('action');
          data = $(element[0]).serializeArray();
          // memoized value from clicked submit button
          var button = element.data('ujs:submit-button');
          if (button) {
            data.push(button);
            element.data('ujs:submit-button', null);
          }
          element.data('ujs:submit-button-formmethod', null);
          element.data('ujs:submit-button-formaction', null);
        } else if (element.is(rails.inputChangeSelector)) {
          method = element.data('method');
          url = element.data('url');
          data = element.serialize();
          if (element.data('params')) data = data + '&' + element.data('params');
        } else if (element.is(rails.buttonClickSelector)) {
          method = element.data('method') || 'get';
          url = element.data('url');
          data = element.serialize();
          if (element.data('params')) data = data + '&' + element.data('params');
        } else {
          method = element.data('method');
          url = rails.href(element);
          data = element.data('params') || null;
        }

        options = {
          type: method || 'GET', data: data, dataType: dataType,
          // stopping the "ajax:beforeSend" event will cancel the ajax request
          beforeSend: function(xhr, settings) {
            if (settings.dataType === undefined) {
              xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);
            }
            if (rails.fire(element, 'ajax:beforeSend', [xhr, settings])) {
              element.trigger('ajax:send', xhr);
            } else {
              return false;
            }
          },
          success: function(data, status, xhr) {
            element.trigger('ajax:success', [data, status, xhr]);
          },
          complete: function(xhr, status) {
            element.trigger('ajax:complete', [xhr, status]);
          },
          error: function(xhr, status, error) {
            element.trigger('ajax:error', [xhr, status, error]);
          },
          crossDomain: rails.isCrossDomain(url)
        };

        // There is no withCredentials for IE6-8 when
        // "Enable native XMLHTTP support" is disabled
        if (withCredentials) {
          options.xhrFields = {
            withCredentials: withCredentials
          };
        }

        // Only pass url to `ajax` options if not blank
        if (url) { options.url = url; }

        return rails.ajax(options);
      } else {
        return false;
      }
    },

    // Determines if the request is a cross domain request.
    isCrossDomain: function(url) {
      var originAnchor = document.createElement('a');
      originAnchor.href = location.href;
      var urlAnchor = document.createElement('a');

      try {
        urlAnchor.href = url;
        // This is a workaround to a IE bug.
        urlAnchor.href = urlAnchor.href;

        // If URL protocol is false or is a string containing a single colon
        // *and* host are false, assume it is not a cross-domain request
        // (should only be the case for IE7 and IE compatibility mode).
        // Otherwise, evaluate protocol and host of the URL against the origin
        // protocol and host.
        return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) ||
          (originAnchor.protocol + '//' + originAnchor.host ===
            urlAnchor.protocol + '//' + urlAnchor.host));
      } catch (e) {
        // If there is an error parsing the URL, assume it is crossDomain.
        return true;
      }
    },

    // Handles "data-method" on links such as:
    // <a href="/users/5" data-method="delete" rel="nofollow" data-confirm="Are you sure?">Delete</a>
    handleMethod: function(link) {
      var href = rails.href(link),
        method = link.data('method'),
        target = link.attr('target'),
        csrfToken = rails.csrfToken(),
        csrfParam = rails.csrfParam(),
        form = $('<form method="post" action="' + href + '"></form>'),
        metadataInput = '<input name="_method" value="' + method + '" type="hidden" />';

      if (csrfParam !== undefined && csrfToken !== undefined && !rails.isCrossDomain(href)) {
        metadataInput += '<input name="' + csrfParam + '" value="' + csrfToken + '" type="hidden" />';
      }

      if (target) { form.attr('target', target); }

      form.hide().append(metadataInput).appendTo('body');
      form.submit();
    },

    // Helper function that returns form elements that match the specified CSS selector
    // If form is actually a "form" element this will return associated elements outside the from that have
    // the html form attribute set
    formElements: function(form, selector) {
      return form.is('form') ? $(form[0].elements).filter(selector) : form.find(selector);
    },

    /* Disables form elements:
      - Caches element value in 'ujs:enable-with' data store
      - Replaces element text with value of 'data-disable-with' attribute
      - Sets disabled property to true
    */
    disableFormElements: function(form) {
      rails.formElements(form, rails.disableSelector).each(function() {
        rails.disableFormElement($(this));
      });
    },

    disableFormElement: function(element) {
      var method, replacement;

      method = element.is('button') ? 'html' : 'val';
      replacement = element.data('disable-with');

      if (replacement !== undefined) {
        element.data('ujs:enable-with', element[method]());
        element[method](replacement);
      }

      element.prop('disabled', true);
      element.data('ujs:disabled', true);
    },

    /* Re-enables disabled form elements:
      - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)
      - Sets disabled property to false
    */
    enableFormElements: function(form) {
      rails.formElements(form, rails.enableSelector).each(function() {
        rails.enableFormElement($(this));
      });
    },

    enableFormElement: function(element) {
      var method = element.is('button') ? 'html' : 'val';
      if (element.data('ujs:enable-with') !== undefined) {
        element[method](element.data('ujs:enable-with'));
        element.removeData('ujs:enable-with'); // clean up cache
      }
      element.prop('disabled', false);
      element.removeData('ujs:disabled');
    },

   /* For 'data-confirm' attribute:
      - Fires `confirm` event
      - Shows the confirmation dialog
      - Fires the `confirm:complete` event

      Returns `true` if no function stops the chain and user chose yes; `false` otherwise.
      Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.
      Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function
      return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.
   */
    allowAction: function(element) {
      var message = element.data('confirm'),
          answer = false, callback;
      if (!message) { return true; }

      if (rails.fire(element, 'confirm')) {
        try {
          answer = rails.confirm(message);
        } catch (e) {
          (console.error || console.log).call(console, e.stack || e);
        }
        callback = rails.fire(element, 'confirm:complete', [answer]);
      }
      return answer && callback;
    },

    // Helper function which checks for blank inputs in a form that match the specified CSS selector
    blankInputs: function(form, specifiedSelector, nonBlank) {
      var foundInputs = $(),
        input,
        valueToCheck,
        radiosForNameWithNoneSelected,
        radioName,
        selector = specifiedSelector || 'input,textarea',
        requiredInputs = form.find(selector),
        checkedRadioButtonNames = {};

      requiredInputs.each(function() {
        input = $(this);
        if (input.is('input[type=radio]')) {

          // Don't count unchecked required radio as blank if other radio with same name is checked,
          // regardless of whether same-name radio input has required attribute or not. The spec
          // states https://www.w3.org/TR/html5/forms.html#the-required-attribute
          radioName = input.attr('name');

          // Skip if we've already seen the radio with this name.
          if (!checkedRadioButtonNames[radioName]) {

            // If none checked
            if (form.find('input[type=radio]:checked[name="' + radioName + '"]').length === 0) {
              radiosForNameWithNoneSelected = form.find(
                'input[type=radio][name="' + radioName + '"]');
              foundInputs = foundInputs.add(radiosForNameWithNoneSelected);
            }

            // We only need to check each name once.
            checkedRadioButtonNames[radioName] = radioName;
          }
        } else {
          valueToCheck = input.is('input[type=checkbox],input[type=radio]') ? input.is(':checked') : !!input.val();
          if (valueToCheck === nonBlank) {
            foundInputs = foundInputs.add(input);
          }
        }
      });
      return foundInputs.length ? foundInputs : false;
    },

    // Helper function which checks for non-blank inputs in a form that match the specified CSS selector
    nonBlankInputs: function(form, specifiedSelector) {
      return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank
    },

    // Helper function, needed to provide consistent behavior in IE
    stopEverything: function(e) {
      $(e.target).trigger('ujs:everythingStopped');
      e.stopImmediatePropagation();
      return false;
    },

    //  Replace element's html with the 'data-disable-with' after storing original html
    //  and prevent clicking on it
    disableElement: function(element) {
      var replacement = element.data('disable-with');

      if (replacement !== undefined) {
        element.data('ujs:enable-with', element.html()); // store enabled state
        element.html(replacement);
      }

      element.bind('click.railsDisable', function(e) { // prevent further clicking
        return rails.stopEverything(e);
      });
      element.data('ujs:disabled', true);
    },

    // Restore element to its original state which was disabled by 'disableElement' above
    enableElement: function(element) {
      if (element.data('ujs:enable-with') !== undefined) {
        element.html(element.data('ujs:enable-with')); // set to old enabled state
        element.removeData('ujs:enable-with'); // clean up cache
      }
      element.unbind('click.railsDisable'); // enable element
      element.removeData('ujs:disabled');
    }
  };

  if (rails.fire($document, 'rails:attachBindings')) {

    $.ajaxPrefilter(function(options, originalOptions, xhr){ if ( !options.crossDomain ) { rails.CSRFProtection(xhr); }});

    // This event works the same as the load event, except that it fires every
    // time the page is loaded.
    //
    // See https://github.com/rails/jquery-ujs/issues/357
    // See https://developer.mozilla.org/en-US/docs/Using_Firefox_1.5_caching
    $(window).on('pageshow.rails', function () {
      $($.rails.enableSelector).each(function () {
        var element = $(this);

        if (element.data('ujs:disabled')) {
          $.rails.enableFormElement(element);
        }
      });

      $($.rails.linkDisableSelector).each(function () {
        var element = $(this);

        if (element.data('ujs:disabled')) {
          $.rails.enableElement(element);
        }
      });
    });

    $document.on('ajax:complete', rails.linkDisableSelector, function() {
        rails.enableElement($(this));
    });

    $document.on('ajax:complete', rails.buttonDisableSelector, function() {
        rails.enableFormElement($(this));
    });

    $document.on('click.rails', rails.linkClickSelector, function(e) {
      var link = $(this), method = link.data('method'), data = link.data('params'), metaClick = e.metaKey || e.ctrlKey;
      if (!rails.allowAction(link)) return rails.stopEverything(e);

      if (!metaClick && link.is(rails.linkDisableSelector)) rails.disableElement(link);

      if (rails.isRemote(link)) {
        if (metaClick && (!method || method === 'GET') && !data) { return true; }

        var handleRemote = rails.handleRemote(link);
        // Response from rails.handleRemote() will either be false or a deferred object promise.
        if (handleRemote === false) {
          rails.enableElement(link);
        } else {
          handleRemote.fail( function() { rails.enableElement(link); } );
        }
        return false;

      } else if (method) {
        rails.handleMethod(link);
        return false;
      }
    });

    $document.on('click.rails', rails.buttonClickSelector, function(e) {
      var button = $(this);

      if (!rails.allowAction(button) || !rails.isRemote(button)) return rails.stopEverything(e);

      if (button.is(rails.buttonDisableSelector)) rails.disableFormElement(button);

      var handleRemote = rails.handleRemote(button);
      // Response from rails.handleRemote() will either be false or a deferred object promise.
      if (handleRemote === false) {
        rails.enableFormElement(button);
      } else {
        handleRemote.fail( function() { rails.enableFormElement(button); } );
      }
      return false;
    });

    $document.on('change.rails', rails.inputChangeSelector, function(e) {
      var link = $(this);
      if (!rails.allowAction(link) || !rails.isRemote(link)) return rails.stopEverything(e);

      rails.handleRemote(link);
      return false;
    });

    $document.on('submit.rails', rails.formSubmitSelector, function(e) {
      var form = $(this),
        remote = rails.isRemote(form),
        blankRequiredInputs,
        nonBlankFileInputs;

      if (!rails.allowAction(form)) return rails.stopEverything(e);

      // Skip other logic when required values are missing or file upload is present
      if (form.attr('novalidate') === undefined) {
        if (form.data('ujs:formnovalidate-button') === undefined) {
          blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector, false);
          if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {
            return rails.stopEverything(e);
          }
        } else {
          // Clear the formnovalidate in case the next button click is not on a formnovalidate button
          // Not strictly necessary to do here, since it is also reset on each button click, but just to be certain
          form.data('ujs:formnovalidate-button', undefined);
        }
      }

      if (remote) {
        nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);
        if (nonBlankFileInputs) {
          // Slight timeout so that the submit button gets properly serialized
          // (make it easy for event handler to serialize form without disabled values)
          setTimeout(function(){ rails.disableFormElements(form); }, 13);
          var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);

          // Re-enable form elements if event bindings return false (canceling normal form submission)
          if (!aborted) { setTimeout(function(){ rails.enableFormElements(form); }, 13); }

          return aborted;
        }

        rails.handleRemote(form);
        return false;

      } else {
        // Slight timeout so that the submit button gets properly serialized
        setTimeout(function(){ rails.disableFormElements(form); }, 13);
      }
    });

    $document.on('click.rails', rails.formInputClickSelector, function(event) {
      var button = $(this);

      if (!rails.allowAction(button)) return rails.stopEverything(event);

      // Register the pressed submit button
      var name = button.attr('name'),
        data = name ? {name:name, value:button.val()} : null;

      var form = button.closest('form');
      if (form.length === 0) {
        form = $('#' + button.attr('form'));
      }
      form.data('ujs:submit-button', data);

      // Save attributes from button
      form.data('ujs:formnovalidate-button', button.attr('formnovalidate'));
      form.data('ujs:submit-button-formaction', button.attr('formaction'));
      form.data('ujs:submit-button-formmethod', button.attr('formmethod'));
    });

    $document.on('ajax:send.rails', rails.formSubmitSelector, function(event) {
      if (this === event.target) rails.disableFormElements($(this));
    });

    $document.on('ajax:complete.rails', rails.formSubmitSelector, function(event) {
      if (this === event.target) rails.enableFormElements($(this));
    });

    $(function(){
      rails.refreshCSRFTokens();
    });
  }

})( jQuery );
/*
Turbolinks 5.0.0
Copyright © 2016 Basecamp, LLC
 */

(function(){(function(){(function(){this.Turbolinks={supported:function(){return null!=window.history.pushState&&null!=window.requestAnimationFrame}(),visit:function(e,r){return t.controller.visit(e,r)},clearCache:function(){return t.controller.clearCache()}}}).call(this)}).call(this);var t=this.Turbolinks;(function(){(function(){var e,r;t.copyObject=function(t){var e,r,n;r={};for(e in t)n=t[e],r[e]=n;return r},t.closest=function(t,r){return e.call(t,r)},e=function(){var t,e;return t=document.documentElement,null!=(e=t.closest)?e:function(t){var e;for(e=this;e;){if(e.nodeType===Node.ELEMENT_NODE&&r.call(e,t))return e;e=e.parentNode}}}(),t.defer=function(t){return setTimeout(t,1)},t.dispatch=function(t,e){var r,n,o,i,s;return i=null!=e?e:{},s=i.target,r=i.cancelable,n=i.data,o=document.createEvent("Events"),o.initEvent(t,!0,r===!0),o.data=null!=n?n:{},(null!=s?s:document).dispatchEvent(o),o},t.match=function(t,e){return r.call(t,e)},r=function(){var t,e,r,n;return t=document.documentElement,null!=(e=null!=(r=null!=(n=t.matchesSelector)?n:t.webkitMatchesSelector)?r:t.msMatchesSelector)?e:t.mozMatchesSelector}(),t.uuid=function(){var t,e,r;for(r="",t=e=1;36>=e;t=++e)r+=9===t||14===t||19===t||24===t?"-":15===t?"4":20===t?(Math.floor(4*Math.random())+8).toString(16):Math.floor(15*Math.random()).toString(16);return r}}).call(this),function(){t.Location=function(){function t(t){var e,r;null==t&&(t=""),r=document.createElement("a"),r.href=t.toString(),this.absoluteURL=r.href,e=r.hash.length,2>e?this.requestURL=this.absoluteURL:(this.requestURL=this.absoluteURL.slice(0,-e),this.anchor=r.hash.slice(1))}var e,r,n,o;return t.wrap=function(t){return t instanceof this?t:new this(t)},t.prototype.getOrigin=function(){return this.absoluteURL.split("/",3).join("/")},t.prototype.getPath=function(){var t,e;return null!=(t=null!=(e=this.absoluteURL.match(/\/\/[^\/]*(\/[^?;]*)/))?e[1]:void 0)?t:"/"},t.prototype.getPathComponents=function(){return this.getPath().split("/").slice(1)},t.prototype.getLastPathComponent=function(){return this.getPathComponents().slice(-1)[0]},t.prototype.getExtension=function(){var t,e;return null!=(t=null!=(e=this.getLastPathComponent().match(/\.[^.]*$/))?e[0]:void 0)?t:""},t.prototype.isHTML=function(){return this.getExtension().match(/^(?:|\.(?:htm|html|xhtml))$/)},t.prototype.isPrefixedBy=function(t){var e;return e=r(t),this.isEqualTo(t)||o(this.absoluteURL,e)},t.prototype.isEqualTo=function(t){return this.absoluteURL===(null!=t?t.absoluteURL:void 0)},t.prototype.toCacheKey=function(){return this.requestURL},t.prototype.toJSON=function(){return this.absoluteURL},t.prototype.toString=function(){return this.absoluteURL},t.prototype.valueOf=function(){return this.absoluteURL},r=function(t){return e(t.getOrigin()+t.getPath())},e=function(t){return n(t,"/")?t:t+"/"},o=function(t,e){return t.slice(0,e.length)===e},n=function(t,e){return t.slice(-e.length)===e},t}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.HttpRequest=function(){function r(r,n,o){this.delegate=r,this.requestCanceled=e(this.requestCanceled,this),this.requestTimedOut=e(this.requestTimedOut,this),this.requestFailed=e(this.requestFailed,this),this.requestLoaded=e(this.requestLoaded,this),this.requestProgressed=e(this.requestProgressed,this),this.url=t.Location.wrap(n).requestURL,this.referrer=t.Location.wrap(o).absoluteURL,this.createXHR()}return r.NETWORK_FAILURE=0,r.TIMEOUT_FAILURE=-1,r.timeout=60,r.prototype.send=function(){var t;return this.xhr&&!this.sent?(this.notifyApplicationBeforeRequestStart(),this.setProgress(0),this.xhr.send(),this.sent=!0,"function"==typeof(t=this.delegate).requestStarted?t.requestStarted():void 0):void 0},r.prototype.cancel=function(){return this.xhr&&this.sent?this.xhr.abort():void 0},r.prototype.requestProgressed=function(t){return t.lengthComputable?this.setProgress(t.loaded/t.total):void 0},r.prototype.requestLoaded=function(){return this.endRequest(function(t){return function(){var e;return 200<=(e=t.xhr.status)&&300>e?t.delegate.requestCompletedWithResponse(t.xhr.responseText,t.xhr.getResponseHeader("Turbolinks-Location")):(t.failed=!0,t.delegate.requestFailedWithStatusCode(t.xhr.status,t.xhr.responseText))}}(this))},r.prototype.requestFailed=function(){return this.endRequest(function(t){return function(){return t.failed=!0,t.delegate.requestFailedWithStatusCode(t.constructor.NETWORK_FAILURE)}}(this))},r.prototype.requestTimedOut=function(){return this.endRequest(function(t){return function(){return t.failed=!0,t.delegate.requestFailedWithStatusCode(t.constructor.TIMEOUT_FAILURE)}}(this))},r.prototype.requestCanceled=function(){return this.endRequest()},r.prototype.notifyApplicationBeforeRequestStart=function(){return t.dispatch("turbolinks:request-start",{data:{url:this.url,xhr:this.xhr}})},r.prototype.notifyApplicationAfterRequestEnd=function(){return t.dispatch("turbolinks:request-end",{data:{url:this.url,xhr:this.xhr}})},r.prototype.createXHR=function(){return this.xhr=new XMLHttpRequest,this.xhr.open("GET",this.url,!0),this.xhr.timeout=1e3*this.constructor.timeout,this.xhr.setRequestHeader("Accept","text/html, application/xhtml+xml"),this.xhr.setRequestHeader("Turbolinks-Referrer",this.referrer),this.xhr.onprogress=this.requestProgressed,this.xhr.onload=this.requestLoaded,this.xhr.onerror=this.requestFailed,this.xhr.ontimeout=this.requestTimedOut,this.xhr.onabort=this.requestCanceled},r.prototype.endRequest=function(t){return this.xhr?(this.notifyApplicationAfterRequestEnd(),null!=t&&t.call(this),this.destroy()):void 0},r.prototype.setProgress=function(t){var e;return this.progress=t,"function"==typeof(e=this.delegate).requestProgressed?e.requestProgressed(this.progress):void 0},r.prototype.destroy=function(){var t;return this.setProgress(1),"function"==typeof(t=this.delegate).requestFinished&&t.requestFinished(),this.delegate=null,this.xhr=null},r}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.ProgressBar=function(){function t(){this.trickle=e(this.trickle,this),this.stylesheetElement=this.createStylesheetElement(),this.progressElement=this.createProgressElement()}var r;return r=300,t.defaultCSS=".turbolinks-progress-bar {\n  position: fixed;\n  display: block;\n  top: 0;\n  left: 0;\n  height: 3px;\n  background: #0076ff;\n  z-index: 9999;\n  transition: width "+r+"ms ease-out, opacity "+r/2+"ms "+r/2+"ms ease-in;\n  transform: translate3d(0, 0, 0);\n}",t.prototype.show=function(){return this.visible?void 0:(this.visible=!0,this.installStylesheetElement(),this.installProgressElement(),this.startTrickling())},t.prototype.hide=function(){return this.visible&&!this.hiding?(this.hiding=!0,this.fadeProgressElement(function(t){return function(){return t.uninstallProgressElement(),t.stopTrickling(),t.visible=!1,t.hiding=!1}}(this))):void 0},t.prototype.setValue=function(t){return this.value=t,this.refresh()},t.prototype.installStylesheetElement=function(){return document.head.insertBefore(this.stylesheetElement,document.head.firstChild)},t.prototype.installProgressElement=function(){return this.progressElement.style.width=0,this.progressElement.style.opacity=1,document.documentElement.insertBefore(this.progressElement,document.body),this.refresh()},t.prototype.fadeProgressElement=function(t){return this.progressElement.style.opacity=0,setTimeout(t,1.5*r)},t.prototype.uninstallProgressElement=function(){return this.progressElement.parentNode?document.documentElement.removeChild(this.progressElement):void 0},t.prototype.startTrickling=function(){return null!=this.trickleInterval?this.trickleInterval:this.trickleInterval=setInterval(this.trickle,r)},t.prototype.stopTrickling=function(){return clearInterval(this.trickleInterval),this.trickleInterval=null},t.prototype.trickle=function(){return this.setValue(this.value+Math.random()/100)},t.prototype.refresh=function(){return requestAnimationFrame(function(t){return function(){return t.progressElement.style.width=10+90*t.value+"%"}}(this))},t.prototype.createStylesheetElement=function(){var t;return t=document.createElement("style"),t.type="text/css",t.textContent=this.constructor.defaultCSS,t},t.prototype.createProgressElement=function(){var t;return t=document.createElement("div"),t.className="turbolinks-progress-bar",t},t}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.BrowserAdapter=function(){function r(r){this.controller=r,this.showProgressBar=e(this.showProgressBar,this),this.progressBar=new t.ProgressBar}var n,o,i,s;return s=t.HttpRequest,n=s.NETWORK_FAILURE,i=s.TIMEOUT_FAILURE,o=500,r.prototype.visitProposedToLocationWithAction=function(t,e){return this.controller.startVisitToLocationWithAction(t,e)},r.prototype.visitStarted=function(t){return t.issueRequest(),t.changeHistory(),t.loadCachedSnapshot()},r.prototype.visitRequestStarted=function(t){return this.progressBar.setValue(0),t.hasCachedSnapshot()||"restore"!==t.action?this.showProgressBarAfterDelay():this.showProgressBar()},r.prototype.visitRequestProgressed=function(t){return this.progressBar.setValue(t.progress)},r.prototype.visitRequestCompleted=function(t){return t.loadResponse()},r.prototype.visitRequestFailedWithStatusCode=function(t,e){switch(e){case n:case i:return this.reload();default:return t.loadResponse()}},r.prototype.visitRequestFinished=function(t){return this.hideProgressBar()},r.prototype.visitCompleted=function(t){return t.followRedirect()},r.prototype.pageInvalidated=function(){return this.reload()},r.prototype.showProgressBarAfterDelay=function(){return this.progressBarTimeout=setTimeout(this.showProgressBar,o)},r.prototype.showProgressBar=function(){return this.progressBar.show()},r.prototype.hideProgressBar=function(){return this.progressBar.hide(),clearTimeout(this.progressBarTimeout)},r.prototype.reload=function(){return window.location.reload()},r}()}.call(this),function(){var e,r=function(t,e){return function(){return t.apply(e,arguments)}};e=!1,addEventListener("load",function(){return t.defer(function(){return e=!0})},!1),t.History=function(){function n(t){this.delegate=t,this.onPopState=r(this.onPopState,this)}return n.prototype.start=function(){return this.started?void 0:(addEventListener("popstate",this.onPopState,!1),this.started=!0)},n.prototype.stop=function(){return this.started?(removeEventListener("popstate",this.onPopState,!1),this.started=!1):void 0},n.prototype.push=function(e,r){return e=t.Location.wrap(e),this.update("push",e,r)},n.prototype.replace=function(e,r){return e=t.Location.wrap(e),this.update("replace",e,r)},n.prototype.onPopState=function(e){var r,n,o,i;return this.shouldHandlePopState()&&(i=null!=(n=e.state)?n.turbolinks:void 0)?(r=t.Location.wrap(window.location),o=i.restorationIdentifier,this.delegate.historyPoppedToLocationWithRestorationIdentifier(r,o)):void 0},n.prototype.shouldHandlePopState=function(){return e===!0},n.prototype.update=function(t,e,r){var n;return n={turbolinks:{restorationIdentifier:r}},history[t+"State"](n,null,e)},n}()}.call(this),function(){t.Snapshot=function(){function e(t){var e,r;r=t.head,e=t.body,this.head=null!=r?r:document.createElement("head"),this.body=null!=e?e:document.createElement("body")}return e.wrap=function(t){return t instanceof this?t:this.fromHTML(t)},e.fromHTML=function(t){var e;return e=document.createElement("html"),e.innerHTML=t,this.fromElement(e)},e.fromElement=function(t){return new this({head:t.querySelector("head"),body:t.querySelector("body")})},e.prototype.clone=function(){return new e({head:this.head.cloneNode(!0),body:this.body.cloneNode(!0)})},e.prototype.getRootLocation=function(){var e,r;return r=null!=(e=this.getSetting("root"))?e:"/",new t.Location(r)},e.prototype.getCacheControlValue=function(){return this.getSetting("cache-control")},e.prototype.hasAnchor=function(t){try{return null!=this.body.querySelector("[id='"+t+"']")}catch(e){}},e.prototype.isPreviewable=function(){return"no-preview"!==this.getCacheControlValue()},e.prototype.isCacheable=function(){return"no-cache"!==this.getCacheControlValue()},e.prototype.getSetting=function(t){var e,r;return r=this.head.querySelectorAll("meta[name='turbolinks-"+t+"']"),e=r[r.length-1],null!=e?e.getAttribute("content"):void 0},e}()}.call(this),function(){var e=[].slice;t.Renderer=function(){function t(){}var r;return t.render=function(){var t,r,n,o;return n=arguments[0],r=arguments[1],t=3<=arguments.length?e.call(arguments,2):[],o=function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(this,t,function(){}),o.delegate=n,o.render(r),o},t.prototype.renderView=function(t){return this.delegate.viewWillRender(this.newBody),t(),this.delegate.viewRendered(this.newBody)},t.prototype.invalidateView=function(){return this.delegate.viewInvalidated()},t.prototype.createScriptElement=function(t){var e;return"false"===t.getAttribute("data-turbolinks-eval")?t:(e=document.createElement("script"),e.textContent=t.textContent,r(e,t),e)},r=function(t,e){var r,n,o,i,s,a,u;for(i=e.attributes,a=[],r=0,n=i.length;n>r;r++)s=i[r],o=s.name,u=s.value,a.push(t.setAttribute(o,u));return a},t}()}.call(this),function(){t.HeadDetails=function(){function t(t){var e,r,i,s,a,u,c;for(this.element=t,this.elements={},c=this.element.childNodes,s=0,u=c.length;u>s;s++)i=c[s],i.nodeType===Node.ELEMENT_NODE&&(a=i.outerHTML,r=null!=(e=this.elements)[a]?e[a]:e[a]={type:o(i),tracked:n(i),elements:[]},r.elements.push(i))}var e,r,n,o;return t.prototype.hasElementWithKey=function(t){return t in this.elements},t.prototype.getTrackedElementSignature=function(){var t,e;return function(){var r,n;r=this.elements,n=[];for(t in r)e=r[t].tracked,e&&n.push(t);return n}.call(this).join("")},t.prototype.getScriptElementsNotInDetails=function(t){return this.getElementsMatchingTypeNotInDetails("script",t)},t.prototype.getStylesheetElementsNotInDetails=function(t){return this.getElementsMatchingTypeNotInDetails("stylesheet",t)},t.prototype.getElementsMatchingTypeNotInDetails=function(t,e){var r,n,o,i,s,a;o=this.elements,s=[];for(n in o)i=o[n],a=i.type,r=i.elements,a!==t||e.hasElementWithKey(n)||s.push(r[0]);return s},t.prototype.getProvisionalElements=function(){var t,e,r,n,o,i,s;r=[],n=this.elements;for(e in n)o=n[e],s=o.type,i=o.tracked,t=o.elements,null!=s||i?t.length>1&&r.push.apply(r,t.slice(1)):r.push.apply(r,t);return r},o=function(t){return e(t)?"script":r(t)?"stylesheet":void 0},n=function(t){return"reload"===t.getAttribute("data-turbolinks-track")},e=function(t){var e;return e=t.tagName.toLowerCase(),"script"===e},r=function(t){var e;return e=t.tagName.toLowerCase(),"style"===e||"link"===e&&"stylesheet"===t.getAttribute("rel")},t}()}.call(this),function(){var e=function(t,e){function n(){this.constructor=t}for(var o in e)r.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},r={}.hasOwnProperty;t.SnapshotRenderer=function(r){function n(e,r){this.currentSnapshot=e,this.newSnapshot=r,this.currentHeadDetails=new t.HeadDetails(this.currentSnapshot.head),this.newHeadDetails=new t.HeadDetails(this.newSnapshot.head),this.newBody=this.newSnapshot.body}return e(n,r),n.prototype.render=function(t){return this.trackedElementsAreIdentical()?(this.mergeHead(),this.renderView(function(e){return function(){return e.replaceBody(),e.focusFirstAutofocusableElement(),t()}}(this))):this.invalidateView()},n.prototype.mergeHead=function(){return this.copyNewHeadStylesheetElements(),this.copyNewHeadScriptElements(),this.removeCurrentHeadProvisionalElements(),this.copyNewHeadProvisionalElements()},n.prototype.replaceBody=function(){return this.activateBodyScriptElements(),this.importBodyPermanentElements(),this.assignNewBody()},n.prototype.trackedElementsAreIdentical=function(){return this.currentHeadDetails.getTrackedElementSignature()===this.newHeadDetails.getTrackedElementSignature()},n.prototype.copyNewHeadStylesheetElements=function(){var t,e,r,n,o;for(n=this.getNewHeadStylesheetElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(t));return o},n.prototype.copyNewHeadScriptElements=function(){var t,e,r,n,o;for(n=this.getNewHeadScriptElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(this.createScriptElement(t)));return o},n.prototype.removeCurrentHeadProvisionalElements=function(){var t,e,r,n,o;for(n=this.getCurrentHeadProvisionalElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.removeChild(t));return o},n.prototype.copyNewHeadProvisionalElements=function(){var t,e,r,n,o;for(n=this.getNewHeadProvisionalElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(t));return o},n.prototype.importBodyPermanentElements=function(){var t,e,r,n,o,i;for(n=this.getNewBodyPermanentElements(),i=[],e=0,r=n.length;r>e;e++)o=n[e],(t=this.findCurrentBodyPermanentElement(o))?i.push(o.parentNode.replaceChild(t,o)):i.push(void 0);return i},n.prototype.activateBodyScriptElements=function(){var t,e,r,n,o,i;for(n=this.getNewBodyScriptElements(),i=[],e=0,r=n.length;r>e;e++)o=n[e],t=this.createScriptElement(o),i.push(o.parentNode.replaceChild(t,o));return i},n.prototype.assignNewBody=function(){return document.body=this.newBody},n.prototype.focusFirstAutofocusableElement=function(){var t;return null!=(t=this.findFirstAutofocusableElement())?t.focus():void 0},n.prototype.getNewHeadStylesheetElements=function(){return this.newHeadDetails.getStylesheetElementsNotInDetails(this.currentHeadDetails)},n.prototype.getNewHeadScriptElements=function(){return this.newHeadDetails.getScriptElementsNotInDetails(this.currentHeadDetails)},n.prototype.getCurrentHeadProvisionalElements=function(){return this.currentHeadDetails.getProvisionalElements()},n.prototype.getNewHeadProvisionalElements=function(){return this.newHeadDetails.getProvisionalElements()},n.prototype.getNewBodyPermanentElements=function(){return this.newBody.querySelectorAll("[id][data-turbolinks-permanent]")},n.prototype.findCurrentBodyPermanentElement=function(t){return document.body.querySelector("#"+t.id+"[data-turbolinks-permanent]")},n.prototype.getNewBodyScriptElements=function(){return this.newBody.querySelectorAll("script")},n.prototype.findFirstAutofocusableElement=function(){return document.body.querySelector("[autofocus]")},n}(t.Renderer)}.call(this),function(){var e=function(t,e){function n(){this.constructor=t}for(var o in e)r.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},r={}.hasOwnProperty;t.ErrorRenderer=function(t){function r(t){this.html=t}return e(r,t),r.prototype.render=function(t){return this.renderView(function(e){return function(){return e.replaceDocumentHTML(),e.activateBodyScriptElements(),t()}}(this))},r.prototype.replaceDocumentHTML=function(){return document.documentElement.innerHTML=this.html},r.prototype.activateBodyScriptElements=function(){var t,e,r,n,o,i;for(n=this.getScriptElements(),i=[],e=0,r=n.length;r>e;e++)o=n[e],t=this.createScriptElement(o),i.push(o.parentNode.replaceChild(t,o));return i},r.prototype.getScriptElements=function(){return document.documentElement.querySelectorAll("script")},r}(t.Renderer)}.call(this),function(){t.View=function(){function e(t){this.delegate=t,this.element=document.documentElement}return e.prototype.getRootLocation=function(){return this.getSnapshot().getRootLocation()},e.prototype.getSnapshot=function(){return t.Snapshot.fromElement(this.element)},e.prototype.render=function(t,e){var r,n,o;return o=t.snapshot,r=t.error,n=t.isPreview,this.markAsPreview(n),null!=o?this.renderSnapshot(o,e):this.renderError(r,e)},e.prototype.markAsPreview=function(t){return t?this.element.setAttribute("data-turbolinks-preview",""):this.element.removeAttribute("data-turbolinks-preview")},e.prototype.renderSnapshot=function(e,r){return t.SnapshotRenderer.render(this.delegate,r,this.getSnapshot(),t.Snapshot.wrap(e))},e.prototype.renderError=function(e,r){return t.ErrorRenderer.render(this.delegate,r,e)},e}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.ScrollManager=function(){function t(t){this.delegate=t,this.onScroll=e(this.onScroll,this)}return t.prototype.start=function(){return this.started?void 0:(addEventListener("scroll",this.onScroll,!1),this.onScroll(),this.started=!0)},t.prototype.stop=function(){return this.started?(removeEventListener("scroll",this.onScroll,!1),this.started=!1):void 0},t.prototype.scrollToElement=function(t){return t.scrollIntoView()},t.prototype.scrollToPosition=function(t){var e,r;return e=t.x,r=t.y,window.scrollTo(e,r)},t.prototype.onScroll=function(t){return this.updatePosition({x:window.pageXOffset,y:window.pageYOffset})},t.prototype.updatePosition=function(t){var e;return this.position=t,null!=(e=this.delegate)?e.scrollPositionChanged(this.position):void 0},t}()}.call(this),function(){t.SnapshotCache=function(){function e(t){this.size=t,this.keys=[],this.snapshots={}}var r;return e.prototype.has=function(t){var e;return e=r(t),e in this.snapshots},e.prototype.get=function(t){var e;if(this.has(t))return e=this.read(t),this.touch(t),e},e.prototype.put=function(t,e){return this.write(t,e),this.touch(t),e},e.prototype.read=function(t){var e;return e=r(t),this.snapshots[e]},e.prototype.write=function(t,e){var n;return n=r(t),this.snapshots[n]=e},e.prototype.touch=function(t){var e,n;return n=r(t),e=this.keys.indexOf(n),e>-1&&this.keys.splice(e,1),this.keys.unshift(n),this.trim()},e.prototype.trim=function(){var t,e,r,n,o;for(n=this.keys.splice(this.size),o=[],t=0,r=n.length;r>t;t++)e=n[t],o.push(delete this.snapshots[e]);return o},r=function(e){return t.Location.wrap(e).toCacheKey()},e}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.Visit=function(){function r(r,n,o){this.controller=r,this.action=o,this.performScroll=e(this.performScroll,this),this.identifier=t.uuid(),this.location=t.Location.wrap(n),this.adapter=this.controller.adapter,this.state="initialized",this.timingMetrics={}}var n;return r.prototype.start=function(){return"initialized"===this.state?(this.recordTimingMetric("visitStart"),this.state="started",this.adapter.visitStarted(this)):void 0},r.prototype.cancel=function(){var t;return"started"===this.state?(null!=(t=this.request)&&t.cancel(),this.cancelRender(),this.state="canceled"):void 0},r.prototype.complete=function(){var t;return"started"===this.state?(this.recordTimingMetric("visitEnd"),this.state="completed","function"==typeof(t=this.adapter).visitCompleted&&t.visitCompleted(this),this.controller.visitCompleted(this)):void 0},r.prototype.fail=function(){var t;return"started"===this.state?(this.state="failed","function"==typeof(t=this.adapter).visitFailed?t.visitFailed(this):void 0):void 0},r.prototype.changeHistory=function(){var t,e;return this.historyChanged?void 0:(t=this.location.isEqualTo(this.referrer)?"replace":this.action,e=n(t),this.controller[e](this.location,this.restorationIdentifier),this.historyChanged=!0)},r.prototype.issueRequest=function(){return this.shouldIssueRequest()&&null==this.request?(this.progress=0,this.request=new t.HttpRequest(this,this.location,this.referrer),this.request.send()):void 0},r.prototype.getCachedSnapshot=function(){var t;return!(t=this.controller.getCachedSnapshotForLocation(this.location))||null!=this.location.anchor&&!t.hasAnchor(this.location.anchor)||"restore"!==this.action&&!t.isPreviewable()?void 0:t},r.prototype.hasCachedSnapshot=function(){return null!=this.getCachedSnapshot()},r.prototype.loadCachedSnapshot=function(){var t,e;return(e=this.getCachedSnapshot())?(t=this.shouldIssueRequest(),this.render(function(){var r;return this.cacheSnapshot(),this.controller.render({snapshot:e,isPreview:t},this.performScroll),"function"==typeof(r=this.adapter).visitRendered&&r.visitRendered(this),t?void 0:this.complete()})):void 0},r.prototype.loadResponse=function(){return null!=this.response?this.render(function(){var t,e;return this.cacheSnapshot(),this.request.failed?(this.controller.render({error:this.response},this.performScroll),"function"==typeof(t=this.adapter).visitRendered&&t.visitRendered(this),this.fail()):(this.controller.render({snapshot:this.response},this.performScroll),"function"==typeof(e=this.adapter).visitRendered&&e.visitRendered(this),this.complete())}):void 0},r.prototype.followRedirect=function(){return this.redirectedToLocation&&!this.followedRedirect?(this.location=this.redirectedToLocation,this.controller.replaceHistoryWithLocationAndRestorationIdentifier(this.redirectedToLocation,this.restorationIdentifier),this.followedRedirect=!0):void 0},r.prototype.requestStarted=function(){var t;return this.recordTimingMetric("requestStart"),"function"==typeof(t=this.adapter).visitRequestStarted?t.visitRequestStarted(this):void 0},r.prototype.requestProgressed=function(t){var e;return this.progress=t,"function"==typeof(e=this.adapter).visitRequestProgressed?e.visitRequestProgressed(this):void 0},r.prototype.requestCompletedWithResponse=function(e,r){return this.response=e,null!=r&&(this.redirectedToLocation=t.Location.wrap(r)),this.adapter.visitRequestCompleted(this)},r.prototype.requestFailedWithStatusCode=function(t,e){return this.response=e,this.adapter.visitRequestFailedWithStatusCode(this,t)},r.prototype.requestFinished=function(){var t;return this.recordTimingMetric("requestEnd"),"function"==typeof(t=this.adapter).visitRequestFinished?t.visitRequestFinished(this):void 0},r.prototype.performScroll=function(){return this.scrolled?void 0:("restore"===this.action?this.scrollToRestoredPosition()||this.scrollToTop():this.scrollToAnchor()||this.scrollToTop(),this.scrolled=!0)},r.prototype.scrollToRestoredPosition=function(){var t,e;return t=null!=(e=this.restorationData)?e.scrollPosition:void 0,null!=t?(this.controller.scrollToPosition(t),!0):void 0},r.prototype.scrollToAnchor=function(){return null!=this.location.anchor?(this.controller.scrollToAnchor(this.location.anchor),!0):void 0},r.prototype.scrollToTop=function(){return this.controller.scrollToPosition({x:0,y:0})},r.prototype.recordTimingMetric=function(t){var e;return null!=(e=this.timingMetrics)[t]?e[t]:e[t]=(new Date).getTime()},r.prototype.getTimingMetrics=function(){return t.copyObject(this.timingMetrics)},n=function(t){switch(t){case"replace":return"replaceHistoryWithLocationAndRestorationIdentifier";case"advance":case"restore":return"pushHistoryWithLocationAndRestorationIdentifier"}},r.prototype.shouldIssueRequest=function(){return"restore"===this.action?!this.hasCachedSnapshot():!0},r.prototype.cacheSnapshot=function(){return this.snapshotCached?void 0:(this.controller.cacheSnapshot(),this.snapshotCached=!0)},r.prototype.render=function(t){return this.cancelRender(),this.frame=requestAnimationFrame(function(e){return function(){return e.frame=null,t.call(e)}}(this))},r.prototype.cancelRender=function(){return this.frame?cancelAnimationFrame(this.frame):void 0},r}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.Controller=function(){function r(){this.clickBubbled=e(this.clickBubbled,this),this.clickCaptured=e(this.clickCaptured,this),this.pageLoaded=e(this.pageLoaded,this),this.history=new t.History(this),this.view=new t.View(this),this.scrollManager=new t.ScrollManager(this),this.restorationData={},this.clearCache()}return r.prototype.start=function(){return t.supported&&!this.started?(addEventListener("click",this.clickCaptured,!0),addEventListener("DOMContentLoaded",this.pageLoaded,!1),this.scrollManager.start(),this.startHistory(),this.started=!0,this.enabled=!0):void 0},r.prototype.disable=function(){return this.enabled=!1},r.prototype.stop=function(){return this.started?(removeEventListener("click",this.clickCaptured,!0),removeEventListener("DOMContentLoaded",this.pageLoaded,!1),this.scrollManager.stop(),this.stopHistory(),this.started=!1):void 0},r.prototype.clearCache=function(){return this.cache=new t.SnapshotCache(10)},r.prototype.visit=function(e,r){var n,o;return null==r&&(r={}),e=t.Location.wrap(e),this.applicationAllowsVisitingLocation(e)?this.locationIsVisitable(e)?(n=null!=(o=r.action)?o:"advance",this.adapter.visitProposedToLocationWithAction(e,n)):window.location=e:void 0},r.prototype.startVisitToLocationWithAction=function(e,r,n){var o;return t.supported?(o=this.getRestorationDataForIdentifier(n),this.startVisit(e,r,{restorationData:o})):window.location=e},r.prototype.startHistory=function(){return this.location=t.Location.wrap(window.location),this.restorationIdentifier=t.uuid(),this.history.start(),this.history.replace(this.location,this.restorationIdentifier)},r.prototype.stopHistory=function(){return this.history.stop()},r.prototype.pushHistoryWithLocationAndRestorationIdentifier=function(e,r){return this.restorationIdentifier=r,this.location=t.Location.wrap(e),this.history.push(this.location,this.restorationIdentifier)},r.prototype.replaceHistoryWithLocationAndRestorationIdentifier=function(e,r){return this.restorationIdentifier=r,this.location=t.Location.wrap(e),this.history.replace(this.location,this.restorationIdentifier)},r.prototype.historyPoppedToLocationWithRestorationIdentifier=function(e,r){var n;return this.restorationIdentifier=r,this.enabled?(n=this.getRestorationDataForIdentifier(this.restorationIdentifier),this.startVisit(e,"restore",{restorationIdentifier:this.restorationIdentifier,restorationData:n,historyChanged:!0}),this.location=t.Location.wrap(e)):this.adapter.pageInvalidated()},r.prototype.getCachedSnapshotForLocation=function(t){var e;return e=this.cache.get(t),e?e.clone():void 0},r.prototype.shouldCacheSnapshot=function(){return this.view.getSnapshot().isCacheable()},r.prototype.cacheSnapshot=function(){var t;return this.shouldCacheSnapshot()?(this.notifyApplicationBeforeCachingSnapshot(),t=this.view.getSnapshot(),this.cache.put(this.lastRenderedLocation,t.clone())):void 0},r.prototype.scrollToAnchor=function(t){var e;return(e=document.getElementById(t))?this.scrollToElement(e):this.scrollToPosition({x:0,y:0})},r.prototype.scrollToElement=function(t){return this.scrollManager.scrollToElement(t)},r.prototype.scrollToPosition=function(t){return this.scrollManager.scrollToPosition(t)},r.prototype.scrollPositionChanged=function(t){var e;return e=this.getCurrentRestorationData(),e.scrollPosition=t},r.prototype.render=function(t,e){return this.view.render(t,e)},r.prototype.viewInvalidated=function(){return this.adapter.pageInvalidated()},r.prototype.viewWillRender=function(t){return this.notifyApplicationBeforeRender(t)},r.prototype.viewRendered=function(){return this.lastRenderedLocation=this.currentVisit.location,this.notifyApplicationAfterRender()},r.prototype.pageLoaded=function(){return this.lastRenderedLocation=this.location,this.notifyApplicationAfterPageLoad()},r.prototype.clickCaptured=function(){return removeEventListener("click",this.clickBubbled,!1),addEventListener("click",this.clickBubbled,!1)},r.prototype.clickBubbled=function(t){var e,r,n;return this.enabled&&this.clickEventIsSignificant(t)&&(r=this.getVisitableLinkForNode(t.target))&&(n=this.getVisitableLocationForLink(r))&&this.applicationAllowsFollowingLinkToLocation(r,n)?(t.preventDefault(),e=this.getActionForLink(r),this.visit(n,{action:e})):void 0},r.prototype.applicationAllowsFollowingLinkToLocation=function(t,e){var r;return r=this.notifyApplicationAfterClickingLinkToLocation(t,e),!r.defaultPrevented},r.prototype.applicationAllowsVisitingLocation=function(t){var e;return e=this.notifyApplicationBeforeVisitingLocation(t),!e.defaultPrevented},r.prototype.notifyApplicationAfterClickingLinkToLocation=function(e,r){return t.dispatch("turbolinks:click",{target:e,data:{url:r.absoluteURL},cancelable:!0})},r.prototype.notifyApplicationBeforeVisitingLocation=function(e){return t.dispatch("turbolinks:before-visit",{data:{url:e.absoluteURL},cancelable:!0})},r.prototype.notifyApplicationAfterVisitingLocation=function(e){return t.dispatch("turbolinks:visit",{data:{url:e.absoluteURL}})},r.prototype.notifyApplicationBeforeCachingSnapshot=function(){return t.dispatch("turbolinks:before-cache")},r.prototype.notifyApplicationBeforeRender=function(e){return t.dispatch("turbolinks:before-render",{data:{newBody:e}})},r.prototype.notifyApplicationAfterRender=function(){return t.dispatch("turbolinks:render")},r.prototype.notifyApplicationAfterPageLoad=function(e){return null==e&&(e={}),t.dispatch("turbolinks:load",{data:{url:this.location.absoluteURL,timing:e}})},r.prototype.startVisit=function(t,e,r){var n;return null!=(n=this.currentVisit)&&n.cancel(),this.currentVisit=this.createVisit(t,e,r),this.currentVisit.start(),this.notifyApplicationAfterVisitingLocation(t)},r.prototype.createVisit=function(e,r,n){
var o,i,s,a,u;return i=null!=n?n:{},a=i.restorationIdentifier,s=i.restorationData,o=i.historyChanged,u=new t.Visit(this,e,r),u.restorationIdentifier=null!=a?a:t.uuid(),u.restorationData=t.copyObject(s),u.historyChanged=o,u.referrer=this.location,u},r.prototype.visitCompleted=function(t){return this.notifyApplicationAfterPageLoad(t.getTimingMetrics())},r.prototype.clickEventIsSignificant=function(t){return!(t.defaultPrevented||t.target.isContentEditable||t.which>1||t.altKey||t.ctrlKey||t.metaKey||t.shiftKey)},r.prototype.getVisitableLinkForNode=function(e){return this.nodeIsVisitable(e)?t.closest(e,"a[href]:not([target])"):void 0},r.prototype.getVisitableLocationForLink=function(e){var r;return r=new t.Location(e.getAttribute("href")),this.locationIsVisitable(r)?r:void 0},r.prototype.getActionForLink=function(t){var e;return null!=(e=t.getAttribute("data-turbolinks-action"))?e:"advance"},r.prototype.nodeIsVisitable=function(e){var r;return(r=t.closest(e,"[data-turbolinks]"))?"false"!==r.getAttribute("data-turbolinks"):!0},r.prototype.locationIsVisitable=function(t){return t.isPrefixedBy(this.view.getRootLocation())&&t.isHTML()},r.prototype.getCurrentRestorationData=function(){return this.getRestorationDataForIdentifier(this.restorationIdentifier)},r.prototype.getRestorationDataForIdentifier=function(t){var e;return null!=(e=this.restorationData)[t]?e[t]:e[t]={}},r}()}.call(this),function(){var e,r,n;t.start=function(){return r()?(null==t.controller&&(t.controller=e()),t.controller.start()):void 0},r=function(){return null==window.Turbolinks&&(window.Turbolinks=t),n()},e=function(){var e;return e=new t.Controller,e.adapter=new t.BrowserAdapter(e),e},n=function(){return window.Turbolinks===t},n()&&t.start()}.call(this)}).call(this),"object"==typeof module&&module.exports?module.exports=t:"function"==typeof define&&define.amd&&define(t)}).call(this);
/*! Bootstrap integration for DataTables' Buttons
 * ©2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-bs', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-bs')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


$.extend( true, DataTable.Buttons.defaults, {
	dom: {
		container: {
			className: 'dt-buttons btn-group'
		},
		button: {
			className: 'btn btn-default'
		},
		collection: {
			tag: 'ul',
			className: 'dt-button-collection dropdown-menu',
			button: {
				tag: 'li',
				className: 'dt-button'
			},
			buttonLiner: {
				tag: 'a',
				className: ''
			}
		}
	}
} );

DataTable.ext.buttons.collection.text = function ( dt ) {
	return dt.i18n('buttons.collection', 'Collection <span class="caret"/>');
};


return DataTable.Buttons;
}));
/*!
 Bootstrap integration for DataTables' Buttons
 ©2016 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-bs","datatables.net-buttons"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net-bs")(a,b).$;b.fn.dataTable.Buttons||require("datatables.net-buttons")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c){var a=c.fn.dataTable;c.extend(!0,a.Buttons.defaults,{dom:{container:{className:"dt-buttons btn-group"},
button:{className:"btn btn-default"},collection:{tag:"ul",className:"dt-button-collection dropdown-menu",button:{tag:"li",className:"dt-button"},buttonLiner:{tag:"a",className:""}}}});a.ext.buttons.collection.text=function(a){return a.i18n("buttons.collection",'Collection <span class="caret"/>')};return a.Buttons});
/*!
 * Column visibility buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


$.extend( DataTable.ext.buttons, {
	// A collection of column visibility buttons
	colvis: function ( dt, conf ) {
		return {
			extend: 'collection',
			text: function ( dt ) {
				return dt.i18n( 'buttons.colvis', 'Column visibility' );
			},
			className: 'buttons-colvis',
			buttons: [ {
				extend: 'columnsToggle',
				columns: conf.columns
			} ]
		};
	},

	// Selected columns with individual buttons - toggle column visibility
	columnsToggle: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnToggle',
				columns: idx
			};
		} ).toArray();

		return columns;
	},

	// Single button to toggle column visibility
	columnToggle: function ( dt, conf ) {
		return {
			extend: 'columnVisibility',
			columns: conf.columns
		};
	},

	// Selected columns with individual buttons - set column visibility
	columnsVisibility: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnVisibility',
				columns: idx,
				visibility: conf.visibility
			};
		} ).toArray();

		return columns;
	},

	// Single button to set column visibility
	columnVisibility: {
		columns: undefined, // column selector
		text: function ( dt, button, conf ) {
			return conf._columnText( dt, conf.columns );
		},
		className: 'buttons-columnVisibility',
		action: function ( e, dt, button, conf ) {
			var col = dt.columns( conf.columns );
			var curr = col.visible();

			col.visible( conf.visibility !== undefined ?
				conf.visibility :
				! (curr.length ? curr[0] : false )
			);
		},
		init: function ( dt, button, conf ) {
			var that = this;

			dt
				.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {
					if ( ! settings.bDestroying ) {
						that.active( dt.column( conf.columns ).visible() );
					}
				} )
				.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {
					// Don't rename buttons based on column name if the button
					// controls more than one column!
					if ( dt.columns( conf.columns ).count() !== 1 ) {
						return;
					}

					if ( typeof conf.columns === 'number' ) {
						conf.columns = details.mapping[ conf.columns ];
					}

					var col = dt.column( conf.columns );

					that.text( conf._columnText( dt, conf.columns ) );
					that.active( col.visible() );
				} );

			this.active( dt.column( conf.columns ).visible() );
		},
		destroy: function ( dt, button, conf ) {
			dt
				.off( 'column-visibility.dt'+conf.namespace )
				.off( 'column-reorder.dt'+conf.namespace );
		},

		_columnText: function ( dt, col ) {
			// Use DataTables' internal data structure until this is presented
			// is a public API. The other option is to use
			// `$( column(col).node() ).text()` but the node might not have been
			// populated when Buttons is constructed.
			var idx = dt.column( col ).index();
			return dt.settings()[0].aoColumns[ idx ].sTitle
				.replace(/\n/g," ")        // remove new lines
				.replace( /<.*?>/g, "" )   // strip HTML
				.replace(/^\s+|\s+$/g,""); // trim
		}
	},


	colvisRestore: {
		className: 'buttons-colvisRestore',

		text: function ( dt ) {
			return dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );
		},

		init: function ( dt, button, conf ) {
			conf._visOriginal = dt.columns().indexes().map( function ( idx ) {
				return dt.column( idx ).visible();
			} ).toArray();
		},

		action: function ( e, dt, button, conf ) {
			dt.columns().every( function ( i ) {
				// Take into account that ColReorder might have disrupted our
				// indexes
				var idx = dt.colReorder && dt.colReorder.transpose ?
					dt.colReorder.transpose( i, 'toOriginal' ) :
					i;

				this.visible( conf._visOriginal[ idx ] );
			} );
		}
	},


	colvisGroup: {
		className: 'buttons-colvisGroup',

		action: function ( e, dt, button, conf ) {
			dt.columns( conf.show ).visible( true, false );
			dt.columns( conf.hide ).visible( false, false );

			dt.columns.adjust();
		},

		show: [],

		hide: []
	}
} );


return DataTable.Buttons;
}));
(function(g){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(d){return g(d,window,document)}):"object"===typeof exports?module.exports=function(d,e){d||(d=window);if(!e||!e.fn.dataTable)e=require("datatables.net")(d,e).$;e.fn.dataTable.Buttons||require("datatables.net-buttons")(d,e);return g(e,d,d.document)}:g(jQuery,window,document)})(function(g,d,e,h){d=g.fn.dataTable;g.extend(d.ext.buttons,{colvis:function(a,b){return{extend:"collection",
text:function(a){return a.i18n("buttons.colvis","Column visibility")},className:"buttons-colvis",buttons:[{extend:"columnsToggle",columns:b.columns}]}},columnsToggle:function(a,b){return a.columns(b.columns).indexes().map(function(a){return{extend:"columnToggle",columns:a}}).toArray()},columnToggle:function(a,b){return{extend:"columnVisibility",columns:b.columns}},columnsVisibility:function(a,b){return a.columns(b.columns).indexes().map(function(a){return{extend:"columnVisibility",columns:a,visibility:b.visibility}}).toArray()},
columnVisibility:{columns:h,text:function(a,b,c){return c._columnText(a,c.columns)},className:"buttons-columnVisibility",action:function(a,b,c,f){a=b.columns(f.columns);b=a.visible();a.visible(f.visibility!==h?f.visibility:!(b.length&&b[0]))},init:function(a,b,c){var f=this;a.on("column-visibility.dt"+c.namespace,function(b,d){d.bDestroying||f.active(a.column(c.columns).visible())}).on("column-reorder.dt"+c.namespace,function(b,d,e){1===a.columns(c.columns).count()&&("number"===typeof c.columns&&
(c.columns=e.mapping[c.columns]),b=a.column(c.columns),f.text(c._columnText(a,c.columns)),f.active(b.visible()))});this.active(a.column(c.columns).visible())},destroy:function(a,b,c){a.off("column-visibility.dt"+c.namespace).off("column-reorder.dt"+c.namespace)},_columnText:function(a,b){var c=a.column(b).index();return a.settings()[0].aoColumns[c].sTitle.replace(/\n/g," ").replace(/<.*?>/g,"").replace(/^\s+|\s+$/g,"")}},colvisRestore:{className:"buttons-colvisRestore",text:function(a){return a.i18n("buttons.colvisRestore",
"Restore visibility")},init:function(a,b,c){c._visOriginal=a.columns().indexes().map(function(b){return a.column(b).visible()}).toArray()},action:function(a,b,c,d){b.columns().every(function(a){a=b.colReorder&&b.colReorder.transpose?b.colReorder.transpose(a,"toOriginal"):a;this.visible(d._visOriginal[a])})}},colvisGroup:{className:"buttons-colvisGroup",action:function(a,b,c,d){b.columns(d.show).visible(!0,!1);b.columns(d.hide).visible(!1,!1);b.columns.adjust()},show:[],hide:[]}});return d.Buttons});
/*!
 * Flash export buttons for Buttons and DataTables.
 * 2015 SpryMedia Ltd - datatables.net/license
 *
 * ZeroClipbaord - MIT license
 * Copyright (c) 2012 Joseph Huckaby
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * ZeroClipboard dependency
 */

/*
 * ZeroClipboard 1.0.4 with modifications
 * Author: Joseph Huckaby
 * License: MIT
 *
 * Copyright (c) 2012 Joseph Huckaby
 */
var ZeroClipboard_TableTools = {
	version: "1.0.4-TableTools2",
	clients: {}, // registered upload clients on page, indexed by id
	moviePath: '', // URL to movie
	nextId: 1, // ID of next movie

	$: function(thingy) {
		// simple DOM lookup utility function
		if (typeof(thingy) == 'string') {
			thingy = document.getElementById(thingy);
		}
		if (!thingy.addClass) {
			// extend element with a few useful methods
			thingy.hide = function() { this.style.display = 'none'; };
			thingy.show = function() { this.style.display = ''; };
			thingy.addClass = function(name) { this.removeClass(name); this.className += ' ' + name; };
			thingy.removeClass = function(name) {
				this.className = this.className.replace( new RegExp("\\s*" + name + "\\s*"), " ").replace(/^\s+/, '').replace(/\s+$/, '');
			};
			thingy.hasClass = function(name) {
				return !!this.className.match( new RegExp("\\s*" + name + "\\s*") );
			};
		}
		return thingy;
	},

	setMoviePath: function(path) {
		// set path to ZeroClipboard.swf
		this.moviePath = path;
	},

	dispatch: function(id, eventName, args) {
		// receive event from flash movie, send to client
		var client = this.clients[id];
		if (client) {
			client.receiveEvent(eventName, args);
		}
	},

	log: function ( str ) {
		console.log( 'Flash: '+str );
	},

	register: function(id, client) {
		// register new client to receive events
		this.clients[id] = client;
	},

	getDOMObjectPosition: function(obj) {
		// get absolute coordinates for dom element
		var info = {
			left: 0,
			top: 0,
			width: obj.width ? obj.width : obj.offsetWidth,
			height: obj.height ? obj.height : obj.offsetHeight
		};

		if ( obj.style.width !== "" ) {
			info.width = obj.style.width.replace("px","");
		}

		if ( obj.style.height !== "" ) {
			info.height = obj.style.height.replace("px","");
		}

		while (obj) {
			info.left += obj.offsetLeft;
			info.top += obj.offsetTop;
			obj = obj.offsetParent;
		}

		return info;
	},

	Client: function(elem) {
		// constructor for new simple upload client
		this.handlers = {};

		// unique ID
		this.id = ZeroClipboard_TableTools.nextId++;
		this.movieId = 'ZeroClipboard_TableToolsMovie_' + this.id;

		// register client with singleton to receive flash events
		ZeroClipboard_TableTools.register(this.id, this);

		// create movie
		if (elem) {
			this.glue(elem);
		}
	}
};

ZeroClipboard_TableTools.Client.prototype = {

	id: 0, // unique ID for us
	ready: false, // whether movie is ready to receive events or not
	movie: null, // reference to movie object
	clipText: '', // text to copy to clipboard
	fileName: '', // default file save name
	action: 'copy', // action to perform
	handCursorEnabled: true, // whether to show hand cursor, or default pointer cursor
	cssEffects: true, // enable CSS mouse effects on dom container
	handlers: null, // user event handlers
	sized: false,
	sheetName: '', // default sheet name for excel export

	glue: function(elem, title) {
		// glue to DOM element
		// elem can be ID or actual DOM element object
		this.domElement = ZeroClipboard_TableTools.$(elem);

		// float just above object, or zIndex 99 if dom element isn't set
		var zIndex = 99;
		if (this.domElement.style.zIndex) {
			zIndex = parseInt(this.domElement.style.zIndex, 10) + 1;
		}

		// find X/Y position of domElement
		var box = ZeroClipboard_TableTools.getDOMObjectPosition(this.domElement);

		// create floating DIV above element
		this.div = document.createElement('div');
		var style = this.div.style;
		style.position = 'absolute';
		style.left = '0px';
		style.top = '0px';
		style.width = (box.width) + 'px';
		style.height = box.height + 'px';
		style.zIndex = zIndex;

		if ( typeof title != "undefined" && title !== "" ) {
			this.div.title = title;
		}
		if ( box.width !== 0 && box.height !== 0 ) {
			this.sized = true;
		}

		// style.backgroundColor = '#f00'; // debug
		if ( this.domElement ) {
			this.domElement.appendChild(this.div);
			this.div.innerHTML = this.getHTML( box.width, box.height ).replace(/&/g, '&amp;');
		}
	},

	positionElement: function() {
		var box = ZeroClipboard_TableTools.getDOMObjectPosition(this.domElement);
		var style = this.div.style;

		style.position = 'absolute';
		//style.left = (this.domElement.offsetLeft)+'px';
		//style.top = this.domElement.offsetTop+'px';
		style.width = box.width + 'px';
		style.height = box.height + 'px';

		if ( box.width !== 0 && box.height !== 0 ) {
			this.sized = true;
		} else {
			return;
		}

		var flash = this.div.childNodes[0];
		flash.width = box.width;
		flash.height = box.height;
	},

	getHTML: function(width, height) {
		// return HTML for movie
		var html = '';
		var flashvars = 'id=' + this.id +
			'&width=' + width +
			'&height=' + height;

		if (navigator.userAgent.match(/MSIE/)) {
			// IE gets an OBJECT tag
			var protocol = location.href.match(/^https/i) ? 'https://' : 'http://';
			html += '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="'+protocol+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0" width="'+width+'" height="'+height+'" id="'+this.movieId+'" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="'+ZeroClipboard_TableTools.moviePath+'" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="'+flashvars+'"/><param name="wmode" value="transparent"/></object>';
		}
		else {
			// all other browsers get an EMBED tag
			html += '<embed id="'+this.movieId+'" src="'+ZeroClipboard_TableTools.moviePath+'" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="'+width+'" height="'+height+'" name="'+this.movieId+'" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="'+flashvars+'" wmode="transparent" />';
		}
		return html;
	},

	hide: function() {
		// temporarily hide floater offscreen
		if (this.div) {
			this.div.style.left = '-2000px';
		}
	},

	show: function() {
		// show ourselves after a call to hide()
		this.reposition();
	},

	destroy: function() {
		// destroy control and floater
		var that = this;

		if (this.domElement && this.div) {
			$(this.div).remove();

			this.domElement = null;
			this.div = null;

			$.each( ZeroClipboard_TableTools.clients, function ( id, client ) {
				if ( client === that ) {
					delete ZeroClipboard_TableTools.clients[ id ];
				}
			} );
		}
	},

	reposition: function(elem) {
		// reposition our floating div, optionally to new container
		// warning: container CANNOT change size, only position
		if (elem) {
			this.domElement = ZeroClipboard_TableTools.$(elem);
			if (!this.domElement) {
				this.hide();
			}
		}

		if (this.domElement && this.div) {
			var box = ZeroClipboard_TableTools.getDOMObjectPosition(this.domElement);
			var style = this.div.style;
			style.left = '' + box.left + 'px';
			style.top = '' + box.top + 'px';
		}
	},

	clearText: function() {
		// clear the text to be copy / saved
		this.clipText = '';
		if (this.ready) {
			this.movie.clearText();
		}
	},

	appendText: function(newText) {
		// append text to that which is to be copied / saved
		this.clipText += newText;
		if (this.ready) { this.movie.appendText(newText) ;}
	},

	setText: function(newText) {
		// set text to be copied to be copied / saved
		this.clipText = newText;
		if (this.ready) { this.movie.setText(newText) ;}
	},

	setFileName: function(newText) {
		// set the file name
		this.fileName = newText;
		if (this.ready) {
			this.movie.setFileName(newText);
		}
	},

	setSheetData: function(data) {
		// set the xlsx sheet data
		if (this.ready) {
			this.movie.setSheetData( JSON.stringify( data ) );
		}
	},

	setAction: function(newText) {
		// set action (save or copy)
		this.action = newText;
		if (this.ready) {
			this.movie.setAction(newText);
		}
	},

	addEventListener: function(eventName, func) {
		// add user event listener for event
		// event types: load, queueStart, fileStart, fileComplete, queueComplete, progress, error, cancel
		eventName = eventName.toString().toLowerCase().replace(/^on/, '');
		if (!this.handlers[eventName]) {
			this.handlers[eventName] = [];
		}
		this.handlers[eventName].push(func);
	},

	setHandCursor: function(enabled) {
		// enable hand cursor (true), or default arrow cursor (false)
		this.handCursorEnabled = enabled;
		if (this.ready) {
			this.movie.setHandCursor(enabled);
		}
	},

	setCSSEffects: function(enabled) {
		// enable or disable CSS effects on DOM container
		this.cssEffects = !!enabled;
	},

	receiveEvent: function(eventName, args) {
		var self;

		// receive event from flash
		eventName = eventName.toString().toLowerCase().replace(/^on/, '');

		// special behavior for certain events
		switch (eventName) {
			case 'load':
				// movie claims it is ready, but in IE this isn't always the case...
				// bug fix: Cannot extend EMBED DOM elements in Firefox, must use traditional function
				this.movie = document.getElementById(this.movieId);
				if (!this.movie) {
					self = this;
					setTimeout( function() { self.receiveEvent('load', null); }, 1 );
					return;
				}

				// firefox on pc needs a "kick" in order to set these in certain cases
				if (!this.ready && navigator.userAgent.match(/Firefox/) && navigator.userAgent.match(/Windows/)) {
					self = this;
					setTimeout( function() { self.receiveEvent('load', null); }, 100 );
					this.ready = true;
					return;
				}

				this.ready = true;
				this.movie.clearText();
				this.movie.appendText( this.clipText );
				this.movie.setFileName( this.fileName );
				this.movie.setAction( this.action );
				this.movie.setHandCursor( this.handCursorEnabled );
				break;

			case 'mouseover':
				if (this.domElement && this.cssEffects) {
					//this.domElement.addClass('hover');
					if (this.recoverActive) {
						this.domElement.addClass('active');
					}
				}
				break;

			case 'mouseout':
				if (this.domElement && this.cssEffects) {
					this.recoverActive = false;
					if (this.domElement.hasClass('active')) {
						this.domElement.removeClass('active');
						this.recoverActive = true;
					}
					//this.domElement.removeClass('hover');
				}
				break;

			case 'mousedown':
				if (this.domElement && this.cssEffects) {
					this.domElement.addClass('active');
				}
				break;

			case 'mouseup':
				if (this.domElement && this.cssEffects) {
					this.domElement.removeClass('active');
					this.recoverActive = false;
				}
				break;
		} // switch eventName

		if (this.handlers[eventName]) {
			for (var idx = 0, len = this.handlers[eventName].length; idx < len; idx++) {
				var func = this.handlers[eventName][idx];

				if (typeof(func) == 'function') {
					// actual function reference
					func(this, args);
				}
				else if ((typeof(func) == 'object') && (func.length == 2)) {
					// PHP style object + method, i.e. [myObject, 'myMethod']
					func[0][ func[1] ](this, args);
				}
				else if (typeof(func) == 'string') {
					// name of function
					window[func](this, args);
				}
			} // foreach event handler defined
		} // user defined handler for event
	}
};

ZeroClipboard_TableTools.hasFlash = function ()
{
	try {
		var fo = new ActiveXObject('ShockwaveFlash.ShockwaveFlash');
		if (fo) {
			return true;
		}
	}
	catch (e) {
		if (
			navigator.mimeTypes &&
			navigator.mimeTypes['application/x-shockwave-flash'] !== undefined &&
			navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin
		) {
			return true;
		}
	}

	return false;
};

// For the Flash binding to work, ZeroClipboard_TableTools must be on the global
// object list
window.ZeroClipboard_TableTools = ZeroClipboard_TableTools;



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local (private) functions
 */

/**
 * If a Buttons instance is initlaised before it is placed into the DOM, Flash
 * won't be able to bind to it, so we need to wait until it is available, this
 * method abstracts that out.
 *
 * @param {ZeroClipboard} flash ZeroClipboard instance
 * @param {jQuery} node  Button
 */
var _glue = function ( flash, node )
{
	var id = node.attr('id');

	if ( node.parents('html').length ) {
		flash.glue( node[0], '' );
	}
	else {
		setTimeout( function () {
			_glue( flash, node );
		}, 500 );
	}
};

/**
 * Get the file name for an exported file.
 *
 * @param {object}  config       Button configuration
 * @param {boolean} incExtension Include the file name extension
 */
var _filename = function ( config, incExtension )
{
	// Backwards compatibility
	var filename = config.filename === '*' && config.title !== '*' && config.title !== undefined ?
		config.title :
		config.filename;

	if ( typeof filename === 'function' ) {
		filename = filename();
	}

	if ( filename.indexOf( '*' ) !== -1 ) {
		filename = $.trim( filename.replace( '*', $('title').text() ) );
	}

	// Strip characters which the OS will object to
	filename = filename.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "");

	return incExtension === undefined || incExtension === true ?
		filename+config.extension :
		filename;
};

/**
 * Get the sheet name for Excel exports.
 *
 * @param {object}  config       Button configuration
 */
var _sheetname = function ( config )
{
	var sheetName = 'Sheet1';

	if ( config.sheetName ) {
		sheetName = config.sheetName.replace(/[\[\]\*\/\\\?\:]/g, '');
	}

	return sheetName;
};

/**
 * Get the title for an exported file.
 *
 * @param {object}  config  Button configuration
 */
var _title = function ( config )
{
	var title = config.title;

	if ( typeof title === 'function' ) {
		title = title();
	}

	return title.indexOf( '*' ) !== -1 ?
		title.replace( '*', $('title').text() || 'Exported data' ) :
		title;
};

/**
 * Set the flash text. This has to be broken up into chunks as the Javascript /
 * Flash bridge has a size limit. There is no indication in the Flash
 * documentation what this is, and it probably depends upon the browser.
 * Experimentation shows that the point is around 50k when data starts to get
 * lost, so an 8K limit used here is safe.
 *
 * @param {ZeroClipboard} flash ZeroClipboard instance
 * @param {string}        data  Data to send to Flash
 */
var _setText = function ( flash, data )
{
	var parts = data.match(/[\s\S]{1,8192}/g) || [];

	flash.clearText();
	for ( var i=0, len=parts.length ; i<len ; i++ )
	{
		flash.appendText( parts[i] );
	}
};

/**
 * Get the newline character(s)
 *
 * @param {object}  config Button configuration
 * @return {string}        Newline character
 */
var _newLine = function ( config )
{
	return config.newline ?
		config.newline :
		navigator.userAgent.match(/Windows/) ?
			'\r\n' :
			'\n';
};

/**
 * Combine the data from the `buttons.exportData` method into a string that
 * will be used in the export file.
 *
 * @param  {DataTable.Api} dt     DataTables API instance
 * @param  {object}        config Button configuration
 * @return {object}               The data to export
 */
var _exportData = function ( dt, config )
{
	var newLine = _newLine( config );
	var data = dt.buttons.exportData( config.exportOptions );
	var boundary = config.fieldBoundary;
	var separator = config.fieldSeparator;
	var reBoundary = new RegExp( boundary, 'g' );
	var escapeChar = config.escapeChar !== undefined ?
		config.escapeChar :
		'\\';
	var join = function ( a ) {
		var s = '';

		// If there is a field boundary, then we might need to escape it in
		// the source data
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( i > 0 ) {
				s += separator;
			}

			s += boundary ?
				boundary + ('' + a[i]).replace( reBoundary, escapeChar+boundary ) + boundary :
				a[i];
		}

		return s;
	};

	var header = config.header ? join( data.header )+newLine : '';
	var footer = config.footer && data.footer ? newLine+join( data.footer ) : '';
	var body = [];

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		body.push( join( data.body[i] ) );
	}

	return {
		str: header + body.join( newLine ) + footer,
		rows: body.length
	};
};


// Basic initialisation for the buttons is common between them
var flashButton = {
	available: function () {
		return ZeroClipboard_TableTools.hasFlash();
	},

	init: function ( dt, button, config ) {
		// Insert the Flash movie
		ZeroClipboard_TableTools.moviePath = DataTable.Buttons.swfPath;
		var flash = new ZeroClipboard_TableTools.Client();

		flash.setHandCursor( true );
		flash.addEventListener('mouseDown', function(client) {
			config._fromFlash = true;
			dt.button( button[0] ).trigger();
			config._fromFlash = false;
		} );

		_glue( flash, button );

		config._flash = flash;
	},

	destroy: function ( dt, button, config ) {
		config._flash.destroy();
	},

	fieldSeparator: ',',

	fieldBoundary: '"',

	exportOptions: {},

	title: '*',

	filename: '*',

	extension: '.csv',

	header: true,

	footer: false
};


/**
 * Convert from numeric position to letter for column names in Excel
 * @param  {int} n Column number
 * @return {string} Column letter(s) name
 */
function createCellPos( n ){
	var ordA = 'A'.charCodeAt(0);
	var ordZ = 'Z'.charCodeAt(0);
	var len = ordZ - ordA + 1;
	var s = "";

	while( n >= 0 ) {
		s = String.fromCharCode(n % len + ordA) + s;
		n = Math.floor(n / len) - 1;
	}

	return s;
}

/**
 * Create an XML node and add any children, attributes, etc without needing to
 * be verbose in the DOM.
 *
 * @param  {object} doc      XML document
 * @param  {string} nodeName Node name
 * @param  {object} opts     Options - can be `attr` (attributes), `children`
 *   (child nodes) and `text` (text content)
 * @return {node}            Created node
 */
function _createNode( doc, nodeName, opts ){
	var tempNode = doc.createElement( nodeName );

	if ( opts ) {
		if ( opts.attr ) {
			$(tempNode).attr( opts.attr );
		}

		if( opts.children ) {
			$.each( opts.children, function ( key, value ) {
				tempNode.appendChild( value );
			});
		}

		if( opts.text ) {
			tempNode.appendChild( doc.createTextNode( opts.text ) );
		}
	}

	return tempNode;
}

/**
 * Get the width for an Excel column based on the contents of that column
 * @param  {object} data Data for export
 * @param  {int}    col  Column index
 * @return {int}         Column width
 */
function _excelColWidth( data, col ) {
	var max = data.header[col].length;
	var len;

	if ( data.footer && data.footer[col].length > max ) {
		max = data.footer[col].length;
	}

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		len = data.body[i][col].toString().length;

		if ( len > max ) {
			max = len;
		}

		// Max width rather than having potentially massive column widths
		if ( max > 40 ) {
			break;
		}
	}

	// And a min width
	return max > 5 ? max : 5;
}

try {
	var _serialiser = new XMLSerializer();
	var _ieExcel;
}
catch (t) {}

/**
 * Convert XML documents in an object to strings
 * @param  {object} obj XLSX document object
 */
function _xlsxToStrings( obj ) {
	if ( _ieExcel === undefined ) {
		// Detect if we are dealing with IE's _awful_ serialiser by seeing if it
		// drop attributes
		_ieExcel = _serialiser
			.serializeToString(
				$.parseXML( excelStrings['xl/worksheets/sheet1.xml'] )
			)
			.indexOf( 'xmlns:r' ) === -1;
	}

	$.each( obj, function ( name, val ) {
		if ( $.isPlainObject( val ) ) {
			_xlsxToStrings( val );
		}
		else {
			if ( _ieExcel ) {
				// IE's XML serialiser will drop some name space attributes from
				// from the root node, so we need to save them. Do this by
				// replacing the namespace nodes with a regular attribute that
				// we convert back when serialised. Edge does not have this
				// issue
				var worksheet = val.childNodes[0];
				var i, ien;
				var attrs = [];

				for ( i=worksheet.attributes.length-1 ; i>=0 ; i-- ) {
					var attrName = worksheet.attributes[i].nodeName;
					var attrValue = worksheet.attributes[i].nodeValue;

					if ( attrName.indexOf( ':' ) !== -1 ) {
						attrs.push( { name: attrName, value: attrValue } );

						worksheet.removeAttribute( attrName );
					}
				}

				for ( i=0, ien=attrs.length ; i<ien ; i++ ) {
					var attr = val.createAttribute( attrs[i].name.replace( ':', '_dt_b_namespace_token_' ) );
					attr.value = attrs[i].value;
					worksheet.setAttributeNode( attr );
				}
			}

			var str = _serialiser.serializeToString(val);

			// Fix IE's XML
			if ( _ieExcel ) {
				// IE doesn't include the XML declaration
				if ( str.indexOf( '<?xml' ) === -1 ) {
					str = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+str;
				}

				// Return namespace attributes to being as such
				str = str.replace( /_dt_b_namespace_token_/g, ':' );
			}

			// Both IE and Edge will put empty name space attributes onto the
			// rows and columns making them useless
			str = str
				.replace( /<row xmlns="" /g, '<row ' )
				.replace( /<cols xmlns="">/g, '<cols>' );

			obj[ name ] = str;
		}
	} );
}

// Excel - Pre-defined strings to build a basic XLSX file
var excelStrings = {
	"_rels/.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/>'+
		'</Relationships>',

	"xl/_rels/workbook.xml.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/>'+
			'<Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/>'+
		'</Relationships>',

	"[Content_Types].xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">'+
			'<Default Extension="xml" ContentType="application/xml" />'+
			'<Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" />'+
			'<Default Extension="jpeg" ContentType="image/jpeg" />'+
			'<Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" />'+
			'<Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" />'+
			'<Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" />'+
		'</Types>',

	"xl/workbook.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships">'+
			'<fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/>'+
			'<workbookPr showInkAnnotation="0" autoCompressPictures="0"/>'+
			'<bookViews>'+
				'<workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/>'+
			'</bookViews>'+
			'<sheets>'+
				'<sheet name="" sheetId="1" r:id="rId1"/>'+
			'</sheets>'+
		'</workbook>',

	"xl/worksheets/sheet1.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<sheetData/>'+
		'</worksheet>',

	"xl/styles.xml":
		'<?xml version="1.0" encoding="UTF-8"?>'+
		'<styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<fonts count="5" x14ac:knownFonts="1">'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<color rgb="FFFFFFFF" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<b />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<i />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<u />'+
				'</font>'+
			'</fonts>'+
			'<fills count="6">'+
				'<fill>'+
					'<patternFill patternType="none" />'+
				'</fill>'+
				'<fill/>'+ // Excel appears to use this as a dotted background regardless of values
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD9D9D9" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD99795" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6efce" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6cfef" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
			'</fills>'+
			'<borders count="2">'+
				'<border>'+
					'<left />'+
					'<right />'+
					'<top />'+
					'<bottom />'+
					'<diagonal />'+
				'</border>'+
				'<border diagonalUp="false" diagonalDown="false">'+
					'<left style="thin">'+
						'<color auto="1" />'+
					'</left>'+
					'<right style="thin">'+
						'<color auto="1" />'+
					'</right>'+
					'<top style="thin">'+
						'<color auto="1" />'+
					'</top>'+
					'<bottom style="thin">'+
						'<color auto="1" />'+
					'</bottom>'+
					'<diagonal />'+
				'</border>'+
			'</borders>'+
			'<cellStyleXfs count="1">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" />'+
			'</cellStyleXfs>'+
			'<cellXfs count="56">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="left"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="center"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="right"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="fill"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment textRotation="90"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment wrapText="1"/>'+
				'</xf>'+
			'</cellXfs>'+
			'<cellStyles count="1">'+
				'<cellStyle name="Normal" xfId="0" builtinId="0" />'+
			'</cellStyles>'+
			'<dxfs count="0" />'+
			'<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" />'+
		'</styleSheet>'
};
// Note we could use 3 `for` loops for the styles, but when gzipped there is
// virtually no difference in size, since the above can be easily compressed



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables options and methods
 */

// Set the default SWF path
DataTable.Buttons.swfPath = '//cdn.datatables.net/buttons/1.2.0/swf/flashExport.swf';

// Method to allow Flash buttons to be resized when made visible - as they are
// of zero height and width if initialised hidden
DataTable.Api.register( 'buttons.resize()', function () {
	$.each( ZeroClipboard_TableTools.clients, function ( i, client ) {
		if ( client.domElement !== undefined && client.domElement.parentNode ) {
			client.positionElement();
		}
	} );
} );


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Button definitions
 */

// Copy to clipboard
DataTable.ext.buttons.copyFlash = $.extend( {}, flashButton, {
	className: 'buttons-copy buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.copy', 'Copy' );
	},

	action: function ( e, dt, button, config ) {
		// Check that the trigger did actually occur due to a Flash activation
		if ( ! config._fromFlash ) {
			return;
		}

		var flash = config._flash;
		var data = _exportData( dt, config );
		var output = config.customize ?
			config.customize( data.str, config ) :
			data.str;

		flash.setAction( 'copy' );
		_setText( flash, output );

		dt.buttons.info(
			dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ),
			dt.i18n( 'buttons.copySuccess', {
				_: 'Copied %d rows to clipboard',
				1: 'Copied 1 row to clipboard'
			}, data.rows ),
			3000
		);
	},

	fieldSeparator: '\t',

	fieldBoundary: ''
} );

// CSV save file
DataTable.ext.buttons.csvFlash = $.extend( {}, flashButton, {
	className: 'buttons-csv buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.csv', 'CSV' );
	},

	action: function ( e, dt, button, config ) {
		// Set the text
		var flash = config._flash;
		var data = _exportData( dt, config );
		var output = config.customize ?
			config.customize( data.str, config ) :
			data.str;

		flash.setAction( 'csv' );
		flash.setFileName( _filename( config ) );
		_setText( flash, output );
	},

	escapeChar: '"'
} );

// Excel save file - this is really a CSV file using UTF-8 that Excel can read
DataTable.ext.buttons.excelFlash = $.extend( {}, flashButton, {
	className: 'buttons-excel buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.excel', 'Excel' );
	},

	action: function ( e, dt, button, config ) {
		var flash = config._flash;
		var rowPos = 0;
		var rels = $.parseXML( excelStrings['xl/worksheets/sheet1.xml'] ) ; //Parses xml
		var relsGet = rels.getElementsByTagName( "sheetData" )[0];

		var xlsx = {
			_rels: {
				".rels": $.parseXML( excelStrings['_rels/.rels'] )
			},
			xl: {
				_rels: {
					"workbook.xml.rels": $.parseXML( excelStrings['xl/_rels/workbook.xml.rels'] )
				},
				"workbook.xml": $.parseXML( excelStrings['xl/workbook.xml'] ),
				"styles.xml": $.parseXML( excelStrings['xl/styles.xml'] ),
				"worksheets": {
					"sheet1.xml": rels
				}

			},
			"[Content_Types].xml": $.parseXML( excelStrings['[Content_Types].xml'])
		};

		var data = dt.buttons.exportData( config.exportOptions );
		var currentRow, rowNode;
		var addRow = function ( row ) {
			currentRow = rowPos+1;
			rowNode = _createNode( rels, "row", { attr: {r:currentRow} } );

			for ( var i=0, ien=row.length ; i<ien ; i++ ) {
				// Concat both the Cell Columns as a letter and the Row of the cell.
				var cellId = createCellPos(i) + '' + currentRow;
				var cell;

				if ( row[i] === null || row[i] === undefined ) {
					row[i] = '';
				}

				// Detect numbers - don't match numbers with leading zeros or a negative
				// anywhere but the start
				if ( typeof row[i] === 'number' || (
						row[i].match &&
						$.trim(row[i]).match(/^-?\d+(\.\d+)?$/) &&
						! $.trim(row[i]).match(/^0\d+/) )
				) {
					cell = _createNode( rels, 'c', {
						attr: {
							t: 'n',
							r: cellId
						},
						children: [
							_createNode( rels, 'v', { text: row[i] } )
						]
					} );
				}
				else {
					// Replace non standard characters for text output
					var text = ! row[i].replace ?
						row[i] :
						row[i].replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g, '');

					cell = _createNode( rels, 'c', {
						attr: {
							t: 'inlineStr',
							r: cellId
						},
						children:{
							row: _createNode( rels, 'is', {
								children: {
									row: _createNode( rels, 't', {
										text: text
									} )
								}
							} )
						}
					} );
				}

				rowNode.appendChild( cell );
			}
			relsGet.appendChild(rowNode);
			rowPos++;
		};

		$( 'sheets sheet', xlsx.xl['workbook.xml'] ).attr( 'name', _sheetname( config ) );

		if ( config.customizeData ) {
			config.customizeData( data );
		}

		if ( config.header ) {
			addRow( data.header, rowPos );
			$('row c', rels).attr( 's', '2' ); // bold
		}

		for ( var n=0, ie=data.body.length ; n<ie ; n++ ) {
			addRow( data.body[n], rowPos );
		}

		if ( config.footer && data.footer ) {
			addRow( data.footer, rowPos);
			$('row:last c', rels).attr( 's', '2' ); // bold
		}

		// Set column widths
		var cols = _createNode( rels, 'cols' );
		$('worksheet', rels).prepend( cols );

		for ( var i=0, ien=data.header.length ; i<ien ; i++ ) {
			cols.appendChild( _createNode( rels, 'col', {
				attr: {
					min: i+1,
					max: i+1,
					width: _excelColWidth( data, i ),
					customWidth: 1
				}
			} ) );
		}

		// Let the developer customise the document if they want to
		if ( config.customize ) {
			config.customize( xlsx );
		}

		_xlsxToStrings( xlsx );

		flash.setAction( 'excel' );
		flash.setFileName( _filename( config ) );
		flash.setSheetData( xlsx );
		_setText( flash, '' );
	},

	extension: '.xlsx'
} );



// PDF export
DataTable.ext.buttons.pdfFlash = $.extend( {}, flashButton, {
	className: 'buttons-pdf buttons-flash',

	text: function ( dt ) {
		return dt.i18n( 'buttons.pdf', 'PDF' );
	},

	action: function ( e, dt, button, config ) {
		// Set the text
		var flash = config._flash;
		var data = dt.buttons.exportData( config.exportOptions );
		var totalWidth = dt.table().node().offsetWidth;

		// Calculate the column width ratios for layout of the table in the PDF
		var ratios = dt.columns( config.columns ).indexes().map( function ( idx ) {
			return dt.column( idx ).header().offsetWidth / totalWidth;
		} );

		flash.setAction( 'pdf' );
		flash.setFileName( _filename( config ) );

		_setText( flash, JSON.stringify( {
			title:       _filename(config, false),
			message: typeof config.message == 'function' ? config.message(dt, button, config) : config.message,
			colWidth:    ratios.toArray(),
			orientation: config.orientation,
			size:        config.pageSize,
			header:      config.header ? data.header : null,
			footer:      config.footer ? data.footer : null,
			body:        data.body
		} ) );
	},

	extension: '.pdf',

	orientation: 'portrait',

	pageSize: 'A4',

	message: '',

	newline: '\n'
} );


return DataTable.Buttons;
}));
(function(f){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(j){return f(j,window,document)}):"object"===typeof exports?module.exports=function(j,k){j||(j=window);if(!k||!k.fn.dataTable)k=require("datatables.net")(j,k).$;k.fn.dataTable.Buttons||require("datatables.net-buttons")(j,k);return f(k,j,j.document)}:f(jQuery,window,document)})(function(f,j,k,o){function l(a,b,d){var c=a.createElement(b);d&&(d.attr&&f(c).attr(d.attr),d.children&&
f.each(d.children,function(a,b){c.appendChild(b)}),d.text&&c.appendChild(a.createTextNode(d.text)));return c}function z(a,b){var d=a.header[b].length,c;a.footer&&a.footer[b].length>d&&(d=a.footer[b].length);for(var e=0,g=a.body.length;e<g&&!(c=a.body[e][b].toString().length,c>d&&(d=c),40<d);e++);return 5<d?d:5}function v(a){n===o&&(n=-1===w.serializeToString(f.parseXML(p["xl/worksheets/sheet1.xml"])).indexOf("xmlns:r"));f.each(a,function(b,d){if(f.isPlainObject(d))v(d);else{if(n){var c=d.childNodes[0],
e,g,h=[];for(e=c.attributes.length-1;0<=e;e--){g=c.attributes[e].nodeName;var q=c.attributes[e].nodeValue;-1!==g.indexOf(":")&&(h.push({name:g,value:q}),c.removeAttribute(g))}e=0;for(g=h.length;e<g;e++)q=d.createAttribute(h[e].name.replace(":","_dt_b_namespace_token_")),q.value=h[e].value,c.setAttributeNode(q)}c=w.serializeToString(d);n&&(-1===c.indexOf("<?xml")&&(c='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+c),c=c.replace(/_dt_b_namespace_token_/g,":"));c=c.replace(/<row xmlns="" /g,
"<row ").replace(/<cols xmlns="">/g,"<cols>");a[b]=c}})}var i=f.fn.dataTable,h={version:"1.0.4-TableTools2",clients:{},moviePath:"",nextId:1,$:function(a){"string"==typeof a&&(a=k.getElementById(a));a.addClass||(a.hide=function(){this.style.display="none"},a.show=function(){this.style.display=""},a.addClass=function(a){this.removeClass(a);this.className+=" "+a},a.removeClass=function(a){this.className=this.className.replace(RegExp("\\s*"+a+"\\s*")," ").replace(/^\s+/,"").replace(/\s+$/,"")},a.hasClass=
function(a){return!!this.className.match(RegExp("\\s*"+a+"\\s*"))});return a},setMoviePath:function(a){this.moviePath=a},dispatch:function(a,b,d){(a=this.clients[a])&&a.receiveEvent(b,d)},log:function(a){console.log("Flash: "+a)},register:function(a,b){this.clients[a]=b},getDOMObjectPosition:function(a){var b={left:0,top:0,width:a.width?a.width:a.offsetWidth,height:a.height?a.height:a.offsetHeight};""!==a.style.width&&(b.width=a.style.width.replace("px",""));""!==a.style.height&&(b.height=a.style.height.replace("px",
""));for(;a;)b.left+=a.offsetLeft,b.top+=a.offsetTop,a=a.offsetParent;return b},Client:function(a){this.handlers={};this.id=h.nextId++;this.movieId="ZeroClipboard_TableToolsMovie_"+this.id;h.register(this.id,this);a&&this.glue(a)}};h.Client.prototype={id:0,ready:!1,movie:null,clipText:"",fileName:"",action:"copy",handCursorEnabled:!0,cssEffects:!0,handlers:null,sized:!1,sheetName:"",glue:function(a,b){this.domElement=h.$(a);var d=99;this.domElement.style.zIndex&&(d=parseInt(this.domElement.style.zIndex,
10)+1);var c=h.getDOMObjectPosition(this.domElement);this.div=k.createElement("div");var e=this.div.style;e.position="absolute";e.left="0px";e.top="0px";e.width=c.width+"px";e.height=c.height+"px";e.zIndex=d;"undefined"!=typeof b&&""!==b&&(this.div.title=b);0!==c.width&&0!==c.height&&(this.sized=!0);this.domElement&&(this.domElement.appendChild(this.div),this.div.innerHTML=this.getHTML(c.width,c.height).replace(/&/g,"&amp;"))},positionElement:function(){var a=h.getDOMObjectPosition(this.domElement),
b=this.div.style;b.position="absolute";b.width=a.width+"px";b.height=a.height+"px";0!==a.width&&0!==a.height&&(this.sized=!0,b=this.div.childNodes[0],b.width=a.width,b.height=a.height)},getHTML:function(a,b){var d="",c="id="+this.id+"&width="+a+"&height="+b;if(navigator.userAgent.match(/MSIE/))var e=location.href.match(/^https/i)?"https://":"http://",d=d+('<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="'+e+'download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,0,0" width="'+
a+'" height="'+b+'" id="'+this.movieId+'" align="middle"><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="false" /><param name="movie" value="'+h.moviePath+'" /><param name="loop" value="false" /><param name="menu" value="false" /><param name="quality" value="best" /><param name="bgcolor" value="#ffffff" /><param name="flashvars" value="'+c+'"/><param name="wmode" value="transparent"/></object>');else d+='<embed id="'+this.movieId+'" src="'+h.moviePath+'" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="'+
a+'" height="'+b+'" name="'+this.movieId+'" align="middle" allowScriptAccess="always" allowFullScreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="'+c+'" wmode="transparent" />';return d},hide:function(){this.div&&(this.div.style.left="-2000px")},show:function(){this.reposition()},destroy:function(){var a=this;this.domElement&&this.div&&(f(this.div).remove(),this.div=this.domElement=null,f.each(h.clients,function(b,d){d===a&&delete h.clients[b]}))},
reposition:function(a){a&&((this.domElement=h.$(a))||this.hide());if(this.domElement&&this.div){var a=h.getDOMObjectPosition(this.domElement),b=this.div.style;b.left=""+a.left+"px";b.top=""+a.top+"px"}},clearText:function(){this.clipText="";this.ready&&this.movie.clearText()},appendText:function(a){this.clipText+=a;this.ready&&this.movie.appendText(a)},setText:function(a){this.clipText=a;this.ready&&this.movie.setText(a)},setFileName:function(a){this.fileName=a;this.ready&&this.movie.setFileName(a)},
setSheetData:function(a){this.ready&&this.movie.setSheetData(JSON.stringify(a))},setAction:function(a){this.action=a;this.ready&&this.movie.setAction(a)},addEventListener:function(a,b){a=a.toString().toLowerCase().replace(/^on/,"");this.handlers[a]||(this.handlers[a]=[]);this.handlers[a].push(b)},setHandCursor:function(a){this.handCursorEnabled=a;this.ready&&this.movie.setHandCursor(a)},setCSSEffects:function(a){this.cssEffects=!!a},receiveEvent:function(a,b){var d,a=a.toString().toLowerCase().replace(/^on/,
"");switch(a){case "load":this.movie=k.getElementById(this.movieId);if(!this.movie){d=this;setTimeout(function(){d.receiveEvent("load",null)},1);return}if(!this.ready&&navigator.userAgent.match(/Firefox/)&&navigator.userAgent.match(/Windows/)){d=this;setTimeout(function(){d.receiveEvent("load",null)},100);this.ready=!0;return}this.ready=!0;this.movie.clearText();this.movie.appendText(this.clipText);this.movie.setFileName(this.fileName);this.movie.setAction(this.action);this.movie.setHandCursor(this.handCursorEnabled);
break;case "mouseover":this.domElement&&this.cssEffects&&this.recoverActive&&this.domElement.addClass("active");break;case "mouseout":this.domElement&&this.cssEffects&&(this.recoverActive=!1,this.domElement.hasClass("active")&&(this.domElement.removeClass("active"),this.recoverActive=!0));break;case "mousedown":this.domElement&&this.cssEffects&&this.domElement.addClass("active");break;case "mouseup":this.domElement&&this.cssEffects&&(this.domElement.removeClass("active"),this.recoverActive=!1)}if(this.handlers[a])for(var c=
0,e=this.handlers[a].length;c<e;c++){var g=this.handlers[a][c];if("function"==typeof g)g(this,b);else if("object"==typeof g&&2==g.length)g[0][g[1]](this,b);else if("string"==typeof g)j[g](this,b)}}};h.hasFlash=function(){try{if(new ActiveXObject("ShockwaveFlash.ShockwaveFlash"))return!0}catch(a){if(navigator.mimeTypes&&navigator.mimeTypes["application/x-shockwave-flash"]!==o&&navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin)return!0}return!1};j.ZeroClipboard_TableTools=h;var x=function(a,
b){b.attr("id");b.parents("html").length?a.glue(b[0],""):setTimeout(function(){x(a,b)},500)},r=function(a,b){var d="*"===a.filename&&"*"!==a.title&&a.title!==o?a.title:a.filename;"function"===typeof d&&(d=d());-1!==d.indexOf("*")&&(d=f.trim(d.replace("*",f("title").text())));d=d.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g,"");return b===o||!0===b?d+a.extension:d},A=function(a){var b="Sheet1";a.sheetName&&(b=a.sheetName.replace(/[\[\]\*\/\\\?\:]/g,""));return b},s=function(a,b){var d=b.match(/[\s\S]{1,8192}/g)||
[];a.clearText();for(var c=0,e=d.length;c<e;c++)a.appendText(d[c])},y=function(a,b){for(var d=b.newline?b.newline:navigator.userAgent.match(/Windows/)?"\r\n":"\n",c=a.buttons.exportData(b.exportOptions),e=b.fieldBoundary,g=b.fieldSeparator,f=RegExp(e,"g"),h=b.escapeChar!==o?b.escapeChar:"\\",j=function(a){for(var b="",c=0,d=a.length;c<d;c++)0<c&&(b+=g),b+=e?e+(""+a[c]).replace(f,h+e)+e:a[c];return b},k=b.header?j(c.header)+d:"",m=b.footer&&c.footer?d+j(c.footer):"",l=[],u=0,B=c.body.length;u<B;u++)l.push(j(c.body[u]));
return{str:k+l.join(d)+m,rows:l.length}},t={available:function(){return h.hasFlash()},init:function(a,b,d){h.moviePath=i.Buttons.swfPath;var c=new h.Client;c.setHandCursor(!0);c.addEventListener("mouseDown",function(){d._fromFlash=!0;a.button(b[0]).trigger();d._fromFlash=!1});x(c,b);d._flash=c},destroy:function(a,b,d){d._flash.destroy()},fieldSeparator:",",fieldBoundary:'"',exportOptions:{},title:"*",filename:"*",extension:".csv",header:!0,footer:!1};try{var w=new XMLSerializer,n}catch(C){}var p=
{"_rels/.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',"xl/_rels/workbook.xml.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
"[Content_Types].xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
"xl/workbook.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="" sheetId="1" r:id="rId1"/></sheets></workbook>',
"xl/worksheets/sheet1.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/></worksheet>',"xl/styles.xml":'<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill/><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="56"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'};
i.Buttons.swfPath="//cdn.datatables.net/buttons/1.2.0/swf/flashExport.swf";i.Api.register("buttons.resize()",function(){f.each(h.clients,function(a,b){b.domElement!==o&&b.domElement.parentNode&&b.positionElement()})});i.ext.buttons.copyFlash=f.extend({},t,{className:"buttons-copy buttons-flash",text:function(a){return a.i18n("buttons.copy","Copy")},action:function(a,b,d,c){c._fromFlash&&(a=c._flash,d=y(b,c),c=c.customize?c.customize(d.str,c):d.str,a.setAction("copy"),s(a,c),b.buttons.info(b.i18n("buttons.copyTitle",
"Copy to clipboard"),b.i18n("buttons.copySuccess",{_:"Copied %d rows to clipboard",1:"Copied 1 row to clipboard"},d.rows),3E3))},fieldSeparator:"\t",fieldBoundary:""});i.ext.buttons.csvFlash=f.extend({},t,{className:"buttons-csv buttons-flash",text:function(a){return a.i18n("buttons.csv","CSV")},action:function(a,b,d,c){a=c._flash;b=y(b,c);b=c.customize?c.customize(b.str,c):b.str;a.setAction("csv");a.setFileName(r(c));s(a,b)},escapeChar:'"'});i.ext.buttons.excelFlash=f.extend({},t,{className:"buttons-excel buttons-flash",
text:function(a){return a.i18n("buttons.excel","Excel")},action:function(a,b,d,c){var a=c._flash,e=0,g=f.parseXML(p["xl/worksheets/sheet1.xml"]),h=g.getElementsByTagName("sheetData")[0],d={_rels:{".rels":f.parseXML(p["_rels/.rels"])},xl:{_rels:{"workbook.xml.rels":f.parseXML(p["xl/_rels/workbook.xml.rels"])},"workbook.xml":f.parseXML(p["xl/workbook.xml"]),"styles.xml":f.parseXML(p["xl/styles.xml"]),worksheets:{"sheet1.xml":g}},"[Content_Types].xml":f.parseXML(p["[Content_Types].xml"])},b=b.buttons.exportData(c.exportOptions),
j,k,i=function(a){j=e+1;k=l(g,"row",{attr:{r:j}});for(var b=0,c=a.length;b<c;b++){for(var d=b,i="";0<=d;)i=String.fromCharCode(d%26+65)+i,d=Math.floor(d/26)-1;d=i+""+j;if(null===a[b]||a[b]===o)a[b]="";"number"===typeof a[b]||a[b].match&&f.trim(a[b]).match(/^-?\d+(\.\d+)?$/)&&!f.trim(a[b]).match(/^0\d+/)?d=l(g,"c",{attr:{t:"n",r:d},children:[l(g,"v",{text:a[b]})]}):(i=!a[b].replace?a[b]:a[b].replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,""),d=l(g,"c",{attr:{t:"inlineStr",r:d},children:{row:l(g,
"is",{children:{row:l(g,"t",{text:i})}})}}));k.appendChild(d)}h.appendChild(k);e++};f("sheets sheet",d.xl["workbook.xml"]).attr("name",A(c));c.customizeData&&c.customizeData(b);c.header&&(i(b.header,e),f("row c",g).attr("s","2"));for(var m=0,n=b.body.length;m<n;m++)i(b.body[m],e);c.footer&&b.footer&&(i(b.footer,e),f("row:last c",g).attr("s","2"));i=l(g,"cols");f("worksheet",g).prepend(i);m=0;for(n=b.header.length;m<n;m++)i.appendChild(l(g,"col",{attr:{min:m+1,max:m+1,width:z(b,m),customWidth:1}}));
c.customize&&c.customize(d);v(d);a.setAction("excel");a.setFileName(r(c));a.setSheetData(d);s(a,"")},extension:".xlsx"});i.ext.buttons.pdfFlash=f.extend({},t,{className:"buttons-pdf buttons-flash",text:function(a){return a.i18n("buttons.pdf","PDF")},action:function(a,b,d,c){var a=c._flash,e=b.buttons.exportData(c.exportOptions),g=b.table().node().offsetWidth,f=b.columns(c.columns).indexes().map(function(a){return b.column(a).header().offsetWidth/g});a.setAction("pdf");a.setFileName(r(c));s(a,JSON.stringify({title:r(c,
!1),message:"function"==typeof c.message?c.message(b,d,c):c.message,colWidth:f.toArray(),orientation:c.orientation,size:c.pageSize,header:c.header?e.header:null,footer:c.footer?e.footer:null,body:e.body}))},extension:".pdf",orientation:"portrait",pageSize:"A4",message:"",newline:"\n"});return i.Buttons});
/*! Foundation integration for DataTables' Buttons
 * ©2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-zf', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-zf')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


// F6 has different requirements for the dropdown button set. We can use the
// Foundation version found by DataTables in order to support both F5 and F6 in
// the same file, but not that this requires DataTables 1.10.11+ for F6 support.
var collection = DataTable.ext.foundationVersion === 6 ?
	{
		tag: 'div',
		className: 'dt-button-collection dropdown-pane is-open button-group stacked'
	} :
	{
		tag: 'ul',
		className: 'dt-button-collection f-dropdown open dropdown-pane is-open',
		button: {
			tag: 'li',
			className: 'small'
		},
		buttonLiner: {
			tag: 'a'
		}
	};

$.extend( true, DataTable.Buttons.defaults, {
	dom: {
		container: {
			tag: 'div',
			className: 'dt-buttons button-group'
		},
		buttonContainer: {
			tag: null,
			className: ''
		},
		button: {
			tag: 'a',
			className: 'button small'
		},
		buttonLiner: {
			tag: null
		},
		collection: collection
	}
} );


DataTable.ext.buttons.collection.className = 'buttons-collection dropdown';


return DataTable.Buttons;
}));
/*!
 Foundation integration for DataTables' Buttons
 ©2016 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-zf","datatables.net-buttons"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net-zf")(a,b).$;b.fn.dataTable.Buttons||require("datatables.net-buttons")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c){var a=c.fn.dataTable;c.extend(!0,a.Buttons.defaults,{dom:{container:{tag:"div",className:"dt-buttons button-group"},
buttonContainer:{tag:null,className:""},button:{tag:"a",className:"button small"},buttonLiner:{tag:null},collection:6===a.ext.foundationVersion?{tag:"div",className:"dt-button-collection dropdown-pane is-open button-group stacked"}:{tag:"ul",className:"dt-button-collection f-dropdown open dropdown-pane is-open",button:{tag:"li",className:"small"},buttonLiner:{tag:"a"}}}});a.ext.buttons.collection.className="buttons-collection dropdown";return a.Buttons});
/*!
 * HTML5 export buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 *
 * FileSaver.js (1.1.20160328) - MIT license
 * Copyright © 2016 Eli Grey - http://eligrey.com
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $, jszip, pdfmake) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document, jszip, pdfmake );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, jszip, pdfmake, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;

// Allow the constructor to pass in JSZip and PDFMake from external requires.
// Otherwise, use globally defined variables, if they are available.
function _jsZip () {
	return jszip || window.JSZip;
}
function _pdfMake () {
	return pdfmake || window.pdfMake;
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * FileSaver.js dependency
 */

/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

var _saveAs = (function(view) {
	"use strict";
	// IE <10 is explicitly unsupported
	if (typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
		return;
	}
	var
		  doc = view.document
		  // only get URL when necessary in case Blob.js hasn't overridden it yet
		, get_URL = function() {
			return view.URL || view.webkitURL || view;
		}
		, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
		, can_use_save_link = "download" in save_link
		, click = function(node) {
			var event = new MouseEvent("click");
			node.dispatchEvent(event);
		}
		, is_safari = /Version\/[\d\.]+.*Safari/.test(navigator.userAgent)
		, webkit_req_fs = view.webkitRequestFileSystem
		, req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem
		, throw_outside = function(ex) {
			(view.setImmediate || view.setTimeout)(function() {
				throw ex;
			}, 0);
		}
		, force_saveable_type = "application/octet-stream"
		, fs_min_size = 0
		// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
		, arbitrary_revoke_timeout = 1000 * 40 // in ms
		, revoke = function(file) {
			var revoker = function() {
				if (typeof file === "string") { // file is an object URL
					get_URL().revokeObjectURL(file);
				} else { // file is a File
					file.remove();
				}
			};
			/* // Take note W3C:
			var
			  uri = typeof file === "string" ? file : file.toURL()
			, revoker = function(evt) {
				// idealy DownloadFinishedEvent.data would be the URL requested
				if (evt.data === uri) {
					if (typeof file === "string") { // file is an object URL
						get_URL().revokeObjectURL(file);
					} else { // file is a File
						file.remove();
					}
				}
			}
			;
			view.addEventListener("downloadfinished", revoker);
			*/
			setTimeout(revoker, arbitrary_revoke_timeout);
		}
		, dispatch = function(filesaver, event_types, event) {
			event_types = [].concat(event_types);
			var i = event_types.length;
			while (i--) {
				var listener = filesaver["on" + event_types[i]];
				if (typeof listener === "function") {
					try {
						listener.call(filesaver, event || filesaver);
					} catch (ex) {
						throw_outside(ex);
					}
				}
			}
		}
		, auto_bom = function(blob) {
			// prepend BOM for UTF-8 XML and text/* types (including HTML)
			if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
				return new Blob(["\ufeff", blob], {type: blob.type});
			}
			return blob;
		}
		, FileSaver = function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			// First try a.download, then web filesystem, then object URLs
			var
				  filesaver = this
				, type = blob.type
				, blob_changed = false
				, object_url
				, target_view
				, dispatch_all = function() {
					dispatch(filesaver, "writestart progress write writeend".split(" "));
				}
				// on any filesys errors revert to saving with object URLs
				, fs_error = function() {
					if (target_view && is_safari && typeof FileReader !== "undefined") {
						// Safari doesn't allow downloading of blob urls
						var reader = new FileReader();
						reader.onloadend = function() {
							var base64Data = reader.result;
							target_view.location.href = "data:attachment/file" + base64Data.slice(base64Data.search(/[,;]/));
							filesaver.readyState = filesaver.DONE;
							dispatch_all();
						};
						reader.readAsDataURL(blob);
						filesaver.readyState = filesaver.INIT;
						return;
					}
					// don't create more object URLs than needed
					if (blob_changed || !object_url) {
						object_url = get_URL().createObjectURL(blob);
					}
					if (target_view) {
						target_view.location.href = object_url;
					} else {
						var new_tab = view.open(object_url, "_blank");
						if (new_tab === undefined && is_safari) {
							//Apple do not allow window.open, see http://bit.ly/1kZffRI
							view.location.href = object_url
						}
					}
					filesaver.readyState = filesaver.DONE;
					dispatch_all();
					revoke(object_url);
				}
				, abortable = function(func) {
					return function() {
						if (filesaver.readyState !== filesaver.DONE) {
							return func.apply(this, arguments);
						}
					};
				}
				, create_if_not_found = {create: true, exclusive: false}
				, slice
			;
			filesaver.readyState = filesaver.INIT;
			if (!name) {
				name = "download";
			}
			if (can_use_save_link) {
				object_url = get_URL().createObjectURL(blob);
				setTimeout(function() {
					save_link.href = object_url;
					save_link.download = name;
					click(save_link);
					dispatch_all();
					revoke(object_url);
					filesaver.readyState = filesaver.DONE;
				});
				return;
			}
			// Object and web filesystem URLs have a problem saving in Google Chrome when
			// viewed in a tab, so I force save with application/octet-stream
			// http://code.google.com/p/chromium/issues/detail?id=91158
			// Update: Google errantly closed 91158, I submitted it again:
			// https://code.google.com/p/chromium/issues/detail?id=389642
			if (view.chrome && type && type !== force_saveable_type) {
				slice = blob.slice || blob.webkitSlice;
				blob = slice.call(blob, 0, blob.size, force_saveable_type);
				blob_changed = true;
			}
			// Since I can't be sure that the guessed media type will trigger a download
			// in WebKit, I append .download to the filename.
			// https://bugs.webkit.org/show_bug.cgi?id=65440
			if (webkit_req_fs && name !== "download") {
				name += ".download";
			}
			if (type === force_saveable_type || webkit_req_fs) {
				target_view = view;
			}
			if (!req_fs) {
				fs_error();
				return;
			}
			fs_min_size += blob.size;
			req_fs(view.TEMPORARY, fs_min_size, abortable(function(fs) {
				fs.root.getDirectory("saved", create_if_not_found, abortable(function(dir) {
					var save = function() {
						dir.getFile(name, create_if_not_found, abortable(function(file) {
							file.createWriter(abortable(function(writer) {
								writer.onwriteend = function(event) {
									target_view.location.href = file.toURL();
									filesaver.readyState = filesaver.DONE;
									dispatch(filesaver, "writeend", event);
									revoke(file);
								};
								writer.onerror = function() {
									var error = writer.error;
									if (error.code !== error.ABORT_ERR) {
										fs_error();
									}
								};
								"writestart progress write abort".split(" ").forEach(function(event) {
									writer["on" + event] = filesaver["on" + event];
								});
								writer.write(blob);
								filesaver.abort = function() {
									writer.abort();
									filesaver.readyState = filesaver.DONE;
								};
								filesaver.readyState = filesaver.WRITING;
							}), fs_error);
						}), fs_error);
					};
					dir.getFile(name, {create: false}, abortable(function(file) {
						// delete file if it already exists
						file.remove();
						save();
					}), abortable(function(ex) {
						if (ex.code === ex.NOT_FOUND_ERR) {
							save();
						} else {
							fs_error();
						}
					}));
				}), fs_error);
			}), fs_error);
		}
		, FS_proto = FileSaver.prototype
		, saveAs = function(blob, name, no_auto_bom) {
			return new FileSaver(blob, name, no_auto_bom);
		}
	;
	// IE 10+ (native saveAs)
	if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
		return function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			return navigator.msSaveOrOpenBlob(blob, name || "download");
		};
	}

	FS_proto.abort = function() {
		var filesaver = this;
		filesaver.readyState = filesaver.DONE;
		dispatch(filesaver, "abort");
	};
	FS_proto.readyState = FS_proto.INIT = 0;
	FS_proto.WRITING = 1;
	FS_proto.DONE = 2;

	FS_proto.error =
	FS_proto.onwritestart =
	FS_proto.onprogress =
	FS_proto.onwrite =
	FS_proto.onabort =
	FS_proto.onerror =
	FS_proto.onwriteend =
		null;

	return saveAs;
}(
	   typeof self !== "undefined" && self
	|| typeof window !== "undefined" && window
	|| this.content
));


// Expose file saver on the DataTables API. Can't attach to `DataTables.Buttons`
// since this file can be loaded before Button's core!
DataTable.fileSave = _saveAs;


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local (private) functions
 */

/**
 * Get the file name for an exported file.
 *
 * @param {object}	config Button configuration
 * @param {boolean} incExtension Include the file name extension
 */
var _filename = function ( config, incExtension )
{
	// Backwards compatibility
	var filename = config.filename === '*' && config.title !== '*' && config.title !== undefined ?
		config.title :
		config.filename;

	if ( typeof filename === 'function' ) {
		filename = filename();
	}

	if ( filename.indexOf( '*' ) !== -1 ) {
		filename = $.trim( filename.replace( '*', $('title').text() ) );
	}

	// Strip characters which the OS will object to
	filename = filename.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "");

	return incExtension === undefined || incExtension === true ?
		filename+config.extension :
		filename;
};

/**
 * Get the sheet name for Excel exports.
 *
 * @param {object}	config Button configuration
 */
var _sheetname = function ( config )
{
	var sheetName = 'Sheet1';

	if ( config.sheetName ) {
		sheetName = config.sheetName.replace(/[\[\]\*\/\\\?\:]/g, '');
	}

return sheetName;
};

/**
 * Get the title for an exported file.
 *
 * @param {object} config	Button configuration
 */
var _title = function ( config )
{
	var title = config.title;

	if ( typeof title === 'function' ) {
		title = title();
	}

	return title.indexOf( '*' ) !== -1 ?
		title.replace( '*', $('title').text() || 'Exported data' ) :
		title;
};

/**
 * Get the newline character(s)
 *
 * @param {object}	config Button configuration
 * @return {string}				Newline character
 */
var _newLine = function ( config )
{
	return config.newline ?
		config.newline :
		navigator.userAgent.match(/Windows/) ?
			'\r\n' :
			'\n';
};

/**
 * Combine the data from the `buttons.exportData` method into a string that
 * will be used in the export file.
 *
 * @param	{DataTable.Api} dt		 DataTables API instance
 * @param	{object}				config Button configuration
 * @return {object}							 The data to export
 */
var _exportData = function ( dt, config )
{
	var newLine = _newLine( config );
	var data = dt.buttons.exportData( config.exportOptions );
	var boundary = config.fieldBoundary;
	var separator = config.fieldSeparator;
	var reBoundary = new RegExp( boundary, 'g' );
	var escapeChar = config.escapeChar !== undefined ?
		config.escapeChar :
		'\\';
	var join = function ( a ) {
		var s = '';

		// If there is a field boundary, then we might need to escape it in
		// the source data
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( i > 0 ) {
				s += separator;
			}

			s += boundary ?
				boundary + ('' + a[i]).replace( reBoundary, escapeChar+boundary ) + boundary :
				a[i];
		}

		return s;
	};

	var header = config.header ? join( data.header )+newLine : '';
	var footer = config.footer && data.footer ? newLine+join( data.footer ) : '';
	var body = [];

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		body.push( join( data.body[i] ) );
	}

	return {
		str: header + body.join( newLine ) + footer,
		rows: body.length
	};
};

/**
 * Safari's data: support for creating and downloading files is really poor, so
 * various options need to be disabled in it. See
 * https://bugs.webkit.org/show_bug.cgi?id=102914
 *
 * @return {Boolean} `true` if Safari
 */
var _isSafari = function ()
{
	return navigator.userAgent.indexOf('Safari') !== -1 &&
		navigator.userAgent.indexOf('Chrome') === -1 &&
		navigator.userAgent.indexOf('Opera') === -1;
};

/**
 * Convert from numeric position to letter for column names in Excel
 * @param  {int} n Column number
 * @return {string} Column letter(s) name
 */
function createCellPos( n ){
	var ordA = 'A'.charCodeAt(0);
	var ordZ = 'Z'.charCodeAt(0);
	var len = ordZ - ordA + 1;
	var s = "";

	while( n >= 0 ) {
		s = String.fromCharCode(n % len + ordA) + s;
		n = Math.floor(n / len) - 1;
	}

	return s;
}

try {
	var _serialiser = new XMLSerializer();
	var _ieExcel;
}
catch (t) {}

/**
 * Recursively add XML files from an object's structure to a ZIP file. This
 * allows the XSLX file to be easily defined with an object's structure matching
 * the files structure.
 *
 * @param {JSZip} zip ZIP package
 * @param {object} obj Object to add (recursive)
 */
function _addToZip( zip, obj ) {
	if ( _ieExcel === undefined ) {
		// Detect if we are dealing with IE's _awful_ serialiser by seeing if it
		// drop attributes
		_ieExcel = _serialiser
			.serializeToString(
				$.parseXML( excelStrings['xl/worksheets/sheet1.xml'] )
			)
			.indexOf( 'xmlns:r' ) === -1;
	}

	$.each( obj, function ( name, val ) {
		if ( $.isPlainObject( val ) ) {
			var newDir = zip.folder( name );
			_addToZip( newDir, val );
		}
		else {
			if ( _ieExcel ) {
				// IE's XML serialiser will drop some name space attributes from
				// from the root node, so we need to save them. Do this by
				// replacing the namespace nodes with a regular attribute that
				// we convert back when serialised. Edge does not have this
				// issue
				var worksheet = val.childNodes[0];
				var i, ien;
				var attrs = [];

				for ( i=worksheet.attributes.length-1 ; i>=0 ; i-- ) {
					var attrName = worksheet.attributes[i].nodeName;
					var attrValue = worksheet.attributes[i].nodeValue;

					if ( attrName.indexOf( ':' ) !== -1 ) {
						attrs.push( { name: attrName, value: attrValue } );

						worksheet.removeAttribute( attrName );
					}
				}

				for ( i=0, ien=attrs.length ; i<ien ; i++ ) {
					var attr = val.createAttribute( attrs[i].name.replace( ':', '_dt_b_namespace_token_' ) );
					attr.value = attrs[i].value;
					worksheet.setAttributeNode( attr );
				}
			}

			var str = _serialiser.serializeToString(val);

			// Fix IE's XML
			if ( _ieExcel ) {
				// IE doesn't include the XML declaration
				if ( str.indexOf( '<?xml' ) === -1 ) {
					str = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+str;
				}

				// Return namespace attributes to being as such
				str = str.replace( /_dt_b_namespace_token_/g, ':' );
			}

			// Both IE and Edge will put empty name space attributes onto the
			// rows and columns making them useless
			str = str
				.replace( /<row xmlns="" /g, '<row ' )
				.replace( /<cols xmlns="">/g, '<cols>' );

			zip.file( name, str );
		}
	} );
}

/**
 * Create an XML node and add any children, attributes, etc without needing to
 * be verbose in the DOM.
 *
 * @param  {object} doc      XML document
 * @param  {string} nodeName Node name
 * @param  {object} opts     Options - can be `attr` (attributes), `children`
 *   (child nodes) and `text` (text content)
 * @return {node}            Created node
 */
function _createNode( doc, nodeName, opts ) {
	var tempNode = doc.createElement( nodeName );

	if ( opts ) {
		if ( opts.attr ) {
			$(tempNode).attr( opts.attr );
		}

		if( opts.children ) {
			$.each( opts.children, function ( key, value ) {
				tempNode.appendChild( value );
			});
		}

		if( opts.text ) {
			tempNode.appendChild( doc.createTextNode( opts.text ) );
		}
	}

	return tempNode;
}

/**
 * Get the width for an Excel column based on the contents of that column
 * @param  {object} data Data for export
 * @param  {int}    col  Column index
 * @return {int}         Column width
 */
function _excelColWidth( data, col ) {
	var max = data.header[col].length;
	var len;

	if ( data.footer && data.footer[col].length > max ) {
		max = data.footer[col].length;
	}

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		len = data.body[i][col].toString().length;

		if ( len > max ) {
			max = len;
		}

		// Max width rather than having potentially massive column widths
		if ( max > 40 ) {
			break;
		}
	}

	// And a min width
	return max > 5 ? max : 5;
}

// Excel - Pre-defined strings to build a basic XLSX file
var excelStrings = {
	"_rels/.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/>'+
		'</Relationships>',

	"xl/_rels/workbook.xml.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/>'+
			'<Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/>'+
		'</Relationships>',

	"[Content_Types].xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">'+
			'<Default Extension="xml" ContentType="application/xml" />'+
			'<Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" />'+
			'<Default Extension="jpeg" ContentType="image/jpeg" />'+
			'<Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" />'+
			'<Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" />'+
			'<Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" />'+
		'</Types>',

	"xl/workbook.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships">'+
			'<fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/>'+
			'<workbookPr showInkAnnotation="0" autoCompressPictures="0"/>'+
			'<bookViews>'+
				'<workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/>'+
			'</bookViews>'+
			'<sheets>'+
				'<sheet name="" sheetId="1" r:id="rId1"/>'+
			'</sheets>'+
		'</workbook>',

	"xl/worksheets/sheet1.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<sheetData/>'+
		'</worksheet>',

	"xl/styles.xml":
		'<?xml version="1.0" encoding="UTF-8"?>'+
		'<styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<fonts count="5" x14ac:knownFonts="1">'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<color rgb="FFFFFFFF" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<b />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<i />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<u />'+
				'</font>'+
			'</fonts>'+
			'<fills count="6">'+
				'<fill>'+
					'<patternFill patternType="none" />'+
				'</fill>'+
				'<fill/>'+ // Excel appears to use this as a dotted background regardless of values
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD9D9D9" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD99795" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6efce" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6cfef" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
			'</fills>'+
			'<borders count="2">'+
				'<border>'+
					'<left />'+
					'<right />'+
					'<top />'+
					'<bottom />'+
					'<diagonal />'+
				'</border>'+
				'<border diagonalUp="false" diagonalDown="false">'+
					'<left style="thin">'+
						'<color auto="1" />'+
					'</left>'+
					'<right style="thin">'+
						'<color auto="1" />'+
					'</right>'+
					'<top style="thin">'+
						'<color auto="1" />'+
					'</top>'+
					'<bottom style="thin">'+
						'<color auto="1" />'+
					'</bottom>'+
					'<diagonal />'+
				'</border>'+
			'</borders>'+
			'<cellStyleXfs count="1">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" />'+
			'</cellStyleXfs>'+
			'<cellXfs count="56">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="left"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="center"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="right"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="fill"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment textRotation="90"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment wrapText="1"/>'+
				'</xf>'+
			'</cellXfs>'+
			'<cellStyles count="1">'+
				'<cellStyle name="Normal" xfId="0" builtinId="0" />'+
			'</cellStyles>'+
			'<dxfs count="0" />'+
			'<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" />'+
		'</styleSheet>'
};
// Note we could use 3 `for` loops for the styles, but when gzipped there is
// virtually no difference in size, since the above can be easily compressed



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Buttons
 */

//
// Copy to clipboard
//
DataTable.ext.buttons.copyHtml5 = {
	className: 'buttons-copy buttons-html5',

	text: function ( dt ) {
		return dt.i18n( 'buttons.copy', 'Copy' );
	},

	action: function ( e, dt, button, config ) {
		var exportData = _exportData( dt, config );
		var output = exportData.str;
		var hiddenDiv = $('<div/>')
			.css( {
				height: 1,
				width: 1,
				overflow: 'hidden',
				position: 'fixed',
				top: 0,
				left: 0
			} );

		if ( config.customize ) {
			output = config.customize( output, config );
		}

		var textarea = $('<textarea readonly/>')
			.val( output )
			.appendTo( hiddenDiv );

		// For browsers that support the copy execCommand, try to use it
		if ( document.queryCommandSupported('copy') ) {
			hiddenDiv.appendTo( dt.table().container() );
			textarea[0].focus();
			textarea[0].select();

			try {
				var successful = document.execCommand( 'copy' );
				hiddenDiv.remove();

				if (successful) {
					dt.buttons.info(
						dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ),
						dt.i18n( 'buttons.copySuccess', {
							1: 'Copied one row to clipboard',
							_: 'Copied %d rows to clipboard'
						}, exportData.rows ),
						2000
					);
					return;
				}
			}
			catch (t) {}
		}

		// Otherwise we show the text box and instruct the user to use it
		var message = $('<span>'+dt.i18n( 'buttons.copyKeys',
				'Press <i>ctrl</i> or <i>\u2318</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>'+
				'To cancel, click this message or press escape.' )+'</span>'
			)
			.append( hiddenDiv );

		dt.buttons.info( dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ), message, 0 );

		// Select the text so when the user activates their system clipboard
		// it will copy that text
		textarea[0].focus();
		textarea[0].select();

		// Event to hide the message when the user is done
		var container = $(message).closest('.dt-button-info');
		var close = function () {
			container.off( 'click.buttons-copy' );
			$(document).off( '.buttons-copy' );
			dt.buttons.info( false );
		};

		container.on( 'click.buttons-copy', close );
		$(document)
			.on( 'keydown.buttons-copy', function (e) {
				if ( e.keyCode === 27 ) { // esc
					close();
				}
			} )
			.on( 'copy.buttons-copy cut.buttons-copy', function () {
				close();
			} );
	},

	exportOptions: {},

	fieldSeparator: '\t',

	fieldBoundary: '',

	header: true,

	footer: false
};

//
// CSV export
//
DataTable.ext.buttons.csvHtml5 = {
	bom: false,

	className: 'buttons-csv buttons-html5',

	available: function () {
		return window.FileReader !== undefined && window.Blob;
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.csv', 'CSV' );
	},

	action: function ( e, dt, button, config ) {
		// Set the text
		var output = _exportData( dt, config ).str;
		var charset = config.charset;

		if ( config.customize ) {
			output = config.customize( output, config );
		}

		if ( charset !== false ) {
			if ( ! charset ) {
				charset = document.characterSet || document.charset;
			}

			if ( charset ) {
				charset = ';charset='+charset;
			}
		}
		else {
			charset = '';
		}

		if ( config.bom ) {
			output = '\ufeff' + output;
		}

		_saveAs(
			new Blob( [output], {type: 'text/csv'+charset} ),
			_filename( config ),
			true
		);
	},

	filename: '*',

	extension: '.csv',

	exportOptions: {},

	fieldSeparator: ',',

	fieldBoundary: '"',

	escapeChar: '"',

	charset: null,

	header: true,

	footer: false
};

//
// Excel (xlsx) export
//
DataTable.ext.buttons.excelHtml5 = {
	className: 'buttons-excel buttons-html5',

	available: function () {
		return window.FileReader !== undefined && _jsZip() !== undefined && ! _isSafari() && _serialiser;
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.excel', 'Excel' );
	},

	action: function ( e, dt, button, config ) {
		var rowPos = 0;
		var getXml = function ( type ) {
			var str = excelStrings[ type ];

			//str = str.replace( /xmlns:/g, 'xmlns_' ).replace( /mc:/g, 'mc_' );

			return $.parseXML( str );
		};
		var rels = getXml('xl/worksheets/sheet1.xml');
		var relsGet = rels.getElementsByTagName( "sheetData" )[0];

		var xlsx = {
			_rels: {
				".rels": getXml('_rels/.rels')
			},
			xl: {
				_rels: {
					"workbook.xml.rels": getXml('xl/_rels/workbook.xml.rels')
				},
				"workbook.xml": getXml('xl/workbook.xml'),
				"styles.xml": getXml('xl/styles.xml'),
				"worksheets": {
					"sheet1.xml": rels
				}

			},
			"[Content_Types].xml": getXml('[Content_Types].xml')
		};

		var data = dt.buttons.exportData( config.exportOptions );
		var currentRow, rowNode;
		var addRow = function ( row ) {
			currentRow = rowPos+1;
			rowNode = _createNode( rels, "row", { attr: {r:currentRow} } );

			for ( var i=0, ien=row.length ; i<ien ; i++ ) {
				// Concat both the Cell Columns as a letter and the Row of the cell.
				var cellId = createCellPos(i) + '' + currentRow;
				var cell;

				if ( row[i] === null || row[i] === undefined ) {
					row[i] = '';
				}

				// Detect numbers - don't match numbers with leading zeros or a negative
				// anywhere but the start
				if ( typeof row[i] === 'number' || (
						row[i].match &&
						$.trim(row[i]).match(/^-?\d+(\.\d+)?$/) &&
						! $.trim(row[i]).match(/^0\d+/) )
				) {
					cell = _createNode( rels, 'c', {
						attr: {
							t: 'n',
							r: cellId
						},
						children: [
							_createNode( rels, 'v', { text: row[i] } )
						]
					} );
				}
				else {
					// Replace non standard characters for text output
					var text = ! row[i].replace ?
						row[i] :
						row[i].replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g, '');

					cell = _createNode( rels, 'c', {
						attr: {
							t: 'inlineStr',
							r: cellId
						},
						children:{
							row: _createNode( rels, 'is', {
								children: {
									row: _createNode( rels, 't', {
										text: text
									} )
								}
							} )
						}
					} );
				}

				rowNode.appendChild( cell );
			}
			relsGet.appendChild(rowNode);
			rowPos++;
		};

		$( 'sheets sheet', xlsx.xl['workbook.xml'] ).attr( 'name', _sheetname( config ) );

		if ( config.customizeData ) {
			config.customizeData( data );
		}

		if ( config.header ) {
			addRow( data.header, rowPos );
			$('row c', rels).attr( 's', '2' ); // bold
		}

		for ( var n=0, ie=data.body.length ; n<ie ; n++ ) {
			addRow( data.body[n], rowPos );
		}

		if ( config.footer && data.footer ) {
			addRow( data.footer, rowPos);
			$('row:last c', rels).attr( 's', '2' ); // bold
		}

		// Set column widths
		var cols = _createNode( rels, 'cols' );
		$('worksheet', rels).prepend( cols );

		for ( var i=0, ien=data.header.length ; i<ien ; i++ ) {
			cols.appendChild( _createNode( rels, 'col', {
				attr: {
					min: i+1,
					max: i+1,
					width: _excelColWidth( data, i ),
					customWidth: 1
				}
			} ) );
		}

		// Let the developer customise the document if they want to
		if ( config.customize ) {
			config.customize( xlsx );
		}

		var jszip = _jsZip();
		var zip = new jszip();
		var zipConfig = {
			type: 'blob',
			mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
		};

		_addToZip( zip, xlsx );

		if ( zip.generateAsync ) {
			// JSZip 3+
			zip
				.generateAsync( zipConfig )
				.then( function ( blob ) {
					_saveAs( blob, _filename( config ) );
				} );
		}
		else {
			// JSZip 2.5
			_saveAs(
				zip.generate( zipConfig ),
				_filename( config )
			);
		}
	},

	filename: '*',

	extension: '.xlsx',

	exportOptions: {},

	header: true,

	footer: false
};

//
// PDF export - using pdfMake - http://pdfmake.org
//
DataTable.ext.buttons.pdfHtml5 = {
	className: 'buttons-pdf buttons-html5',

	available: function () {
		return window.FileReader !== undefined && _pdfMake();
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.pdf', 'PDF' );
	},

	action: function ( e, dt, button, config ) {
		var newLine = _newLine( config );
		var data = dt.buttons.exportData( config.exportOptions );
		var rows = [];

		if ( config.header ) {
			rows.push( $.map( data.header, function ( d ) {
				return {
					text: typeof d === 'string' ? d : d+'',
					style: 'tableHeader'
				};
			} ) );
		}

		for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
			rows.push( $.map( data.body[i], function ( d ) {
				return {
					text: typeof d === 'string' ? d : d+'',
					style: i % 2 ? 'tableBodyEven' : 'tableBodyOdd'
				};
			} ) );
		}

		if ( config.footer && data.footer) {
			rows.push( $.map( data.footer, function ( d ) {
				return {
					text: typeof d === 'string' ? d : d+'',
					style: 'tableFooter'
				};
			} ) );
		}

		var doc = {
			pageSize: config.pageSize,
			pageOrientation: config.orientation,
			content: [
				{
					table: {
						headerRows: 1,
						body: rows
					},
					layout: 'noBorders'
				}
			],
			styles: {
				tableHeader: {
					bold: true,
					fontSize: 11,
					color: 'white',
					fillColor: '#2d4154',
					alignment: 'center'
				},
				tableBodyEven: {},
				tableBodyOdd: {
					fillColor: '#f3f3f3'
				},
				tableFooter: {
					bold: true,
					fontSize: 11,
					color: 'white',
					fillColor: '#2d4154'
				},
				title: {
					alignment: 'center',
					fontSize: 15
				},
				message: {}
			},
			defaultStyle: {
				fontSize: 10
			}
		};

		if ( config.message ) {
      doc.content.unshift( {
        text: typeof config.message == 'function' ? config.message(dt, button, config) : config.message,
        style: 'message',
        margin: [ 0, 0, 0, 12 ]
      } );
		}

		if ( config.title ) {
			doc.content.unshift( {
				text: _title( config, false ),
				style: 'title',
				margin: [ 0, 0, 0, 12 ]
			} );
		}

		if ( config.customize ) {
			config.customize( doc, config );
		}

		var pdf = _pdfMake().createPdf( doc );

		if ( config.download === 'open' && ! _isSafari() ) {
			pdf.open();
		}
		else {
			pdf.getBuffer( function (buffer) {
				var blob = new Blob( [buffer], {type:'application/pdf'} );

				_saveAs( blob, _filename( config ) );
			} );
		}
	},

	title: '*',

	filename: '*',

	extension: '.pdf',

	exportOptions: {},

	orientation: 'portrait',

	pageSize: 'A4',

	header: true,

	footer: false,

	message: null,

	customize: null,

	download: 'download'
};


return DataTable.Buttons;
}));
(function(g){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(i){return g(i,window,document)}):"object"===typeof exports?module.exports=function(i,j,t,u){i||(i=window);if(!j||!j.fn.dataTable)j=require("datatables.net")(i,j).$;j.fn.dataTable.Buttons||require("datatables.net-buttons")(i,j);return g(j,i,i.document,t,u)}:g(jQuery,window,document)})(function(g,i,j,t,u,o){function E(a,b){v===o&&(v=-1===y.serializeToString(g.parseXML(F["xl/worksheets/sheet1.xml"])).indexOf("xmlns:r"));
g.each(b,function(b,c){if(g.isPlainObject(c)){var f=a.folder(b);E(f,c)}else{if(v){var f=c.childNodes[0],e,h,l=[];for(e=f.attributes.length-1;0<=e;e--){h=f.attributes[e].nodeName;var n=f.attributes[e].nodeValue;-1!==h.indexOf(":")&&(l.push({name:h,value:n}),f.removeAttribute(h))}e=0;for(h=l.length;e<h;e++)n=c.createAttribute(l[e].name.replace(":","_dt_b_namespace_token_")),n.value=l[e].value,f.setAttributeNode(n)}f=y.serializeToString(c);v&&(-1===f.indexOf("<?xml")&&(f='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
f),f=f.replace(/_dt_b_namespace_token_/g,":"));f=f.replace(/<row xmlns="" /g,"<row ").replace(/<cols xmlns="">/g,"<cols>");a.file(b,f)}})}function p(a,b,d){var c=a.createElement(b);d&&(d.attr&&g(c).attr(d.attr),d.children&&g.each(d.children,function(a,b){c.appendChild(b)}),d.text&&c.appendChild(a.createTextNode(d.text)));return c}function N(a,b){var d=a.header[b].length,c;a.footer&&a.footer[b].length>d&&(d=a.footer[b].length);for(var f=0,e=a.body.length;f<e&&!(c=a.body[f][b].toString().length,c>d&&
(d=c),40<d);f++);return 5<d?d:5}var r=g.fn.dataTable,q;var h="undefined"!==typeof self&&self||"undefined"!==typeof i&&i||this.content;if("undefined"!==typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))q=void 0;else{var w=h.document.createElementNS("http://www.w3.org/1999/xhtml","a"),O="download"in w,G=/Version\/[\d\.]+.*Safari/.test(navigator.userAgent),z=h.webkitRequestFileSystem,H=h.requestFileSystem||z||h.mozRequestFileSystem,P=function(a){(h.setImmediate||h.setTimeout)(function(){throw a;
},0)},A=0,B=function(a){setTimeout(function(){"string"===typeof a?(h.URL||h.webkitURL||h).revokeObjectURL(a):a.remove()},4E4)},C=function(a,b,d){for(var b=[].concat(b),c=b.length;c--;){var f=a["on"+b[c]];if("function"===typeof f)try{f.call(a,d||a)}catch(e){P(e)}}},I=function(a){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?new Blob(["﻿",a],{type:a.type}):a},J=function(a,b,d){d||(a=I(a));var c=this,d=a.type,f=!1,e,g,l=function(){C(c,["writestart","progress",
"write","writeend"])},n=function(){if(g&&G&&"undefined"!==typeof FileReader){var b=new FileReader;b.onloadend=function(){var a=b.result;g.location.href="data:attachment/file"+a.slice(a.search(/[,;]/));c.readyState=c.DONE;l()};b.readAsDataURL(a);c.readyState=c.INIT}else{if(f||!e)e=(h.URL||h.webkitURL||h).createObjectURL(a);g?g.location.href=e:h.open(e,"_blank")===o&&G&&(h.location.href=e);c.readyState=c.DONE;l();B(e)}},m=function(a){return function(){if(c.readyState!==c.DONE)return a.apply(this,arguments)}},
i={create:!0,exclusive:!1},s;c.readyState=c.INIT;b||(b="download");if(O)e=(h.URL||h.webkitURL||h).createObjectURL(a),setTimeout(function(){w.href=e;w.download=b;var a=new MouseEvent("click");w.dispatchEvent(a);l();B(e);c.readyState=c.DONE});else{h.chrome&&(d&&"application/octet-stream"!==d)&&(s=a.slice||a.webkitSlice,a=s.call(a,0,a.size,"application/octet-stream"),f=!0);z&&"download"!==b&&(b+=".download");if("application/octet-stream"===d||z)g=h;H?(A+=a.size,H(h.TEMPORARY,A,m(function(d){d.root.getDirectory("saved",
i,m(function(d){var e=function(){d.getFile(b,i,m(function(b){b.createWriter(m(function(d){d.onwriteend=function(a){g.location.href=b.toURL();c.readyState=c.DONE;C(c,"writeend",a);B(b)};d.onerror=function(){var a=d.error;a.code!==a.ABORT_ERR&&n()};["writestart","progress","write","abort"].forEach(function(a){d["on"+a]=c["on"+a]});d.write(a);c.abort=function(){d.abort();c.readyState=c.DONE};c.readyState=c.WRITING}),n)}),n)};d.getFile(b,{create:false},m(function(a){a.remove();e()}),m(function(a){a.code===
a.NOT_FOUND_ERR?e():n()}))}),n)}),n)):n()}},k=J.prototype;"undefined"!==typeof navigator&&navigator.msSaveOrOpenBlob?q=function(a,b,d){d||(a=I(a));return navigator.msSaveOrOpenBlob(a,b||"download")}:(k.abort=function(){this.readyState=this.DONE;C(this,"abort")},k.readyState=k.INIT=0,k.WRITING=1,k.DONE=2,k.error=k.onwritestart=k.onprogress=k.onwrite=k.onabort=k.onerror=k.onwriteend=null,q=function(a,b,d){return new J(a,b,d)})}r.fileSave=q;var x=function(a,b){var d="*"===a.filename&&"*"!==a.title&&
a.title!==o?a.title:a.filename;"function"===typeof d&&(d=d());-1!==d.indexOf("*")&&(d=g.trim(d.replace("*",g("title").text())));d=d.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g,"");return b===o||!0===b?d+a.extension:d},Q=function(a){var b="Sheet1";a.sheetName&&(b=a.sheetName.replace(/[\[\]\*\/\\\?\:]/g,""));return b},R=function(a){a=a.title;"function"===typeof a&&(a=a());return-1!==a.indexOf("*")?a.replace("*",g("title").text()||"Exported data"):a},K=function(a){return a.newline?a.newline:navigator.userAgent.match(/Windows/)?
"\r\n":"\n"},L=function(a,b){for(var d=K(b),c=a.buttons.exportData(b.exportOptions),f=b.fieldBoundary,e=b.fieldSeparator,g=RegExp(f,"g"),l=b.escapeChar!==o?b.escapeChar:"\\",h=function(a){for(var b="",c=0,d=a.length;c<d;c++)0<c&&(b+=e),b+=f?f+(""+a[c]).replace(g,l+f)+f:a[c];return b},i=b.header?h(c.header)+d:"",j=b.footer&&c.footer?d+h(c.footer):"",s=[],D=0,k=c.body.length;D<k;D++)s.push(h(c.body[D]));return{str:i+s.join(d)+j,rows:s.length}},M=function(){return-1!==navigator.userAgent.indexOf("Safari")&&
-1===navigator.userAgent.indexOf("Chrome")&&-1===navigator.userAgent.indexOf("Opera")};try{var y=new XMLSerializer,v}catch(S){}var F={"_rels/.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',"xl/_rels/workbook.xml.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
"[Content_Types].xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
"xl/workbook.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="" sheetId="1" r:id="rId1"/></sheets></workbook>',
"xl/worksheets/sheet1.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/></worksheet>',"xl/styles.xml":'<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill/><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="56"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'};
r.ext.buttons.copyHtml5={className:"buttons-copy buttons-html5",text:function(a){return a.i18n("buttons.copy","Copy")},action:function(a,b,d,c){var a=L(b,c),f=a.str,d=g("<div/>").css({height:1,width:1,overflow:"hidden",position:"fixed",top:0,left:0});c.customize&&(f=c.customize(f,c));c=g("<textarea readonly/>").val(f).appendTo(d);if(j.queryCommandSupported("copy")){d.appendTo(b.table().container());c[0].focus();c[0].select();try{var e=j.execCommand("copy");d.remove();if(e){b.buttons.info(b.i18n("buttons.copyTitle",
"Copy to clipboard"),b.i18n("buttons.copySuccess",{1:"Copied one row to clipboard",_:"Copied %d rows to clipboard"},a.rows),2E3);return}}catch(h){}}e=g("<span>"+b.i18n("buttons.copyKeys","Press <i>ctrl</i> or <i>⌘</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape.")+"</span>").append(d);b.buttons.info(b.i18n("buttons.copyTitle","Copy to clipboard"),e,0);c[0].focus();c[0].select();var l=g(e).closest(".dt-button-info"),i=function(){l.off("click.buttons-copy");
g(j).off(".buttons-copy");b.buttons.info(!1)};l.on("click.buttons-copy",i);g(j).on("keydown.buttons-copy",function(a){27===a.keyCode&&i()}).on("copy.buttons-copy cut.buttons-copy",function(){i()})},exportOptions:{},fieldSeparator:"\t",fieldBoundary:"",header:!0,footer:!1};r.ext.buttons.csvHtml5={bom:!1,className:"buttons-csv buttons-html5",available:function(){return i.FileReader!==o&&i.Blob},text:function(a){return a.i18n("buttons.csv","CSV")},action:function(a,b,d,c){a=L(b,c).str;b=c.charset;c.customize&&
(a=c.customize(a,c));!1!==b?(b||(b=j.characterSet||j.charset),b&&(b=";charset="+b)):b="";c.bom&&(a="﻿"+a);q(new Blob([a],{type:"text/csv"+b}),x(c),!0)},filename:"*",extension:".csv",exportOptions:{},fieldSeparator:",",fieldBoundary:'"',escapeChar:'"',charset:null,header:!0,footer:!1};r.ext.buttons.excelHtml5={className:"buttons-excel buttons-html5",available:function(){return i.FileReader!==o&&(t||i.JSZip)!==o&&!M()&&y},text:function(a){return a.i18n("buttons.excel","Excel")},action:function(a,b,
d,c){var f=0,a=function(a){return g.parseXML(F[a])},e=a("xl/worksheets/sheet1.xml"),h=e.getElementsByTagName("sheetData")[0],a={_rels:{".rels":a("_rels/.rels")},xl:{_rels:{"workbook.xml.rels":a("xl/_rels/workbook.xml.rels")},"workbook.xml":a("xl/workbook.xml"),"styles.xml":a("xl/styles.xml"),worksheets:{"sheet1.xml":e}},"[Content_Types].xml":a("[Content_Types].xml")},b=b.buttons.exportData(c.exportOptions),l,j,d=function(a){l=f+1;j=p(e,"row",{attr:{r:l}});for(var b=0,c=a.length;b<c;b++){for(var d=
b,i="";0<=d;)i=String.fromCharCode(d%26+65)+i,d=Math.floor(d/26)-1;d=i+""+l;if(null===a[b]||a[b]===o)a[b]="";"number"===typeof a[b]||a[b].match&&g.trim(a[b]).match(/^-?\d+(\.\d+)?$/)&&!g.trim(a[b]).match(/^0\d+/)?d=p(e,"c",{attr:{t:"n",r:d},children:[p(e,"v",{text:a[b]})]}):(i=!a[b].replace?a[b]:a[b].replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,""),d=p(e,"c",{attr:{t:"inlineStr",r:d},children:{row:p(e,"is",{children:{row:p(e,"t",{text:i})}})}}));j.appendChild(d)}h.appendChild(j);f++};g("sheets sheet",
a.xl["workbook.xml"]).attr("name",Q(c));c.customizeData&&c.customizeData(b);c.header&&(d(b.header,f),g("row c",e).attr("s","2"));for(var m=0,k=b.body.length;m<k;m++)d(b.body[m],f);c.footer&&b.footer&&(d(b.footer,f),g("row:last c",e).attr("s","2"));d=p(e,"cols");g("worksheet",e).prepend(d);m=0;for(k=b.header.length;m<k;m++)d.appendChild(p(e,"col",{attr:{min:m+1,max:m+1,width:N(b,m),customWidth:1}}));c.customize&&c.customize(a);b=new (t||i.JSZip);d={type:"blob",mimeType:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"};
E(b,a);b.generateAsync?b.generateAsync(d).then(function(a){q(a,x(c))}):q(b.generate(d),x(c))},filename:"*",extension:".xlsx",exportOptions:{},header:!0,footer:!1};r.ext.buttons.pdfHtml5={className:"buttons-pdf buttons-html5",available:function(){return i.FileReader!==o&&(u||i.pdfMake)},text:function(a){return a.i18n("buttons.pdf","PDF")},action:function(a,b,d,c){K(c);var a=b.buttons.exportData(c.exportOptions),f=[];c.header&&f.push(g.map(a.header,function(a){return{text:"string"===typeof a?a:a+"",
style:"tableHeader"}}));for(var e=0,h=a.body.length;e<h;e++)f.push(g.map(a.body[e],function(a){return{text:"string"===typeof a?a:a+"",style:e%2?"tableBodyEven":"tableBodyOdd"}}));c.footer&&a.footer&&f.push(g.map(a.footer,function(a){return{text:"string"===typeof a?a:a+"",style:"tableFooter"}}));a={pageSize:c.pageSize,pageOrientation:c.orientation,content:[{table:{headerRows:1,body:f},layout:"noBorders"}],styles:{tableHeader:{bold:!0,fontSize:11,color:"white",fillColor:"#2d4154",alignment:"center"},
tableBodyEven:{},tableBodyOdd:{fillColor:"#f3f3f3"},tableFooter:{bold:!0,fontSize:11,color:"white",fillColor:"#2d4154"},title:{alignment:"center",fontSize:15},message:{}},defaultStyle:{fontSize:10}};c.message&&a.content.unshift({text:"function"==typeof c.message?c.message(b,d,c):c.message,style:"message",margin:[0,0,0,12]});c.title&&a.content.unshift({text:R(c,!1),style:"title",margin:[0,0,0,12]});c.customize&&c.customize(a,c);b=(u||i.pdfMake).createPdf(a);"open"===c.download&&!M()?b.open():b.getBuffer(function(a){a=
new Blob([a],{type:"application/pdf"});q(a,x(c))})},title:"*",filename:"*",extension:".pdf",exportOptions:{},orientation:"portrait",pageSize:"A4",header:!0,footer:!1,message:null,customize:null,download:"download"};return r.Buttons});
/*! jQuery UI integration for DataTables' Buttons
 * ©2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-jqui', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-jqui')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


$.extend( true, DataTable.Buttons.defaults, {
	dom: {
		container: {
			className: 'dt-buttons ui-buttonset'
		},
		button: {
			className: 'dt-button ui-button ui-state-default ui-button-text-only',
			disabled: 'ui-state-disabled',
			active: 'ui-state-active'
		},
		buttonLiner: {
			tag: 'span',
			className: 'ui-button-text'
		}
	}
} );

DataTable.ext.buttons.collection.text = function ( dt ) {
	return dt.i18n('buttons.collection', 'Collection <span class="ui-button-icon-primary ui-icon ui-icon-triangle-1-s"/>');
};


return DataTable.Buttons;
}));
/*!
 jQuery UI integration for DataTables' Buttons
 ©2016 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-jqui","datatables.net-buttons"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net-jqui")(a,b).$;b.fn.dataTable.Buttons||require("datatables.net-buttons")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c){var a=c.fn.dataTable;c.extend(!0,a.Buttons.defaults,{dom:{container:{className:"dt-buttons ui-buttonset"},
button:{className:"dt-button ui-button ui-state-default ui-button-text-only",disabled:"ui-state-disabled",active:"ui-state-active"},buttonLiner:{tag:"span",className:"ui-button-text"}}});a.ext.buttons.collection.text=function(a){return a.i18n("buttons.collection",'Collection <span class="ui-button-icon-primary ui-icon ui-icon-triangle-1-s"/>')};return a.Buttons});
/*!
 * Print button for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var _link = document.createElement( 'a' );

/**
 * Convert a `link` tag's URL from a relative to an absolute address so it will
 * work correctly in the popup window which has no base URL.
 *
 * @param  {node}     el Element to convert
 */
var _relToAbs = function( el ) {
	var url;
	var clone = $(el).clone()[0];
	var linkHost;

	if ( clone.nodeName.toLowerCase() === 'link' ) {
		_link.href = clone.href;
		linkHost = _link.host;

		// IE doesn't have a trailing slash on the host
		// Chrome has it on the pathname
		if ( linkHost.indexOf('/') === -1 && _link.pathname.indexOf('/') !== 0) {
			linkHost += '/';
		}

		clone.href = _link.protocol+"//"+linkHost+_link.pathname+_link.search;
	}

	return clone.outerHTML;
};


DataTable.ext.buttons.print = {
	className: 'buttons-print',

	text: function ( dt ) {
		return dt.i18n( 'buttons.print', 'Print' );
	},

	action: function ( e, dt, button, config ) {
		var data = dt.buttons.exportData( config.exportOptions );
		var addRow = function ( d, tag ) {
			var str = '<tr>';

			for ( var i=0, ien=d.length ; i<ien ; i++ ) {
				str += '<'+tag+'>'+d[i]+'</'+tag+'>';
			}

			return str + '</tr>';
		};

		// Construct a table for printing
		var html = '<table class="'+dt.table().node().className+'">';

		if ( config.header ) {
			html += '<thead>'+ addRow( data.header, 'th' ) +'</thead>';
		}

		html += '<tbody>';
		for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
			html += addRow( data.body[i], 'td' );
		}
		html += '</tbody>';

		if ( config.footer && data.footer ) {
			html += '<tfoot>'+ addRow( data.footer, 'th' ) +'</tfoot>';
		}

		// Open a new window for the printable table
		var win = window.open( '', '' );
		var title = config.title;

		if ( typeof title === 'function' ) {
			title = title();
		}

		if ( title.indexOf( '*' ) !== -1 ) {
			title= title.replace( '*', $('title').text() );
		}

		win.document.close();

		// Inject the title and also a copy of the style and link tags from this
		// document so the table can retain its base styling. Note that we have
		// to use string manipulation as IE won't allow elements to be created
		// in the host document and then appended to the new window.
		var head = '<title>'+title+'</title>';
		$('style, link').each( function () {
			head += _relToAbs( this );
		} );

		try {
			win.document.head.innerHTML = head; // Work around for Edge
		}
		catch (e) {
			$(win.document.head).html( head ); // Old IE
		}

		// Inject the table and other surrounding information
		win.document.body.innerHTML =
			'<h1>'+title+'</h1>'+
			'<div>'+
				(typeof config.message === 'function' ?
					config.message( dt, button, config ) :
					config.message
				)+
			'</div>'+
			html;

		if ( config.customize ) {
			config.customize( win );
		}

		setTimeout( function () {
			if ( config.autoPrint ) {
				win.print(); // blocking - so close will not
				win.close(); // execute until this is done
			}
		}, 250 );
	},

	title: '*',

	message: '',

	exportOptions: {},

	header: true,

	footer: false,

	autoPrint: true,

	customize: null
};


return DataTable.Buttons;
}));
(function(f){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(e){return f(e,window,document)}):"object"===typeof exports?module.exports=function(e,c){e||(e=window);if(!c||!c.fn.dataTable)c=require("datatables.net")(e,c).$;c.fn.dataTable.Buttons||require("datatables.net-buttons")(e,c);return f(c,e,e.document)}:f(jQuery,window,document)})(function(f,e,c){var i=f.fn.dataTable,h=c.createElement("a");i.ext.buttons.print={className:"buttons-print",
text:function(b){return b.i18n("buttons.print","Print")},action:function(b,c,i,d){var a=c.buttons.exportData(d.exportOptions),k=function(b,a){for(var c="<tr>",d=0,e=b.length;d<e;d++)c+="<"+a+">"+b[d]+"</"+a+">";return c+"</tr>"},b='<table class="'+c.table().node().className+'">';d.header&&(b+="<thead>"+k(a.header,"th")+"</thead>");for(var b=b+"<tbody>",l=0,m=a.body.length;l<m;l++)b+=k(a.body[l],"td");b+="</tbody>";d.footer&&a.footer&&(b+="<tfoot>"+k(a.footer,"th")+"</tfoot>");var g=e.open("",""),
a=d.title;"function"===typeof a&&(a=a());-1!==a.indexOf("*")&&(a=a.replace("*",f("title").text()));g.document.close();var j="<title>"+a+"</title>";f("style, link").each(function(){var c=j,b=f(this).clone()[0],a;"link"===b.nodeName.toLowerCase()&&(h.href=b.href,a=h.host,-1===a.indexOf("/")&&0!==h.pathname.indexOf("/")&&(a+="/"),b.href=h.protocol+"//"+a+h.pathname+h.search);j=c+b.outerHTML});try{g.document.head.innerHTML=j}catch(n){f(g.document.head).html(j)}g.document.body.innerHTML="<h1>"+a+"</h1><div>"+
("function"===typeof d.message?d.message(c,i,d):d.message)+"</div>"+b;d.customize&&d.customize(g);setTimeout(function(){d.autoPrint&&(g.print(),g.close())},250)},title:"*",message:"",exportOptions:{},header:!0,footer:!1,autoPrint:!0,customize:null};return i.Buttons});
/*! Buttons for DataTables 1.2.2
 * ©2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


// Used for namespacing events added to the document by each instance, so they
// can be removed on destroy
var _instCounter = 0;

// Button namespacing counter for namespacing events on individual buttons
var _buttonCounter = 0;

var _dtButtons = DataTable.ext.buttons;

/**
 * [Buttons description]
 * @param {[type]}
 * @param {[type]}
 */
var Buttons = function( dt, config )
{
	// Allow a boolean true for defaults
	if ( config === true ) {
		config = {};
	}

	// For easy configuration of buttons an array can be given
	if ( $.isArray( config ) ) {
		config = { buttons: config };
	}

	this.c = $.extend( true, {}, Buttons.defaults, config );

	// Don't want a deep copy for the buttons
	if ( config.buttons ) {
		this.c.buttons = config.buttons;
	}

	this.s = {
		dt: new DataTable.Api( dt ),
		buttons: [],
		listenKeys: '',
		namespace: 'dtb'+(_instCounter++)
	};

	this.dom = {
		container: $('<'+this.c.dom.container.tag+'/>')
			.addClass( this.c.dom.container.className )
	};

	this._constructor();
};


$.extend( Buttons.prototype, {
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Public methods
	 */

	/**
	 * Get the action of a button
	 * @param  {int|string} Button index
	 * @return {function}
	 *//**
	 * Set the action of a button
	 * @param  {node} node Button element
	 * @param  {function} action Function to set
	 * @return {Buttons} Self for chaining
	 */
	action: function ( node, action )
	{
		var button = this._nodeToButton( node );

		if ( action === undefined ) {
			return button.conf.action;
		}

		button.conf.action = action;

		return this;
	},

	/**
	 * Add an active class to the button to make to look active or get current
	 * active state.
	 * @param  {node} node Button element
	 * @param  {boolean} [flag] Enable / disable flag
	 * @return {Buttons} Self for chaining or boolean for getter
	 */
	active: function ( node, flag ) {
		var button = this._nodeToButton( node );
		var klass = this.c.dom.button.active;
		var jqNode = $(button.node);

		if ( flag === undefined ) {
			return jqNode.hasClass( klass );
		}

		jqNode.toggleClass( klass, flag === undefined ? true : flag );

		return this;
	},

	/**
	 * Add a new button
	 * @param {object} config Button configuration object, base string name or function
	 * @param {int|string} [idx] Button index for where to insert the button
	 * @return {Buttons} Self for chaining
	 */
	add: function ( config, idx )
	{
		var buttons = this.s.buttons;

		if ( typeof idx === 'string' ) {
			var split = idx.split('-');
			var base = this.s;

			for ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {
				base = base.buttons[ split[i]*1 ];
			}

			buttons = base.buttons;
			idx = split[ split.length-1 ]*1;
		}

		this._expandButton( buttons, config, false, idx );
		this._draw();

		return this;
	},

	/**
	 * Get the container node for the buttons
	 * @return {jQuery} Buttons node
	 */
	container: function ()
	{
		return this.dom.container;
	},

	/**
	 * Disable a button
	 * @param  {node} node Button node
	 * @return {Buttons} Self for chaining
	 */
	disable: function ( node ) {
		var button = this._nodeToButton( node );

		$(button.node).addClass( this.c.dom.button.disabled );

		return this;
	},

	/**
	 * Destroy the instance, cleaning up event handlers and removing DOM
	 * elements
	 * @return {Buttons} Self for chaining
	 */
	destroy: function ()
	{
		// Key event listener
		$('body').off( 'keyup.'+this.s.namespace );

		// Individual button destroy (so they can remove their own events if
		// needed). Take a copy as the array is modified by `remove`
		var buttons = this.s.buttons.slice();
		var i, ien;
		
		for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
			this.remove( buttons[i].node );
		}

		// Container
		this.dom.container.remove();

		// Remove from the settings object collection
		var buttonInsts = this.s.dt.settings()[0];

		for ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {
			if ( buttonInsts.inst === this ) {
				buttonInsts.splice( i, 1 );
				break;
			}
		}

		return this;
	},

	/**
	 * Enable / disable a button
	 * @param  {node} node Button node
	 * @param  {boolean} [flag=true] Enable / disable flag
	 * @return {Buttons} Self for chaining
	 */
	enable: function ( node, flag )
	{
		if ( flag === false ) {
			return this.disable( node );
		}

		var button = this._nodeToButton( node );
		$(button.node).removeClass( this.c.dom.button.disabled );

		return this;
	},

	/**
	 * Get the instance name for the button set selector
	 * @return {string} Instance name
	 */
	name: function ()
	{
		return this.c.name;
	},

	/**
	 * Get a button's node
	 * @param  {node} node Button node
	 * @return {jQuery} Button element
	 */
	node: function ( node )
	{
		var button = this._nodeToButton( node );
		return $(button.node);
	},

	/**
	 * Remove a button.
	 * @param  {node} node Button node
	 * @return {Buttons} Self for chaining
	 */
	remove: function ( node )
	{
		var button = this._nodeToButton( node );
		var host = this._nodeToHost( node );
		var dt = this.s.dt;

		// Remove any child buttons first
		if ( button.buttons.length ) {
			for ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {
				this.remove( button.buttons[i].node );
			}
		}

		// Allow the button to remove event handlers, etc
		if ( button.conf.destroy ) {
			button.conf.destroy.call( dt.button(node), dt, $(node), button.conf );
		}

		this._removeKey( button.conf );

		$(button.node).remove();

		var idx = $.inArray( button, host );
		host.splice( idx, 1 );

		return this;
	},

	/**
	 * Get the text for a button
	 * @param  {int|string} node Button index
	 * @return {string} Button text
	 *//**
	 * Set the text for a button
	 * @param  {int|string|function} node Button index
	 * @param  {string} label Text
	 * @return {Buttons} Self for chaining
	 */
	text: function ( node, label )
	{
		var button = this._nodeToButton( node );
		var buttonLiner = this.c.dom.collection.buttonLiner;
		var linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?
			buttonLiner.tag :
			this.c.dom.buttonLiner.tag;
		var dt = this.s.dt;
		var jqNode = $(button.node);
		var text = function ( opt ) {
			return typeof opt === 'function' ?
				opt( dt, jqNode, button.conf ) :
				opt;
		};

		if ( label === undefined ) {
			return text( button.conf.text );
		}

		button.conf.text = label;

		if ( linerTag ) {
			jqNode.children( linerTag ).html( text(label) );
		}
		else {
			jqNode.html( text(label) );
		}

		return this;
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Constructor
	 */

	/**
	 * Buttons constructor
	 * @private
	 */
	_constructor: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var dtSettings = dt.settings()[0];
		var buttons =  this.c.buttons;

		if ( ! dtSettings._buttons ) {
			dtSettings._buttons = [];
		}

		dtSettings._buttons.push( {
			inst: this,
			name: this.c.name
		} );

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			this.add( buttons[i] );
		}

		dt.on( 'destroy', function () {
			that.destroy();
		} );

		// Global key event binding to listen for button keys
		$('body').on( 'keyup.'+this.s.namespace, function ( e ) {
			if ( ! document.activeElement || document.activeElement === document.body ) {
				// SUse a string of characters for fast lookup of if we need to
				// handle this
				var character = String.fromCharCode(e.keyCode).toLowerCase();

				if ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {
					that._keypress( character, e );
				}
			}
		} );
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Private methods
	 */

	/**
	 * Add a new button to the key press listener
	 * @param {object} conf Resolved button configuration object
	 * @private
	 */
	_addKey: function ( conf )
	{
		if ( conf.key ) {
			this.s.listenKeys += $.isPlainObject( conf.key ) ?
				conf.key.key :
				conf.key;
		}
	},

	/**
	 * Insert the buttons into the container. Call without parameters!
	 * @param  {node} [container] Recursive only - Insert point
	 * @param  {array} [buttons] Recursive only - Buttons array
	 * @private
	 */
	_draw: function ( container, buttons )
	{
		if ( ! container ) {
			container = this.dom.container;
			buttons = this.s.buttons;
		}

		container.children().detach();

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			container.append( buttons[i].inserter );

			if ( buttons[i].buttons && buttons[i].buttons.length ) {
				this._draw( buttons[i].collection, buttons[i].buttons );
			}
		}
	},

	/**
	 * Create buttons from an array of buttons
	 * @param  {array} attachTo Buttons array to attach to
	 * @param  {object} button Button definition
	 * @param  {boolean} inCollection true if the button is in a collection
	 * @private
	 */
	_expandButton: function ( attachTo, button, inCollection, attachPoint )
	{
		var dt = this.s.dt;
		var buttonCounter = 0;
		var buttons = ! $.isArray( button ) ?
			[ button ] :
			button;

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			var conf = this._resolveExtends( buttons[i] );

			if ( ! conf ) {
				continue;
			}

			// If the configuration is an array, then expand the buttons at this
			// point
			if ( $.isArray( conf ) ) {
				this._expandButton( attachTo, conf, inCollection, attachPoint );
				continue;
			}

			var built = this._buildButton( conf, inCollection );
			if ( ! built ) {
				continue;
			}

			if ( attachPoint !== undefined ) {
				attachTo.splice( attachPoint, 0, built );
				attachPoint++;
			}
			else {
				attachTo.push( built );
			}

			if ( built.conf.buttons ) {
				var collectionDom = this.c.dom.collection;
				built.collection = $('<'+collectionDom.tag+'/>')
					.addClass( collectionDom.className );
				built.conf._collection = built.collection;

				this._expandButton( built.buttons, built.conf.buttons, true, attachPoint );
			}

			// init call is made here, rather than buildButton as it needs to
			// be selectable, and for that it needs to be in the buttons array
			if ( conf.init ) {
				conf.init.call( dt.button( built.node ), dt, $(built.node), conf );
			}

			buttonCounter++;
		}
	},

	/**
	 * Create an individual button
	 * @param  {object} config            Resolved button configuration
	 * @param  {boolean} inCollection `true` if a collection button
	 * @return {jQuery} Created button node (jQuery)
	 * @private
	 */
	_buildButton: function ( config, inCollection )
	{
		var buttonDom = this.c.dom.button;
		var linerDom = this.c.dom.buttonLiner;
		var collectionDom = this.c.dom.collection;
		var dt = this.s.dt;
		var text = function ( opt ) {
			return typeof opt === 'function' ?
				opt( dt, button, config ) :
				opt;
		};

		if ( inCollection && collectionDom.button ) {
			buttonDom = collectionDom.button;
		}

		if ( inCollection && collectionDom.buttonLiner ) {
			linerDom = collectionDom.buttonLiner;
		}

		// Make sure that the button is available based on whatever requirements
		// it has. For example, Flash buttons require Flash
		if ( config.available && ! config.available( dt, config ) ) {
			return false;
		}

		var action = function ( e, dt, button, config ) {
			config.action.call( dt.button( button ), e, dt, button, config );

			$(dt.table().node()).triggerHandler( 'buttons-action.dt', [
				dt.button( button ), dt, button, config 
			] );
		};

		var button = $('<'+buttonDom.tag+'/>')
			.addClass( buttonDom.className )
			.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )
			.attr( 'aria-controls', this.s.dt.table().node().id )
			.on( 'click.dtb', function (e) {
				e.preventDefault();

				if ( ! button.hasClass( buttonDom.disabled ) && config.action ) {
					action( e, dt, button, config );
				}

				button.blur();
			} )
			.on( 'keyup.dtb', function (e) {
				if ( e.keyCode === 13 ) {
					if ( ! button.hasClass( buttonDom.disabled ) && config.action ) {
						action( e, dt, button, config );
					}
				}
			} );

		// Make `a` tags act like a link
		if ( buttonDom.tag.toLowerCase() === 'a' ) {
			button.attr( 'href', '#' );
		}

		if ( linerDom.tag ) {
			var liner = $('<'+linerDom.tag+'/>')
				.html( text( config.text ) )
				.addClass( linerDom.className );

			if ( linerDom.tag.toLowerCase() === 'a' ) {
				liner.attr( 'href', '#' );
			}

			button.append( liner );
		}
		else {
			button.html( text( config.text ) );
		}

		if ( config.enabled === false ) {
			button.addClass( buttonDom.disabled );
		}

		if ( config.className ) {
			button.addClass( config.className );
		}

		if ( config.titleAttr ) {
			button.attr( 'title', config.titleAttr );
		}

		if ( ! config.namespace ) {
			config.namespace = '.dt-button-'+(_buttonCounter++);
		}

		var buttonContainer = this.c.dom.buttonContainer;
		var inserter;
		if ( buttonContainer && buttonContainer.tag ) {
			inserter = $('<'+buttonContainer.tag+'/>')
				.addClass( buttonContainer.className )
				.append( button );
		}
		else {
			inserter = button;
		}

		this._addKey( config );

		return {
			conf:         config,
			node:         button.get(0),
			inserter:     inserter,
			buttons:      [],
			inCollection: inCollection,
			collection:   null
		};
	},

	/**
	 * Get the button object from a node (recursive)
	 * @param  {node} node Button node
	 * @param  {array} [buttons] Button array, uses base if not defined
	 * @return {object} Button object
	 * @private
	 */
	_nodeToButton: function ( node, buttons )
	{
		if ( ! buttons ) {
			buttons = this.s.buttons;
		}

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			if ( buttons[i].node === node ) {
				return buttons[i];
			}

			if ( buttons[i].buttons.length ) {
				var ret = this._nodeToButton( node, buttons[i].buttons );

				if ( ret ) {
					return ret;
				}
			}
		}
	},

	/**
	 * Get container array for a button from a button node (recursive)
	 * @param  {node} node Button node
	 * @param  {array} [buttons] Button array, uses base if not defined
	 * @return {array} Button's host array
	 * @private
	 */
	_nodeToHost: function ( node, buttons )
	{
		if ( ! buttons ) {
			buttons = this.s.buttons;
		}

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			if ( buttons[i].node === node ) {
				return buttons;
			}

			if ( buttons[i].buttons.length ) {
				var ret = this._nodeToHost( node, buttons[i].buttons );

				if ( ret ) {
					return ret;
				}
			}
		}
	},

	/**
	 * Handle a key press - determine if any button's key configured matches
	 * what was typed and trigger the action if so.
	 * @param  {string} character The character pressed
	 * @param  {object} e Key event that triggered this call
	 * @private
	 */
	_keypress: function ( character, e )
	{
		var run = function ( conf, node ) {
			if ( ! conf.key ) {
				return;
			}

			if ( conf.key === character ) {
				$(node).click();
			}
			else if ( $.isPlainObject( conf.key ) ) {
				if ( conf.key.key !== character ) {
					return;
				}

				if ( conf.key.shiftKey && ! e.shiftKey ) {
					return;
				}

				if ( conf.key.altKey && ! e.altKey ) {
					return;
				}

				if ( conf.key.ctrlKey && ! e.ctrlKey ) {
					return;
				}

				if ( conf.key.metaKey && ! e.metaKey ) {
					return;
				}

				// Made it this far - it is good
				$(node).click();
			}
		};

		var recurse = function ( a ) {
			for ( var i=0, ien=a.length ; i<ien ; i++ ) {
				run( a[i].conf, a[i].node );

				if ( a[i].buttons.length ) {
					recurse( a[i].buttons );
				}
			}
		};

		recurse( this.s.buttons );
	},

	/**
	 * Remove a key from the key listener for this instance (to be used when a
	 * button is removed)
	 * @param  {object} conf Button configuration
	 * @private
	 */
	_removeKey: function ( conf )
	{
		if ( conf.key ) {
			var character = $.isPlainObject( conf.key ) ?
				conf.key.key :
				conf.key;

			// Remove only one character, as multiple buttons could have the
			// same listening key
			var a = this.s.listenKeys.split('');
			var idx = $.inArray( character, a );
			a.splice( idx, 1 );
			this.s.listenKeys = a.join('');
		}
	},

	/**
	 * Resolve a button configuration
	 * @param  {string|function|object} conf Button config to resolve
	 * @return {object} Button configuration
	 * @private
	 */
	_resolveExtends: function ( conf )
	{
		var dt = this.s.dt;
		var i, ien;
		var toConfObject = function ( base ) {
			var loop = 0;

			// Loop until we have resolved to a button configuration, or an
			// array of button configurations (which will be iterated
			// separately)
			while ( ! $.isPlainObject(base) && ! $.isArray(base) ) {
				if ( base === undefined ) {
					return;
				}

				if ( typeof base === 'function' ) {
					base = base( dt, conf );

					if ( ! base ) {
						return false;
					}
				}
				else if ( typeof base === 'string' ) {
					if ( ! _dtButtons[ base ] ) {
						throw 'Unknown button type: '+base;
					}

					base = _dtButtons[ base ];
				}

				loop++;
				if ( loop > 30 ) {
					// Protect against misconfiguration killing the browser
					throw 'Buttons: Too many iterations';
				}
			}

			return $.isArray( base ) ?
				base :
				$.extend( {}, base );
		};

		conf = toConfObject( conf );

		while ( conf && conf.extend ) {
			// Use `toConfObject` in case the button definition being extended
			// is itself a string or a function
			if ( ! _dtButtons[ conf.extend ] ) {
				throw 'Cannot extend unknown button type: '+conf.extend;
			}

			var objArray = toConfObject( _dtButtons[ conf.extend ] );
			if ( $.isArray( objArray ) ) {
				return objArray;
			}
			else if ( ! objArray ) {
				// This is a little brutal as it might be possible to have a
				// valid button without the extend, but if there is no extend
				// then the host button would be acting in an undefined state
				return false;
			}

			// Stash the current class name
			var originalClassName = objArray.className;

			conf = $.extend( {}, objArray, conf );

			// The extend will have overwritten the original class name if the
			// `conf` object also assigned a class, but we want to concatenate
			// them so they are list that is combined from all extended buttons
			if ( originalClassName && conf.className !== originalClassName ) {
				conf.className = originalClassName+' '+conf.className;
			}

			// Buttons to be added to a collection  -gives the ability to define
			// if buttons should be added to the start or end of a collection
			var postfixButtons = conf.postfixButtons;
			if ( postfixButtons ) {
				if ( ! conf.buttons ) {
					conf.buttons = [];
				}

				for ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {
					conf.buttons.push( postfixButtons[i] );
				}

				conf.postfixButtons = null;
			}

			var prefixButtons = conf.prefixButtons;
			if ( prefixButtons ) {
				if ( ! conf.buttons ) {
					conf.buttons = [];
				}

				for ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {
					conf.buttons.splice( i, 0, prefixButtons[i] );
				}

				conf.prefixButtons = null;
			}

			// Although we want the `conf` object to overwrite almost all of
			// the properties of the object being extended, the `extend`
			// property should come from the object being extended
			conf.extend = objArray.extend;
		}

		return conf;
	}
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Statics
 */

/**
 * Show / hide a background layer behind a collection
 * @param  {boolean} Flag to indicate if the background should be shown or
 *   hidden 
 * @param  {string} Class to assign to the background
 * @static
 */
Buttons.background = function ( show, className, fade ) {
	if ( fade === undefined ) {
		fade = 400;
	}

	if ( show ) {
		$('<div/>')
			.addClass( className )
			.css( 'display', 'none' )
			.appendTo( 'body' )
			.fadeIn( fade );
	}
	else {
		$('body > div.'+className)
			.fadeOut( fade, function () {
				$(this)
					.removeClass( className )
					.remove();
			} );
	}
};

/**
 * Instance selector - select Buttons instances based on an instance selector
 * value from the buttons assigned to a DataTable. This is only useful if
 * multiple instances are attached to a DataTable.
 * @param  {string|int|array} Instance selector - see `instance-selector`
 *   documentation on the DataTables site
 * @param  {array} Button instance array that was attached to the DataTables
 *   settings object
 * @return {array} Buttons instances
 * @static
 */
Buttons.instanceSelector = function ( group, buttons )
{
	if ( ! group ) {
		return $.map( buttons, function ( v ) {
			return v.inst;
		} );
	}

	var ret = [];
	var names = $.map( buttons, function ( v ) {
		return v.name;
	} );

	// Flatten the group selector into an array of single options
	var process = function ( input ) {
		if ( $.isArray( input ) ) {
			for ( var i=0, ien=input.length ; i<ien ; i++ ) {
				process( input[i] );
			}
			return;
		}

		if ( typeof input === 'string' ) {
			if ( input.indexOf( ',' ) !== -1 ) {
				// String selector, list of names
				process( input.split(',') );
			}
			else {
				// String selector individual name
				var idx = $.inArray( $.trim(input), names );

				if ( idx !== -1 ) {
					ret.push( buttons[ idx ].inst );
				}
			}
		}
		else if ( typeof input === 'number' ) {
			// Index selector
			ret.push( buttons[ input ].inst );
		}
	};
	
	process( group );

	return ret;
};

/**
 * Button selector - select one or more buttons from a selector input so some
 * operation can be performed on them.
 * @param  {array} Button instances array that the selector should operate on
 * @param  {string|int|node|jQuery|array} Button selector - see
 *   `button-selector` documentation on the DataTables site
 * @return {array} Array of objects containing `inst` and `idx` properties of
 *   the selected buttons so you know which instance each button belongs to.
 * @static
 */
Buttons.buttonSelector = function ( insts, selector )
{
	var ret = [];
	var nodeBuilder = function ( a, buttons, baseIdx ) {
		var button;
		var idx;

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			button = buttons[i];

			if ( button ) {
				idx = baseIdx !== undefined ?
					baseIdx+i :
					i+'';

				a.push( {
					node: button.node,
					name: button.conf.name,
					idx:  idx
				} );

				if ( button.buttons ) {
					nodeBuilder( a, button.buttons, idx+'-' );
				}
			}
		}
	};

	var run = function ( selector, inst ) {
		var i, ien;
		var buttons = [];
		nodeBuilder( buttons, inst.s.buttons );

		var nodes = $.map( buttons, function (v) {
			return v.node;
		} );

		if ( $.isArray( selector ) || selector instanceof $ ) {
			for ( i=0, ien=selector.length ; i<ien ; i++ ) {
				run( selector[i], inst );
			}
			return;
		}

		if ( selector === null || selector === undefined || selector === '*' ) {
			// Select all
			for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
				ret.push( {
					inst: inst,
					node: buttons[i].node
				} );
			}
		}
		else if ( typeof selector === 'number' ) {
			// Main button index selector
			ret.push( {
				inst: inst,
				node: inst.s.buttons[ selector ].node
			} );
		}
		else if ( typeof selector === 'string' ) {
			if ( selector.indexOf( ',' ) !== -1 ) {
				// Split
				var a = selector.split(',');

				for ( i=0, ien=a.length ; i<ien ; i++ ) {
					run( $.trim(a[i]), inst );
				}
			}
			else if ( selector.match( /^\d+(\-\d+)*$/ ) ) {
				// Sub-button index selector
				var indexes = $.map( buttons, function (v) {
					return v.idx;
				} );

				ret.push( {
					inst: inst,
					node: buttons[ $.inArray( selector, indexes ) ].node
				} );
			}
			else if ( selector.indexOf( ':name' ) !== -1 ) {
				// Button name selector
				var name = selector.replace( ':name', '' );

				for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
					if ( buttons[i].name === name ) {
						ret.push( {
							inst: inst,
							node: buttons[i].node
						} );
					}
				}
			}
			else {
				// jQuery selector on the nodes
				$( nodes ).filter( selector ).each( function () {
					ret.push( {
						inst: inst,
						node: this
					} );
				} );
			}
		}
		else if ( typeof selector === 'object' && selector.nodeName ) {
			// Node selector
			var idx = $.inArray( selector, nodes );

			if ( idx !== -1 ) {
				ret.push( {
					inst: inst,
					node: nodes[ idx ]
				} );
			}
		}
	};


	for ( var i=0, ien=insts.length ; i<ien ; i++ ) {
		var inst = insts[i];

		run( selector, inst );
	}

	return ret;
};


/**
 * Buttons defaults. For full documentation, please refer to the docs/option
 * directory or the DataTables site.
 * @type {Object}
 * @static
 */
Buttons.defaults = {
	buttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],
	name: 'main',
	tabIndex: 0,
	dom: {
		container: {
			tag: 'div',
			className: 'dt-buttons'
		},
		collection: {
			tag: 'div',
			className: 'dt-button-collection'
		},
		button: {
			tag: 'a',
			className: 'dt-button',
			active: 'active',
			disabled: 'disabled'
		},
		buttonLiner: {
			tag: 'span',
			className: ''
		}
	}
};

/**
 * Version information
 * @type {string}
 * @static
 */
Buttons.version = '1.2.2';


$.extend( _dtButtons, {
	collection: {
		text: function ( dt ) {
			return dt.i18n( 'buttons.collection', 'Collection' );
		},
		className: 'buttons-collection',
		action: function ( e, dt, button, config ) {
			var host = button;
			var hostOffset = host.offset();
			var tableContainer = $( dt.table().container() );
			var multiLevel = false;

			// Remove any old collection
			if ( $('div.dt-button-background').length ) {
				multiLevel = $('div.dt-button-collection').offset();
				$('body').trigger( 'click.dtb-collection' );
			}

			config._collection
				.addClass( config.collectionLayout )
				.css( 'display', 'none' )
				.appendTo( 'body' )
				.fadeIn( config.fade );

			var position = config._collection.css( 'position' );

			if ( multiLevel && position === 'absolute' ) {
				config._collection.css( {
					top: multiLevel.top + 5, // magic numbers for a little offset
					left: multiLevel.left + 5
				} );
			}
			else if ( position === 'absolute' ) {
				config._collection.css( {
					top: hostOffset.top + host.outerHeight(),
					left: hostOffset.left
				} );

				var listRight = hostOffset.left + config._collection.outerWidth();
				var tableRight = tableContainer.offset().left + tableContainer.width();
				if ( listRight > tableRight ) {
					config._collection.css( 'left', hostOffset.left - ( listRight - tableRight ) );
				}
			}
			else {
				// Fix position - centre on screen
				var top = config._collection.height() / 2;
				if ( top > $(window).height() / 2 ) {
					top = $(window).height() / 2;
				}

				config._collection.css( 'marginTop', top*-1 );
			}

			if ( config.background ) {
				Buttons.background( true, config.backgroundClassName, config.fade );
			}

			// Need to break the 'thread' for the collection button being
			// activated by a click - it would also trigger this event
			setTimeout( function () {
				// This is bonkers, but if we don't have a click listener on the
				// background element, iOS Safari will ignore the body click
				// listener below. An empty function here is all that is
				// required to make it work...
				$('div.dt-button-background').on( 'click.dtb-collection', function () {} );

				$('body').on( 'click.dtb-collection', function (e) {
					// andSelf is deprecated in jQ1.8, but we want 1.7 compat
					var back = $.fn.addBack ? 'addBack' : 'andSelf';

					if ( ! $(e.target).parents()[back]().filter( config._collection ).length ) {
						config._collection
							.fadeOut( config.fade, function () {
								config._collection.detach();
							} );

						$('div.dt-button-background').off( 'click.dtb-collection' );
						Buttons.background( false, config.backgroundClassName, config.fade );

						$('body').off( 'click.dtb-collection' );
						dt.off( 'buttons-action.b-internal' );
					}
				} );
			}, 10 );

			if ( config.autoClose ) {
				dt.on( 'buttons-action.b-internal', function () {
					$('div.dt-button-background').click();
				} );
			}
		},
		background: true,
		collectionLayout: '',
		backgroundClassName: 'dt-button-background',
		autoClose: false,
		fade: 400
	},
	copy: function ( dt, conf ) {
		if ( _dtButtons.copyHtml5 ) {
			return 'copyHtml5';
		}
		if ( _dtButtons.copyFlash && _dtButtons.copyFlash.available( dt, conf ) ) {
			return 'copyFlash';
		}
	},
	csv: function ( dt, conf ) {
		// Common option that will use the HTML5 or Flash export buttons
		if ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {
			return 'csvHtml5';
		}
		if ( _dtButtons.csvFlash && _dtButtons.csvFlash.available( dt, conf ) ) {
			return 'csvFlash';
		}
	},
	excel: function ( dt, conf ) {
		// Common option that will use the HTML5 or Flash export buttons
		if ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {
			return 'excelHtml5';
		}
		if ( _dtButtons.excelFlash && _dtButtons.excelFlash.available( dt, conf ) ) {
			return 'excelFlash';
		}
	},
	pdf: function ( dt, conf ) {
		// Common option that will use the HTML5 or Flash export buttons
		if ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {
			return 'pdfHtml5';
		}
		if ( _dtButtons.pdfFlash && _dtButtons.pdfFlash.available( dt, conf ) ) {
			return 'pdfFlash';
		}
	},
	pageLength: function ( dt ) {
		var lengthMenu = dt.settings()[0].aLengthMenu;
		var vals = $.isArray( lengthMenu[0] ) ? lengthMenu[0] : lengthMenu;
		var lang = $.isArray( lengthMenu[0] ) ? lengthMenu[1] : lengthMenu;
		var text = function ( dt ) {
			return dt.i18n( 'buttons.pageLength', {
				"-1": 'Show all rows',
				_:    'Show %d rows'
			}, dt.page.len() );
		};

		return {
			extend: 'collection',
			text: text,
			className: 'buttons-page-length',
			autoClose: true,
			buttons: $.map( vals, function ( val, i ) {
				return {
					text: lang[i],
					action: function ( e, dt ) {
						dt.page.len( val ).draw();
					},
					init: function ( dt, node, conf ) {
						var that = this;
						var fn = function () {
							that.active( dt.page.len() === val );
						};

						dt.on( 'length.dt'+conf.namespace, fn );
						fn();
					},
					destroy: function ( dt, node, conf ) {
						dt.off( 'length.dt'+conf.namespace );
					}
				};
			} ),
			init: function ( dt, node, conf ) {
				var that = this;
				dt.on( 'length.dt'+conf.namespace, function () {
					that.text( text( dt ) );
				} );
			},
			destroy: function ( dt, node, conf ) {
				dt.off( 'length.dt'+conf.namespace );
			}
		};
	}
} );


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables API
 *
 * For complete documentation, please refer to the docs/api directory or the
 * DataTables site
 */

// Buttons group and individual button selector
DataTable.Api.register( 'buttons()', function ( group, selector ) {
	// Argument shifting
	if ( selector === undefined ) {
		selector = group;
		group = undefined;
	}

	this.selector.buttonGroup = group;

	var res = this.iterator( true, 'table', function ( ctx ) {
		if ( ctx._buttons ) {
			return Buttons.buttonSelector(
				Buttons.instanceSelector( group, ctx._buttons ),
				selector
			);
		}
	}, true );

	res._groupSelector = group;
	return res;
} );

// Individual button selector
DataTable.Api.register( 'button()', function ( group, selector ) {
	// just run buttons() and truncate
	var buttons = this.buttons( group, selector );

	if ( buttons.length > 1 ) {
		buttons.splice( 1, buttons.length );
	}

	return buttons;
} );

// Active buttons
DataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {
	if ( flag === undefined ) {
		return this.map( function ( set ) {
			return set.inst.active( set.node );
		} );
	}

	return this.each( function ( set ) {
		set.inst.active( set.node, flag );
	} );
} );

// Get / set button action
DataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {
	if ( action === undefined ) {
		return this.map( function ( set ) {
			return set.inst.action( set.node );
		} );
	}

	return this.each( function ( set ) {
		set.inst.action( set.node, action );
	} );
} );

// Enable / disable buttons
DataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {
	return this.each( function ( set ) {
		set.inst.enable( set.node, flag );
	} );
} );

// Disable buttons
DataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {
	return this.each( function ( set ) {
		set.inst.disable( set.node );
	} );
} );

// Get button nodes
DataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {
	var jq = $();

	// jQuery will automatically reduce duplicates to a single entry
	$( this.each( function ( set ) {
		jq = jq.add( set.inst.node( set.node ) );
	} ) );

	return jq;
} );

// Get / set button text (i.e. the button labels)
DataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {
	if ( label === undefined ) {
		return this.map( function ( set ) {
			return set.inst.text( set.node );
		} );
	}

	return this.each( function ( set ) {
		set.inst.text( set.node, label );
	} );
} );

// Trigger a button's action
DataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {
	return this.each( function ( set ) {
		set.inst.node( set.node ).trigger( 'click' );
	} );
} );

// Get the container elements
DataTable.Api.registerPlural( 'buttons().containers()', 'buttons().container()', function () {
	var jq = $();
	var groupSelector = this._groupSelector;

	// We need to use the group selector directly, since if there are no buttons
	// the result set will be empty
	this.iterator( true, 'table', function ( ctx ) {
		if ( ctx._buttons ) {
			var insts = Buttons.instanceSelector( groupSelector, ctx._buttons );

			for ( var i=0, ien=insts.length ; i<ien ; i++ ) {
				jq = jq.add( insts[i].container() );
			}
		}
	} );

	return jq;
} );

// Add a new button
DataTable.Api.register( 'button().add()', function ( idx, conf ) {
	var ctx = this.context;

	// Don't use `this` as it could be empty - select the instances directly
	if ( ctx.length ) {
		var inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );

		if ( inst.length ) {
			inst[0].add( conf, idx );
		}
	}

	return this.button( this._groupSelector, idx );
} );

// Destroy the button sets selected
DataTable.Api.register( 'buttons().destroy()', function () {
	this.pluck( 'inst' ).unique().each( function ( inst ) {
		inst.destroy();
	} );

	return this;
} );

// Remove a button
DataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {
	this.each( function ( set ) {
		set.inst.remove( set.node );
	} );

	return this;
} );

// Information box that can be used by buttons
var _infoTimer;
DataTable.Api.register( 'buttons.info()', function ( title, message, time ) {
	var that = this;

	if ( title === false ) {
		$('#datatables_buttons_info').fadeOut( function () {
			$(this).remove();
		} );
		clearTimeout( _infoTimer );
		_infoTimer = null;

		return this;
	}

	if ( _infoTimer ) {
		clearTimeout( _infoTimer );
	}

	if ( $('#datatables_buttons_info').length ) {
		$('#datatables_buttons_info').remove();
	}

	title = title ? '<h2>'+title+'</h2>' : '';

	$('<div id="datatables_buttons_info" class="dt-button-info"/>')
		.html( title )
		.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )
		.css( 'display', 'none' )
		.appendTo( 'body' )
		.fadeIn();

	if ( time !== undefined && time !== 0 ) {
		_infoTimer = setTimeout( function () {
			that.buttons.info( false );
		}, time );
	}

	return this;
} );

// Get data from the table for export - this is common to a number of plug-in
// buttons so it is included in the Buttons core library
DataTable.Api.register( 'buttons.exportData()', function ( options ) {
	if ( this.context.length ) {
		return _exportData( new DataTable.Api( this.context[0] ), options );
	}
} );


var _exportTextarea = $('<textarea/>')[0];
var _exportData = function ( dt, inOpts )
{
	var config = $.extend( true, {}, {
		rows:           null,
		columns:        '',
		modifier:       {
			search: 'applied',
			order:  'applied'
		},
		orthogonal:     'display',
		stripHtml:      true,
		stripNewlines:  true,
		decodeEntities: true,
		trim:           true,
		format:         {
			header: function ( d ) {
				return strip( d );
			},
			footer: function ( d ) {
				return strip( d );
			},
			body: function ( d ) {
				return strip( d );
			}
		}
	}, inOpts );

	var strip = function ( str ) {
		if ( typeof str !== 'string' ) {
			return str;
		}

		if ( config.stripHtml ) {
			str = str.replace( /<[^>]*>/g, '' );
		}

		if ( config.trim ) {
			str = str.replace( /^\s+|\s+$/g, '' );
		}

		if ( config.stripNewlines ) {
			str = str.replace( /\n/g, ' ' );
		}

		if ( config.decodeEntities ) {
			_exportTextarea.innerHTML = str;
			str = _exportTextarea.value;
		}

		return str;
	};


	var header = dt.columns( config.columns ).indexes().map( function (idx) {
		var el = dt.column( idx ).header();
		return config.format.header( el.innerHTML, idx, el );
	} ).toArray();

	var footer = dt.table().footer() ?
		dt.columns( config.columns ).indexes().map( function (idx) {
			var el = dt.column( idx ).footer();
			return config.format.footer( el ? el.innerHTML : '', idx, el );
		} ).toArray() :
		null;

	var rowIndexes = dt.rows( config.rows, config.modifier ).indexes().toArray();
	var cells = dt
		.cells( rowIndexes, config.columns )
		.render( config.orthogonal )
		.toArray();
	var cellNodes = dt
		.cells( rowIndexes, config.columns )
		.nodes()
		.toArray();

	var columns = header.length;
	var rows = columns > 0 ? cells.length / columns : 0;
	var body = new Array( rows );
	var cellCounter = 0;

	for ( var i=0, ien=rows ; i<ien ; i++ ) {
		var row = new Array( columns );

		for ( var j=0 ; j<columns ; j++ ) {
			row[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );
			cellCounter++;
		}

		body[i] = row;
	}

	return {
		header: header,
		footer: footer,
		body:   body
	};
};


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables interface
 */

// Attach to DataTables objects for global access
$.fn.dataTable.Buttons = Buttons;
$.fn.DataTable.Buttons = Buttons;



// DataTables creation - check if the buttons have been defined for this table,
// they will have been if the `B` option was used in `dom`, otherwise we should
// create the buttons instance here so they can be inserted into the document
// using the API. Listen for `init` for compatibility with pre 1.10.10, but to
// be removed in future.
$(document).on( 'init.dt plugin-init.dt', function (e, settings) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	var opts = settings.oInit.buttons || DataTable.defaults.buttons;

	if ( opts && ! settings._buttons ) {
		new Buttons( settings, opts ).container();
	}
} );

// DataTables `dom` feature option
DataTable.ext.feature.push( {
	fnInit: function( settings ) {
		var api = new DataTable.Api( settings );
		var opts = api.init().buttons || DataTable.defaults.buttons;

		return new Buttons( api, opts ).container();
	},
	cFeature: "B"
} );


return Buttons;
}));
/*!
 Buttons for DataTables 1.2.2
 ©2016 SpryMedia Ltd - datatables.net/license
*/

(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(n){return d(n,window,document)}):"object"===typeof exports?module.exports=function(n,o){n||(n=window);if(!o||!o.fn.dataTable)o=require("datatables.net")(n,o).$;return d(o,n,n.document)}:d(jQuery,window,document)})(function(d,n,o,m){var i=d.fn.dataTable,u=0,v=0,j=i.ext.buttons,l=function(a,b){!0===b&&(b={});d.isArray(b)&&(b={buttons:b});this.c=d.extend(!0,{},l.defaults,b);b.buttons&&(this.c.buttons=b.buttons);
this.s={dt:new i.Api(a),buttons:[],listenKeys:"",namespace:"dtb"+u++};this.dom={container:d("<"+this.c.dom.container.tag+"/>").addClass(this.c.dom.container.className)};this._constructor()};d.extend(l.prototype,{action:function(a,b){var c=this._nodeToButton(a);if(b===m)return c.conf.action;c.conf.action=b;return this},active:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.button.active,c=d(c.node);if(b===m)return c.hasClass(e);c.toggleClass(e,b===m?!0:b);return this},add:function(a,b){var c=
this.s.buttons;if("string"===typeof b){for(var e=b.split("-"),c=this.s,d=0,h=e.length-1;d<h;d++)c=c.buttons[1*e[d]];c=c.buttons;b=1*e[e.length-1]}this._expandButton(c,a,!1,b);this._draw();return this},container:function(){return this.dom.container},disable:function(a){a=this._nodeToButton(a);d(a.node).addClass(this.c.dom.button.disabled);return this},destroy:function(){d("body").off("keyup."+this.s.namespace);var a=this.s.buttons.slice(),b,c;b=0;for(c=a.length;b<c;b++)this.remove(a[b].node);this.dom.container.remove();
a=this.s.dt.settings()[0];b=0;for(c=a.length;b<c;b++)if(a.inst===this){a.splice(b,1);break}return this},enable:function(a,b){if(!1===b)return this.disable(a);var c=this._nodeToButton(a);d(c.node).removeClass(this.c.dom.button.disabled);return this},name:function(){return this.c.name},node:function(a){a=this._nodeToButton(a);return d(a.node)},remove:function(a){var b=this._nodeToButton(a),c=this._nodeToHost(a),e=this.s.dt;if(b.buttons.length)for(var g=b.buttons.length-1;0<=g;g--)this.remove(b.buttons[g].node);
b.conf.destroy&&b.conf.destroy.call(e.button(a),e,d(a),b.conf);this._removeKey(b.conf);d(b.node).remove();a=d.inArray(b,c);c.splice(a,1);return this},text:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.collection.buttonLiner,e=c.inCollection&&e&&e.tag?e.tag:this.c.dom.buttonLiner.tag,g=this.s.dt,h=d(c.node),f=function(a){return"function"===typeof a?a(g,h,c.conf):a};if(b===m)return f(c.conf.text);c.conf.text=b;e?h.children(e).html(f(b)):h.html(f(b));return this},_constructor:function(){var a=
this,b=this.s.dt,c=b.settings()[0],e=this.c.buttons;c._buttons||(c._buttons=[]);c._buttons.push({inst:this,name:this.c.name});for(var c=0,g=e.length;c<g;c++)this.add(e[c]);b.on("destroy",function(){a.destroy()});d("body").on("keyup."+this.s.namespace,function(b){if(!o.activeElement||o.activeElement===o.body){var c=String.fromCharCode(b.keyCode).toLowerCase();a.s.listenKeys.toLowerCase().indexOf(c)!==-1&&a._keypress(c,b)}})},_addKey:function(a){a.key&&(this.s.listenKeys+=d.isPlainObject(a.key)?a.key.key:
a.key)},_draw:function(a,b){a||(a=this.dom.container,b=this.s.buttons);a.children().detach();for(var c=0,e=b.length;c<e;c++)a.append(b[c].inserter),b[c].buttons&&b[c].buttons.length&&this._draw(b[c].collection,b[c].buttons)},_expandButton:function(a,b,c,e){for(var g=this.s.dt,h=0,b=!d.isArray(b)?[b]:b,f=0,r=b.length;f<r;f++){var k=this._resolveExtends(b[f]);if(k)if(d.isArray(k))this._expandButton(a,k,c,e);else{var p=this._buildButton(k,c);if(p){e!==m?(a.splice(e,0,p),e++):a.push(p);if(p.conf.buttons){var s=
this.c.dom.collection;p.collection=d("<"+s.tag+"/>").addClass(s.className);p.conf._collection=p.collection;this._expandButton(p.buttons,p.conf.buttons,!0,e)}k.init&&k.init.call(g.button(p.node),g,d(p.node),k);h++}}}},_buildButton:function(a,b){var c=this.c.dom.button,e=this.c.dom.buttonLiner,g=this.c.dom.collection,h=this.s.dt,f=function(b){return"function"===typeof b?b(h,k,a):b};b&&g.button&&(c=g.button);b&&g.buttonLiner&&(e=g.buttonLiner);if(a.available&&!a.available(h,a))return!1;var r=function(a,
b,c,e){e.action.call(b.button(c),a,b,c,e);d(b.table().node()).triggerHandler("buttons-action.dt",[b.button(c),b,c,e])},k=d("<"+c.tag+"/>").addClass(c.className).attr("tabindex",this.s.dt.settings()[0].iTabIndex).attr("aria-controls",this.s.dt.table().node().id).on("click.dtb",function(b){b.preventDefault();!k.hasClass(c.disabled)&&a.action&&r(b,h,k,a);k.blur()}).on("keyup.dtb",function(b){b.keyCode===13&&!k.hasClass(c.disabled)&&a.action&&r(b,h,k,a)});"a"===c.tag.toLowerCase()&&k.attr("href","#");
e.tag?(g=d("<"+e.tag+"/>").html(f(a.text)).addClass(e.className),"a"===e.tag.toLowerCase()&&g.attr("href","#"),k.append(g)):k.html(f(a.text));!1===a.enabled&&k.addClass(c.disabled);a.className&&k.addClass(a.className);a.titleAttr&&k.attr("title",a.titleAttr);a.namespace||(a.namespace=".dt-button-"+v++);e=(e=this.c.dom.buttonContainer)&&e.tag?d("<"+e.tag+"/>").addClass(e.className).append(k):k;this._addKey(a);return{conf:a,node:k.get(0),inserter:e,buttons:[],inCollection:b,collection:null}},_nodeToButton:function(a,
b){b||(b=this.s.buttons);for(var c=0,e=b.length;c<e;c++){if(b[c].node===a)return b[c];if(b[c].buttons.length){var d=this._nodeToButton(a,b[c].buttons);if(d)return d}}},_nodeToHost:function(a,b){b||(b=this.s.buttons);for(var c=0,e=b.length;c<e;c++){if(b[c].node===a)return b;if(b[c].buttons.length){var d=this._nodeToHost(a,b[c].buttons);if(d)return d}}},_keypress:function(a,b){var c=function(e){for(var g=0,h=e.length;g<h;g++){var f=e[g].conf,r=e[g].node;if(f.key)if(f.key===a)d(r).click();else if(d.isPlainObject(f.key)&&
f.key.key===a&&(!f.key.shiftKey||b.shiftKey))if(!f.key.altKey||b.altKey)if(!f.key.ctrlKey||b.ctrlKey)(!f.key.metaKey||b.metaKey)&&d(r).click();e[g].buttons.length&&c(e[g].buttons)}};c(this.s.buttons)},_removeKey:function(a){if(a.key){var b=d.isPlainObject(a.key)?a.key.key:a.key,a=this.s.listenKeys.split(""),b=d.inArray(b,a);a.splice(b,1);this.s.listenKeys=a.join("")}},_resolveExtends:function(a){for(var b=this.s.dt,c,e,g=function(c){for(var e=0;!d.isPlainObject(c)&&!d.isArray(c);){if(c===m)return;
if("function"===typeof c){if(c=c(b,a),!c)return!1}else if("string"===typeof c){if(!j[c])throw"Unknown button type: "+c;c=j[c]}e++;if(30<e)throw"Buttons: Too many iterations";}return d.isArray(c)?c:d.extend({},c)},a=g(a);a&&a.extend;){if(!j[a.extend])throw"Cannot extend unknown button type: "+a.extend;var h=g(j[a.extend]);if(d.isArray(h))return h;if(!h)return!1;c=h.className;a=d.extend({},h,a);c&&a.className!==c&&(a.className=c+" "+a.className);var f=a.postfixButtons;if(f){a.buttons||(a.buttons=[]);
c=0;for(e=f.length;c<e;c++)a.buttons.push(f[c]);a.postfixButtons=null}if(f=a.prefixButtons){a.buttons||(a.buttons=[]);c=0;for(e=f.length;c<e;c++)a.buttons.splice(c,0,f[c]);a.prefixButtons=null}a.extend=h.extend}return a}});l.background=function(a,b,c){c===m&&(c=400);a?d("<div/>").addClass(b).css("display","none").appendTo("body").fadeIn(c):d("body > div."+b).fadeOut(c,function(){d(this).removeClass(b).remove()})};l.instanceSelector=function(a,b){if(!a)return d.map(b,function(a){return a.inst});var c=
[],e=d.map(b,function(a){return a.name}),g=function(a){if(d.isArray(a))for(var f=0,r=a.length;f<r;f++)g(a[f]);else"string"===typeof a?-1!==a.indexOf(",")?g(a.split(",")):(a=d.inArray(d.trim(a),e),-1!==a&&c.push(b[a].inst)):"number"===typeof a&&c.push(b[a].inst)};g(a);return c};l.buttonSelector=function(a,b){for(var c=[],e=function(a,b,c){for(var d,g,f=0,h=b.length;f<h;f++)if(d=b[f])g=c!==m?c+f:f+"",a.push({node:d.node,name:d.conf.name,idx:g}),d.buttons&&e(a,d.buttons,g+"-")},g=function(a,b){var f,
h,i=[];e(i,b.s.buttons);f=d.map(i,function(a){return a.node});if(d.isArray(a)||a instanceof d){f=0;for(h=a.length;f<h;f++)g(a[f],b)}else if(null===a||a===m||"*"===a){f=0;for(h=i.length;f<h;f++)c.push({inst:b,node:i[f].node})}else if("number"===typeof a)c.push({inst:b,node:b.s.buttons[a].node});else if("string"===typeof a)if(-1!==a.indexOf(",")){i=a.split(",");f=0;for(h=i.length;f<h;f++)g(d.trim(i[f]),b)}else if(a.match(/^\d+(\-\d+)*$/))f=d.map(i,function(a){return a.idx}),c.push({inst:b,node:i[d.inArray(a,
f)].node});else if(-1!==a.indexOf(":name")){var j=a.replace(":name","");f=0;for(h=i.length;f<h;f++)i[f].name===j&&c.push({inst:b,node:i[f].node})}else d(f).filter(a).each(function(){c.push({inst:b,node:this})});else"object"===typeof a&&a.nodeName&&(i=d.inArray(a,f),-1!==i&&c.push({inst:b,node:f[i]}))},h=0,f=a.length;h<f;h++)g(b,a[h]);return c};l.defaults={buttons:["copy","excel","csv","pdf","print"],name:"main",tabIndex:0,dom:{container:{tag:"div",className:"dt-buttons"},collection:{tag:"div",className:"dt-button-collection"},
button:{tag:"a",className:"dt-button",active:"active",disabled:"disabled"},buttonLiner:{tag:"span",className:""}}};l.version="1.2.2";d.extend(j,{collection:{text:function(a){return a.i18n("buttons.collection","Collection")},className:"buttons-collection",action:function(a,b,c,e){var a=c.offset(),g=d(b.table().container()),h=!1;d("div.dt-button-background").length&&(h=d("div.dt-button-collection").offset(),d("body").trigger("click.dtb-collection"));e._collection.addClass(e.collectionLayout).css("display",
"none").appendTo("body").fadeIn(e.fade);var f=e._collection.css("position");h&&"absolute"===f?e._collection.css({top:h.top+5,left:h.left+5}):"absolute"===f?(e._collection.css({top:a.top+c.outerHeight(),left:a.left}),c=a.left+e._collection.outerWidth(),g=g.offset().left+g.width(),c>g&&e._collection.css("left",a.left-(c-g))):(a=e._collection.height()/2,a>d(n).height()/2&&(a=d(n).height()/2),e._collection.css("marginTop",-1*a));e.background&&l.background(!0,e.backgroundClassName,e.fade);setTimeout(function(){d("div.dt-button-background").on("click.dtb-collection",
function(){});d("body").on("click.dtb-collection",function(a){var c=d.fn.addBack?"addBack":"andSelf";if(!d(a.target).parents()[c]().filter(e._collection).length){e._collection.fadeOut(e.fade,function(){e._collection.detach()});d("div.dt-button-background").off("click.dtb-collection");l.background(false,e.backgroundClassName,e.fade);d("body").off("click.dtb-collection");b.off("buttons-action.b-internal")}})},10);if(e.autoClose)b.on("buttons-action.b-internal",function(){d("div.dt-button-background").click()})},
background:!0,collectionLayout:"",backgroundClassName:"dt-button-background",autoClose:!1,fade:400},copy:function(a,b){if(j.copyHtml5)return"copyHtml5";if(j.copyFlash&&j.copyFlash.available(a,b))return"copyFlash"},csv:function(a,b){if(j.csvHtml5&&j.csvHtml5.available(a,b))return"csvHtml5";if(j.csvFlash&&j.csvFlash.available(a,b))return"csvFlash"},excel:function(a,b){if(j.excelHtml5&&j.excelHtml5.available(a,b))return"excelHtml5";if(j.excelFlash&&j.excelFlash.available(a,b))return"excelFlash"},pdf:function(a,
b){if(j.pdfHtml5&&j.pdfHtml5.available(a,b))return"pdfHtml5";if(j.pdfFlash&&j.pdfFlash.available(a,b))return"pdfFlash"},pageLength:function(a){var a=a.settings()[0].aLengthMenu,b=d.isArray(a[0])?a[0]:a,c=d.isArray(a[0])?a[1]:a,e=function(a){return a.i18n("buttons.pageLength",{"-1":"Show all rows",_:"Show %d rows"},a.page.len())};return{extend:"collection",text:e,className:"buttons-page-length",autoClose:!0,buttons:d.map(b,function(a,b){return{text:c[b],action:function(b,c){c.page.len(a).draw()},init:function(b,
c,e){var d=this,c=function(){d.active(b.page.len()===a)};b.on("length.dt"+e.namespace,c);c()},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}),init:function(a,b,c){var d=this;a.on("length.dt"+c.namespace,function(){d.text(e(a))})},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}});i.Api.register("buttons()",function(a,b){b===m&&(b=a,a=m);this.selector.buttonGroup=a;var c=this.iterator(!0,"table",function(c){if(c._buttons)return l.buttonSelector(l.instanceSelector(a,c._buttons),
b)},!0);c._groupSelector=a;return c});i.Api.register("button()",function(a,b){var c=this.buttons(a,b);1<c.length&&c.splice(1,c.length);return c});i.Api.registerPlural("buttons().active()","button().active()",function(a){return a===m?this.map(function(a){return a.inst.active(a.node)}):this.each(function(b){b.inst.active(b.node,a)})});i.Api.registerPlural("buttons().action()","button().action()",function(a){return a===m?this.map(function(a){return a.inst.action(a.node)}):this.each(function(b){b.inst.action(b.node,
a)})});i.Api.register(["buttons().enable()","button().enable()"],function(a){return this.each(function(b){b.inst.enable(b.node,a)})});i.Api.register(["buttons().disable()","button().disable()"],function(){return this.each(function(a){a.inst.disable(a.node)})});i.Api.registerPlural("buttons().nodes()","button().node()",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.node(b.node))}));return a});i.Api.registerPlural("buttons().text()","button().text()",function(a){return a===m?this.map(function(a){return a.inst.text(a.node)}):
this.each(function(b){b.inst.text(b.node,a)})});i.Api.registerPlural("buttons().trigger()","button().trigger()",function(){return this.each(function(a){a.inst.node(a.node).trigger("click")})});i.Api.registerPlural("buttons().containers()","buttons().container()",function(){var a=d(),b=this._groupSelector;this.iterator(!0,"table",function(c){if(c._buttons)for(var c=l.instanceSelector(b,c._buttons),d=0,g=c.length;d<g;d++)a=a.add(c[d].container())});return a});i.Api.register("button().add()",function(a,
b){var c=this.context;c.length&&(c=l.instanceSelector(this._groupSelector,c[0]._buttons),c.length&&c[0].add(b,a));return this.button(this._groupSelector,a)});i.Api.register("buttons().destroy()",function(){this.pluck("inst").unique().each(function(a){a.destroy()});return this});i.Api.registerPlural("buttons().remove()","buttons().remove()",function(){this.each(function(a){a.inst.remove(a.node)});return this});var q;i.Api.register("buttons.info()",function(a,b,c){var e=this;if(!1===a)return d("#datatables_buttons_info").fadeOut(function(){d(this).remove()}),
clearTimeout(q),q=null,this;q&&clearTimeout(q);d("#datatables_buttons_info").length&&d("#datatables_buttons_info").remove();d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a?"<h2>"+a+"</h2>":"").append(d("<div/>")["string"===typeof b?"html":"append"](b)).css("display","none").appendTo("body").fadeIn();c!==m&&0!==c&&(q=setTimeout(function(){e.buttons.info(!1)},c));return this});i.Api.register("buttons.exportData()",function(a){if(this.context.length){for(var b=new i.Api(this.context[0]),
c=d.extend(!0,{},{rows:null,columns:"",modifier:{search:"applied",order:"applied"},orthogonal:"display",stripHtml:!0,stripNewlines:!0,decodeEntities:!0,trim:!0,format:{header:function(a){return e(a)},footer:function(a){return e(a)},body:function(a){return e(a)}}},a),e=function(a){if("string"!==typeof a)return a;c.stripHtml&&(a=a.replace(/<[^>]*>/g,""));c.trim&&(a=a.replace(/^\s+|\s+$/g,""));c.stripNewlines&&(a=a.replace(/\n/g," "));c.decodeEntities&&(t.innerHTML=a,a=t.value);return a},a=b.columns(c.columns).indexes().map(function(a){var d=
b.column(a).header();return c.format.header(d.innerHTML,a,d)}).toArray(),g=b.table().footer()?b.columns(c.columns).indexes().map(function(a){var d=b.column(a).footer();return c.format.footer(d?d.innerHTML:"",a,d)}).toArray():null,h=b.rows(c.rows,c.modifier).indexes().toArray(),f=b.cells(h,c.columns).render(c.orthogonal).toArray(),h=b.cells(h,c.columns).nodes().toArray(),j=a.length,k=0<j?f.length/j:0,l=Array(k),m=0,n=0;n<k;n++){for(var o=Array(j),q=0;q<j;q++)o[q]=c.format.body(f[m],n,q,h[m]),m++;l[n]=
o}return{header:a,footer:g,body:l}}});var t=d("<textarea/>")[0];d.fn.dataTable.Buttons=l;d.fn.DataTable.Buttons=l;d(o).on("init.dt plugin-init.dt",function(a,b){if("dt"===a.namespace){var c=b.oInit.buttons||i.defaults.buttons;c&&!b._buttons&&(new l(b,c)).container()}});i.ext.feature.push({fnInit:function(a){var a=new i.Api(a),b=a.init().buttons||i.defaults.buttons;return(new l(a,b)).container()},cFeature:"B"});return l});
/*! DataTables Bootstrap 3 integration
 * ©2011-2015 SpryMedia Ltd - datatables.net/license
 */

/**
 * DataTables integration for Bootstrap 3. This requires Bootstrap 3 and
 * DataTables 1.10 or newer.
 *
 * This file sets the defaults and adds options to DataTables to style its
 * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap
 * for further information.
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				// Require DataTables, which attaches to jQuery, including
				// jQuery if needed and have a $ property so we can access the
				// jQuery object that is used
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/* Set the defaults for DataTables initialisation */
$.extend( true, DataTable.defaults, {
	dom:
		"<'row'<'col-sm-6'l><'col-sm-6'f>>" +
		"<'row'<'col-sm-12'tr>>" +
		"<'row'<'col-sm-5'i><'col-sm-7'p>>",
	renderer: 'bootstrap'
} );


/* Default class modification */
$.extend( DataTable.ext.classes, {
	sWrapper:      "dataTables_wrapper form-inline dt-bootstrap",
	sFilterInput:  "form-control input-sm",
	sLengthSelect: "form-control input-sm",
	sProcessing:   "dataTables_processing panel panel-default"
} );


/* Bootstrap paging button renderer */
DataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {
	var api     = new DataTable.Api( settings );
	var classes = settings.oClasses;
	var lang    = settings.oLanguage.oPaginate;
	var aria = settings.oLanguage.oAria.paginate || {};
	var btnDisplay, btnClass, counter=0;

	var attach = function( container, buttons ) {
		var i, ien, node, button;
		var clickHandler = function ( e ) {
			e.preventDefault();
			if ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {
				api.page( e.data.action ).draw( 'page' );
			}
		};

		for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
			button = buttons[i];

			if ( $.isArray( button ) ) {
				attach( container, button );
			}
			else {
				btnDisplay = '';
				btnClass = '';

				switch ( button ) {
					case 'ellipsis':
						btnDisplay = '&#x2026;';
						btnClass = 'disabled';
						break;

					case 'first':
						btnDisplay = lang.sFirst;
						btnClass = button + (page > 0 ?
							'' : ' disabled');
						break;

					case 'previous':
						btnDisplay = lang.sPrevious;
						btnClass = button + (page > 0 ?
							'' : ' disabled');
						break;

					case 'next':
						btnDisplay = lang.sNext;
						btnClass = button + (page < pages-1 ?
							'' : ' disabled');
						break;

					case 'last':
						btnDisplay = lang.sLast;
						btnClass = button + (page < pages-1 ?
							'' : ' disabled');
						break;

					default:
						btnDisplay = button + 1;
						btnClass = page === button ?
							'active' : '';
						break;
				}

				if ( btnDisplay ) {
					node = $('<li>', {
							'class': classes.sPageButton+' '+btnClass,
							'id': idx === 0 && typeof button === 'string' ?
								settings.sTableId +'_'+ button :
								null
						} )
						.append( $('<a>', {
								'href': '#',
								'aria-controls': settings.sTableId,
								'aria-label': aria[ button ],
								'data-dt-idx': counter,
								'tabindex': settings.iTabIndex
							} )
							.html( btnDisplay )
						)
						.appendTo( container );

					settings.oApi._fnBindAction(
						node, {action: button}, clickHandler
					);

					counter++;
				}
			}
		}
	};

	// IE9 throws an 'unknown error' if document.activeElement is used
	// inside an iframe or frame. 
	var activeEl;

	try {
		// Because this approach is destroying and recreating the paging
		// elements, focus is lost on the select button which is bad for
		// accessibility. So we want to restore focus once the draw has
		// completed
		activeEl = $(host).find(document.activeElement).data('dt-idx');
	}
	catch (e) {}

	attach(
		$(host).empty().html('<ul class="pagination"/>').children('ul'),
		buttons
	);

	if ( activeEl ) {
		$(host).find( '[data-dt-idx='+activeEl+']' ).focus();
	}
};


return DataTable;
}));
/*!
 DataTables Bootstrap 3 integration
 ©2011-2015 SpryMedia Ltd - datatables.net/license
*/

(function(b){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(a){return b(a,window,document)}):"object"===typeof exports?module.exports=function(a,d){a||(a=window);if(!d||!d.fn.dataTable)d=require("datatables.net")(a,d).$;return b(d,a,a.document)}:b(jQuery,window,document)})(function(b,a,d){var f=b.fn.dataTable;b.extend(!0,f.defaults,{dom:"<'row'<'col-sm-6'l><'col-sm-6'f>><'row'<'col-sm-12'tr>><'row'<'col-sm-5'i><'col-sm-7'p>>",renderer:"bootstrap"});b.extend(f.ext.classes,
{sWrapper:"dataTables_wrapper form-inline dt-bootstrap",sFilterInput:"form-control input-sm",sLengthSelect:"form-control input-sm",sProcessing:"dataTables_processing panel panel-default"});f.ext.renderer.pageButton.bootstrap=function(a,h,r,m,j,n){var o=new f.Api(a),s=a.oClasses,k=a.oLanguage.oPaginate,t=a.oLanguage.oAria.paginate||{},e,g,p=0,q=function(d,f){var l,h,i,c,m=function(a){a.preventDefault();!b(a.currentTarget).hasClass("disabled")&&o.page()!=a.data.action&&o.page(a.data.action).draw("page")};
l=0;for(h=f.length;l<h;l++)if(c=f[l],b.isArray(c))q(d,c);else{g=e="";switch(c){case "ellipsis":e="&#x2026;";g="disabled";break;case "first":e=k.sFirst;g=c+(0<j?"":" disabled");break;case "previous":e=k.sPrevious;g=c+(0<j?"":" disabled");break;case "next":e=k.sNext;g=c+(j<n-1?"":" disabled");break;case "last":e=k.sLast;g=c+(j<n-1?"":" disabled");break;default:e=c+1,g=j===c?"active":""}e&&(i=b("<li>",{"class":s.sPageButton+" "+g,id:0===r&&"string"===typeof c?a.sTableId+"_"+c:null}).append(b("<a>",{href:"#",
"aria-controls":a.sTableId,"aria-label":t[c],"data-dt-idx":p,tabindex:a.iTabIndex}).html(e)).appendTo(d),a.oApi._fnBindAction(i,{action:c},m),p++)}},i;try{i=b(h).find(d.activeElement).data("dt-idx")}catch(u){}q(b(h).empty().html('<ul class="pagination"/>').children("ul"),m);i&&b(h).find("[data-dt-idx="+i+"]").focus()};return f});
/*! DataTables Foundation integration
 * ©2011-2015 SpryMedia Ltd - datatables.net/license
 */

/**
 * DataTables integration for Foundation. This requires Foundation 5 and
 * DataTables 1.10 or newer.
 *
 * This file sets the defaults and adds options to DataTables to style its
 * controls using Foundation. See http://datatables.net/manual/styling/foundation
 * for further information.
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;

// Detect Foundation 5 / 6 as they have different element and class requirements
var meta = $('<meta class="foundation-mq"/>').appendTo('head');
DataTable.ext.foundationVersion = meta.css('font-family').match(/small|medium|large/) ? 6 : 5;
meta.remove();


$.extend( DataTable.ext.classes, {
	sWrapper:    "dataTables_wrapper dt-foundation",
	sProcessing: "dataTables_processing panel"
} );


/* Set the defaults for DataTables initialisation */
$.extend( true, DataTable.defaults, {
	dom:
		"<'row'<'small-6 columns'l><'small-6 columns'f>r>"+
		"t"+
		"<'row'<'small-6 columns'i><'small-6 columns'p>>",
	renderer: 'foundation'
} );


/* Page button renderer */
DataTable.ext.renderer.pageButton.foundation = function ( settings, host, idx, buttons, page, pages ) {
	var api = new DataTable.Api( settings );
	var classes = settings.oClasses;
	var lang = settings.oLanguage.oPaginate;
	var aria = settings.oLanguage.oAria.paginate || {};
	var btnDisplay, btnClass;
	var tag;
	var v5 = DataTable.ext.foundationVersion === 5;

	var attach = function( container, buttons ) {
		var i, ien, node, button;
		var clickHandler = function ( e ) {
			e.preventDefault();
			if ( !$(e.currentTarget).hasClass('unavailable') && api.page() != e.data.action ) {
				api.page( e.data.action ).draw( 'page' );
			}
		};

		for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
			button = buttons[i];

			if ( $.isArray( button ) ) {
				attach( container, button );
			}
			else {
				btnDisplay = '';
				btnClass = '';
				tag = null;

				switch ( button ) {
					case 'ellipsis':
						btnDisplay = '&#x2026;';
						btnClass = 'unavailable disabled';
						tag = null;
						break;

					case 'first':
						btnDisplay = lang.sFirst;
						btnClass = button + (page > 0 ?
							'' : ' unavailable disabled');
						tag = page > 0 ? 'a' : null;
						break;

					case 'previous':
						btnDisplay = lang.sPrevious;
						btnClass = button + (page > 0 ?
							'' : ' unavailable disabled');
						tag = page > 0 ? 'a' : null;
						break;

					case 'next':
						btnDisplay = lang.sNext;
						btnClass = button + (page < pages-1 ?
							'' : ' unavailable disabled');
						tag = page < pages-1 ? 'a' : null;
						break;

					case 'last':
						btnDisplay = lang.sLast;
						btnClass = button + (page < pages-1 ?
							'' : ' unavailable disabled');
						tag = page < pages-1 ? 'a' : null;
						break;

					default:
						btnDisplay = button + 1;
						btnClass = page === button ?
							'current' : '';
						tag = page === button ?
							null : 'a';
						break;
				}

				if ( v5 ) {
					tag = 'a';
				}

				if ( btnDisplay ) {
					node = $('<li>', {
							'class': classes.sPageButton+' '+btnClass,
							'aria-controls': settings.sTableId,
							'aria-label': aria[ button ],
							'tabindex': settings.iTabIndex,
							'id': idx === 0 && typeof button === 'string' ?
								settings.sTableId +'_'+ button :
								null
						} )
						.append( tag ?
							$('<'+tag+'/>', {'href': '#'} ).html( btnDisplay ) :
							btnDisplay
						)
						.appendTo( container );

					settings.oApi._fnBindAction(
						node, {action: button}, clickHandler
					);
				}
			}
		}
	};

	attach(
		$(host).empty().html('<ul class="pagination"/>').children('ul'),
		buttons
	);
};


return DataTable;
}));
/*!
 DataTables Foundation integration
 ©2011-2015 SpryMedia Ltd - datatables.net/license
*/

(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(a){return d(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net")(a,b).$;return d(b,a,a.document)}:d(jQuery,window,document)})(function(d){var a=d.fn.dataTable,b=d('<meta class="foundation-mq"/>').appendTo("head");a.ext.foundationVersion=b.css("font-family").match(/small|medium|large/)?6:5;b.remove();d.extend(a.ext.classes,
{sWrapper:"dataTables_wrapper dt-foundation",sProcessing:"dataTables_processing panel"});d.extend(!0,a.defaults,{dom:"<'row'<'small-6 columns'l><'small-6 columns'f>r>t<'row'<'small-6 columns'i><'small-6 columns'p>>",renderer:"foundation"});a.ext.renderer.pageButton.foundation=function(b,l,r,s,e,i){var m=new a.Api(b),t=b.oClasses,j=b.oLanguage.oPaginate,u=b.oLanguage.oAria.paginate||{},f,h,g,v=5===a.ext.foundationVersion,q=function(a,n){var k,o,p,c,l=function(a){a.preventDefault();!d(a.currentTarget).hasClass("unavailable")&&
m.page()!=a.data.action&&m.page(a.data.action).draw("page")};k=0;for(o=n.length;k<o;k++)if(c=n[k],d.isArray(c))q(a,c);else{h=f="";g=null;switch(c){case "ellipsis":f="&#x2026;";h="unavailable disabled";g=null;break;case "first":f=j.sFirst;h=c+(0<e?"":" unavailable disabled");g=0<e?"a":null;break;case "previous":f=j.sPrevious;h=c+(0<e?"":" unavailable disabled");g=0<e?"a":null;break;case "next":f=j.sNext;h=c+(e<i-1?"":" unavailable disabled");g=e<i-1?"a":null;break;case "last":f=j.sLast;h=c+(e<i-1?
"":" unavailable disabled");g=e<i-1?"a":null;break;default:f=c+1,h=e===c?"current":"",g=e===c?null:"a"}v&&(g="a");f&&(p=d("<li>",{"class":t.sPageButton+" "+h,"aria-controls":b.sTableId,"aria-label":u[c],tabindex:b.iTabIndex,id:0===r&&"string"===typeof c?b.sTableId+"_"+c:null}).append(g?d("<"+g+"/>",{href:"#"}).html(f):f).appendTo(a),b.oApi._fnBindAction(p,{action:c},l))}};q(d(l).empty().html('<ul class="pagination"/>').children("ul"),s)};return a});
/*! DataTables jQuery UI integration
 * ©2011-2014 SpryMedia Ltd - datatables.net/license
 */

/**
 * DataTables integration for jQuery UI. This requires jQuery UI and
 * DataTables 1.10 or newer.
 *
 * This file sets the defaults and adds options to DataTables to style its
 * controls using jQuery UI. See http://datatables.net/manual/styling/jqueryui
 * for further information.
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var sort_prefix = 'css_right ui-icon ui-icon-';
var toolbar_prefix = 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix ui-corner-';

/* Set the defaults for DataTables initialisation */
$.extend( true, DataTable.defaults, {
	dom:
		'<"'+toolbar_prefix+'tl ui-corner-tr"lfr>'+
		't'+
		'<"'+toolbar_prefix+'bl ui-corner-br"ip>',
	renderer: 'jqueryui'
} );


$.extend( DataTable.ext.classes, {
	"sWrapper":            "dataTables_wrapper dt-jqueryui",

	/* Full numbers paging buttons */
	"sPageButton":         "fg-button ui-button ui-state-default",
	"sPageButtonActive":   "ui-state-disabled",
	"sPageButtonDisabled": "ui-state-disabled",

	/* Features */
	"sPaging": "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi "+
		"ui-buttonset-multi paging_", /* Note that the type is postfixed */

	/* Sorting */
	"sSortAsc":            "ui-state-default sorting_asc",
	"sSortDesc":           "ui-state-default sorting_desc",
	"sSortable":           "ui-state-default sorting",
	"sSortableAsc":        "ui-state-default sorting_asc_disabled",
	"sSortableDesc":       "ui-state-default sorting_desc_disabled",
	"sSortableNone":       "ui-state-default sorting_disabled",
	"sSortIcon":           "DataTables_sort_icon",

	/* Scrolling */
	"sScrollHead": "dataTables_scrollHead "+"ui-state-default",
	"sScrollFoot": "dataTables_scrollFoot "+"ui-state-default",

	/* Misc */
	"sHeaderTH":  "ui-state-default",
	"sFooterTH":  "ui-state-default"
} );


DataTable.ext.renderer.header.jqueryui = function ( settings, cell, column, classes ) {
	// Calculate what the unsorted class should be
	var noSortAppliedClass = sort_prefix+'carat-2-n-s';
	var asc = $.inArray('asc', column.asSorting) !== -1;
	var desc = $.inArray('desc', column.asSorting) !== -1;

	if ( !column.bSortable || (!asc && !desc) ) {
		noSortAppliedClass = '';
	}
	else if ( asc && !desc ) {
		noSortAppliedClass = sort_prefix+'carat-1-n';
	}
	else if ( !asc && desc ) {
		noSortAppliedClass = sort_prefix+'carat-1-s';
	}

	// Setup the DOM structure
	$('<div/>')
		.addClass( 'DataTables_sort_wrapper' )
		.append( cell.contents() )
		.append( $('<span/>')
			.addClass( classes.sSortIcon+' '+noSortAppliedClass )
		)
		.appendTo( cell );

	// Attach a sort listener to update on sort
	$(settings.nTable).on( 'order.dt', function ( e, ctx, sorting, columns ) {
		if ( settings !== ctx ) {
			return;
		}

		var colIdx = column.idx;

		cell
			.removeClass( classes.sSortAsc +" "+classes.sSortDesc )
			.addClass( columns[ colIdx ] == 'asc' ?
				classes.sSortAsc : columns[ colIdx ] == 'desc' ?
					classes.sSortDesc :
					column.sSortingClass
			);

		cell
			.find( 'span.'+classes.sSortIcon )
			.removeClass(
				sort_prefix+'triangle-1-n' +" "+
				sort_prefix+'triangle-1-s' +" "+
				sort_prefix+'carat-2-n-s' +" "+
				sort_prefix+'carat-1-n' +" "+
				sort_prefix+'carat-1-s'
			)
			.addClass( columns[ colIdx ] == 'asc' ?
				sort_prefix+'triangle-1-n' : columns[ colIdx ] == 'desc' ?
					sort_prefix+'triangle-1-s' :
					noSortAppliedClass
			);
	} );
};


/*
 * TableTools jQuery UI compatibility
 * Required TableTools 2.1+
 */
if ( DataTable.TableTools ) {
	$.extend( true, DataTable.TableTools.classes, {
		"container": "DTTT_container ui-buttonset ui-buttonset-multi",
		"buttons": {
			"normal": "DTTT_button ui-button ui-state-default"
		},
		"collection": {
			"container": "DTTT_collection ui-buttonset ui-buttonset-multi"
		}
	} );
}


return DataTable;
}));
/*!
 DataTables jQuery UI integration
 ©2011-2014 SpryMedia Ltd - datatables.net/license
*/

(function(a){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(b){return a(b,window,document)}):"object"===typeof exports?module.exports=function(b,d){b||(b=window);if(!d||!d.fn.dataTable)d=require("datatables.net")(b,d).$;return a(d,b,b.document)}:a(jQuery,window,document)})(function(a){var b=a.fn.dataTable;a.extend(!0,b.defaults,{dom:'<"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix ui-corner-tl ui-corner-tr"lfr>t<"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix ui-corner-bl ui-corner-br"ip>',
renderer:"jqueryui"});a.extend(b.ext.classes,{sWrapper:"dataTables_wrapper dt-jqueryui",sPageButton:"fg-button ui-button ui-state-default",sPageButtonActive:"ui-state-disabled",sPageButtonDisabled:"ui-state-disabled",sPaging:"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",sSortAsc:"ui-state-default sorting_asc",sSortDesc:"ui-state-default sorting_desc",sSortable:"ui-state-default sorting",sSortableAsc:"ui-state-default sorting_asc_disabled",sSortableDesc:"ui-state-default sorting_desc_disabled",
sSortableNone:"ui-state-default sorting_disabled",sSortIcon:"DataTables_sort_icon",sScrollHead:"dataTables_scrollHead ui-state-default",sScrollFoot:"dataTables_scrollFoot ui-state-default",sHeaderTH:"ui-state-default",sFooterTH:"ui-state-default"});b.ext.renderer.header.jqueryui=function(b,h,e,c){var f="css_right ui-icon ui-icon-carat-2-n-s",g=-1!==a.inArray("asc",e.asSorting),i=-1!==a.inArray("desc",e.asSorting);!e.bSortable||!g&&!i?f="":g&&!i?f="css_right ui-icon ui-icon-carat-1-n":!g&&i&&(f="css_right ui-icon ui-icon-carat-1-s");
a("<div/>").addClass("DataTables_sort_wrapper").append(h.contents()).append(a("<span/>").addClass(c.sSortIcon+" "+f)).appendTo(h);a(b.nTable).on("order.dt",function(a,g,i,j){b===g&&(a=e.idx,h.removeClass(c.sSortAsc+" "+c.sSortDesc).addClass("asc"==j[a]?c.sSortAsc:"desc"==j[a]?c.sSortDesc:e.sSortingClass),h.find("span."+c.sSortIcon).removeClass("css_right ui-icon ui-icon-triangle-1-n css_right ui-icon ui-icon-triangle-1-s css_right ui-icon ui-icon-carat-2-n-s css_right ui-icon ui-icon-carat-1-n css_right ui-icon ui-icon-carat-1-s").addClass("asc"==
j[a]?"css_right ui-icon ui-icon-triangle-1-n":"desc"==j[a]?"css_right ui-icon ui-icon-triangle-1-s":f))})};b.TableTools&&a.extend(!0,b.TableTools.classes,{container:"DTTT_container ui-buttonset ui-buttonset-multi",buttons:{normal:"DTTT_button ui-button ui-state-default"},collection:{container:"DTTT_collection ui-buttonset ui-buttonset-multi"}});return b});
/*! DataTables 1.10.12
 * ©2008-2015 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     DataTables
 * @description Paginate, search and order HTML tables
 * @version     1.10.12
 * @file        jquery.dataTables.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2008-2015 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/


(function( factory ) {
	"use strict";

	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				// CommonJS environments without a window global must pass a
				// root. This will give an error otherwise
				root = window;
			}

			if ( ! $ ) {
				$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window
					require('jquery') :
					require('jquery')( root );
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}
(function( $, window, document, undefined ) {
	"use strict";

	/**
	 * DataTables is a plug-in for the jQuery Javascript library. It is a highly
	 * flexible tool, based upon the foundations of progressive enhancement,
	 * which will add advanced interaction controls to any HTML table. For a
	 * full list of features please refer to
	 * [DataTables.net](href="http://datatables.net).
	 *
	 * Note that the `DataTable` object is not a global variable but is aliased
	 * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may
	 * be  accessed.
	 *
	 *  @class
	 *  @param {object} [init={}] Configuration object for DataTables. Options
	 *    are defined by {@link DataTable.defaults}
	 *  @requires jQuery 1.7+
	 *
	 *  @example
	 *    // Basic initialisation
	 *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
	 *
	 *  @example
	 *    // Initialisation with configuration options - in this case, disable
	 *    // pagination and sorting.
	 *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
	 */
	var DataTable = function ( options )
	{
		/**
		 * Perform a jQuery selector action on the table's TR elements (from the tbody) and
		 * return the resulting jQuery object.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
		 *    criterion ("applied") or all TR elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {object} jQuery object, filtered by the given selector.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"search": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
		 */
		this.$ = function ( sSelector, oOpts )
		{
			return this.api(true).$( sSelector, oOpts );
		};
		
		
		/**
		 * Almost identical to $ in operation, but in this case returns the data for the matched
		 * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
		 * rather than any descendants, so the data can be obtained for the row/cell. If matching
		 * rows are found, the data returned is the original data array/object that was used to
		 * create the row (or a generated array if from a DOM source).
		 *
		 * This method is often useful in-combination with $ where both functions are given the
		 * same parameters and the array indexes will match identically.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
		 *    criterion ("applied") or all elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the data in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {array} Data for the matched elements. If any elements, as a result of the
		 *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
		 *    entry in the array.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"search": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the search" );
		 *    } );
		 */
		this._ = function ( sSelector, oOpts )
		{
			return this.api(true).rows( sSelector, oOpts ).data();
		};
		
		
		/**
		 * Create a DataTables Api instance, with the currently selected tables for
		 * the Api's context.
		 * @param {boolean} [traditional=false] Set the API instance's context to be
		 *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was
		 *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),
		 *   or if all tables captured in the jQuery object should be used.
		 * @return {DataTables.Api}
		 */
		this.api = function ( traditional )
		{
			return traditional ?
				new _Api(
					_fnSettingsFromNode( this[ _ext.iApiIndex ] )
				) :
				new _Api( this );
		};
		
		
		/**
		 * Add a single new row or multiple rows of data to the table. Please note
		 * that this is suitable for client-side processing only - if you are using
		 * server-side processing (i.e. "bServerSide": true), then to add data, you
		 * must add it to the data source, i.e. the server-side, through an Ajax call.
		 *  @param {array|object} data The data to be added to the table. This can be:
		 *    <ul>
		 *      <li>1D array of data - add a single row with the data provided</li>
		 *      <li>2D array of arrays - add multiple rows in a single call</li>
		 *      <li>object - data object when using <i>mData</i></li>
		 *      <li>array of objects - multiple data objects when using <i>mData</i></li>
		 *    </ul>
		 *  @param {bool} [redraw=true] redraw the table or not
		 *  @returns {array} An array of integers, representing the list of indexes in
		 *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
		 *    the table.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Global var for counter
		 *    var giCount = 2;
		 *
		 *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
		 *
		 *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
		 */
		this.fnAddData = function( data, redraw )
		{
			var api = this.api( true );
		
			/* Check if we want to add multiple rows or not */
			var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?
				api.rows.add( data ) :
				api.row.add( data );
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return rows.flatten().toArray();
		};
		
		
		/**
		 * This function will make DataTables recalculate the column sizes, based on the data
		 * contained in the table and the sizes applied to the columns (in the DOM, CSS or
		 * through the sWidth parameter). This can be useful when the width of the table's
		 * parent element changes (for example a window resize).
		 *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).bind('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
		 */
		this.fnAdjustColumnSizing = function ( bRedraw )
		{
			var api = this.api( true ).columns.adjust();
			var settings = api.settings()[0];
			var scroll = settings.oScroll;
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw( false );
			}
			else if ( scroll.sX !== "" || scroll.sY !== "" ) {
				/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
				_fnScrollDraw( settings );
			}
		};
		
		
		/**
		 * Quickly and simply clear a table
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
		 */
		this.fnClearTable = function( bRedraw )
		{
			var api = this.api( true ).clear();
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
		};
		
		
		/**
		 * The exact opposite of 'opening' a row, this function will close any rows which
		 * are currently 'open'.
		 *  @param {node} nTr the table row to 'close'
		 *  @returns {int} 0 on success, or 1 if failed (can't find the row)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnClose = function( nTr )
		{
			this.api( true ).row( nTr ).child.hide();
		};
		
		
		/**
		 * Remove a row for the table
		 *  @param {mixed} target The index of the row from aoData to be deleted, or
		 *    the TR element you want to delete
		 *  @param {function|null} [callBack] Callback function
		 *  @param {bool} [redraw=true] Redraw the table or not
		 *  @returns {array} The row that was deleted
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
		 */
		this.fnDeleteRow = function( target, callback, redraw )
		{
			var api = this.api( true );
			var rows = api.rows( target );
			var settings = rows.settings()[0];
			var data = settings.aoData[ rows[0][0] ];
		
			rows.remove();
		
			if ( callback ) {
				callback.call( this, settings, data );
			}
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return data;
		};
		
		
		/**
		 * Restore the table to it's original state in the DOM by removing all of DataTables
		 * enhancements, alterations to the DOM structure of the table and event listeners.
		 *  @param {boolean} [remove=false] Completely remove the table from the DOM
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
		 */
		this.fnDestroy = function ( remove )
		{
			this.api( true ).destroy( remove );
		};
		
		
		/**
		 * Redraw the table
		 *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
		 */
		this.fnDraw = function( complete )
		{
			// Note that this isn't an exact match to the old call to _fnDraw - it takes
			// into account the new data, but can hold position.
			this.api( true ).draw( complete );
		};
		
		
		/**
		 * Filter the input based on data
		 *  @param {string} sInput String to filter the table on
		 *  @param {int|null} [iColumn] Column to limit filtering to
		 *  @param {bool} [bRegex=false] Treat as regular expression or not
		 *  @param {bool} [bSmart=true] Perform smart filtering or not
		 *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
		 *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
		 */
		this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )
		{
			var api = this.api( true );
		
			if ( iColumn === null || iColumn === undefined ) {
				api.search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
			else {
				api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
		
			api.draw();
		};
		
		
		/**
		 * Get the data for the whole table, an individual row or an individual cell based on the
		 * provided parameters.
		 *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as
		 *    a TR node then the data source for the whole row will be returned. If given as a
		 *    TD/TH cell node then iCol will be automatically calculated and the data for the
		 *    cell returned. If given as an integer, then this is treated as the aoData internal
		 *    data index for the row (see fnGetPosition) and the data for that row used.
		 *  @param {int} [col] Optional column index that you want the data of.
		 *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
		 *    returned. If mRow is defined, just data for that row, and is iCol is
		 *    defined, only data for the designated cell is returned.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Row data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Individual cell data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
		 */
		this.fnGetData = function( src, col )
		{
			var api = this.api( true );
		
			if ( src !== undefined ) {
				var type = src.nodeName ? src.nodeName.toLowerCase() : '';
		
				return col !== undefined || type == 'td' || type == 'th' ?
					api.cell( src, col ).data() :
					api.row( src ).data() || null;
			}
		
			return api.data().toArray();
		};
		
		
		/**
		 * Get an array of the TR nodes that are used in the table's body. Note that you will
		 * typically want to use the '$' API method in preference to this as it is more
		 * flexible.
		 *  @param {int} [iRow] Optional row index for the TR element you want
		 *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
		 *    in the table's body, or iRow is defined, just the TR element requested.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
		 */
		this.fnGetNodes = function( iRow )
		{
			var api = this.api( true );
		
			return iRow !== undefined ?
				api.row( iRow ).node() :
				api.rows().nodes().flatten().toArray();
		};
		
		
		/**
		 * Get the array indexes of a particular cell from it's DOM element
		 * and column index including hidden columns
		 *  @param {node} node this can either be a TR, TD or TH in the table's body
		 *  @returns {int} If nNode is given as a TR, then a single index is returned, or
		 *    if given as a cell, an array of [row index, column index (visible),
		 *    column index (all)] is given.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnGetPosition = function( node )
		{
			var api = this.api( true );
			var nodeName = node.nodeName.toUpperCase();
		
			if ( nodeName == 'TR' ) {
				return api.row( node ).index();
			}
			else if ( nodeName == 'TD' || nodeName == 'TH' ) {
				var cell = api.cell( node ).index();
		
				return [
					cell.row,
					cell.columnVisible,
					cell.column
				];
			}
			return null;
		};
		
		
		/**
		 * Check to see if a row is 'open' or not.
		 *  @param {node} nTr the table row to check
		 *  @returns {boolean} true if the row is currently open, false otherwise
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnIsOpen = function( nTr )
		{
			return this.api( true ).row( nTr ).child.isShown();
		};
		
		
		/**
		 * This function will place a new row directly after a row which is currently
		 * on display on the page, with the HTML contents that is passed into the
		 * function. This can be used, for example, to ask for confirmation that a
		 * particular record should be deleted.
		 *  @param {node} nTr The table row to 'open'
		 *  @param {string|node|jQuery} mHtml The HTML to put into the row
		 *  @param {string} sClass Class to give the new TD cell
		 *  @returns {node} The row opened. Note that if the table row passed in as the
		 *    first parameter, is not found in the table, this method will silently
		 *    return.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnOpen = function( nTr, mHtml, sClass )
		{
			return this.api( true )
				.row( nTr )
				.child( mHtml, sClass )
				.show()
				.child()[0];
		};
		
		
		/**
		 * Change the pagination - provides the internal logic for pagination in a simple API
		 * function. With this function you can have a DataTables table go to the next,
		 * previous, first or last pages.
		 *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
		 *    or page number to jump to (integer), note that page 0 is the first page.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
		 */
		this.fnPageChange = function ( mAction, bRedraw )
		{
			var api = this.api( true ).page( mAction );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw(false);
			}
		};
		
		
		/**
		 * Show a particular column
		 *  @param {int} iCol The column whose display should be changed
		 *  @param {bool} bShow Show (true) or hide (false) the column
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
		 */
		this.fnSetColumnVis = function ( iCol, bShow, bRedraw )
		{
			var api = this.api( true ).column( iCol ).visible( bShow );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.columns.adjust().draw();
			}
		};
		
		
		/**
		 * Get the settings for a particular table for external manipulation
		 *  @returns {object} DataTables settings object. See
		 *    {@link DataTable.models.oSettings}
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
		 */
		this.fnSettings = function()
		{
			return _fnSettingsFromNode( this[_ext.iApiIndex] );
		};
		
		
		/**
		 * Sort the table by a particular column
		 *  @param {int} iCol the data index to sort on. Note that this will not match the
		 *    'display index' if you have hidden data entries
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
		 */
		this.fnSort = function( aaSort )
		{
			this.api( true ).order( aaSort ).draw();
		};
		
		
		/**
		 * Attach a sort listener to an element for a given column
		 *  @param {node} nNode the element to attach the sort listener to
		 *  @param {int} iColumn the column that a click on this node will sort on
		 *  @param {function} [fnCallback] callback function when sort is run
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
		 */
		this.fnSortListener = function( nNode, iColumn, fnCallback )
		{
			this.api( true ).order.listener( nNode, iColumn, fnCallback );
		};
		
		
		/**
		 * Update a table cell or row - this method will accept either a single value to
		 * update the cell with, an array of values with one element for each column or
		 * an object in the same format as the original data source. The function is
		 * self-referencing in order to make the multi column updates easier.
		 *  @param {object|array|string} mData Data to update the cell/row with
		 *  @param {node|int} mRow TR element you want to update or the aoData index
		 *  @param {int} [iColumn] The column to update, give as null or undefined to
		 *    update a whole row.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @param {bool} [bAction=true] Perform pre-draw actions or not
		 *  @returns {int} 0 on success, 1 on error
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
		 */
		this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )
		{
			var api = this.api( true );
		
			if ( iColumn === undefined || iColumn === null ) {
				api.row( mRow ).data( mData );
			}
			else {
				api.cell( mRow, iColumn ).data( mData );
			}
		
			if ( bAction === undefined || bAction ) {
				api.columns.adjust();
			}
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
			return 0;
		};
		
		
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used, in order
		 * to ensure compatibility.
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
		 *    formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
		 *    version, or false if this version of DataTales is not suitable
		 *  @method
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		this.fnVersionCheck = _ext.fnVersionCheck;
		

		var _that = this;
		var emptyInit = options === undefined;
		var len = this.length;

		if ( emptyInit ) {
			options = {};
		}

		this.oApi = this.internal = _ext.internal;

		// Extend with old style plug-in API methods
		for ( var fn in DataTable.ext.internal ) {
			if ( fn ) {
				this[fn] = _fnExternApiFunc(fn);
			}
		}

		this.each(function() {
			// For each initialisation we want to give it a clean initialisation
			// object that can be bashed around
			var o = {};
			var oInit = len > 1 ? // optimisation for single table case
				_fnExtend( o, options, true ) :
				options;

			/*global oInit,_that,emptyInit*/
			var i=0, iLen, j, jLen, k, kLen;
			var sId = this.getAttribute( 'id' );
			var bInitHandedOff = false;
			var defaults = DataTable.defaults;
			var $this = $(this);
			
			
			/* Sanity check */
			if ( this.nodeName.toLowerCase() != 'table' )
			{
				_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );
				return;
			}
			
			/* Backwards compatibility for the defaults */
			_fnCompatOpts( defaults );
			_fnCompatCols( defaults.column );
			
			/* Convert the camel-case defaults to Hungarian */
			_fnCamelToHungarian( defaults, defaults, true );
			_fnCamelToHungarian( defaults.column, defaults.column, true );
			
			/* Setting up the initialisation object */
			_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );
			
			
			
			/* Check to see if we are re-initialising a table */
			var allSettings = DataTable.settings;
			for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )
			{
				var s = allSettings[i];
			
				/* Base check on table node */
				if ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )
				{
					var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
					var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
			
					if ( emptyInit || bRetrieve )
					{
						return s.oInstance;
					}
					else if ( bDestroy )
					{
						s.oInstance.fnDestroy();
						break;
					}
					else
					{
						_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );
						return;
					}
				}
			
				/* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
				if ( s.sTableId == this.id )
				{
					allSettings.splice( i, 1 );
					break;
				}
			}
			
			/* Ensure the table has an ID - required for accessibility */
			if ( sId === null || sId === "" )
			{
				sId = "DataTables_Table_"+(DataTable.ext._unique++);
				this.id = sId;
			}
			
			/* Create the settings object for this table and set some of the default parameters */
			var oSettings = $.extend( true, {}, DataTable.models.oSettings, {
				"sDestroyWidth": $this[0].style.width,
				"sInstance":     sId,
				"sTableId":      sId
			} );
			oSettings.nTable = this;
			oSettings.oApi   = _that.internal;
			oSettings.oInit  = oInit;
			
			allSettings.push( oSettings );
			
			// Need to add the instance after the instance after the settings object has been added
			// to the settings array, so we can self reference the table instance if more than one
			oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();
			
			// Backwards compatibility, before we apply all the defaults
			_fnCompatOpts( oInit );
			
			if ( oInit.oLanguage )
			{
				_fnLanguageCompat( oInit.oLanguage );
			}
			
			// If the length menu is given, but the init display length is not, use the length menu
			if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
			{
				oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?
					oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
			}
			
			// Apply the defaults and init options to make a single init object will all
			// options defined from defaults and instance options.
			oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );
			
			
			// Map the initialisation options onto the settings object
			_fnMap( oSettings.oFeatures, oInit, [
				"bPaginate",
				"bLengthChange",
				"bFilter",
				"bSort",
				"bSortMulti",
				"bInfo",
				"bProcessing",
				"bAutoWidth",
				"bSortClasses",
				"bServerSide",
				"bDeferRender"
			] );
			_fnMap( oSettings, oInit, [
				"asStripeClasses",
				"ajax",
				"fnServerData",
				"fnFormatNumber",
				"sServerMethod",
				"aaSorting",
				"aaSortingFixed",
				"aLengthMenu",
				"sPaginationType",
				"sAjaxSource",
				"sAjaxDataProp",
				"iStateDuration",
				"sDom",
				"bSortCellsTop",
				"iTabIndex",
				"fnStateLoadCallback",
				"fnStateSaveCallback",
				"renderer",
				"searchDelay",
				"rowId",
				[ "iCookieDuration", "iStateDuration" ], // backwards compat
				[ "oSearch", "oPreviousSearch" ],
				[ "aoSearchCols", "aoPreSearchCols" ],
				[ "iDisplayLength", "_iDisplayLength" ],
				[ "bJQueryUI", "bJUI" ]
			] );
			_fnMap( oSettings.oScroll, oInit, [
				[ "sScrollX", "sX" ],
				[ "sScrollXInner", "sXInner" ],
				[ "sScrollY", "sY" ],
				[ "bScrollCollapse", "bCollapse" ]
			] );
			_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
			
			/* Callback functions which are array driven */
			_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );
			_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );
			_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );
			_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );
			_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );
			
			oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );
			
			/* Browser support detection */
			_fnBrowserDetect( oSettings );
			
			var oClasses = oSettings.oClasses;
			
			// @todo Remove in 1.11
			if ( oInit.bJQueryUI )
			{
				/* Use the JUI classes object for display. You could clone the oStdClasses object if
				 * you want to have multiple tables with multiple independent classes
				 */
				$.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );
			
				if ( oInit.sDom === defaults.sDom && defaults.sDom === "lfrtip" )
				{
					/* Set the DOM to use a layout suitable for jQuery UI's theming */
					oSettings.sDom = '<"H"lfr>t<"F"ip>';
				}
			
				if ( ! oSettings.renderer ) {
					oSettings.renderer = 'jqueryui';
				}
				else if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {
					oSettings.renderer.header = 'jqueryui';
				}
			}
			else
			{
				$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );
			}
			$this.addClass( oClasses.sTable );
			
			
			if ( oSettings.iInitDisplayStart === undefined )
			{
				/* Display start point, taking into account the save saving */
				oSettings.iInitDisplayStart = oInit.iDisplayStart;
				oSettings._iDisplayStart = oInit.iDisplayStart;
			}
			
			if ( oInit.iDeferLoading !== null )
			{
				oSettings.bDeferLoading = true;
				var tmp = $.isArray( oInit.iDeferLoading );
				oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
				oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
			}
			
			/* Language definitions */
			var oLanguage = oSettings.oLanguage;
			$.extend( true, oLanguage, oInit.oLanguage );
			
			if ( oLanguage.sUrl !== "" )
			{
				/* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
				$.ajax( {
					dataType: 'json',
					url: oLanguage.sUrl,
					success: function ( json ) {
						_fnLanguageCompat( json );
						_fnCamelToHungarian( defaults.oLanguage, json );
						$.extend( true, oLanguage, json );
						_fnInitialise( oSettings );
					},
					error: function () {
						// Error occurred loading language file, continue on as best we can
						_fnInitialise( oSettings );
					}
				} );
				bInitHandedOff = true;
			}
			
			/*
			 * Stripes
			 */
			if ( oInit.asStripeClasses === null )
			{
				oSettings.asStripeClasses =[
					oClasses.sStripeOdd,
					oClasses.sStripeEven
				];
			}
			
			/* Remove row stripe classes if they are already on the table row */
			var stripeClasses = oSettings.asStripeClasses;
			var rowOne = $this.children('tbody').find('tr').eq(0);
			if ( $.inArray( true, $.map( stripeClasses, function(el, i) {
				return rowOne.hasClass(el);
			} ) ) !== -1 ) {
				$('tbody tr', this).removeClass( stripeClasses.join(' ') );
				oSettings.asDestroyStripes = stripeClasses.slice();
			}
			
			/*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName('thead');
			if ( nThead.length !== 0 )
			{
				_fnDetectHeader( oSettings.aoHeader, nThead[0] );
				anThs = _fnGetUniqueThs( oSettings );
			}
			
			/* If not given a column array, generate one with nulls */
			if ( oInit.aoColumns === null )
			{
				aoColumnsInit = [];
				for ( i=0, iLen=anThs.length ; i<iLen ; i++ )
				{
					aoColumnsInit.push( null );
				}
			}
			else
			{
				aoColumnsInit = oInit.aoColumns;
			}
			
			/* Add the columns */
			for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )
			{
				_fnAddColumn( oSettings, anThs ? anThs[i] : null );
			}
			
			/* Apply the column definitions */
			_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
				_fnColumnOptions( oSettings, iCol, oDef );
			} );
			
			/* HTML5 attribute detection - build an mData object automatically if the
			 * attributes are found
			 */
			if ( rowOne.length ) {
				var a = function ( cell, name ) {
					return cell.getAttribute( 'data-'+name ) !== null ? name : null;
				};
			
				$( rowOne[0] ).children('th, td').each( function (i, cell) {
					var col = oSettings.aoColumns[i];
			
					if ( col.mData === i ) {
						var sort = a( cell, 'sort' ) || a( cell, 'order' );
						var filter = a( cell, 'filter' ) || a( cell, 'search' );
			
						if ( sort !== null || filter !== null ) {
							col.mData = {
								_:      i+'.display',
								sort:   sort !== null   ? i+'.@data-'+sort   : undefined,
								type:   sort !== null   ? i+'.@data-'+sort   : undefined,
								filter: filter !== null ? i+'.@data-'+filter : undefined
							};
			
							_fnColumnOptions( oSettings, i );
						}
					}
				} );
			}
			
			var features = oSettings.oFeatures;
			
			/* Must be done after everything which can be overridden by the state saving! */
			if ( oInit.bStateSave )
			{
				features.bStateSave = true;
				_fnLoadState( oSettings, oInit );
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );
			}
			
			
			/*
			 * Sorting
			 * @todo For modularisation (1.11) this needs to do into a sort start up handler
			 */
			
			// If aaSorting is not defined, then we use the first indicator in asSorting
			// in case that has been altered, so the default sort reflects that option
			if ( oInit.aaSorting === undefined )
			{
				var sorting = oSettings.aaSorting;
				for ( i=0, iLen=sorting.length ; i<iLen ; i++ )
				{
					sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];
				}
			}
			
			/* Do a first pass on the sorting classes (allows any size changes to be taken into
			 * account, and also will apply sorting disabled classes if disabled
			 */
			_fnSortingClasses( oSettings );
			
			if ( features.bSort )
			{
				_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
					if ( oSettings.bSorted ) {
						var aSort = _fnSortFlatten( oSettings );
						var sortedColumns = {};
			
						$.each( aSort, function (i, val) {
							sortedColumns[ val.src ] = val.dir;
						} );
			
						_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );
						_fnSortAria( oSettings );
					}
				} );
			}
			
			_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
				if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {
					_fnSortingClasses( oSettings );
				}
			}, 'sc' );
			
			
			/*
			 * Final init
			 * Cache the header, body and footer as required, creating them if needed
			 */
			
			// Work around for Webkit bug 83867 - store the caption-side before removing from doc
			var captions = $this.children('caption').each( function () {
				this._captionSide = $this.css('caption-side');
			} );
			
			var thead = $this.children('thead');
			if ( thead.length === 0 )
			{
				thead = $('<thead/>').appendTo(this);
			}
			oSettings.nTHead = thead[0];
			
			var tbody = $this.children('tbody');
			if ( tbody.length === 0 )
			{
				tbody = $('<tbody/>').appendTo(this);
			}
			oSettings.nTBody = tbody[0];
			
			var tfoot = $this.children('tfoot');
			if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") )
			{
				// If we are a scrolling table, and no footer has been given, then we need to create
				// a tfoot element for the caption element to be appended to
				tfoot = $('<tfoot/>').appendTo(this);
			}
			
			if ( tfoot.length === 0 || tfoot.children().length === 0 ) {
				$this.addClass( oClasses.sNoFooter );
			}
			else if ( tfoot.length > 0 ) {
				oSettings.nTFoot = tfoot[0];
				_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );
			}
			
			/* Check if there is data passing into the constructor */
			if ( oInit.aaData )
			{
				for ( i=0 ; i<oInit.aaData.length ; i++ )
				{
					_fnAddData( oSettings, oInit.aaData[ i ] );
				}
			}
			else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' )
			{
				/* Grab the data from the page - only do this when deferred loading or no Ajax
				 * source since there is no point in reading the DOM data if we are then going
				 * to replace it with Ajax data
				 */
				_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );
			}
			
			/* Copy the data index array */
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
			/* Initialisation complete - table can be drawn */
			oSettings.bInitialised = true;
			
			/* Check if we need to initialise the table (it might not have been handed off to the
			 * language processor)
			 */
			if ( bInitHandedOff === false )
			{
				_fnInitialise( oSettings );
			}
		} );
		_that = null;
		return this;
	};

	
	/*
	 * It is useful to have variables which are scoped locally so only the
	 * DataTables functions can access them and they don't leak into global space.
	 * At the same time these functions are often useful over multiple files in the
	 * core and API, so we list, or at least document, all variables which are used
	 * by DataTables as private variables here. This also ensures that there is no
	 * clashing of variable names and that they can easily referenced for reuse.
	 */
	
	
	// Defined else where
	//  _selector_run
	//  _selector_opts
	//  _selector_first
	//  _selector_row_indexes
	
	var _ext; // DataTable.ext
	var _Api; // DataTable.Api
	var _api_register; // DataTable.Api.register
	var _api_registerPlural; // DataTable.Api.registerPlural
	
	var _re_dic = {};
	var _re_new_lines = /[\r\n]/g;
	var _re_html = /<.*?>/g;
	var _re_date_start = /^[\w\+\-]/;
	var _re_date_end = /[\w\+\-]$/;
	
	// Escape regular expression special characters
	var _re_escape_regex = new RegExp( '(\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ].join('|\\') + ')', 'g' );
	
	// http://en.wikipedia.org/wiki/Foreign_exchange_market
	// - \u20BD - Russian ruble.
	// - \u20a9 - South Korean Won
	// - \u20BA - Turkish Lira
	// - \u20B9 - Indian Rupee
	// - R - Brazil (R$) and South Africa
	// - fr - Swiss Franc
	// - kr - Swedish krona, Norwegian krone and Danish krone
	// - \u2009 is thin space and \u202F is narrow no-break space, both used in many
	//   standards as thousands separators.
	var _re_formatted_numeric = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi;
	
	
	var _empty = function ( d ) {
		return !d || d === true || d === '-' ? true : false;
	};
	
	
	var _intVal = function ( s ) {
		var integer = parseInt( s, 10 );
		return !isNaN(integer) && isFinite(s) ? integer : null;
	};
	
	// Convert from a formatted number with characters other than `.` as the
	// decimal place, to a Javascript number
	var _numToDecimal = function ( num, decimalPoint ) {
		// Cache created regular expressions for speed as this function is called often
		if ( ! _re_dic[ decimalPoint ] ) {
			_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );
		}
		return typeof num === 'string' && decimalPoint !== '.' ?
			num.replace( /\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :
			num;
	};
	
	
	var _isNumber = function ( d, decimalPoint, formatted ) {
		var strType = typeof d === 'string';
	
		// If empty return immediately so there must be a number if it is a
		// formatted string (this stops the string "k", or "kr", etc being detected
		// as a formatted number for currency
		if ( _empty( d ) ) {
			return true;
		}
	
		if ( decimalPoint && strType ) {
			d = _numToDecimal( d, decimalPoint );
		}
	
		if ( formatted && strType ) {
			d = d.replace( _re_formatted_numeric, '' );
		}
	
		return !isNaN( parseFloat(d) ) && isFinite( d );
	};
	
	
	// A string without HTML in it can be considered to be HTML still
	var _isHtml = function ( d ) {
		return _empty( d ) || typeof d === 'string';
	};
	
	
	var _htmlNumeric = function ( d, decimalPoint, formatted ) {
		if ( _empty( d ) ) {
			return true;
		}
	
		var html = _isHtml( d );
		return ! html ?
			null :
			_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?
				true :
				null;
	};
	
	
	var _pluck = function ( a, prop, prop2 ) {
		var out = [];
		var i=0, ien=a.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[i] && a[i][ prop ] ) {
					out.push( a[i][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				if ( a[i] ) {
					out.push( a[i][ prop ] );
				}
			}
		}
	
		return out;
	};
	
	
	// Basically the same as _pluck, but rather than looping over `a` we use `order`
	// as the indexes to pick from `a`
	var _pluck_order = function ( a, order, prop, prop2 )
	{
		var out = [];
		var i=0, ien=order.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[ order[i] ][ prop ] ) {
					out.push( a[ order[i] ][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				out.push( a[ order[i] ][ prop ] );
			}
		}
	
		return out;
	};
	
	
	var _range = function ( len, start )
	{
		var out = [];
		var end;
	
		if ( start === undefined ) {
			start = 0;
			end = len;
		}
		else {
			end = start;
			start = len;
		}
	
		for ( var i=start ; i<end ; i++ ) {
			out.push( i );
		}
	
		return out;
	};
	
	
	var _removeEmpty = function ( a )
	{
		var out = [];
	
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( a[i] ) { // careful - will remove all falsy values!
				out.push( a[i] );
			}
		}
	
		return out;
	};
	
	
	var _stripHtml = function ( d ) {
		return d.replace( _re_html, '' );
	};
	
	
	/**
	 * Find the unique elements in a source array.
	 *
	 * @param  {array} src Source array
	 * @return {array} Array of unique items
	 * @ignore
	 */
	var _unique = function ( src )
	{
		// A faster unique method is to use object keys to identify used values,
		// but this doesn't work with arrays or objects, which we must also
		// consider. See jsperf.com/compare-array-unique-versions/4 for more
		// information.
		var
			out = [],
			val,
			i, ien=src.length,
			j, k=0;
	
		again: for ( i=0 ; i<ien ; i++ ) {
			val = src[i];
	
			for ( j=0 ; j<k ; j++ ) {
				if ( out[j] === val ) {
					continue again;
				}
			}
	
			out.push( val );
			k++;
		}
	
		return out;
	};
	
	
	/**
	 * DataTables utility methods
	 * 
	 * This namespace provides helper methods that DataTables uses internally to
	 * create a DataTable, but which are not exclusively used only for DataTables.
	 * These methods can be used by extension authors to save the duplication of
	 * code.
	 *
	 *  @namespace
	 */
	DataTable.util = {
		/**
		 * Throttle the calls to a function. Arguments and context are maintained
		 * for the throttled function.
		 *
		 * @param {function} fn Function to be called
		 * @param {integer} freq Call frequency in mS
		 * @return {function} Wrapped function
		 */
		throttle: function ( fn, freq ) {
			var
				frequency = freq !== undefined ? freq : 200,
				last,
				timer;
	
			return function () {
				var
					that = this,
					now  = +new Date(),
					args = arguments;
	
				if ( last && now < last + frequency ) {
					clearTimeout( timer );
	
					timer = setTimeout( function () {
						last = undefined;
						fn.apply( that, args );
					}, frequency );
				}
				else {
					last = now;
					fn.apply( that, args );
				}
			};
		},
	
	
		/**
		 * Escape a string such that it can be used in a regular expression
		 *
		 *  @param {string} val string to escape
		 *  @returns {string} escaped string
		 */
		escapeRegex: function ( val ) {
			return val.replace( _re_escape_regex, '\\$1' );
		}
	};
	
	
	
	/**
	 * Create a mapping object that allows camel case parameters to be looked up
	 * for their Hungarian counterparts. The mapping is stored in a private
	 * parameter called `_hungarianMap` which can be accessed on the source object.
	 *  @param {object} o
	 *  @memberof DataTable#oApi
	 */
	function _fnHungarianMap ( o )
	{
		var
			hungarian = 'a aa ai ao as b fn i m o s ',
			match,
			newKey,
			map = {};
	
		$.each( o, function (key, val) {
			match = key.match(/^([^A-Z]+?)([A-Z])/);
	
			if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
			{
				newKey = key.replace( match[0], match[2].toLowerCase() );
				map[ newKey ] = key;
	
				if ( match[1] === 'o' )
				{
					_fnHungarianMap( o[key] );
				}
			}
		} );
	
		o._hungarianMap = map;
	}
	
	
	/**
	 * Convert from camel case parameters to Hungarian, based on a Hungarian map
	 * created by _fnHungarianMap.
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 *  @memberof DataTable#oApi
	 */
	function _fnCamelToHungarian ( src, user, force )
	{
		if ( ! src._hungarianMap ) {
			_fnHungarianMap( src );
		}
	
		var hungarianKey;
	
		$.each( user, function (key, val) {
			hungarianKey = src._hungarianMap[ key ];
	
			if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
			{
				// For objects, we need to buzz down into the object to copy parameters
				if ( hungarianKey.charAt(0) === 'o' )
				{
					// Copy the camelCase options over to the hungarian
					if ( ! user[ hungarianKey ] ) {
						user[ hungarianKey ] = {};
					}
					$.extend( true, user[hungarianKey], user[key] );
	
					_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );
				}
				else {
					user[hungarianKey] = user[ key ];
				}
			}
		} );
	}
	
	
	/**
	 * Language compatibility - when certain options are given, and others aren't, we
	 * need to duplicate the values over, in order to provide backwards compatibility
	 * with older language files.
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnLanguageCompat( lang )
	{
		var defaults = DataTable.defaults.oLanguage;
		var zeroRecords = lang.sZeroRecords;
	
		/* Backwards compatibility - if there is no sEmptyTable given, then use the same as
		 * sZeroRecords - assuming that is given.
		 */
		if ( ! lang.sEmptyTable && zeroRecords &&
			defaults.sEmptyTable === "No data available in table" )
		{
			_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );
		}
	
		/* Likewise with loading records */
		if ( ! lang.sLoadingRecords && zeroRecords &&
			defaults.sLoadingRecords === "Loading..." )
		{
			_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );
		}
	
		// Old parameter name of the thousands separator mapped onto the new
		if ( lang.sInfoThousands ) {
			lang.sThousands = lang.sInfoThousands;
		}
	
		var decimal = lang.sDecimal;
		if ( decimal ) {
			_addNumericSort( decimal );
		}
	}
	
	
	/**
	 * Map one parameter onto another
	 *  @param {object} o Object to map
	 *  @param {*} knew The new parameter name
	 *  @param {*} old The old parameter name
	 */
	var _fnCompatMap = function ( o, knew, old ) {
		if ( o[ knew ] !== undefined ) {
			o[ old ] = o[ knew ];
		}
	};
	
	
	/**
	 * Provide backwards compatibility for the main DT options. Note that the new
	 * options are mapped onto the old parameters, so this is an external interface
	 * change only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatOpts ( init )
	{
		_fnCompatMap( init, 'ordering',      'bSort' );
		_fnCompatMap( init, 'orderMulti',    'bSortMulti' );
		_fnCompatMap( init, 'orderClasses',  'bSortClasses' );
		_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );
		_fnCompatMap( init, 'order',         'aaSorting' );
		_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );
		_fnCompatMap( init, 'paging',        'bPaginate' );
		_fnCompatMap( init, 'pagingType',    'sPaginationType' );
		_fnCompatMap( init, 'pageLength',    'iDisplayLength' );
		_fnCompatMap( init, 'searching',     'bFilter' );
	
		// Boolean initialisation of x-scrolling
		if ( typeof init.sScrollX === 'boolean' ) {
			init.sScrollX = init.sScrollX ? '100%' : '';
		}
		if ( typeof init.scrollX === 'boolean' ) {
			init.scrollX = init.scrollX ? '100%' : '';
		}
	
		// Column search objects are in an array, so it needs to be converted
		// element by element
		var searchCols = init.aoSearchCols;
	
		if ( searchCols ) {
			for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {
				if ( searchCols[i] ) {
					_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );
				}
			}
		}
	}
	
	
	/**
	 * Provide backwards compatibility for column options. Note that the new options
	 * are mapped onto the old parameters, so this is an external interface change
	 * only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatCols ( init )
	{
		_fnCompatMap( init, 'orderable',     'bSortable' );
		_fnCompatMap( init, 'orderData',     'aDataSort' );
		_fnCompatMap( init, 'orderSequence', 'asSorting' );
		_fnCompatMap( init, 'orderDataType', 'sortDataType' );
	
		// orderData can be given as an integer
		var dataSort = init.aDataSort;
		if ( dataSort && ! $.isArray( dataSort ) ) {
			init.aDataSort = [ dataSort ];
		}
	}
	
	
	/**
	 * Browser feature detection for capabilities, quirks
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBrowserDetect( settings )
	{
		// We don't need to do this every time DataTables is constructed, the values
		// calculated are specific to the browser and OS configuration which we
		// don't expect to change between initialisations
		if ( ! DataTable.__browser ) {
			var browser = {};
			DataTable.__browser = browser;
	
			// Scrolling feature / quirks detection
			var n = $('<div/>')
				.css( {
					position: 'fixed',
					top: 0,
					left: 0,
					height: 1,
					width: 1,
					overflow: 'hidden'
				} )
				.append(
					$('<div/>')
						.css( {
							position: 'absolute',
							top: 1,
							left: 1,
							width: 100,
							overflow: 'scroll'
						} )
						.append(
							$('<div/>')
								.css( {
									width: '100%',
									height: 10
								} )
						)
				)
				.appendTo( 'body' );
	
			var outer = n.children();
			var inner = outer.children();
	
			// Numbers below, in order, are:
			// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth
			//
			// IE6 XP:                           100 100 100  83
			// IE7 Vista:                        100 100 100  83
			// IE 8+ Windows:                     83  83 100  83
			// Evergreen Windows:                 83  83 100  83
			// Evergreen Mac with scrollbars:     85  85 100  85
			// Evergreen Mac without scrollbars: 100 100 100 100
	
			// Get scrollbar width
			browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
	
			// IE6/7 will oversize a width 100% element inside a scrolling element, to
			// include the width of the scrollbar, while other browsers ensure the inner
			// element is contained without forcing scrolling
			browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
	
			// In rtl text layout, some browsers (most, but not all) will place the
			// scrollbar on the left, rather than the right.
			browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;
	
			// IE8- don't provide height and width for getBoundingClientRect
			browser.bBounding = n[0].getBoundingClientRect().width ? true : false;
	
			n.remove();
		}
	
		$.extend( settings.oBrowser, DataTable.__browser );
		settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
	}
	
	
	/**
	 * Array.prototype reduce[Right] method, used for browsers which don't support
	 * JS 1.6. Done this way to reduce code size, since we iterate either way
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnReduce ( that, fn, init, start, end, inc )
	{
		var
			i = start,
			value,
			isSet = false;
	
		if ( init !== undefined ) {
			value = init;
			isSet = true;
		}
	
		while ( i !== end ) {
			if ( ! that.hasOwnProperty(i) ) {
				continue;
			}
	
			value = isSet ?
				fn( value, that[i], i, that ) :
				that[i];
	
			isSet = true;
			i += inc;
		}
	
		return value;
	}
	
	/**
	 * Add a column to the list used for the table with default values
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nTh The th element for this column
	 *  @memberof DataTable#oApi
	 */
	function _fnAddColumn( oSettings, nTh )
	{
		// Add column to aoColumns array
		var oDefaults = DataTable.defaults.column;
		var iCol = oSettings.aoColumns.length;
		var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {
			"nTh": nTh ? nTh : document.createElement('th'),
			"sTitle":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',
			"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
			"mData": oDefaults.mData ? oDefaults.mData : iCol,
			idx: iCol
		} );
		oSettings.aoColumns.push( oCol );
	
		// Add search object for column specific search. Note that the `searchCols[ iCol ]`
		// passed into extend can be undefined. This allows the user to give a default
		// with only some of the parameters defined, and also not give a default
		var searchCols = oSettings.aoPreSearchCols;
		searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );
	
		// Use the default column options function to initialise classes etc
		_fnColumnOptions( oSettings, iCol, $(nTh).data() );
	}
	
	
	/**
	 * Apply options for a column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column index to consider
	 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOptions( oSettings, iCol, oOptions )
	{
		var oCol = oSettings.aoColumns[ iCol ];
		var oClasses = oSettings.oClasses;
		var th = $(oCol.nTh);
	
		// Try to get width information from the DOM. We can't get it from CSS
		// as we'd need to parse the CSS stylesheet. `width` option can override
		if ( ! oCol.sWidthOrig ) {
			// Width attribute
			oCol.sWidthOrig = th.attr('width') || null;
	
			// Style attribute
			var t = (th.attr('style') || '').match(/width:\s*(\d+[pxem%]+)/);
			if ( t ) {
				oCol.sWidthOrig = t[1];
			}
		}
	
		/* User specified column options */
		if ( oOptions !== undefined && oOptions !== null )
		{
			// Backwards compatibility
			_fnCompatCols( oOptions );
	
			// Map camel case parameters to their Hungarian counterparts
			_fnCamelToHungarian( DataTable.defaults.column, oOptions );
	
			/* Backwards compatibility for mDataProp */
			if ( oOptions.mDataProp !== undefined && !oOptions.mData )
			{
				oOptions.mData = oOptions.mDataProp;
			}
	
			if ( oOptions.sType )
			{
				oCol._sManualType = oOptions.sType;
			}
	
			// `class` is a reserved word in Javascript, so we need to provide
			// the ability to use a valid name for the camel case input
			if ( oOptions.className && ! oOptions.sClass )
			{
				oOptions.sClass = oOptions.className;
			}
	
			$.extend( oCol, oOptions );
			_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );
	
			/* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
			if ( oOptions.iDataSort !== undefined )
			{
				oCol.aDataSort = [ oOptions.iDataSort ];
			}
			_fnMap( oCol, oOptions, "aDataSort" );
		}
	
		/* Cache the data get and set functions for speed */
		var mDataSrc = oCol.mData;
		var mData = _fnGetObjectDataFn( mDataSrc );
		var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;
	
		var attrTest = function( src ) {
			return typeof src === 'string' && src.indexOf('@') !== -1;
		};
		oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (
			attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
		);
		oCol._setter = null;
	
		oCol.fnGetData = function (rowData, type, meta) {
			var innerData = mData( rowData, type, undefined, meta );
	
			return mRender && type ?
				mRender( innerData, type, rowData, meta ) :
				innerData;
		};
		oCol.fnSetData = function ( rowData, val, meta ) {
			return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );
		};
	
		// Indicate if DataTables should read DOM data as an object or array
		// Used in _fnGetRowElements
		if ( typeof mDataSrc !== 'number' ) {
			oSettings._rowReadObject = true;
		}
	
		/* Feature sorting overrides column specific when off */
		if ( !oSettings.oFeatures.bSort )
		{
			oCol.bSortable = false;
			th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called
		}
	
		/* Check that the class assignment is correct for sorting */
		var bAsc = $.inArray('asc', oCol.asSorting) !== -1;
		var bDesc = $.inArray('desc', oCol.asSorting) !== -1;
		if ( !oCol.bSortable || (!bAsc && !bDesc) )
		{
			oCol.sSortingClass = oClasses.sSortableNone;
			oCol.sSortingClassJUI = "";
		}
		else if ( bAsc && !bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableAsc;
			oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
		}
		else if ( !bAsc && bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableDesc;
			oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
		}
		else
		{
			oCol.sSortingClass = oClasses.sSortable;
			oCol.sSortingClassJUI = oClasses.sSortJUI;
		}
	}
	
	
	/**
	 * Adjust the table column widths for new data. Note: you would probably want to
	 * do a redraw after calling this function!
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAdjustColumnSizing ( settings )
	{
		/* Not interested in doing column width calculation if auto-width is disabled */
		if ( settings.oFeatures.bAutoWidth !== false )
		{
			var columns = settings.aoColumns;
	
			_fnCalculateColumnWidths( settings );
			for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )
			{
				columns[i].nTh.style.width = columns[i].sWidth;
			}
		}
	
		var scroll = settings.oScroll;
		if ( scroll.sY !== '' || scroll.sX !== '')
		{
			_fnScrollDraw( settings );
		}
	
		_fnCallbackFire( settings, null, 'column-sizing', [settings] );
	}
	
	
	/**
	 * Covert the index of a visible column to the index in the data array (take account
	 * of hidden columns)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMatch Visible column index to lookup
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnVisibleToColumnIndex( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	
		return typeof aiVis[iMatch] === 'number' ?
			aiVis[iMatch] :
			null;
	}
	
	
	/**
	 * Covert the index of an index in the data array and convert it to the visible
	 *   column index (take account of hidden columns)
	 *  @param {int} iMatch Column index to lookup
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnIndexToVisible( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
		var iPos = $.inArray( iMatch, aiVis );
	
		return iPos !== -1 ? iPos : null;
	}
	
	
	/**
	 * Get the number of visible columns
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the number of visible columns
	 *  @memberof DataTable#oApi
	 */
	function _fnVisbleColumns( oSettings )
	{
		var vis = 0;
	
		// No reduce in IE8, use a loop for now
		$.each( oSettings.aoColumns, function ( i, col ) {
			if ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {
				vis++;
			}
		} );
	
		return vis;
	}
	
	
	/**
	 * Get an array of column indexes that match a given property
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sParam Parameter in aoColumns to look for - typically
	 *    bVisible or bSearchable
	 *  @returns {array} Array of indexes with matched properties
	 *  @memberof DataTable#oApi
	 */
	function _fnGetColumns( oSettings, sParam )
	{
		var a = [];
	
		$.map( oSettings.aoColumns, function(val, i) {
			if ( val[sParam] ) {
				a.push( i );
			}
		} );
	
		return a;
	}
	
	
	/**
	 * Calculate the 'type' of a column
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnTypes ( settings )
	{
		var columns = settings.aoColumns;
		var data = settings.aoData;
		var types = DataTable.ext.type.detect;
		var i, ien, j, jen, k, ken;
		var col, cell, detectedType, cache;
	
		// For each column, spin over the 
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			col = columns[i];
			cache = [];
	
			if ( ! col.sType && col._sManualType ) {
				col.sType = col._sManualType;
			}
			else if ( ! col.sType ) {
				for ( j=0, jen=types.length ; j<jen ; j++ ) {
					for ( k=0, ken=data.length ; k<ken ; k++ ) {
						// Use a cache array so we only need to get the type data
						// from the formatter once (when using multiple detectors)
						if ( cache[k] === undefined ) {
							cache[k] = _fnGetCellData( settings, k, i, 'type' );
						}
	
						detectedType = types[j]( cache[k], settings );
	
						// If null, then this type can't apply to this column, so
						// rather than testing all cells, break out. There is an
						// exception for the last type which is `html`. We need to
						// scan all rows since it is possible to mix string and HTML
						// types
						if ( ! detectedType && j !== types.length-1 ) {
							break;
						}
	
						// Only a single match is needed for html type since it is
						// bottom of the pile and very similar to string
						if ( detectedType === 'html' ) {
							break;
						}
					}
	
					// Type is valid for all data points in the column - use this
					// type
					if ( detectedType ) {
						col.sType = detectedType;
						break;
					}
				}
	
				// Fall back - if no type was detected, always use string
				if ( ! col.sType ) {
					col.sType = 'string';
				}
			}
		}
	}
	
	
	/**
	 * Take the column definitions and static columns arrays and calculate how
	 * they relate to column indexes. The callback function will then apply the
	 * definition found for a column to a suitable configuration object.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
	 *  @param {array} aoCols The aoColumns array that defines columns individually
	 *  @param {function} fn Callback function - takes two parameters, the calculated
	 *    column index and the definition for that column.
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )
	{
		var i, iLen, j, jLen, k, kLen, def;
		var columns = oSettings.aoColumns;
	
		// Column definitions with aTargets
		if ( aoColDefs )
		{
			/* Loop over the definitions array - loop in reverse so first instance has priority */
			for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
			{
				def = aoColDefs[i];
	
				/* Each definition can target multiple columns, as it is an array */
				var aTargets = def.targets !== undefined ?
					def.targets :
					def.aTargets;
	
				if ( ! $.isArray( aTargets ) )
				{
					aTargets = [ aTargets ];
				}
	
				for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
				{
					if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )
					{
						/* Add columns that we don't yet know about */
						while( columns.length <= aTargets[j] )
						{
							_fnAddColumn( oSettings );
						}
	
						/* Integer, basic index */
						fn( aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )
					{
						/* Negative integer, right to left column counting */
						fn( columns.length+aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'string' )
					{
						/* Class name matching on TH element */
						for ( k=0, kLen=columns.length ; k<kLen ; k++ )
						{
							if ( aTargets[j] == "_all" ||
							     $(columns[k].nTh).hasClass( aTargets[j] ) )
							{
								fn( k, def );
							}
						}
					}
				}
			}
		}
	
		// Statically defined columns array
		if ( aoCols )
		{
			for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )
			{
				fn( i, aoCols[i] );
			}
		}
	}
	
	/**
	 * Add a data array to the table, creating DOM node etc. This is the parallel to
	 * _fnGatherData, but for adding rows from a Javascript source, rather than a
	 * DOM source.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData data array to be added
	 *  @param {node} [nTr] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
	 *  @memberof DataTable#oApi
	 */
	function _fnAddData ( oSettings, aDataIn, nTr, anTds )
	{
		/* Create the object for storing information about this new row */
		var iRow = oSettings.aoData.length;
		var oData = $.extend( true, {}, DataTable.models.oRow, {
			src: nTr ? 'dom' : 'data',
			idx: iRow
		} );
	
		oData._aData = aDataIn;
		oSettings.aoData.push( oData );
	
		/* Create the cells */
		var nTd, sThisType;
		var columns = oSettings.aoColumns;
	
		// Invalidate the column types as the new data needs to be revalidated
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			columns[i].sType = null;
		}
	
		/* Add to the display array */
		oSettings.aiDisplayMaster.push( iRow );
	
		var id = oSettings.rowIdFn( aDataIn );
		if ( id !== undefined ) {
			oSettings.aIds[ id ] = oData;
		}
	
		/* Create the DOM information, or register it if already present */
		if ( nTr || ! oSettings.oFeatures.bDeferRender )
		{
			_fnCreateTr( oSettings, iRow, nTr, anTds );
		}
	
		return iRow;
	}
	
	
	/**
	 * Add one or more TR elements to the table. Generally we'd expect to
	 * use this for reading data from a DOM sourced table, but it could be
	 * used for an TR element. Note that if a TR is given, it is used (i.e.
	 * it is not cloned).
	 *  @param {object} settings dataTables settings object
	 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
	 *  @returns {array} Array of indexes for the added rows
	 *  @memberof DataTable#oApi
	 */
	function _fnAddTr( settings, trs )
	{
		var row;
	
		// Allow an individual node to be passed in
		if ( ! (trs instanceof $) ) {
			trs = $(trs);
		}
	
		return trs.map( function (i, el) {
			row = _fnGetRowElements( settings, el );
			return _fnAddData( settings, row.data, el, row.cells );
		} );
	}
	
	
	/**
	 * Take a TR element and convert it to an index in aoData
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n the TR element to find
	 *  @returns {int} index if the node is found, null if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToDataIndex( oSettings, n )
	{
		return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;
	}
	
	
	/**
	 * Take a TD element and convert it into a column data index (not the visible index)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow The row number the TD/TH can be found in
	 *  @param {node} n The TD/TH element to find
	 *  @returns {int} index if the node is found, -1 if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToColumnIndex( oSettings, iRow, n )
	{
		return $.inArray( n, oSettings.aoData[ iRow ].anCells );
	}
	
	
	/**
	 * Get the data for a given cell from the internal cache, taking into account data mapping
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {string} type data get type ('display', 'type' 'filter' 'sort')
	 *  @returns {*} Cell data
	 *  @memberof DataTable#oApi
	 */
	function _fnGetCellData( settings, rowIdx, colIdx, type )
	{
		var draw           = settings.iDraw;
		var col            = settings.aoColumns[colIdx];
		var rowData        = settings.aoData[rowIdx]._aData;
		var defaultContent = col.sDefaultContent;
		var cellData       = col.fnGetData( rowData, type, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		} );
	
		if ( cellData === undefined ) {
			if ( settings.iDrawError != draw && defaultContent === null ) {
				_fnLog( settings, 0, "Requested unknown parameter "+
					(typeof col.mData=='function' ? '{function}' : "'"+col.mData+"'")+
					" for row "+rowIdx+", column "+colIdx, 4 );
				settings.iDrawError = draw;
			}
			return defaultContent;
		}
	
		// When the data source is null and a specific data type is requested (i.e.
		// not the original data), we can use default column data
		if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {
			cellData = defaultContent;
		}
		else if ( typeof cellData === 'function' ) {
			// If the data source is a function, then we run it and use the return,
			// executing in the scope of the data object (for instances)
			return cellData.call( rowData );
		}
	
		if ( cellData === null && type == 'display' ) {
			return '';
		}
		return cellData;
	}
	
	
	/**
	 * Set the value for a specific cell, into the internal data cache
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {*} val Value to set
	 *  @memberof DataTable#oApi
	 */
	function _fnSetCellData( settings, rowIdx, colIdx, val )
	{
		var col     = settings.aoColumns[colIdx];
		var rowData = settings.aoData[rowIdx]._aData;
	
		col.fnSetData( rowData, val, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		}  );
	}
	
	
	// Private variable that is used to match action syntax in the data property object
	var __reArray = /\[.*?\]$/;
	var __reFn = /\(\)$/;
	
	/**
	 * Split string on periods, taking into account escaped periods
	 * @param  {string} str String to split
	 * @return {array} Split string
	 */
	function _fnSplitObjNotation( str )
	{
		return $.map( str.match(/(\\.|[^\.])+/g) || [''], function ( s ) {
			return s.replace(/\\./g, '.');
		} );
	}
	
	
	/**
	 * Return a function that can be used to get data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data get function
	 *  @memberof DataTable#oApi
	 */
	function _fnGetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Build an object of get functions, and wrap them in a single call */
			var o = {};
			$.each( mSource, function (key, val) {
				if ( val ) {
					o[key] = _fnGetObjectDataFn( val );
				}
			} );
	
			return function (data, type, row, meta) {
				var t = o[type] || o._;
				return t !== undefined ?
					t(data, type, row, meta) :
					data;
			};
		}
		else if ( mSource === null )
		{
			/* Give an empty string for rendering / sorting etc */
			return function (data) { // type, row and meta also passed, but not used
				return data;
			};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, type, row, meta) {
				return mSource( data, type, row, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
			var fetchData = function (data, type, src) {
				var arrayNotation, funcNotation, out, innerSrc;
	
				if ( src !== "" )
				{
					var a = _fnSplitObjNotation( src );
	
					for ( var i=0, iLen=a.length ; i<iLen ; i++ )
					{
						// Check if we are dealing with special notation
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
	
						if ( arrayNotation )
						{
							// Array notation
							a[i] = a[i].replace(__reArray, '');
	
							// Condition allows simply [] to be passed in
							if ( a[i] !== "" ) {
								data = data[ a[i] ];
							}
							out = [];
	
							// Get the remainder of the nested object to get
							a.splice( 0, i+1 );
							innerSrc = a.join('.');
	
							// Traverse each entry in the array getting the properties requested
							if ( $.isArray( data ) ) {
								for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
									out.push( fetchData( data[j], type, innerSrc ) );
								}
							}
	
							// If a string is given in between the array notation indicators, that
							// is used to join the strings together, otherwise an array is returned
							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
							data = (join==="") ? out : out.join(join);
	
							// The inner call to fetchData has already traversed through the remainder
							// of the source requested, so we exit from the loop
							break;
						}
						else if ( funcNotation )
						{
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]();
							continue;
						}
	
						if ( data === null || data[ a[i] ] === undefined )
						{
							return undefined;
						}
						data = data[ a[i] ];
					}
				}
	
				return data;
			};
	
			return function (data, type) { // row and meta also passed, but not used
				return fetchData( data, type, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, type) { // row and meta also passed, but not used
				return data[mSource];
			};
		}
	}
	
	
	/**
	 * Return a function that can be used to set data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data set function
	 *  @memberof DataTable#oApi
	 */
	function _fnSetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
			return _fnSetObjectDataFn( mSource._ );
		}
		else if ( mSource === null )
		{
			/* Nothing to do when the data source is null */
			return function () {};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, val, meta) {
				mSource( data, 'set', val, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* Like the get, we need to get data from a nested object */
			var setData = function (data, val, src) {
				var a = _fnSplitObjNotation( src ), b;
				var aLast = a[a.length-1];
				var arrayNotation, funcNotation, o, innerSrc;
	
				for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )
				{
					// Check if we are dealing with an array notation request
					arrayNotation = a[i].match(__reArray);
					funcNotation = a[i].match(__reFn);
	
					if ( arrayNotation )
					{
						a[i] = a[i].replace(__reArray, '');
						data[ a[i] ] = [];
	
						// Get the remainder of the nested object to set so we can recurse
						b = a.slice();
						b.splice( 0, i+1 );
						innerSrc = b.join('.');
	
						// Traverse each entry in the array setting the properties requested
						if ( $.isArray( val ) )
						{
							for ( var j=0, jLen=val.length ; j<jLen ; j++ )
							{
								o = {};
								setData( o, val[j], innerSrc );
								data[ a[i] ].push( o );
							}
						}
						else
						{
							// We've been asked to save data to an array, but it
							// isn't array data to be saved. Best that can be done
							// is to just save the value.
							data[ a[i] ] = val;
						}
	
						// The inner call to setData has already traversed through the remainder
						// of the source and has set the data, thus we can exit here
						return;
					}
					else if ( funcNotation )
					{
						// Function call
						a[i] = a[i].replace(__reFn, '');
						data = data[ a[i] ]( val );
					}
	
					// If the nested object doesn't currently exist - since we are
					// trying to set the value - create it
					if ( data[ a[i] ] === null || data[ a[i] ] === undefined )
					{
						data[ a[i] ] = {};
					}
					data = data[ a[i] ];
				}
	
				// Last item in the input - i.e, the actual set
				if ( aLast.match(__reFn ) )
				{
					// Function call
					data = data[ aLast.replace(__reFn, '') ]( val );
				}
				else
				{
					// If array notation is used, we just want to strip it and use the property name
					// and assign the value. If it isn't used, then we get the result we want anyway
					data[ aLast.replace(__reArray, '') ] = val;
				}
			};
	
			return function (data, val) { // meta is also passed in, but not used
				return setData( data, val, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, val) { // meta is also passed in, but not used
				data[mSource] = val;
			};
		}
	}
	
	
	/**
	 * Return an array with the full table data
	 *  @param {object} oSettings dataTables settings object
	 *  @returns array {array} aData Master data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetDataMaster ( settings )
	{
		return _pluck( settings.aoData, '_aData' );
	}
	
	
	/**
	 * Nuke the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnClearTable( settings )
	{
		settings.aoData.length = 0;
		settings.aiDisplayMaster.length = 0;
		settings.aiDisplay.length = 0;
		settings.aIds = {};
	}
	
	
	 /**
	 * Take an array of integers (index array) and remove a target integer (value - not
	 * the key!)
	 *  @param {array} a Index array to target
	 *  @param {int} iTarget value to find
	 *  @memberof DataTable#oApi
	 */
	function _fnDeleteIndex( a, iTarget, splice )
	{
		var iTargetIndex = -1;
	
		for ( var i=0, iLen=a.length ; i<iLen ; i++ )
		{
			if ( a[i] == iTarget )
			{
				iTargetIndex = i;
			}
			else if ( a[i] > iTarget )
			{
				a[i]--;
			}
		}
	
		if ( iTargetIndex != -1 && splice === undefined )
		{
			a.splice( iTargetIndex, 1 );
		}
	}
	
	
	/**
	 * Mark cached data as invalid such that a re-read of the data will occur when
	 * the cached data is next requested. Also update from the data source object.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {int}    rowIdx   Row index to invalidate
	 * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
	 *     or 'data'
	 * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
	 *     row will be invalidated
	 * @memberof DataTable#oApi
	 *
	 * @todo For the modularisation of v1.11 this will need to become a callback, so
	 *   the sort and filter methods can subscribe to it. That will required
	 *   initialisation options for sorting, which is why it is not already baked in
	 */
	function _fnInvalidate( settings, rowIdx, src, colIdx )
	{
		var row = settings.aoData[ rowIdx ];
		var i, ien;
		var cellWrite = function ( cell, col ) {
			// This is very frustrating, but in IE if you just write directly
			// to innerHTML, and elements that are overwritten are GC'ed,
			// even if there is a reference to them elsewhere
			while ( cell.childNodes.length ) {
				cell.removeChild( cell.firstChild );
			}
	
			cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );
		};
	
		// Are we reading last data from DOM or the data object?
		if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {
			// Read the data from the DOM
			row._aData = _fnGetRowElements(
					settings, row, colIdx, colIdx === undefined ? undefined : row._aData
				)
				.data;
		}
		else {
			// Reading from data object, update the DOM
			var cells = row.anCells;
	
			if ( cells ) {
				if ( colIdx !== undefined ) {
					cellWrite( cells[colIdx], colIdx );
				}
				else {
					for ( i=0, ien=cells.length ; i<ien ; i++ ) {
						cellWrite( cells[i], i );
					}
				}
			}
		}
	
		// For both row and cell invalidation, the cached data for sorting and
		// filtering is nulled out
		row._aSortData = null;
		row._aFilterData = null;
	
		// Invalidate the type for a specific column (if given) or all columns since
		// the data might have changed
		var cols = settings.aoColumns;
		if ( colIdx !== undefined ) {
			cols[ colIdx ].sType = null;
		}
		else {
			for ( i=0, ien=cols.length ; i<ien ; i++ ) {
				cols[i].sType = null;
			}
	
			// Update DataTables special `DT_*` attributes for the row
			_fnRowAttributes( settings, row );
		}
	}
	
	
	/**
	 * Build a data source object from an HTML row, reading the contents of the
	 * cells that are in the row.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {node|object} TR element from which to read data or existing row
	 *   object from which to re-read the data from the cells
	 * @param {int} [colIdx] Optional column index
	 * @param {array|object} [d] Data source object. If `colIdx` is given then this
	 *   parameter should also be given and will be used to write the data into.
	 *   Only the column in question will be written
	 * @returns {object} Object with two parameters: `data` the data read, in
	 *   document order, and `cells` and array of nodes (they can be useful to the
	 *   caller, so rather than needing a second traversal to get them, just return
	 *   them from here).
	 * @memberof DataTable#oApi
	 */
	function _fnGetRowElements( settings, row, colIdx, d )
	{
		var
			tds = [],
			td = row.firstChild,
			name, col, o, i=0, contents,
			columns = settings.aoColumns,
			objectRead = settings._rowReadObject;
	
		// Allow the data object to be passed in, or construct
		d = d !== undefined ?
			d :
			objectRead ?
				{} :
				[];
	
		var attr = function ( str, td  ) {
			if ( typeof str === 'string' ) {
				var idx = str.indexOf('@');
	
				if ( idx !== -1 ) {
					var attr = str.substring( idx+1 );
					var setter = _fnSetObjectDataFn( str );
					setter( d, td.getAttribute( attr ) );
				}
			}
		};
	
		// Read data from a cell and store into the data object
		var cellProcess = function ( cell ) {
			if ( colIdx === undefined || colIdx === i ) {
				col = columns[i];
				contents = $.trim(cell.innerHTML);
	
				if ( col && col._bAttrSrc ) {
					var setter = _fnSetObjectDataFn( col.mData._ );
					setter( d, contents );
	
					attr( col.mData.sort, cell );
					attr( col.mData.type, cell );
					attr( col.mData.filter, cell );
				}
				else {
					// Depending on the `data` option for the columns the data can
					// be read to either an object or an array.
					if ( objectRead ) {
						if ( ! col._setter ) {
							// Cache the setter function
							col._setter = _fnSetObjectDataFn( col.mData );
						}
						col._setter( d, contents );
					}
					else {
						d[i] = contents;
					}
				}
			}
	
			i++;
		};
	
		if ( td ) {
			// `tr` element was passed in
			while ( td ) {
				name = td.nodeName.toUpperCase();
	
				if ( name == "TD" || name == "TH" ) {
					cellProcess( td );
					tds.push( td );
				}
	
				td = td.nextSibling;
			}
		}
		else {
			// Existing row object passed in
			tds = row.anCells;
	
			for ( var j=0, jen=tds.length ; j<jen ; j++ ) {
				cellProcess( tds[j] );
			}
		}
	
		// Read the ID from the DOM if present
		var rowNode = row.firstChild ? row : row.nTr;
	
		if ( rowNode ) {
			var id = rowNode.getAttribute( 'id' );
	
			if ( id ) {
				_fnSetObjectDataFn( settings.rowId )( d, id );
			}
		}
	
		return {
			data: d,
			cells: tds
		};
	}
	/**
	 * Create a new TR element (and it's TD children) for a row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow Row to consider
	 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @memberof DataTable#oApi
	 */
	function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
	{
		var
			row = oSettings.aoData[iRow],
			rowData = row._aData,
			cells = [],
			nTr, nTd, oCol,
			i, iLen;
	
		if ( row.nTr === null )
		{
			nTr = nTrIn || document.createElement('tr');
	
			row.nTr = nTr;
			row.anCells = cells;
	
			/* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
			nTr._DT_RowIndex = iRow;
	
			/* Special parameters can be given by the data source to be used on the row */
			_fnRowAttributes( oSettings, row );
	
			/* Process each column */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				oCol = oSettings.aoColumns[i];
	
				nTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );
				nTd._DT_CellIndex = {
					row: iRow,
					column: i
				};
				
				cells.push( nTd );
	
				// Need to create the HTML if new, or if a rendering function is defined
				if ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&
					 (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')
				) {
					nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );
				}
	
				/* Add user defined class */
				if ( oCol.sClass )
				{
					nTd.className += ' '+oCol.sClass;
				}
	
				// Visibility - add or remove as required
				if ( oCol.bVisible && ! nTrIn )
				{
					nTr.appendChild( nTd );
				}
				else if ( ! oCol.bVisible && nTrIn )
				{
					nTd.parentNode.removeChild( nTd );
				}
	
				if ( oCol.fnCreatedCell )
				{
					oCol.fnCreatedCell.call( oSettings.oInstance,
						nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i
					);
				}
			}
	
			_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );
		}
	
		// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved
		// and deployed
		row.nTr.setAttribute( 'role', 'row' );
	}
	
	
	/**
	 * Add attributes to a row based on the special `DT_*` parameters in a data
	 * source object.
	 *  @param {object} settings DataTables settings object
	 *  @param {object} DataTables row object for the row to be modified
	 *  @memberof DataTable#oApi
	 */
	function _fnRowAttributes( settings, row )
	{
		var tr = row.nTr;
		var data = row._aData;
	
		if ( tr ) {
			var id = settings.rowIdFn( data );
	
			if ( id ) {
				tr.id = id;
			}
	
			if ( data.DT_RowClass ) {
				// Remove any classes added by DT_RowClass before
				var a = data.DT_RowClass.split(' ');
				row.__rowc = row.__rowc ?
					_unique( row.__rowc.concat( a ) ) :
					a;
	
				$(tr)
					.removeClass( row.__rowc.join(' ') )
					.addClass( data.DT_RowClass );
			}
	
			if ( data.DT_RowAttr ) {
				$(tr).attr( data.DT_RowAttr );
			}
	
			if ( data.DT_RowData ) {
				$(tr).data( data.DT_RowData );
			}
		}
	}
	
	
	/**
	 * Create the HTML header for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildHead( oSettings )
	{
		var i, ien, cell, row, column;
		var thead = oSettings.nTHead;
		var tfoot = oSettings.nTFoot;
		var createHeader = $('th, td', thead).length === 0;
		var classes = oSettings.oClasses;
		var columns = oSettings.aoColumns;
	
		if ( createHeader ) {
			row = $('<tr/>').appendTo( thead );
		}
	
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			column = columns[i];
			cell = $( column.nTh ).addClass( column.sClass );
	
			if ( createHeader ) {
				cell.appendTo( row );
			}
	
			// 1.11 move into sorting
			if ( oSettings.oFeatures.bSort ) {
				cell.addClass( column.sSortingClass );
	
				if ( column.bSortable !== false ) {
					cell
						.attr( 'tabindex', oSettings.iTabIndex )
						.attr( 'aria-controls', oSettings.sTableId );
	
					_fnSortAttachListener( oSettings, column.nTh, i );
				}
			}
	
			if ( column.sTitle != cell[0].innerHTML ) {
				cell.html( column.sTitle );
			}
	
			_fnRenderer( oSettings, 'header' )(
				oSettings, cell, column, classes
			);
		}
	
		if ( createHeader ) {
			_fnDetectHeader( oSettings.aoHeader, thead );
		}
		
		/* ARIA role for the rows */
	 	$(thead).find('>tr').attr('role', 'row');
	
		/* Deal with the footer - add classes if required */
		$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );
		$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );
	
		// Cache the footer cells. Note that we only take the cells from the first
		// row in the footer. If there is more than one row the user wants to
		// interact with, they need to use the table().foot() method. Note also this
		// allows cells to be used for multiple columns using colspan
		if ( tfoot !== null ) {
			var cells = oSettings.aoFooter[0];
	
			for ( i=0, ien=cells.length ; i<ien ; i++ ) {
				column = columns[i];
				column.nTf = cells[i].cell;
	
				if ( column.sClass ) {
					$(column.nTf).addClass( column.sClass );
				}
			}
		}
	}
	
	
	/**
	 * Draw the header (or footer) element based on the column visibility states. The
	 * methodology here is to use the layout array from _fnDetectHeader, modified for
	 * the instantaneous column visibility, to construct the new layout. The grid is
	 * traversed over cell at a time in a rows x columns grid fashion, although each
	 * cell insert can cover multiple elements in the grid - which is tracks using the
	 * aApplied array. Cell inserts in the grid will only occur where there isn't
	 * already a cell in that position.
	 *  @param {object} oSettings dataTables settings object
	 *  @param array {objects} aoSource Layout array from _fnDetectHeader
	 *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
	 *  @memberof DataTable#oApi
	 */
	function _fnDrawHead( oSettings, aoSource, bIncludeHidden )
	{
		var i, iLen, j, jLen, k, kLen, n, nLocalTr;
		var aoLocal = [];
		var aApplied = [];
		var iColumns = oSettings.aoColumns.length;
		var iRowspan, iColspan;
	
		if ( ! aoSource )
		{
			return;
		}
	
		if (  bIncludeHidden === undefined )
		{
			bIncludeHidden = false;
		}
	
		/* Make a copy of the master layout array, but without the visible columns in it */
		for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )
		{
			aoLocal[i] = aoSource[i].slice();
			aoLocal[i].nTr = aoSource[i].nTr;
	
			/* Remove any columns which are currently hidden */
			for ( j=iColumns-1 ; j>=0 ; j-- )
			{
				if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )
				{
					aoLocal[i].splice( j, 1 );
				}
			}
	
			/* Prep the applied array - it needs an element for each row */
			aApplied.push( [] );
		}
	
		for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )
		{
			nLocalTr = aoLocal[i].nTr;
	
			/* All cells are going to be replaced, so empty out the row */
			if ( nLocalTr )
			{
				while( (n = nLocalTr.firstChild) )
				{
					nLocalTr.removeChild( n );
				}
			}
	
			for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )
			{
				iRowspan = 1;
				iColspan = 1;
	
				/* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
				if ( aApplied[i][j] === undefined )
				{
					nLocalTr.appendChild( aoLocal[i][j].cell );
					aApplied[i][j] = 1;
	
					/* Expand the cell to cover as many rows as needed */
					while ( aoLocal[i+iRowspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )
					{
						aApplied[i+iRowspan][j] = 1;
						iRowspan++;
					}
	
					/* Expand the cell to cover as many columns as needed */
					while ( aoLocal[i][j+iColspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )
					{
						/* Must update the applied array over the rows for the columns */
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aApplied[i+k][j+iColspan] = 1;
						}
						iColspan++;
					}
	
					/* Do the actual expansion in the DOM */
					$(aoLocal[i][j].cell)
						.attr('rowspan', iRowspan)
						.attr('colspan', iColspan);
				}
			}
		}
	}
	
	
	/**
	 * Insert the required TR nodes into the table for display
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnDraw( oSettings )
	{
		/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
		var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
		if ( $.inArray( false, aPreDraw ) !== -1 )
		{
			_fnProcessingDisplay( oSettings, false );
			return;
		}
	
		var i, iLen, n;
		var anRows = [];
		var iRowCount = 0;
		var asStripeClasses = oSettings.asStripeClasses;
		var iStripes = asStripeClasses.length;
		var iOpenRows = oSettings.aoOpenRows.length;
		var oLang = oSettings.oLanguage;
		var iInitDisplayStart = oSettings.iInitDisplayStart;
		var bServerSide = _fnDataSource( oSettings ) == 'ssp';
		var aiDisplay = oSettings.aiDisplay;
	
		oSettings.bDrawing = true;
	
		/* Check and see if we have an initial draw position from state saving */
		if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )
		{
			oSettings._iDisplayStart = bServerSide ?
				iInitDisplayStart :
				iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
					0 :
					iInitDisplayStart;
	
			oSettings.iInitDisplayStart = -1;
		}
	
		var iDisplayStart = oSettings._iDisplayStart;
		var iDisplayEnd = oSettings.fnDisplayEnd();
	
		/* Server-side processing draw intercept */
		if ( oSettings.bDeferLoading )
		{
			oSettings.bDeferLoading = false;
			oSettings.iDraw++;
			_fnProcessingDisplay( oSettings, false );
		}
		else if ( !bServerSide )
		{
			oSettings.iDraw++;
		}
		else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )
		{
			return;
		}
	
		if ( aiDisplay.length !== 0 )
		{
			var iStart = bServerSide ? 0 : iDisplayStart;
			var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
	
			for ( var j=iStart ; j<iEnd ; j++ )
			{
				var iDataIndex = aiDisplay[j];
				var aoData = oSettings.aoData[ iDataIndex ];
				if ( aoData.nTr === null )
				{
					_fnCreateTr( oSettings, iDataIndex );
				}
	
				var nRow = aoData.nTr;
	
				/* Remove the old striping classes and then add the new one */
				if ( iStripes !== 0 )
				{
					var sStripe = asStripeClasses[ iRowCount % iStripes ];
					if ( aoData._sRowStripe != sStripe )
					{
						$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );
						aoData._sRowStripe = sStripe;
					}
				}
	
				// Row callback functions - might want to manipulate the row
				// iRowCount and j are not currently documented. Are they at all
				// useful?
				_fnCallbackFire( oSettings, 'aoRowCallback', null,
					[nRow, aoData._aData, iRowCount, j] );
	
				anRows.push( nRow );
				iRowCount++;
			}
		}
		else
		{
			/* Table is empty - create a row with an empty message in it */
			var sZero = oLang.sZeroRecords;
			if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )
			{
				sZero = oLang.sLoadingRecords;
			}
			else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )
			{
				sZero = oLang.sEmptyTable;
			}
	
			anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )
				.append( $('<td />', {
					'valign':  'top',
					'colSpan': _fnVisbleColumns( oSettings ),
					'class':   oSettings.oClasses.sRowEmpty
				} ).html( sZero ) )[0];
		}
	
		/* Header and footer callbacks */
		_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		var body = $(oSettings.nTBody);
	
		body.children().detach();
		body.append( $(anRows) );
	
		/* Call all required callback functions for the end of a draw */
		_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );
	
		/* Draw is complete, sorting and filtering must be as well */
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		oSettings.bDrawing = false;
	}
	
	
	/**
	 * Redraw the table - taking account of the various features which are enabled
	 *  @param {object} oSettings dataTables settings object
	 *  @param {boolean} [holdPosition] Keep the current paging position. By default
	 *    the paging is reset to the first page
	 *  @memberof DataTable#oApi
	 */
	function _fnReDraw( settings, holdPosition )
	{
		var
			features = settings.oFeatures,
			sort     = features.bSort,
			filter   = features.bFilter;
	
		if ( sort ) {
			_fnSort( settings );
		}
	
		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	
		if ( holdPosition !== true ) {
			settings._iDisplayStart = 0;
		}
	
		// Let any modules know about the draw hold position state (used by
		// scrolling internally)
		settings._drawHold = holdPosition;
	
		_fnDraw( settings );
	
		settings._drawHold = false;
	}
	
	
	/**
	 * Add the options to the page HTML for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAddOptionsHtml ( oSettings )
	{
		var classes = oSettings.oClasses;
		var table = $(oSettings.nTable);
		var holding = $('<div/>').insertBefore( table ); // Holding element for speed
		var features = oSettings.oFeatures;
	
		// All DataTables are wrapped in a div
		var insert = $('<div/>', {
			id:      oSettings.sTableId+'_wrapper',
			'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)
		} );
	
		oSettings.nHolding = holding[0];
		oSettings.nTableWrapper = insert[0];
		oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
	
		/* Loop over the user set positioning and place the elements as needed */
		var aDom = oSettings.sDom.split('');
		var featureNode, cOption, nNewNode, cNext, sAttr, j;
		for ( var i=0 ; i<aDom.length ; i++ )
		{
			featureNode = null;
			cOption = aDom[i];
	
			if ( cOption == '<' )
			{
				/* New container div */
				nNewNode = $('<div/>')[0];
	
				/* Check to see if we should append an id and/or a class name to the container */
				cNext = aDom[i+1];
				if ( cNext == "'" || cNext == '"' )
				{
					sAttr = "";
					j = 2;
					while ( aDom[i+j] != cNext )
					{
						sAttr += aDom[i+j];
						j++;
					}
	
					/* Replace jQuery UI constants @todo depreciated */
					if ( sAttr == "H" )
					{
						sAttr = classes.sJUIHeader;
					}
					else if ( sAttr == "F" )
					{
						sAttr = classes.sJUIFooter;
					}
	
					/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
					if ( sAttr.indexOf('.') != -1 )
					{
						var aSplit = sAttr.split('.');
						nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);
						nNewNode.className = aSplit[1];
					}
					else if ( sAttr.charAt(0) == "#" )
					{
						nNewNode.id = sAttr.substr(1, sAttr.length-1);
					}
					else
					{
						nNewNode.className = sAttr;
					}
	
					i += j; /* Move along the position array */
				}
	
				insert.append( nNewNode );
				insert = $(nNewNode);
			}
			else if ( cOption == '>' )
			{
				/* End container div */
				insert = insert.parent();
			}
			// @todo Move options into their own plugins?
			else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )
			{
				/* Length */
				featureNode = _fnFeatureHtmlLength( oSettings );
			}
			else if ( cOption == 'f' && features.bFilter )
			{
				/* Filter */
				featureNode = _fnFeatureHtmlFilter( oSettings );
			}
			else if ( cOption == 'r' && features.bProcessing )
			{
				/* pRocessing */
				featureNode = _fnFeatureHtmlProcessing( oSettings );
			}
			else if ( cOption == 't' )
			{
				/* Table */
				featureNode = _fnFeatureHtmlTable( oSettings );
			}
			else if ( cOption ==  'i' && features.bInfo )
			{
				/* Info */
				featureNode = _fnFeatureHtmlInfo( oSettings );
			}
			else if ( cOption == 'p' && features.bPaginate )
			{
				/* Pagination */
				featureNode = _fnFeatureHtmlPaginate( oSettings );
			}
			else if ( DataTable.ext.feature.length !== 0 )
			{
				/* Plug-in features */
				var aoFeatures = DataTable.ext.feature;
				for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )
				{
					if ( cOption == aoFeatures[k].cFeature )
					{
						featureNode = aoFeatures[k].fnInit( oSettings );
						break;
					}
				}
			}
	
			/* Add to the 2D features array */
			if ( featureNode )
			{
				var aanFeatures = oSettings.aanFeatures;
	
				if ( ! aanFeatures[cOption] )
				{
					aanFeatures[cOption] = [];
				}
	
				aanFeatures[cOption].push( featureNode );
				insert.append( featureNode );
			}
		}
	
		/* Built our DOM structure - replace the holding div with what we want */
		holding.replaceWith( insert );
		oSettings.nHolding = null;
	}
	
	
	/**
	 * Use the DOM source to create up an array of header cells. The idea here is to
	 * create a layout grid (array) of rows x columns, which contains a reference
	 * to the cell that that point in the grid (regardless of col/rowspan), such that
	 * any column / row could be removed and the new grid constructed
	 *  @param array {object} aLayout Array to store the calculated layout in
	 *  @param {node} nThead The header/footer element for the table
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectHeader ( aLayout, nThead )
	{
		var nTrs = $(nThead).children('tr');
		var nTr, nCell;
		var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
		var bUnique;
		var fnShiftCol = function ( a, i, j ) {
			var k = a[i];
	                while ( k[j] ) {
				j++;
			}
			return j;
		};
	
		aLayout.splice( 0, aLayout.length );
	
		/* We know how many rows there are in the layout - so prep it */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			aLayout.push( [] );
		}
	
		/* Calculate a layout array */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			nTr = nTrs[i];
			iColumn = 0;
	
			/* For every cell in the row... */
			nCell = nTr.firstChild;
			while ( nCell ) {
				if ( nCell.nodeName.toUpperCase() == "TD" ||
				     nCell.nodeName.toUpperCase() == "TH" )
				{
					/* Get the col and rowspan attributes from the DOM and sanitise them */
					iColspan = nCell.getAttribute('colspan') * 1;
					iRowspan = nCell.getAttribute('rowspan') * 1;
					iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;
					iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;
	
					/* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
					iColShifted = fnShiftCol( aLayout, i, iColumn );
	
					/* Cache calculation for unique columns */
					bUnique = iColspan === 1 ? true : false;
	
					/* If there is col / rowspan, copy the information into the layout grid */
					for ( l=0 ; l<iColspan ; l++ )
					{
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aLayout[i+k][iColShifted+l] = {
								"cell": nCell,
								"unique": bUnique
							};
							aLayout[i+k].nTr = nTr;
						}
					}
				}
				nCell = nCell.nextSibling;
			}
		}
	}
	
	
	/**
	 * Get an array of unique th elements, one for each column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nHeader automatically detect the layout from this node - optional
	 *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
	 *  @returns array {node} aReturn list of unique th's
	 *  @memberof DataTable#oApi
	 */
	function _fnGetUniqueThs ( oSettings, nHeader, aLayout )
	{
		var aReturn = [];
		if ( !aLayout )
		{
			aLayout = oSettings.aoHeader;
			if ( nHeader )
			{
				aLayout = [];
				_fnDetectHeader( aLayout, nHeader );
			}
		}
	
		for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )
		{
			for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )
			{
				if ( aLayout[i][j].unique &&
					 (!aReturn[j] || !oSettings.bSortCellsTop) )
				{
					aReturn[j] = aLayout[i][j].cell;
				}
			}
		}
	
		return aReturn;
	}
	
	/**
	 * Create an Ajax call based on the table's settings, taking into account that
	 * parameters can have multiple forms, and backwards compatibility.
	 *
	 * @param {object} oSettings dataTables settings object
	 * @param {array} data Data to send to the server, required by
	 *     DataTables - may be augmented by developer callbacks
	 * @param {function} fn Callback function to run when data is obtained
	 */
	function _fnBuildAjax( oSettings, data, fn )
	{
		// Compatibility with 1.9-, allow fnServerData and event to manipulate
		_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );
	
		// Convert to object based for 1.10+ if using the old array scheme which can
		// come from server-side processing or serverParams
		if ( data && $.isArray(data) ) {
			var tmp = {};
			var rbracket = /(.*?)\[\]$/;
	
			$.each( data, function (key, val) {
				var match = val.name.match(rbracket);
	
				if ( match ) {
					// Support for arrays
					var name = match[0];
	
					if ( ! tmp[ name ] ) {
						tmp[ name ] = [];
					}
					tmp[ name ].push( val.value );
				}
				else {
					tmp[val.name] = val.value;
				}
			} );
			data = tmp;
		}
	
		var ajaxData;
		var ajax = oSettings.ajax;
		var instance = oSettings.oInstance;
		var callback = function ( json ) {
			_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );
			fn( json );
		};
	
		if ( $.isPlainObject( ajax ) && ajax.data )
		{
			ajaxData = ajax.data;
	
			var newData = $.isFunction( ajaxData ) ?
				ajaxData( data, oSettings ) :  // fn can manipulate data or return
				ajaxData;                      // an object object or array to merge
	
			// If the function returned something, use that alone
			data = $.isFunction( ajaxData ) && newData ?
				newData :
				$.extend( true, data, newData );
	
			// Remove the data property as we've resolved it already and don't want
			// jQuery to do it again (it is restored at the end of the function)
			delete ajax.data;
		}
	
		var baseAjax = {
			"data": data,
			"success": function (json) {
				var error = json.error || json.sError;
				if ( error ) {
					_fnLog( oSettings, 0, error );
				}
	
				oSettings.json = json;
				callback( json );
			},
			"dataType": "json",
			"cache": false,
			"type": oSettings.sServerMethod,
			"error": function (xhr, error, thrown) {
				var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );
	
				if ( $.inArray( true, ret ) === -1 ) {
					if ( error == "parsererror" ) {
						_fnLog( oSettings, 0, 'Invalid JSON response', 1 );
					}
					else if ( xhr.readyState === 4 ) {
						_fnLog( oSettings, 0, 'Ajax error', 7 );
					}
				}
	
				_fnProcessingDisplay( oSettings, false );
			}
		};
	
		// Store the data submitted for the API
		oSettings.oAjaxData = data;
	
		// Allow plug-ins and external processes to modify the data
		_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );
	
		if ( oSettings.fnServerData )
		{
			// DataTables 1.9- compatibility
			oSettings.fnServerData.call( instance,
				oSettings.sAjaxSource,
				$.map( data, function (val, key) { // Need to convert back to 1.9 trad format
					return { name: key, value: val };
				} ),
				callback,
				oSettings
			);
		}
		else if ( oSettings.sAjaxSource || typeof ajax === 'string' )
		{
			// DataTables 1.9- compatibility
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, {
				url: ajax || oSettings.sAjaxSource
			} ) );
		}
		else if ( $.isFunction( ajax ) )
		{
			// Is a function - let the caller define what needs to be done
			oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );
		}
		else
		{
			// Object to extend the base settings
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );
	
			// Restore for next time around
			ajax.data = ajaxData;
		}
	}
	
	
	/**
	 * Update the table using an Ajax call
	 *  @param {object} settings dataTables settings object
	 *  @returns {boolean} Block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdate( settings )
	{
		if ( settings.bAjaxDataGet ) {
			settings.iDraw++;
			_fnProcessingDisplay( settings, true );
	
			_fnBuildAjax(
				settings,
				_fnAjaxParameters( settings ),
				function(json) {
					_fnAjaxUpdateDraw( settings, json );
				}
			);
	
			return false;
		}
		return true;
	}
	
	
	/**
	 * Build up the parameters in an object needed for a server-side processing
	 * request. Note that this is basically done twice, is different ways - a modern
	 * method which is used by default in DataTables 1.10 which uses objects and
	 * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if
	 * the sAjaxSource option is used in the initialisation, or the legacyAjax
	 * option is set.
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {bool} block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxParameters( settings )
	{
		var
			columns = settings.aoColumns,
			columnCount = columns.length,
			features = settings.oFeatures,
			preSearch = settings.oPreviousSearch,
			preColSearch = settings.aoPreSearchCols,
			i, data = [], dataProp, column, columnSearch,
			sort = _fnSortFlatten( settings ),
			displayStart = settings._iDisplayStart,
			displayLength = features.bPaginate !== false ?
				settings._iDisplayLength :
				-1;
	
		var param = function ( name, value ) {
			data.push( { 'name': name, 'value': value } );
		};
	
		// DataTables 1.9- compatible method
		param( 'sEcho',          settings.iDraw );
		param( 'iColumns',       columnCount );
		param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );
		param( 'iDisplayStart',  displayStart );
		param( 'iDisplayLength', displayLength );
	
		// DataTables 1.10+ method
		var d = {
			draw:    settings.iDraw,
			columns: [],
			order:   [],
			start:   displayStart,
			length:  displayLength,
			search:  {
				value: preSearch.sSearch,
				regex: preSearch.bRegex
			}
		};
	
		for ( i=0 ; i<columnCount ; i++ ) {
			column = columns[i];
			columnSearch = preColSearch[i];
			dataProp = typeof column.mData=="function" ? 'function' : column.mData ;
	
			d.columns.push( {
				data:       dataProp,
				name:       column.sName,
				searchable: column.bSearchable,
				orderable:  column.bSortable,
				search:     {
					value: columnSearch.sSearch,
					regex: columnSearch.bRegex
				}
			} );
	
			param( "mDataProp_"+i, dataProp );
	
			if ( features.bFilter ) {
				param( 'sSearch_'+i,     columnSearch.sSearch );
				param( 'bRegex_'+i,      columnSearch.bRegex );
				param( 'bSearchable_'+i, column.bSearchable );
			}
	
			if ( features.bSort ) {
				param( 'bSortable_'+i, column.bSortable );
			}
		}
	
		if ( features.bFilter ) {
			param( 'sSearch', preSearch.sSearch );
			param( 'bRegex', preSearch.bRegex );
		}
	
		if ( features.bSort ) {
			$.each( sort, function ( i, val ) {
				d.order.push( { column: val.col, dir: val.dir } );
	
				param( 'iSortCol_'+i, val.col );
				param( 'sSortDir_'+i, val.dir );
			} );
	
			param( 'iSortingCols', sort.length );
		}
	
		// If the legacy.ajax parameter is null, then we automatically decide which
		// form to use, based on sAjaxSource
		var legacy = DataTable.ext.legacy.ajax;
		if ( legacy === null ) {
			return settings.sAjaxSource ? data : d;
		}
	
		// Otherwise, if legacy has been specified then we use that to decide on the
		// form
		return legacy ? data : d;
	}
	
	
	/**
	 * Data the data from the server (nuking the old) and redraw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} json json data return from the server.
	 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
	 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
	 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
	 *  @param {array} json.aaData The data to display on this page
	 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdateDraw ( settings, json )
	{
		// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.
		// Support both
		var compat = function ( old, modern ) {
			return json[old] !== undefined ? json[old] : json[modern];
		};
	
		var data = _fnAjaxDataSrc( settings, json );
		var draw            = compat( 'sEcho',                'draw' );
		var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );
		var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );
	
		if ( draw ) {
			// Protect against out of sequence returns
			if ( draw*1 < settings.iDraw ) {
				return;
			}
			settings.iDraw = draw * 1;
		}
	
		_fnClearTable( settings );
		settings._iRecordsTotal   = parseInt(recordsTotal, 10);
		settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
	
		for ( var i=0, ien=data.length ; i<ien ; i++ ) {
			_fnAddData( settings, data[i] );
		}
		settings.aiDisplay = settings.aiDisplayMaster.slice();
	
		settings.bAjaxDataGet = false;
		_fnDraw( settings );
	
		if ( ! settings._bInitComplete ) {
			_fnInitComplete( settings, json );
		}
	
		settings.bAjaxDataGet = true;
		_fnProcessingDisplay( settings, false );
	}
	
	
	/**
	 * Get the data from the JSON data source to use for drawing a table. Using
	 * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
	 * source object, or from a processing function.
	 *  @param {object} oSettings dataTables settings object
	 *  @param  {object} json Data source object / array from the server
	 *  @return {array} Array of data to use
	 */
	function _fnAjaxDataSrc ( oSettings, json )
	{
		var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?
			oSettings.ajax.dataSrc :
			oSettings.sAjaxDataProp; // Compatibility with 1.9-.
	
		// Compatibility with 1.9-. In order to read from aaData, check if the
		// default has been changed, if not, check for aaData
		if ( dataSrc === 'data' ) {
			return json.aaData || json[dataSrc];
		}
	
		return dataSrc !== "" ?
			_fnGetObjectDataFn( dataSrc )( json ) :
			json;
	}
	
	/**
	 * Generate the node required for filtering text
	 *  @returns {node} Filter control element
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlFilter ( settings )
	{
		var classes = settings.oClasses;
		var tableId = settings.sTableId;
		var language = settings.oLanguage;
		var previousSearch = settings.oPreviousSearch;
		var features = settings.aanFeatures;
		var input = '<input type="search" class="'+classes.sFilterInput+'"/>';
	
		var str = language.sSearch;
		str = str.match(/_INPUT_/) ?
			str.replace('_INPUT_', input) :
			str+input;
	
		var filter = $('<div/>', {
				'id': ! features.f ? tableId+'_filter' : null,
				'class': classes.sFilter
			} )
			.append( $('<label/>' ).append( str ) );
	
		var searchFn = function() {
			/* Update all other filter input elements for the new display */
			var n = features.f;
			var val = !this.value ? "" : this.value; // mental IE8 fix :-(
	
			/* Now do the filter */
			if ( val != previousSearch.sSearch ) {
				_fnFilterComplete( settings, {
					"sSearch": val,
					"bRegex": previousSearch.bRegex,
					"bSmart": previousSearch.bSmart ,
					"bCaseInsensitive": previousSearch.bCaseInsensitive
				} );
	
				// Need to redraw, without resorting
				settings._iDisplayStart = 0;
				_fnDraw( settings );
			}
		};
	
		var searchDelay = settings.searchDelay !== null ?
			settings.searchDelay :
			_fnDataSource( settings ) === 'ssp' ?
				400 :
				0;
	
		var jqFilter = $('input', filter)
			.val( previousSearch.sSearch )
			.attr( 'placeholder', language.sSearchPlaceholder )
			.bind(
				'keyup.DT search.DT input.DT paste.DT cut.DT',
				searchDelay ?
					_fnThrottle( searchFn, searchDelay ) :
					searchFn
			)
			.bind( 'keypress.DT', function(e) {
				/* Prevent form submission */
				if ( e.keyCode == 13 ) {
					return false;
				}
			} )
			.attr('aria-controls', tableId);
	
		// Update the input elements whenever the table is filtered
		$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {
			if ( settings === s ) {
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame...
				try {
					if ( jqFilter[0] !== document.activeElement ) {
						jqFilter.val( previousSearch.sSearch );
					}
				}
				catch ( e ) {}
			}
		} );
	
		return filter[0];
	}
	
	
	/**
	 * Filter the table using both the global filter and column based filtering
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oSearch search information
	 *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterComplete ( oSettings, oInput, iForce )
	{
		var oPrevSearch = oSettings.oPreviousSearch;
		var aoPrevSearch = oSettings.aoPreSearchCols;
		var fnSaveFilter = function ( oFilter ) {
			/* Save the filtering values */
			oPrevSearch.sSearch = oFilter.sSearch;
			oPrevSearch.bRegex = oFilter.bRegex;
			oPrevSearch.bSmart = oFilter.bSmart;
			oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
		};
		var fnRegex = function ( o ) {
			// Backwards compatibility with the bEscapeRegex option
			return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;
		};
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo As per sort - can this be moved into an event handler?
		_fnColumnTypes( oSettings );
	
		/* In server-side processing all filtering is done by the server, so no point hanging around here */
		if ( _fnDataSource( oSettings ) != 'ssp' )
		{
			/* Global filter */
			_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );
			fnSaveFilter( oInput );
	
			/* Now do the individual column filter */
			for ( var i=0 ; i<aoPrevSearch.length ; i++ )
			{
				_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),
					aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );
			}
	
			/* Custom filtering */
			_fnFilterCustom( oSettings );
		}
		else
		{
			fnSaveFilter( oInput );
		}
	
		/* Tell the draw function we have been filtering */
		oSettings.bFiltered = true;
		_fnCallbackFire( oSettings, null, 'search', [oSettings] );
	}
	
	
	/**
	 * Apply custom filtering functions
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCustom( settings )
	{
		var filters = DataTable.ext.search;
		var displayRows = settings.aiDisplay;
		var row, rowIdx;
	
		for ( var i=0, ien=filters.length ; i<ien ; i++ ) {
			var rows = [];
	
			// Loop over each row and see if it should be included
			for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {
				rowIdx = displayRows[ j ];
				row = settings.aoData[ rowIdx ];
	
				if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {
					rows.push( rowIdx );
				}
			}
	
			// So the array reference doesn't break set the results into the
			// existing array
			displayRows.length = 0;
			$.merge( displayRows, rows );
		}
	}
	
	
	/**
	 * Filter the table on a per-column basis
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iColumn column to filter
	 *  @param {bool} bRegex treat search string as a regular expression or not
	 *  @param {bool} bSmart use smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )
	{
		if ( searchStr === '' ) {
			return;
		}
	
		var data;
		var display = settings.aiDisplay;
		var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );
	
		for ( var i=display.length-1 ; i>=0 ; i-- ) {
			data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];
	
			if ( ! rpSearch.test( data ) ) {
				display.splice( i, 1 );
			}
		}
	}
	
	
	/**
	 * Filter the data table based on user input and draw the table
	 *  @param {object} settings dataTables settings object
	 *  @param {string} input string to filter on
	 *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)
	 *  @param {bool} regex treat as a regular expression or not
	 *  @param {bool} smart perform smart filtering or not
	 *  @param {bool} caseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilter( settings, input, force, regex, smart, caseInsensitive )
	{
		var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );
		var prevSearch = settings.oPreviousSearch.sSearch;
		var displayMaster = settings.aiDisplayMaster;
		var display, invalidated, i;
	
		// Need to take account of custom filtering functions - always filter
		if ( DataTable.ext.search.length !== 0 ) {
			force = true;
		}
	
		// Check if any of the rows were invalidated
		invalidated = _fnFilterData( settings );
	
		// If the input is blank - we just want the full data set
		if ( input.length <= 0 ) {
			settings.aiDisplay = displayMaster.slice();
		}
		else {
			// New search - start from the master array
			if ( invalidated ||
				 force ||
				 prevSearch.length > input.length ||
				 input.indexOf(prevSearch) !== 0 ||
				 settings.bSorted // On resort, the display master needs to be
				                  // re-filtered since indexes will have changed
			) {
				settings.aiDisplay = displayMaster.slice();
			}
	
			// Search the display array
			display = settings.aiDisplay;
	
			for ( i=display.length-1 ; i>=0 ; i-- ) {
				if ( ! rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {
					display.splice( i, 1 );
				}
			}
		}
	}
	
	
	/**
	 * Build a regular expression object suitable for searching a table
	 *  @param {string} sSearch string to search for
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @returns {RegExp} constructed object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )
	{
		search = regex ?
			search :
			_fnEscapeRegex( search );
		
		if ( smart ) {
			/* For smart filtering we want to allow the search to work regardless of
			 * word order. We also want double quoted text to be preserved, so word
			 * order is important - a la google. So this is what we want to
			 * generate:
			 * 
			 * ^(?=.*?\bone\b)(?=.*?\btwo three\b)(?=.*?\bfour\b).*$
			 */
			var a = $.map( search.match( /"[^"]+"|[^ ]+/g ) || [''], function ( word ) {
				if ( word.charAt(0) === '"' ) {
					var m = word.match( /^"(.*)"$/ );
					word = m ? m[1] : word;
				}
	
				return word.replace('"', '');
			} );
	
			search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';
		}
	
		return new RegExp( search, caseInsensitive ? 'i' : '' );
	}
	
	
	/**
	 * Escape a string such that it can be used in a regular expression
	 *  @param {string} sVal string to escape
	 *  @returns {string} escaped string
	 *  @memberof DataTable#oApi
	 */
	var _fnEscapeRegex = DataTable.util.escapeRegex;
	
	var __filter_div = $('<div>')[0];
	var __filter_div_textContent = __filter_div.textContent !== undefined;
	
	// Update the filtering data for each row if needed (by invalidation or first run)
	function _fnFilterData ( settings )
	{
		var columns = settings.aoColumns;
		var column;
		var i, j, ien, jen, filterData, cellData, row;
		var fomatters = DataTable.ext.type.search;
		var wasInvalidated = false;
	
		for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aFilterData ) {
				filterData = [];
	
				for ( j=0, jen=columns.length ; j<jen ; j++ ) {
					column = columns[j];
	
					if ( column.bSearchable ) {
						cellData = _fnGetCellData( settings, i, j, 'filter' );
	
						if ( fomatters[ column.sType ] ) {
							cellData = fomatters[ column.sType ]( cellData );
						}
	
						// Search in DataTables 1.10 is string based. In 1.11 this
						// should be altered to also allow strict type checking.
						if ( cellData === null ) {
							cellData = '';
						}
	
						if ( typeof cellData !== 'string' && cellData.toString ) {
							cellData = cellData.toString();
						}
					}
					else {
						cellData = '';
					}
	
					// If it looks like there is an HTML entity in the string,
					// attempt to decode it so sorting works as expected. Note that
					// we could use a single line of jQuery to do this, but the DOM
					// method used here is much faster http://jsperf.com/html-decode
					if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {
						__filter_div.innerHTML = cellData;
						cellData = __filter_div_textContent ?
							__filter_div.textContent :
							__filter_div.innerText;
					}
	
					if ( cellData.replace ) {
						cellData = cellData.replace(/[\r\n]/g, '');
					}
	
					filterData.push( cellData );
				}
	
				row._aFilterData = filterData;
				row._sFilterRow = filterData.join('  ');
				wasInvalidated = true;
			}
		}
	
		return wasInvalidated;
	}
	
	
	/**
	 * Convert from the internal Hungarian notation to camelCase for external
	 * interaction
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToCamel ( obj )
	{
		return {
			search:          obj.sSearch,
			smart:           obj.bSmart,
			regex:           obj.bRegex,
			caseInsensitive: obj.bCaseInsensitive
		};
	}
	
	
	
	/**
	 * Convert from camelCase notation to the internal Hungarian. We could use the
	 * Hungarian convert function here, but this is cleaner
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToHung ( obj )
	{
		return {
			sSearch:          obj.search,
			bSmart:           obj.smart,
			bRegex:           obj.regex,
			bCaseInsensitive: obj.caseInsensitive
		};
	}
	
	/**
	 * Generate the node required for the info display
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Information element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlInfo ( settings )
	{
		var
			tid = settings.sTableId,
			nodes = settings.aanFeatures.i,
			n = $('<div/>', {
				'class': settings.oClasses.sInfo,
				'id': ! nodes ? tid+'_info' : null
			} );
	
		if ( ! nodes ) {
			// Update display on each draw
			settings.aoDrawCallback.push( {
				"fn": _fnUpdateInfo,
				"sName": "information"
			} );
	
			n
				.attr( 'role', 'status' )
				.attr( 'aria-live', 'polite' );
	
			// Table is described by our info div
			$(settings.nTable).attr( 'aria-describedby', tid+'_info' );
		}
	
		return n[0];
	}
	
	
	/**
	 * Update the information elements in the display
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnUpdateInfo ( settings )
	{
		/* Show information about the table */
		var nodes = settings.aanFeatures.i;
		if ( nodes.length === 0 ) {
			return;
		}
	
		var
			lang  = settings.oLanguage,
			start = settings._iDisplayStart+1,
			end   = settings.fnDisplayEnd(),
			max   = settings.fnRecordsTotal(),
			total = settings.fnRecordsDisplay(),
			out   = total ?
				lang.sInfo :
				lang.sInfoEmpty;
	
		if ( total !== max ) {
			/* Record set after filtering */
			out += ' ' + lang.sInfoFiltered;
		}
	
		// Convert the macros
		out += lang.sInfoPostFix;
		out = _fnInfoMacros( settings, out );
	
		var callback = lang.fnInfoCallback;
		if ( callback !== null ) {
			out = callback.call( settings.oInstance,
				settings, start, end, max, total, out
			);
		}
	
		$(nodes).html( out );
	}
	
	
	function _fnInfoMacros ( settings, str )
	{
		// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
		// internally
		var
			formatter  = settings.fnFormatNumber,
			start      = settings._iDisplayStart+1,
			len        = settings._iDisplayLength,
			vis        = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return str.
			replace(/_START_/g, formatter.call( settings, start ) ).
			replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).
			replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).
			replace(/_TOTAL_/g, formatter.call( settings, vis ) ).
			replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).
			replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );
	}
	
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnInitialise ( settings )
	{
		var i, iLen, iAjaxStart=settings.iInitDisplayStart;
		var columns = settings.aoColumns, column;
		var features = settings.oFeatures;
		var deferLoading = settings.bDeferLoading; // value modified by the draw
	
		/* Ensure that the table data is fully initialised */
		if ( ! settings.bInitialised ) {
			setTimeout( function(){ _fnInitialise( settings ); }, 200 );
			return;
		}
	
		/* Show the display HTML options */
		_fnAddOptionsHtml( settings );
	
		/* Build and draw the header / footer for the table */
		_fnBuildHead( settings );
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		/* Okay to show that something is going on now */
		_fnProcessingDisplay( settings, true );
	
		/* Calculate sizes for columns */
		if ( features.bAutoWidth ) {
			_fnCalculateColumnWidths( settings );
		}
	
		for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {
			column = columns[i];
	
			if ( column.sWidth ) {
				column.nTh.style.width = _fnStringToCss( column.sWidth );
			}
		}
	
		_fnCallbackFire( settings, null, 'preInit', [settings] );
	
		// If there is default sorting required - let's do it. The sort function
		// will do the drawing for us. Otherwise we draw the table regardless of the
		// Ajax source - this allows the table to look initialised for Ajax sourcing
		// data (show 'loading' message possibly)
		_fnReDraw( settings );
	
		// Server-side processing init complete is done by _fnAjaxUpdateDraw
		var dataSrc = _fnDataSource( settings );
		if ( dataSrc != 'ssp' || deferLoading ) {
			// if there is an ajax source load the data
			if ( dataSrc == 'ajax' ) {
				_fnBuildAjax( settings, [], function(json) {
					var aData = _fnAjaxDataSrc( settings, json );
	
					// Got the data - add it to the table
					for ( i=0 ; i<aData.length ; i++ ) {
						_fnAddData( settings, aData[i] );
					}
	
					// Reset the init display for cookie saving. We've already done
					// a filter, and therefore cleared it before. So we need to make
					// it appear 'fresh'
					settings.iInitDisplayStart = iAjaxStart;
	
					_fnReDraw( settings );
	
					_fnProcessingDisplay( settings, false );
					_fnInitComplete( settings, json );
				}, settings );
			}
			else {
				_fnProcessingDisplay( settings, false );
				_fnInitComplete( settings );
			}
		}
	}
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
	 *    with client-side processing (optional)
	 *  @memberof DataTable#oApi
	 */
	function _fnInitComplete ( settings, json )
	{
		settings._bInitComplete = true;
	
		// When data was added after the initialisation (data or Ajax) we need to
		// calculate the column sizing
		if ( json || settings.oInit.aaData ) {
			_fnAdjustColumnSizing( settings );
		}
	
		_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );
		_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );
	}
	
	
	function _fnLengthChange ( settings, val )
	{
		var len = parseInt( val, 10 );
		settings._iDisplayLength = len;
	
		_fnLengthOverflow( settings );
	
		// Fire length change event
		_fnCallbackFire( settings, null, 'length', [settings, len] );
	}
	
	
	/**
	 * Generate the node required for user display length changing
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Display length feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlLength ( settings )
	{
		var
			classes  = settings.oClasses,
			tableId  = settings.sTableId,
			menu     = settings.aLengthMenu,
			d2       = $.isArray( menu[0] ),
			lengths  = d2 ? menu[0] : menu,
			language = d2 ? menu[1] : menu;
	
		var select = $('<select/>', {
			'name':          tableId+'_length',
			'aria-controls': tableId,
			'class':         classes.sLengthSelect
		} );
	
		for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {
			select[0][ i ] = new Option( language[i], lengths[i] );
		}
	
		var div = $('<div><label/></div>').addClass( classes.sLength );
		if ( ! settings.aanFeatures.l ) {
			div[0].id = tableId+'_length';
		}
	
		div.children().append(
			settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )
		);
	
		// Can't use `select` variable as user might provide their own and the
		// reference is broken by the use of outerHTML
		$('select', div)
			.val( settings._iDisplayLength )
			.bind( 'change.DT', function(e) {
				_fnLengthChange( settings, $(this).val() );
				_fnDraw( settings );
			} );
	
		// Update node value whenever anything changes the table's length
		$(settings.nTable).bind( 'length.dt.DT', function (e, s, len) {
			if ( settings === s ) {
				$('select', div).val( len );
			}
		} );
	
		return div[0];
	}
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.pager
	 */
	
	/**
	 * Generate the node required for default pagination
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Pagination feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlPaginate ( settings )
	{
		var
			type   = settings.sPaginationType,
			plugin = DataTable.ext.pager[ type ],
			modern = typeof plugin === 'function',
			redraw = function( settings ) {
				_fnDraw( settings );
			},
			node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],
			features = settings.aanFeatures;
	
		if ( ! modern ) {
			plugin.fnInit( settings, node, redraw );
		}
	
		/* Add a draw callback for the pagination on first instance, to update the paging display */
		if ( ! features.p )
		{
			node.id = settings.sTableId+'_paginate';
	
			settings.aoDrawCallback.push( {
				"fn": function( settings ) {
					if ( modern ) {
						var
							start      = settings._iDisplayStart,
							len        = settings._iDisplayLength,
							visRecords = settings.fnRecordsDisplay(),
							all        = len === -1,
							page = all ? 0 : Math.ceil( start / len ),
							pages = all ? 1 : Math.ceil( visRecords / len ),
							buttons = plugin(page, pages),
							i, ien;
	
						for ( i=0, ien=features.p.length ; i<ien ; i++ ) {
							_fnRenderer( settings, 'pageButton' )(
								settings, features.p[i], i, buttons, page, pages
							);
						}
					}
					else {
						plugin.fnUpdate( settings, redraw );
					}
				},
				"sName": "pagination"
			} );
		}
	
		return node;
	}
	
	
	/**
	 * Alter the display settings to change the page
	 *  @param {object} settings DataTables settings object
	 *  @param {string|int} action Paging action to take: "first", "previous",
	 *    "next" or "last" or page number to jump to (integer)
	 *  @param [bool] redraw Automatically draw the update or not
	 *  @returns {bool} true page has changed, false - no change
	 *  @memberof DataTable#oApi
	 */
	function _fnPageChange ( settings, action, redraw )
	{
		var
			start     = settings._iDisplayStart,
			len       = settings._iDisplayLength,
			records   = settings.fnRecordsDisplay();
	
		if ( records === 0 || len === -1 )
		{
			start = 0;
		}
		else if ( typeof action === "number" )
		{
			start = action * len;
	
			if ( start > records )
			{
				start = 0;
			}
		}
		else if ( action == "first" )
		{
			start = 0;
		}
		else if ( action == "previous" )
		{
			start = len >= 0 ?
				start - len :
				0;
	
			if ( start < 0 )
			{
			  start = 0;
			}
		}
		else if ( action == "next" )
		{
			if ( start + len < records )
			{
				start += len;
			}
		}
		else if ( action == "last" )
		{
			start = Math.floor( (records-1) / len) * len;
		}
		else
		{
			_fnLog( settings, 0, "Unknown paging action: "+action, 5 );
		}
	
		var changed = settings._iDisplayStart !== start;
		settings._iDisplayStart = start;
	
		if ( changed ) {
			_fnCallbackFire( settings, null, 'page', [settings] );
	
			if ( redraw ) {
				_fnDraw( settings );
			}
		}
	
		return changed;
	}
	
	
	
	/**
	 * Generate the node required for the processing node
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Processing element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlProcessing ( settings )
	{
		return $('<div/>', {
				'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,
				'class': settings.oClasses.sProcessing
			} )
			.html( settings.oLanguage.sProcessing )
			.insertBefore( settings.nTable )[0];
	}
	
	
	/**
	 * Display or hide the processing indicator
	 *  @param {object} settings dataTables settings object
	 *  @param {bool} show Show the processing indicator (true) or not (false)
	 *  @memberof DataTable#oApi
	 */
	function _fnProcessingDisplay ( settings, show )
	{
		if ( settings.oFeatures.bProcessing ) {
			$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );
		}
	
		_fnCallbackFire( settings, null, 'processing', [settings, show] );
	}
	
	/**
	 * Add any control elements for the table - specifically scrolling
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlTable ( settings )
	{
		var table = $(settings.nTable);
	
		// Add the ARIA grid role to the table
		table.attr( 'role', 'grid' );
	
		// Scrolling from here on in
		var scroll = settings.oScroll;
	
		if ( scroll.sX === '' && scroll.sY === '' ) {
			return settings.nTable;
		}
	
		var scrollX = scroll.sX;
		var scrollY = scroll.sY;
		var classes = settings.oClasses;
		var caption = table.children('caption');
		var captionSide = caption.length ? caption[0]._captionSide : null;
		var headerClone = $( table[0].cloneNode(false) );
		var footerClone = $( table[0].cloneNode(false) );
		var footer = table.children('tfoot');
		var _div = '<div/>';
		var size = function ( s ) {
			return !s ? null : _fnStringToCss( s );
		};
	
		if ( ! footer.length ) {
			footer = null;
		}
	
		/*
		 * The HTML structure that we want to generate in this function is:
		 *  div - scroller
		 *    div - scroll head
		 *      div - scroll head inner
		 *        table - scroll head table
		 *          thead - thead
		 *    div - scroll body
		 *      table - table (master table)
		 *        thead - thead clone for sizing
		 *        tbody - tbody
		 *    div - scroll foot
		 *      div - scroll foot inner
		 *        table - scroll foot table
		 *          tfoot - tfoot
		 */
		var scroller = $( _div, { 'class': classes.sScrollWrapper } )
			.append(
				$(_div, { 'class': classes.sScrollHead } )
					.css( {
						overflow: 'hidden',
						position: 'relative',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollHeadInner } )
							.css( {
								'box-sizing': 'content-box',
								width: scroll.sXInner || '100%'
							} )
							.append(
								headerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'top' ? caption : null )
									.append(
										table.children('thead')
									)
							)
					)
			)
			.append(
				$(_div, { 'class': classes.sScrollBody } )
					.css( {
						position: 'relative',
						overflow: 'auto',
						width: size( scrollX )
					} )
					.append( table )
			);
	
		if ( footer ) {
			scroller.append(
				$(_div, { 'class': classes.sScrollFoot } )
					.css( {
						overflow: 'hidden',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollFootInner } )
							.append(
								footerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'bottom' ? caption : null )
									.append(
										table.children('tfoot')
									)
							)
					)
			);
		}
	
		var children = scroller.children();
		var scrollHead = children[0];
		var scrollBody = children[1];
		var scrollFoot = footer ? children[2] : null;
	
		// When the body is scrolled, then we also want to scroll the headers
		if ( scrollX ) {
			$(scrollBody).on( 'scroll.DT', function (e) {
				var scrollLeft = this.scrollLeft;
	
				scrollHead.scrollLeft = scrollLeft;
	
				if ( footer ) {
					scrollFoot.scrollLeft = scrollLeft;
				}
			} );
		}
	
		$(scrollBody).css(
			scrollY && scroll.bCollapse ? 'max-height' : 'height', 
			scrollY
		);
	
		settings.nScrollHead = scrollHead;
		settings.nScrollBody = scrollBody;
		settings.nScrollFoot = scrollFoot;
	
		// On redraw - align columns
		settings.aoDrawCallback.push( {
			"fn": _fnScrollDraw,
			"sName": "scrolling"
		} );
	
		return scroller[0];
	}
	
	
	
	/**
	 * Update the header, footer and body tables for resizing - i.e. column
	 * alignment.
	 *
	 * Welcome to the most horrible function DataTables. The process that this
	 * function follows is basically:
	 *   1. Re-create the table inside the scrolling div
	 *   2. Take live measurements from the DOM
	 *   3. Apply the measurements to align the columns
	 *   4. Clean up
	 *
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollDraw ( settings )
	{
		// Given that this is such a monster function, a lot of variables are use
		// to try and keep the minimised size as small as possible
		var
			scroll         = settings.oScroll,
			scrollX        = scroll.sX,
			scrollXInner   = scroll.sXInner,
			scrollY        = scroll.sY,
			barWidth       = scroll.iBarWidth,
			divHeader      = $(settings.nScrollHead),
			divHeaderStyle = divHeader[0].style,
			divHeaderInner = divHeader.children('div'),
			divHeaderInnerStyle = divHeaderInner[0].style,
			divHeaderTable = divHeaderInner.children('table'),
			divBodyEl      = settings.nScrollBody,
			divBody        = $(divBodyEl),
			divBodyStyle   = divBodyEl.style,
			divFooter      = $(settings.nScrollFoot),
			divFooterInner = divFooter.children('div'),
			divFooterTable = divFooterInner.children('table'),
			header         = $(settings.nTHead),
			table          = $(settings.nTable),
			tableEl        = table[0],
			tableStyle     = tableEl.style,
			footer         = settings.nTFoot ? $(settings.nTFoot) : null,
			browser        = settings.oBrowser,
			ie67           = browser.bScrollOversize,
			dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),
			headerTrgEls, footerTrgEls,
			headerSrcEls, footerSrcEls,
			headerCopy, footerCopy,
			headerWidths=[], footerWidths=[],
			headerContent=[], footerContent=[],
			idx, correction, sanityWidth,
			zeroOut = function(nSizer) {
				var style = nSizer.style;
				style.paddingTop = "0";
				style.paddingBottom = "0";
				style.borderTopWidth = "0";
				style.borderBottomWidth = "0";
				style.height = 0;
			};
	
		// If the scrollbar visibility has changed from the last draw, we need to
		// adjust the column sizes as the table width will have changed to account
		// for the scrollbar
		var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
		
		if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {
			settings.scrollBarVis = scrollBarVis;
			_fnAdjustColumnSizing( settings );
			return; // adjust column sizing will call this function again
		}
		else {
			settings.scrollBarVis = scrollBarVis;
		}
	
		/*
		 * 1. Re-create the table inside the scrolling div
		 */
	
		// Remove the old minimised thead and tfoot elements in the inner table
		table.children('thead, tfoot').remove();
	
		if ( footer ) {
			footerCopy = footer.clone().prependTo( table );
			footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized
			footerSrcEls = footerCopy.find('tr');
		}
	
		// Clone the current header and footer elements and then place it into the inner table
		headerCopy = header.clone().prependTo( table );
		headerTrgEls = header.find('tr'); // original header is in its own table
		headerSrcEls = headerCopy.find('tr');
		headerCopy.find('th, td').removeAttr('tabindex');
	
	
		/*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */
	
		// Remove old sizing and apply the calculated column widths
		// Get the unique column headers in the newly created (cloned) header. We want to apply the
		// calculated sizes to this header
		if ( ! scrollX )
		{
			divBodyStyle.width = '100%';
			divHeader[0].style.width = '100%';
		}
	
		$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {
			idx = _fnVisibleToColumnIndex( settings, i );
			el.style.width = settings.aoColumns[idx].sWidth;
		} );
	
		if ( footer ) {
			_fnApplyToChildren( function(n) {
				n.style.width = "";
			}, footerSrcEls );
		}
	
		// Size the table as a whole
		sanityWidth = table.outerWidth();
		if ( scrollX === "" ) {
			// No x scrolling
			tableStyle.width = "100%";
	
			// IE7 will make the width of the table when 100% include the scrollbar
			// - which is shouldn't. When there is a scrollbar we need to take this
			// into account.
			if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);
			}
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
		else if ( scrollXInner !== "" ) {
			// legacy x scroll inner has been given - use it
			tableStyle.width = _fnStringToCss(scrollXInner);
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
	
		// Hidden header should have zero height, so remove padding and borders. Then
		// set the width based on the real headers
	
		// Apply all styles in one pass
		_fnApplyToChildren( zeroOut, headerSrcEls );
	
		// Read all widths in next pass
		_fnApplyToChildren( function(nSizer) {
			headerContent.push( nSizer.innerHTML );
			headerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
		}, headerSrcEls );
	
		// Apply all widths in final pass
		_fnApplyToChildren( function(nToSize, i) {
			// Only apply widths to the DataTables detected header cells - this
			// prevents complex headers from having contradictory sizes applied
			if ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {
				nToSize.style.width = headerWidths[i];
			}
		}, headerTrgEls );
	
		$(headerSrcEls).height(0);
	
		/* Same again with the footer if we have one */
		if ( footer )
		{
			_fnApplyToChildren( zeroOut, footerSrcEls );
	
			_fnApplyToChildren( function(nSizer) {
				footerContent.push( nSizer.innerHTML );
				footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
			}, footerSrcEls );
	
			_fnApplyToChildren( function(nToSize, i) {
				nToSize.style.width = footerWidths[i];
			}, footerTrgEls );
	
			$(footerSrcEls).height(0);
		}
	
	
		/*
		 * 3. Apply the measurements
		 */
	
		// "Hide" the header and footer that we used for the sizing. We need to keep
		// the content of the cell so that the width applied to the header and body
		// both match, but we want to hide it completely. We want to also fix their
		// width to what they currently are
		_fnApplyToChildren( function(nSizer, i) {
			nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+headerContent[i]+'</div>';
			nSizer.style.width = headerWidths[i];
		}, headerSrcEls );
	
		if ( footer )
		{
			_fnApplyToChildren( function(nSizer, i) {
				nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+footerContent[i]+'</div>';
				nSizer.style.width = footerWidths[i];
			}, footerSrcEls );
		}
	
		// Sanity check that the table is of a sensible width. If not then we are going to get
		// misalignment - try to prevent this by not allowing the table to shrink below its min width
		if ( table.outerWidth() < sanityWidth )
		{
			// The min width depends upon if we have a vertical scrollbar visible or not */
			correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")) ?
					sanityWidth+barWidth :
					sanityWidth;
	
			// IE6/7 are a law unto themselves...
			if ( ie67 && (divBodyEl.scrollHeight >
				divBodyEl.offsetHeight || divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( correction-barWidth );
			}
	
			// And give the user a warning that we've stopped the table getting too small
			if ( scrollX === "" || scrollXInner !== "" ) {
				_fnLog( settings, 1, 'Possible column misalignment', 6 );
			}
		}
		else
		{
			correction = '100%';
		}
	
		// Apply to the container elements
		divBodyStyle.width = _fnStringToCss( correction );
		divHeaderStyle.width = _fnStringToCss( correction );
	
		if ( footer ) {
			settings.nScrollFoot.style.width = _fnStringToCss( correction );
		}
	
	
		/*
		 * 4. Clean up
		 */
		if ( ! scrollY ) {
			/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
			if ( ie67 ) {
				divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );
			}
		}
	
		/* Finally set the width's of the header and footer tables */
		var iOuterWidth = table.outerWidth();
		divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );
		divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );
	
		// Figure out if there are scrollbar present - if so then we need a the header and footer to
		// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
		var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
		var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );
		divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+"px" : "0px";
	
		if ( footer ) {
			divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style[padding] = bScrolling ? barWidth+"px" : "0px";
		}
	
		// Correct DOM ordering for colgroup - comes before the thead
		table.children('colgroup').insertBefore( table.children('thead') );
	
		/* Adjust the position of the header in case we loose the y-scrollbar */
		divBody.scroll();
	
		// If sorting or filtering has occurred, jump the scrolling back to the top
		// only if we aren't holding the position
		if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {
			divBodyEl.scrollTop = 0;
		}
	}
	
	
	
	/**
	 * Apply a given function to the display child nodes of an element array (typically
	 * TD children of TR rows
	 *  @param {function} fn Method to apply to the objects
	 *  @param array {nodes} an1 List of elements to look through for display children
	 *  @param array {nodes} an2 Another list (identical structure to the first) - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyToChildren( fn, an1, an2 )
	{
		var index=0, i=0, iLen=an1.length;
		var nNode1, nNode2;
	
		while ( i < iLen ) {
			nNode1 = an1[i].firstChild;
			nNode2 = an2 ? an2[i].firstChild : null;
	
			while ( nNode1 ) {
				if ( nNode1.nodeType === 1 ) {
					if ( an2 ) {
						fn( nNode1, nNode2, index );
					}
					else {
						fn( nNode1, index );
					}
	
					index++;
				}
	
				nNode1 = nNode1.nextSibling;
				nNode2 = an2 ? nNode2.nextSibling : null;
			}
	
			i++;
		}
	}
	
	
	
	var __re_html_remove = /<.*?>/g;
	
	
	/**
	 * Calculate the width of columns for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateColumnWidths ( oSettings )
	{
		var
			table = oSettings.nTable,
			columns = oSettings.aoColumns,
			scroll = oSettings.oScroll,
			scrollY = scroll.sY,
			scrollX = scroll.sX,
			scrollXInner = scroll.sXInner,
			columnCount = columns.length,
			visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),
			headerCells = $('th', oSettings.nTHead),
			tableWidthAttr = table.getAttribute('width'), // from DOM element
			tableContainer = table.parentNode,
			userInputs = false,
			i, column, columnIdx, width, outerWidth,
			browser = oSettings.oBrowser,
			ie67 = browser.bScrollOversize;
	
		var styleWidth = table.style.width;
		if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {
			tableWidthAttr = styleWidth;
		}
	
		/* Convert any user input sizes into pixel sizes */
		for ( i=0 ; i<visibleColumns.length ; i++ ) {
			column = columns[ visibleColumns[i] ];
	
			if ( column.sWidth !== null ) {
				column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );
	
				userInputs = true;
			}
		}
	
		/* If the number of columns in the DOM equals the number that we have to
		 * process in DataTables, then we can use the offsets that are created by
		 * the web- browser. No custom sizes can be set in order for this to happen,
		 * nor scrolling used
		 */
		if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&
		     columnCount == _fnVisbleColumns( oSettings ) &&
		     columnCount == headerCells.length
		) {
			for ( i=0 ; i<columnCount ; i++ ) {
				var colIdx = _fnVisibleToColumnIndex( oSettings, i );
	
				if ( colIdx !== null ) {
					columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );
				}
			}
		}
		else
		{
			// Otherwise construct a single row, worst case, table with the widest
			// node in the data, assign any user defined widths, then insert it into
			// the DOM and allow the browser to do all the hard work of calculating
			// table widths
			var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table
				.css( 'visibility', 'hidden' )
				.removeAttr( 'id' );
	
			// Clean up the table body
			tmpTable.find('tbody tr').remove();
			var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );
	
			// Clone the table header and footer - we can't use the header / footer
			// from the cloned table, since if scrolling is active, the table's
			// real header and footer are contained in different table tags
			tmpTable.find('thead, tfoot').remove();
			tmpTable
				.append( $(oSettings.nTHead).clone() )
				.append( $(oSettings.nTFoot).clone() );
	
			// Remove any assigned widths from the footer (from scrolling)
			tmpTable.find('tfoot th, tfoot td').css('width', '');
	
			// Apply custom sizing to the cloned header
			headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );
	
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				column = columns[ visibleColumns[i] ];
	
				headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?
					_fnStringToCss( column.sWidthOrig ) :
					'';
	
				// For scrollX we need to force the column width otherwise the
				// browser will collapse it. If this width is smaller than the
				// width the column requires, then it will have no effect
				if ( column.sWidthOrig && scrollX ) {
					$( headerCells[i] ).append( $('<div/>').css( {
						width: column.sWidthOrig,
						margin: 0,
						padding: 0,
						border: 0,
						height: 1
					} ) );
				}
			}
	
			// Find the widest cell for each column and put it into the table
			if ( oSettings.aoData.length ) {
				for ( i=0 ; i<visibleColumns.length ; i++ ) {
					columnIdx = visibleColumns[i];
					column = columns[ columnIdx ];
	
					$( _fnGetWidestNode( oSettings, columnIdx ) )
						.clone( false )
						.append( column.sContentPadding )
						.appendTo( tr );
				}
			}
	
			// Tidy the temporary table - remove name attributes so there aren't
			// duplicated in the dom (radio elements for example)
			$('[name]', tmpTable).removeAttr('name');
	
			// Table has been built, attach to the document so we can work with it.
			// A holding element is used, positioned at the top of the container
			// with minimal height, so it has no effect on if the container scrolls
			// or not. Otherwise it might trigger scrolling when it actually isn't
			// needed
			var holder = $('<div/>').css( scrollX || scrollY ?
					{
						position: 'absolute',
						top: 0,
						left: 0,
						height: 1,
						right: 0,
						overflow: 'hidden'
					} :
					{}
				)
				.append( tmpTable )
				.appendTo( tableContainer );
	
			// When scrolling (X or Y) we want to set the width of the table as 
			// appropriate. However, when not scrolling leave the table width as it
			// is. This results in slightly different, but I think correct behaviour
			if ( scrollX && scrollXInner ) {
				tmpTable.width( scrollXInner );
			}
			else if ( scrollX ) {
				tmpTable.css( 'width', 'auto' );
				tmpTable.removeAttr('width');
	
				// If there is no width attribute or style, then allow the table to
				// collapse
				if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {
					tmpTable.width( tableContainer.clientWidth );
				}
			}
			else if ( scrollY ) {
				tmpTable.width( tableContainer.clientWidth );
			}
			else if ( tableWidthAttr ) {
				tmpTable.width( tableWidthAttr );
			}
	
			// Get the width of each column in the constructed table - we need to
			// know the inner width (so it can be assigned to the other table's
			// cells) and the outer width so we can calculate the full width of the
			// table. This is safe since DataTables requires a unique cell for each
			// column, but if ever a header can span multiple columns, this will
			// need to be modified.
			var total = 0;
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				var cell = $(headerCells[i]);
				var border = cell.outerWidth() - cell.width();
	
				// Use getBounding... where possible (not IE8-) because it can give
				// sub-pixel accuracy, which we then want to round up!
				var bounding = browser.bBounding ?
					Math.ceil( headerCells[i].getBoundingClientRect().width ) :
					cell.outerWidth();
	
				// Total is tracked to remove any sub-pixel errors as the outerWidth
				// of the table might not equal the total given here (IE!).
				total += bounding;
	
				// Width for each column to use
				columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );
			}
	
			table.style.width = _fnStringToCss( total );
	
			// Finished with the table - ditch it
			holder.remove();
		}
	
		// If there is a width attr, we want to attach an event listener which
		// allows the table sizing to automatically adjust when the window is
		// resized. Use the width attr rather than CSS, since we can't know if the
		// CSS is a relative value or absolute - DOM read is always px.
		if ( tableWidthAttr ) {
			table.style.width = _fnStringToCss( tableWidthAttr );
		}
	
		if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {
			var bindResize = function () {
				$(window).bind('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {
					_fnAdjustColumnSizing( oSettings );
				} ) );
			};
	
			// IE6/7 will crash if we bind a resize event handler on page load.
			// To be removed in 1.11 which drops IE6/7 support
			if ( ie67 ) {
				setTimeout( bindResize, 1000 );
			}
			else {
				bindResize();
			}
	
			oSettings._reszEvt = true;
		}
	}
	
	
	/**
	 * Throttle the calls to a function. Arguments and context are maintained for
	 * the throttled function
	 *  @param {function} fn Function to be called
	 *  @param {int} [freq=200] call frequency in mS
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#oApi
	 */
	var _fnThrottle = DataTable.util.throttle;
	
	
	/**
	 * Convert a CSS unit width to pixels (e.g. 2em)
	 *  @param {string} width width to be converted
	 *  @param {node} parent parent to get the with for (required for relative widths) - optional
	 *  @returns {int} width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnConvertToWidth ( width, parent )
	{
		if ( ! width ) {
			return 0;
		}
	
		var n = $('<div/>')
			.css( 'width', _fnStringToCss( width ) )
			.appendTo( parent || document.body );
	
		var val = n[0].offsetWidth;
		n.remove();
	
		return val;
	}
	
	
	/**
	 * Get the widest node
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {node} widest table node
	 *  @memberof DataTable#oApi
	 */
	function _fnGetWidestNode( settings, colIdx )
	{
		var idx = _fnGetMaxLenString( settings, colIdx );
		if ( idx < 0 ) {
			return null;
		}
	
		var data = settings.aoData[ idx ];
		return ! data.nTr ? // Might not have been created when deferred rendering
			$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :
			data.anCells[ colIdx ];
	}
	
	
	/**
	 * Get the maximum strlen for each data column
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {string} max string length for each column
	 *  @memberof DataTable#oApi
	 */
	function _fnGetMaxLenString( settings, colIdx )
	{
		var s, max=-1, maxIdx = -1;
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			s = _fnGetCellData( settings, i, colIdx, 'display' )+'';
			s = s.replace( __re_html_remove, '' );
			s = s.replace( /&nbsp;/g, ' ' );
	
			if ( s.length > max ) {
				max = s.length;
				maxIdx = i;
			}
		}
	
		return maxIdx;
	}
	
	
	/**
	 * Append a CSS unit (only if required) to a string
	 *  @param {string} value to css-ify
	 *  @returns {string} value with css unit
	 *  @memberof DataTable#oApi
	 */
	function _fnStringToCss( s )
	{
		if ( s === null ) {
			return '0px';
		}
	
		if ( typeof s == 'number' ) {
			return s < 0 ?
				'0px' :
				s+'px';
		}
	
		// Check it has a unit character already
		return s.match(/\d$/) ?
			s+'px' :
			s;
	}
	
	
	
	function _fnSortFlatten ( settings )
	{
		var
			i, iLen, k, kLen,
			aSort = [],
			aiOrig = [],
			aoColumns = settings.aoColumns,
			aDataSort, iCol, sType, srcCol,
			fixed = settings.aaSortingFixed,
			fixedObj = $.isPlainObject( fixed ),
			nestedSort = [],
			add = function ( a ) {
				if ( a.length && ! $.isArray( a[0] ) ) {
					// 1D array
					nestedSort.push( a );
				}
				else {
					// 2D array
					$.merge( nestedSort, a );
				}
			};
	
		// Build the sort array, with pre-fix and post-fix options if they have been
		// specified
		if ( $.isArray( fixed ) ) {
			add( fixed );
		}
	
		if ( fixedObj && fixed.pre ) {
			add( fixed.pre );
		}
	
		add( settings.aaSorting );
	
		if (fixedObj && fixed.post ) {
			add( fixed.post );
		}
	
		for ( i=0 ; i<nestedSort.length ; i++ )
		{
			srcCol = nestedSort[i][0];
			aDataSort = aoColumns[ srcCol ].aDataSort;
	
			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';
	
				if ( nestedSort[i]._idx === undefined ) {
					nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );
				}
	
				aSort.push( {
					src:       srcCol,
					col:       iCol,
					dir:       nestedSort[i][1],
					index:     nestedSort[i]._idx,
					type:      sType,
					formatter: DataTable.ext.type.order[ sType+"-pre" ]
				} );
			}
		}
	
		return aSort;
	}
	
	/**
	 * Change the order of the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 *  @todo This really needs split up!
	 */
	function _fnSort ( oSettings )
	{
		var
			i, ien, iLen, j, jLen, k, kLen,
			sDataType, nTh,
			aiOrig = [],
			oExtSort = DataTable.ext.type.order,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns,
			aDataSort, data, iCol, sType, oSort,
			formatters = 0,
			sortCol,
			displayMaster = oSettings.aiDisplayMaster,
			aSort;
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo Can this be moved into a 'data-ready' handler which is called when
		//   data is going to be used in the table?
		_fnColumnTypes( oSettings );
	
		aSort = _fnSortFlatten( oSettings );
	
		for ( i=0, ien=aSort.length ; i<ien ; i++ ) {
			sortCol = aSort[i];
	
			// Track if we can use the fast sort algorithm
			if ( sortCol.formatter ) {
				formatters++;
			}
	
			// Load the data needed for the sort, for each cell
			_fnSortData( oSettings, sortCol.col );
		}
	
		/* No sorting required if server-side or no sorting array */
		if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )
		{
			// Create a value - key array of the current row positions such that we can use their
			// current position during the sort, if values match, in order to perform stable sorting
			for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {
				aiOrig[ displayMaster[i] ] = i;
			}
	
			/* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
			if ( formatters === aSort.length ) {
				// All sort types have formatting functions
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = x<y ? -1 : x>y ? 1 : 0;
						if ( test !== 0 ) {
							return sort.dir === 'asc' ? test : -test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
			else {
				// Depreciated - remove in 1.11 (providing a plug-in option)
				// Not all sort types have formatting methods, so we have to call their sorting
				// methods.
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, l, test, sort, fn,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						fn = oExtSort[ sort.type+"-"+sort.dir ] || oExtSort[ "string-"+sort.dir ];
						test = fn( x, y );
						if ( test !== 0 ) {
							return test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
		}
	
		/* Tell the draw function that we have sorted the data */
		oSettings.bSorted = true;
	}
	
	
	function _fnSortAria ( settings )
	{
		var label;
		var nextSort;
		var columns = settings.aoColumns;
		var aSort = _fnSortFlatten( settings );
		var oAria = settings.oLanguage.oAria;
	
		// ARIA attributes - need to loop all columns, to update all (removing old
		// attributes as needed)
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			var col = columns[i];
			var asSorting = col.asSorting;
			var sTitle = col.sTitle.replace( /<.*?>/g, "" );
			var th = col.nTh;
	
			// IE7 is throwing an error when setting these properties with jQuery's
			// attr() and removeAttr() methods...
			th.removeAttribute('aria-sort');
	
			/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
			if ( col.bSortable ) {
				if ( aSort.length > 0 && aSort[0].col == i ) {
					th.setAttribute('aria-sort', aSort[0].dir=="asc" ? "ascending" : "descending" );
					nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];
				}
				else {
					nextSort = asSorting[0];
				}
	
				label = sTitle + ( nextSort === "asc" ?
					oAria.sSortAscending :
					oAria.sSortDescending
				);
			}
			else {
				label = sTitle;
			}
	
			th.setAttribute('aria-label', label);
		}
	}
	
	
	/**
	 * Function to run on user sort request
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {boolean} [append=false] Append the requested sort to the existing
	 *    sort if true (i.e. multi-column sort)
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortListener ( settings, colIdx, append, callback )
	{
		var col = settings.aoColumns[ colIdx ];
		var sorting = settings.aaSorting;
		var asSorting = col.asSorting;
		var nextSortIdx;
		var next = function ( a, overflow ) {
			var idx = a._idx;
			if ( idx === undefined ) {
				idx = $.inArray( a[1], asSorting );
			}
	
			return idx+1 < asSorting.length ?
				idx+1 :
				overflow ?
					null :
					0;
		};
	
		// Convert to 2D array if needed
		if ( typeof sorting[0] === 'number' ) {
			sorting = settings.aaSorting = [ sorting ];
		}
	
		// If appending the sort then we are multi-column sorting
		if ( append && settings.oFeatures.bSortMulti ) {
			// Are we already doing some kind of sort on this column?
			var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );
	
			if ( sortIdx !== -1 ) {
				// Yes, modify the sort
				nextSortIdx = next( sorting[sortIdx], true );
	
				if ( nextSortIdx === null && sorting.length === 1 ) {
					nextSortIdx = 0; // can't remove sorting completely
				}
	
				if ( nextSortIdx === null ) {
					sorting.splice( sortIdx, 1 );
				}
				else {
					sorting[sortIdx][1] = asSorting[ nextSortIdx ];
					sorting[sortIdx]._idx = nextSortIdx;
				}
			}
			else {
				// No sort on this column yet
				sorting.push( [ colIdx, asSorting[0], 0 ] );
				sorting[sorting.length-1]._idx = 0;
			}
		}
		else if ( sorting.length && sorting[0][0] == colIdx ) {
			// Single column - already sorting on this column, modify the sort
			nextSortIdx = next( sorting[0] );
	
			sorting.length = 1;
			sorting[0][1] = asSorting[ nextSortIdx ];
			sorting[0]._idx = nextSortIdx;
		}
		else {
			// Single column - sort only on this column
			sorting.length = 0;
			sorting.push( [ colIdx, asSorting[0] ] );
			sorting[0]._idx = 0;
		}
	
		// Run the sort by calling a full redraw
		_fnReDraw( settings );
	
		// callback used for async user interaction
		if ( typeof callback == 'function' ) {
			callback( settings );
		}
	}
	
	
	/**
	 * Attach a sort handler (click) to a node
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortAttachListener ( settings, attachTo, colIdx, callback )
	{
		var col = settings.aoColumns[ colIdx ];
	
		_fnBindAction( attachTo, {}, function (e) {
			/* If the column is not sortable - don't to anything */
			if ( col.bSortable === false ) {
				return;
			}
	
			// If processing is enabled use a timeout to allow the processing
			// display to be shown - otherwise to it synchronously
			if ( settings.oFeatures.bProcessing ) {
				_fnProcessingDisplay( settings, true );
	
				setTimeout( function() {
					_fnSortListener( settings, colIdx, e.shiftKey, callback );
	
					// In server-side processing, the draw callback will remove the
					// processing display
					if ( _fnDataSource( settings ) !== 'ssp' ) {
						_fnProcessingDisplay( settings, false );
					}
				}, 0 );
			}
			else {
				_fnSortListener( settings, colIdx, e.shiftKey, callback );
			}
		} );
	}
	
	
	/**
	 * Set the sorting classes on table's body, Note: it is safe to call this function
	 * when bSort and bSortClasses are false
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSortingClasses( settings )
	{
		var oldSort = settings.aLastSort;
		var sortClass = settings.oClasses.sSortColumn;
		var sort = _fnSortFlatten( settings );
		var features = settings.oFeatures;
		var i, ien, colIdx;
	
		if ( features.bSort && features.bSortClasses ) {
			// Remove old sorting classes
			for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {
				colIdx = oldSort[i].src;
	
				// Remove column sorting
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.removeClass( sortClass + (i<2 ? i+1 : 3) );
			}
	
			// Add new column sorting
			for ( i=0, ien=sort.length ; i<ien ; i++ ) {
				colIdx = sort[i].src;
	
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.addClass( sortClass + (i<2 ? i+1 : 3) );
			}
		}
	
		settings.aLastSort = sort;
	}
	
	
	// Get the data to sort a column, be it from cache, fresh (populating the
	// cache), or from a sort formatter
	function _fnSortData( settings, idx )
	{
		// Custom sorting function - provided by the sort data type
		var column = settings.aoColumns[ idx ];
		var customSort = DataTable.ext.order[ column.sSortDataType ];
		var customData;
	
		if ( customSort ) {
			customData = customSort.call( settings.oInstance, settings, idx,
				_fnColumnIndexToVisible( settings, idx )
			);
		}
	
		// Use / populate cache
		var row, cellData;
		var formatter = DataTable.ext.type.order[ column.sType+"-pre" ];
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aSortData ) {
				row._aSortData = [];
			}
	
			if ( ! row._aSortData[idx] || customSort ) {
				cellData = customSort ?
					customData[i] : // If there was a custom sort function, use data from there
					_fnGetCellData( settings, i, idx, 'sort' );
	
				row._aSortData[ idx ] = formatter ?
					formatter( cellData ) :
					cellData;
			}
		}
	}
	
	
	
	/**
	 * Save the state of a table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSaveState ( settings )
	{
		if ( !settings.oFeatures.bStateSave || settings.bDestroying )
		{
			return;
		}
	
		/* Store the interesting variables */
		var state = {
			time:    +new Date(),
			start:   settings._iDisplayStart,
			length:  settings._iDisplayLength,
			order:   $.extend( true, [], settings.aaSorting ),
			search:  _fnSearchToCamel( settings.oPreviousSearch ),
			columns: $.map( settings.aoColumns, function ( col, i ) {
				return {
					visible: col.bVisible,
					search: _fnSearchToCamel( settings.aoPreSearchCols[i] )
				};
			} )
		};
	
		_fnCallbackFire( settings, "aoStateSaveParams", 'stateSaveParams', [settings, state] );
	
		settings.oSavedState = state;
		settings.fnStateSaveCallback.call( settings.oInstance, settings, state );
	}
	
	
	/**
	 * Attempt to load a saved table state
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oInit DataTables init object so we can override settings
	 *  @memberof DataTable#oApi
	 */
	function _fnLoadState ( settings, oInit )
	{
		var i, ien;
		var columns = settings.aoColumns;
	
		if ( ! settings.oFeatures.bStateSave ) {
			return;
		}
	
		var state = settings.fnStateLoadCallback.call( settings.oInstance, settings );
		if ( ! state || ! state.time ) {
			return;
		}
	
		/* Allow custom and plug-in manipulation functions to alter the saved data set and
		 * cancelling of loading by returning false
		 */
		var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state] );
		if ( $.inArray( false, abStateLoad ) !== -1 ) {
			return;
		}
	
		/* Reject old data */
		var duration = settings.iStateDuration;
		if ( duration > 0 && state.time < +new Date() - (duration*1000) ) {
			return;
		}
	
		// Number of columns have changed - all bets are off, no restore of settings
		if ( columns.length !== state.columns.length ) {
			return;
		}
	
		// Store the saved state so it might be accessed at any time
		settings.oLoadedState = $.extend( true, {}, state );
	
		// Restore key features - todo - for 1.11 this needs to be done by
		// subscribed events
		if ( state.start !== undefined ) {
			settings._iDisplayStart    = state.start;
			settings.iInitDisplayStart = state.start;
		}
		if ( state.length !== undefined ) {
			settings._iDisplayLength   = state.length;
		}
	
		// Order
		if ( state.order !== undefined ) {
			settings.aaSorting = [];
			$.each( state.order, function ( i, col ) {
				settings.aaSorting.push( col[0] >= columns.length ?
					[ 0, col[1] ] :
					col
				);
			} );
		}
	
		// Search
		if ( state.search !== undefined ) {
			$.extend( settings.oPreviousSearch, _fnSearchToHung( state.search ) );
		}
	
		// Columns
		for ( i=0, ien=state.columns.length ; i<ien ; i++ ) {
			var col = state.columns[i];
	
			// Visibility
			if ( col.visible !== undefined ) {
				columns[i].bVisible = col.visible;
			}
	
			// Search
			if ( col.search !== undefined ) {
				$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );
			}
		}
	
		_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, state] );
	}
	
	
	/**
	 * Return the settings object for a particular table
	 *  @param {node} table table we are using as a dataTable
	 *  @returns {object} Settings object - or null if not found
	 *  @memberof DataTable#oApi
	 */
	function _fnSettingsFromNode ( table )
	{
		var settings = DataTable.settings;
		var idx = $.inArray( table, _pluck( settings, 'nTable' ) );
	
		return idx !== -1 ?
			settings[ idx ] :
			null;
	}
	
	
	/**
	 * Log an error message
	 *  @param {object} settings dataTables settings object
	 *  @param {int} level log error messages, or display them to the user
	 *  @param {string} msg error message
	 *  @param {int} tn Technical note id to get more information about the error.
	 *  @memberof DataTable#oApi
	 */
	function _fnLog( settings, level, msg, tn )
	{
		msg = 'DataTables warning: '+
			(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;
	
		if ( tn ) {
			msg += '. For more information about this error, please see '+
			'http://datatables.net/tn/'+tn;
		}
	
		if ( ! level  ) {
			// Backwards compatibility pre 1.10
			var ext = DataTable.ext;
			var type = ext.sErrMode || ext.errMode;
	
			if ( settings ) {
				_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );
			}
	
			if ( type == 'alert' ) {
				alert( msg );
			}
			else if ( type == 'throw' ) {
				throw new Error(msg);
			}
			else if ( typeof type == 'function' ) {
				type( settings, tn, msg );
			}
		}
		else if ( window.console && console.log ) {
			console.log( msg );
		}
	}
	
	
	/**
	 * See if a property is defined on one object, if so assign it to the other object
	 *  @param {object} ret target object
	 *  @param {object} src source object
	 *  @param {string} name property
	 *  @param {string} [mappedName] name to map too - optional, name used if not given
	 *  @memberof DataTable#oApi
	 */
	function _fnMap( ret, src, name, mappedName )
	{
		if ( $.isArray( name ) ) {
			$.each( name, function (i, val) {
				if ( $.isArray( val ) ) {
					_fnMap( ret, src, val[0], val[1] );
				}
				else {
					_fnMap( ret, src, val );
				}
			} );
	
			return;
		}
	
		if ( mappedName === undefined ) {
			mappedName = name;
		}
	
		if ( src[name] !== undefined ) {
			ret[mappedName] = src[name];
		}
	}
	
	
	/**
	 * Extend objects - very similar to jQuery.extend, but deep copy objects, and
	 * shallow copy arrays. The reason we need to do this, is that we don't want to
	 * deep copy array init values (such as aaSorting) since the dev wouldn't be
	 * able to override them, but we do want to deep copy arrays.
	 *  @param {object} out Object to extend
	 *  @param {object} extender Object from which the properties will be applied to
	 *      out
	 *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
	 *      independent copy with the exception of the `data` or `aaData` parameters
	 *      if they are present. This is so you can pass in a collection to
	 *      DataTables and have that used as your data source without breaking the
	 *      references
	 *  @returns {object} out Reference, just for convenience - out === the return.
	 *  @memberof DataTable#oApi
	 *  @todo This doesn't take account of arrays inside the deep copied objects.
	 */
	function _fnExtend( out, extender, breakRefs )
	{
		var val;
	
		for ( var prop in extender ) {
			if ( extender.hasOwnProperty(prop) ) {
				val = extender[prop];
	
				if ( $.isPlainObject( val ) ) {
					if ( ! $.isPlainObject( out[prop] ) ) {
						out[prop] = {};
					}
					$.extend( true, out[prop], val );
				}
				else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {
					out[prop] = val.slice();
				}
				else {
					out[prop] = val;
				}
			}
		}
	
		return out;
	}
	
	
	/**
	 * Bind an event handers to allow a click or return key to activate the callback.
	 * This is good for accessibility since a return on the keyboard will have the
	 * same effect as a click, if the element has focus.
	 *  @param {element} n Element to bind the action to
	 *  @param {object} oData Data object to pass to the triggered function
	 *  @param {function} fn Callback function for when the event is triggered
	 *  @memberof DataTable#oApi
	 */
	function _fnBindAction( n, oData, fn )
	{
		$(n)
			.bind( 'click.DT', oData, function (e) {
					n.blur(); // Remove focus outline for mouse users
					fn(e);
				} )
			.bind( 'keypress.DT', oData, function (e){
					if ( e.which === 13 ) {
						e.preventDefault();
						fn(e);
					}
				} )
			.bind( 'selectstart.DT', function () {
					/* Take the brutal approach to cancelling text selection */
					return false;
				} );
	}
	
	
	/**
	 * Register a callback function. Easily allows a callback function to be added to
	 * an array store of callback functions that can then all be called together.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {function} fn Function to be called back
	 *  @param {string} sName Identifying name for the callback (i.e. a label)
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackReg( oSettings, sStore, fn, sName )
	{
		if ( fn )
		{
			oSettings[sStore].push( {
				"fn": fn,
				"sName": sName
			} );
		}
	}
	
	
	/**
	 * Fire callback functions and trigger events. Note that the loop over the
	 * callback array store is done backwards! Further note that you do not want to
	 * fire off triggers in time sensitive applications (for example cell creation)
	 * as its slow.
	 *  @param {object} settings dataTables settings object
	 *  @param {string} callbackArr Name of the array storage for the callbacks in
	 *      oSettings
	 *  @param {string} eventName Name of the jQuery custom event to trigger. If
	 *      null no trigger is fired
	 *  @param {array} args Array of arguments to pass to the callback function /
	 *      trigger
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackFire( settings, callbackArr, eventName, args )
	{
		var ret = [];
	
		if ( callbackArr ) {
			ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {
				return val.fn.apply( settings.oInstance, args );
			} );
		}
	
		if ( eventName !== null ) {
			var e = $.Event( eventName+'.dt' );
	
			$(settings.nTable).trigger( e, args );
	
			ret.push( e.result );
		}
	
		return ret;
	}
	
	
	function _fnLengthOverflow ( settings )
	{
		var
			start = settings._iDisplayStart,
			end = settings.fnDisplayEnd(),
			len = settings._iDisplayLength;
	
		/* If we have space to show extra rows (backing up from the end point - then do so */
		if ( start >= end )
		{
			start = end - len;
		}
	
		// Keep the start record on the current page
		start -= (start % len);
	
		if ( len === -1 || start < 0 )
		{
			start = 0;
		}
	
		settings._iDisplayStart = start;
	}
	
	
	function _fnRenderer( settings, type )
	{
		var renderer = settings.renderer;
		var host = DataTable.ext.renderer[type];
	
		if ( $.isPlainObject( renderer ) && renderer[type] ) {
			// Specific renderer for this type. If available use it, otherwise use
			// the default.
			return host[renderer[type]] || host._;
		}
		else if ( typeof renderer === 'string' ) {
			// Common renderer - if there is one available for this type use it,
			// otherwise use the default
			return host[renderer] || host._;
		}
	
		// Use the default
		return host._;
	}
	
	
	/**
	 * Detect the data source being used for the table. Used to simplify the code
	 * a little (ajax) and to make it compress a little smaller.
	 *
	 *  @param {object} settings dataTables settings object
	 *  @returns {string} Data source
	 *  @memberof DataTable#oApi
	 */
	function _fnDataSource ( settings )
	{
		if ( settings.oFeatures.bServerSide ) {
			return 'ssp';
		}
		else if ( settings.ajax || settings.sAjaxSource ) {
			return 'ajax';
		}
		return 'dom';
	}
	

	
	
	/**
	 * Computed structure of the DataTables API, defined by the options passed to
	 * `DataTable.Api.register()` when building the API.
	 *
	 * The structure is built in order to speed creation and extension of the Api
	 * objects since the extensions are effectively pre-parsed.
	 *
	 * The array is an array of objects with the following structure, where this
	 * base array represents the Api prototype base:
	 *
	 *     [
	 *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
	 *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
	 *     ]
	 *
	 * @type {Array}
	 * @ignore
	 */
	var __apiStruct = [];
	
	
	/**
	 * `Array.prototype` reference.
	 *
	 * @type object
	 * @ignore
	 */
	var __arrayProto = Array.prototype;
	
	
	/**
	 * Abstraction for `context` parameter of the `Api` constructor to allow it to
	 * take several different forms for ease of use.
	 *
	 * Each of the input parameter types will be converted to a DataTables settings
	 * object where possible.
	 *
	 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
	 *   of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 *   * `DataTables.Api` - API instance
	 * @return {array|null} Matching DataTables settings objects. `null` or
	 *   `undefined` is returned if no matching DataTable is found.
	 * @ignore
	 */
	var _toSettings = function ( mixed )
	{
		var idx, jq;
		var settings = DataTable.settings;
		var tables = $.map( settings, function (el, i) {
			return el.nTable;
		} );
	
		if ( ! mixed ) {
			return [];
		}
		else if ( mixed.nTable && mixed.oApi ) {
			// DataTables settings object
			return [ mixed ];
		}
		else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
			// Table node
			idx = $.inArray( mixed, tables );
			return idx !== -1 ? [ settings[idx] ] : null;
		}
		else if ( mixed && typeof mixed.settings === 'function' ) {
			return mixed.settings().toArray();
		}
		else if ( typeof mixed === 'string' ) {
			// jQuery selector
			jq = $(mixed);
		}
		else if ( mixed instanceof $ ) {
			// jQuery object (also DataTables instance)
			jq = mixed;
		}
	
		if ( jq ) {
			return jq.map( function(i) {
				idx = $.inArray( this, tables );
				return idx !== -1 ? settings[idx] : null;
			} ).toArray();
		}
	};
	
	
	/**
	 * DataTables API class - used to control and interface with  one or more
	 * DataTables enhanced tables.
	 *
	 * The API class is heavily based on jQuery, presenting a chainable interface
	 * that you can use to interact with tables. Each instance of the API class has
	 * a "context" - i.e. the tables that it will operate on. This could be a single
	 * table, all tables on a page or a sub-set thereof.
	 *
	 * Additionally the API is designed to allow you to easily work with the data in
	 * the tables, retrieving and manipulating it as required. This is done by
	 * presenting the API class as an array like interface. The contents of the
	 * array depend upon the actions requested by each method (for example
	 * `rows().nodes()` will return an array of nodes, while `rows().data()` will
	 * return an array of objects or arrays depending upon your table's
	 * configuration). The API object has a number of array like methods (`push`,
	 * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
	 * `unique` etc) to assist your working with the data held in a table.
	 *
	 * Most methods (those which return an Api instance) are chainable, which means
	 * the return from a method call also has all of the methods available that the
	 * top level object had. For example, these two calls are equivalent:
	 *
	 *     // Not chained
	 *     api.row.add( {...} );
	 *     api.draw();
	 *
	 *     // Chained
	 *     api.row.add( {...} ).draw();
	 *
	 * @class DataTable.Api
	 * @param {array|object|string|jQuery} context DataTable identifier. This is
	 *   used to define which DataTables enhanced tables this API will operate on.
	 *   Can be one of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 * @param {array} [data] Data to initialise the Api instance with.
	 *
	 * @example
	 *   // Direct initialisation during DataTables construction
	 *   var api = $('#example').DataTable();
	 *
	 * @example
	 *   // Initialisation using a DataTables jQuery object
	 *   var api = $('#example').dataTable().api();
	 *
	 * @example
	 *   // Initialisation as a constructor
	 *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
	 */
	_Api = function ( context, data )
	{
		if ( ! (this instanceof _Api) ) {
			return new _Api( context, data );
		}
	
		var settings = [];
		var ctxSettings = function ( o ) {
			var a = _toSettings( o );
			if ( a ) {
				settings = settings.concat( a );
			}
		};
	
		if ( $.isArray( context ) ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				ctxSettings( context[i] );
			}
		}
		else {
			ctxSettings( context );
		}
	
		// Remove duplicates
		this.context = _unique( settings );
	
		// Initial data
		if ( data ) {
			$.merge( this, data );
		}
	
		// selector
		this.selector = {
			rows: null,
			cols: null,
			opts: null
		};
	
		_Api.extend( this, this, __apiStruct );
	};
	
	DataTable.Api = _Api;
	
	// Don't destroy the existing prototype, just extend it. Required for jQuery 2's
	// isPlainObject.
	$.extend( _Api.prototype, {
		any: function ()
		{
			return this.count() !== 0;
		},
	
	
		concat:  __arrayProto.concat,
	
	
		context: [], // array of table settings objects
	
	
		count: function ()
		{
			return this.flatten().length;
		},
	
	
		each: function ( fn )
		{
			for ( var i=0, ien=this.length ; i<ien; i++ ) {
				fn.call( this, this[i], i, this );
			}
	
			return this;
		},
	
	
		eq: function ( idx )
		{
			var ctx = this.context;
	
			return ctx.length > idx ?
				new _Api( ctx[idx], this[idx] ) :
				null;
		},
	
	
		filter: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.filter ) {
				a = __arrayProto.filter.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					if ( fn.call( this, this[i], i, this ) ) {
						a.push( this[i] );
					}
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		flatten: function ()
		{
			var a = [];
			return new _Api( this.context, a.concat.apply( a, this.toArray() ) );
		},
	
	
		join:    __arrayProto.join,
	
	
		indexOf: __arrayProto.indexOf || function (obj, start)
		{
			for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {
				if ( this[i] === obj ) {
					return i;
				}
			}
			return -1;
		},
	
		iterator: function ( flatten, type, fn, alwaysNew ) {
			var
				a = [], ret,
				i, ien, j, jen,
				context = this.context,
				rows, items, item,
				selector = this.selector;
	
			// Argument shifting
			if ( typeof flatten === 'string' ) {
				alwaysNew = fn;
				fn = type;
				type = flatten;
				flatten = false;
			}
	
			for ( i=0, ien=context.length ; i<ien ; i++ ) {
				var apiInst = new _Api( context[i] );
	
				if ( type === 'table' ) {
					ret = fn.call( apiInst, context[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'columns' || type === 'rows' ) {
					// this has same length as context - one entry for each table
					ret = fn.call( apiInst, context[i], this[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {
					// columns and rows share the same structure.
					// 'this' is an array of column indexes for each context
					items = this[i];
	
					if ( type === 'column-rows' ) {
						rows = _selector_row_indexes( context[i], selector.opts );
					}
	
					for ( j=0, jen=items.length ; j<jen ; j++ ) {
						item = items[j];
	
						if ( type === 'cell' ) {
							ret = fn.call( apiInst, context[i], item.row, item.column, i, j );
						}
						else {
							ret = fn.call( apiInst, context[i], item, i, j, rows );
						}
	
						if ( ret !== undefined ) {
							a.push( ret );
						}
					}
				}
			}
	
			if ( a.length || alwaysNew ) {
				var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );
				var apiSelector = api.selector;
				apiSelector.rows = selector.rows;
				apiSelector.cols = selector.cols;
				apiSelector.opts = selector.opts;
				return api;
			}
			return this;
		},
	
	
		lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)
		{
			// Bit cheeky...
			return this.indexOf.apply( this.toArray.reverse(), arguments );
		},
	
	
		length:  0,
	
	
		map: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.map ) {
				a = __arrayProto.map.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					a.push( fn.call( this, this[i], i ) );
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		pluck: function ( prop )
		{
			return this.map( function ( el ) {
				return el[ prop ];
			} );
		},
	
		pop:     __arrayProto.pop,
	
	
		push:    __arrayProto.push,
	
	
		// Does not return an API instance
		reduce: __arrayProto.reduce || function ( fn, init )
		{
			return _fnReduce( this, fn, init, 0, this.length, 1 );
		},
	
	
		reduceRight: __arrayProto.reduceRight || function ( fn, init )
		{
			return _fnReduce( this, fn, init, this.length-1, -1, -1 );
		},
	
	
		reverse: __arrayProto.reverse,
	
	
		// Object with rows, columns and opts
		selector: null,
	
	
		shift:   __arrayProto.shift,
	
	
		sort:    __arrayProto.sort, // ? name - order?
	
	
		splice:  __arrayProto.splice,
	
	
		toArray: function ()
		{
			return __arrayProto.slice.call( this );
		},
	
	
		to$: function ()
		{
			return $( this );
		},
	
	
		toJQuery: function ()
		{
			return $( this );
		},
	
	
		unique: function ()
		{
			return new _Api( this.context, _unique(this) );
		},
	
	
		unshift: __arrayProto.unshift
	} );
	
	
	_Api.extend = function ( scope, obj, ext )
	{
		// Only extend API instances and static properties of the API
		if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {
			return;
		}
	
		var
			i, ien,
			j, jen,
			struct, inner,
			methodScoping = function ( scope, fn, struc ) {
				return function () {
					var ret = fn.apply( scope, arguments );
	
					// Method extension
					_Api.extend( ret, ret, struc.methodExt );
					return ret;
				};
			};
	
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			struct = ext[i];
	
			// Value
			obj[ struct.name ] = typeof struct.val === 'function' ?
				methodScoping( scope, struct.val, struct ) :
				$.isPlainObject( struct.val ) ?
					{} :
					struct.val;
	
			obj[ struct.name ].__dt_wrapper = true;
	
			// Property extension
			_Api.extend( scope, obj[ struct.name ], struct.propExt );
		}
	};
	
	
	// @todo - Is there need for an augment function?
	// _Api.augment = function ( inst, name )
	// {
	// 	// Find src object in the structure from the name
	// 	var parts = name.split('.');
	
	// 	_Api.extend( inst, obj );
	// };
	
	
	//     [
	//       {
	//         name:      'data'                -- string   - Property name
	//         val:       function () {},       -- function - Api method (or undefined if just an object
	//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	//       },
	//       {
	//         name:     'row'
	//         val:       {},
	//         methodExt: [ ... ],
	//         propExt:   [
	//           {
	//             name:      'data'
	//             val:       function () {},
	//             methodExt: [ ... ],
	//             propExt:   [ ... ]
	//           },
	//           ...
	//         ]
	//       }
	//     ]
	
	_Api.register = _api_register = function ( name, val )
	{
		if ( $.isArray( name ) ) {
			for ( var j=0, jen=name.length ; j<jen ; j++ ) {
				_Api.register( name[j], val );
			}
			return;
		}
	
		var
			i, ien,
			heir = name.split('.'),
			struct = __apiStruct,
			key, method;
	
		var find = function ( src, name ) {
			for ( var i=0, ien=src.length ; i<ien ; i++ ) {
				if ( src[i].name === name ) {
					return src[i];
				}
			}
			return null;
		};
	
		for ( i=0, ien=heir.length ; i<ien ; i++ ) {
			method = heir[i].indexOf('()') !== -1;
			key = method ?
				heir[i].replace('()', '') :
				heir[i];
	
			var src = find( struct, key );
			if ( ! src ) {
				src = {
					name:      key,
					val:       {},
					methodExt: [],
					propExt:   []
				};
				struct.push( src );
			}
	
			if ( i === ien-1 ) {
				src.val = val;
			}
			else {
				struct = method ?
					src.methodExt :
					src.propExt;
			}
		}
	};
	
	
	_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {
		_Api.register( pluralName, val );
	
		_Api.register( singularName, function () {
			var ret = val.apply( this, arguments );
	
			if ( ret === this ) {
				// Returned item is the API instance that was passed in, return it
				return this;
			}
			else if ( ret instanceof _Api ) {
				// New API instance returned, want the value from the first item
				// in the returned array for the singular result.
				return ret.length ?
					$.isArray( ret[0] ) ?
						new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'
						ret[0] :
					undefined;
			}
	
			// Non-API return - just fire it back
			return ret;
		} );
	};
	
	
	/**
	 * Selector for HTML tables. Apply the given selector to the give array of
	 * DataTables settings objects.
	 *
	 * @param {string|integer} [selector] jQuery selector string or integer
	 * @param  {array} Array of DataTables settings objects to be filtered
	 * @return {array}
	 * @ignore
	 */
	var __table_selector = function ( selector, a )
	{
		// Integer is used to pick out a table by index
		if ( typeof selector === 'number' ) {
			return [ a[ selector ] ];
		}
	
		// Perform a jQuery selector on the table nodes
		var nodes = $.map( a, function (el, i) {
			return el.nTable;
		} );
	
		return $(nodes)
			.filter( selector )
			.map( function (i) {
				// Need to translate back from the table node to the settings
				var idx = $.inArray( this, nodes );
				return a[ idx ];
			} )
			.toArray();
	};
	
	
	
	/**
	 * Context selector for the API's context (i.e. the tables the API instance
	 * refers to.
	 *
	 * @name    DataTable.Api#tables
	 * @param {string|integer} [selector] Selector to pick which tables the iterator
	 *   should operate on. If not given, all tables in the current context are
	 *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
	 *   select multiple tables or as an integer to select a single table.
	 * @returns {DataTable.Api} Returns a new API instance if a selector is given.
	 */
	_api_register( 'tables()', function ( selector ) {
		// A new instance is created if there was a selector specified
		return selector ?
			new _Api( __table_selector( selector, this.context ) ) :
			this;
	} );
	
	
	_api_register( 'table()', function ( selector ) {
		var tables = this.tables( selector );
		var ctx = tables.context;
	
		// Truncate to the first matched table
		return ctx.length ?
			new _Api( ctx[0] ) :
			tables;
	} );
	
	
	_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTable;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().body()', 'table().body()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTBody;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().header()', 'table().header()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTHead;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTFoot;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().containers()', 'table().container()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTableWrapper;
		}, 1 );
	} );
	
	
	
	/**
	 * Redraw the tables in the current context.
	 */
	_api_register( 'draw()', function ( paging ) {
		return this.iterator( 'table', function ( settings ) {
			if ( paging === 'page' ) {
				_fnDraw( settings );
			}
			else {
				if ( typeof paging === 'string' ) {
					paging = paging === 'full-hold' ?
						false :
						true;
				}
	
				_fnReDraw( settings, paging===false );
			}
		} );
	} );
	
	
	
	/**
	 * Get the current page index.
	 *
	 * @return {integer} Current page index (zero based)
	 *//**
	 * Set the current page.
	 *
	 * Note that if you attempt to show a page which does not exist, DataTables will
	 * not throw an error, but rather reset the paging.
	 *
	 * @param {integer|string} action The paging action to take. This can be one of:
	 *  * `integer` - The page index to jump to
	 *  * `string` - An action to take:
	 *    * `first` - Jump to first page.
	 *    * `next` - Jump to the next page
	 *    * `previous` - Jump to previous page
	 *    * `last` - Jump to the last page.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page()', function ( action ) {
		if ( action === undefined ) {
			return this.page.info().page; // not an expensive call
		}
	
		// else, have an action to take on all tables
		return this.iterator( 'table', function ( settings ) {
			_fnPageChange( settings, action );
		} );
	} );
	
	
	/**
	 * Paging information for the first table in the current context.
	 *
	 * If you require paging information for another table, use the `table()` method
	 * with a suitable selector.
	 *
	 * @return {object} Object with the following properties set:
	 *  * `page` - Current page index (zero based - i.e. the first page is `0`)
	 *  * `pages` - Total number of pages
	 *  * `start` - Display index for the first record shown on the current page
	 *  * `end` - Display index for the last record shown on the current page
	 *  * `length` - Display length (number of records). Note that generally `start
	 *    + length = end`, but this is not always true, for example if there are
	 *    only 2 records to show on the final page, with a length of 10.
	 *  * `recordsTotal` - Full data set length
	 *  * `recordsDisplay` - Data set length once the current filtering criterion
	 *    are applied.
	 */
	_api_register( 'page.info()', function ( action ) {
		if ( this.context.length === 0 ) {
			return undefined;
		}
	
		var
			settings   = this.context[0],
			start      = settings._iDisplayStart,
			len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
			visRecords = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return {
			"page":           all ? 0 : Math.floor( start / len ),
			"pages":          all ? 1 : Math.ceil( visRecords / len ),
			"start":          start,
			"end":            settings.fnDisplayEnd(),
			"length":         len,
			"recordsTotal":   settings.fnRecordsTotal(),
			"recordsDisplay": visRecords,
			"serverSide":     _fnDataSource( settings ) === 'ssp'
		};
	} );
	
	
	/**
	 * Get the current page length.
	 *
	 * @return {integer} Current page length. Note `-1` indicates that all records
	 *   are to be shown.
	 *//**
	 * Set the current page length.
	 *
	 * @param {integer} Page length to set. Use `-1` to show all records.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page.len()', function ( len ) {
		// Note that we can't call this function 'length()' because `length`
		// is a Javascript property of functions which defines how many arguments
		// the function expects.
		if ( len === undefined ) {
			return this.context.length !== 0 ?
				this.context[0]._iDisplayLength :
				undefined;
		}
	
		// else, set the page length
		return this.iterator( 'table', function ( settings ) {
			_fnLengthChange( settings, len );
		} );
	} );
	
	
	
	var __reload = function ( settings, holdPosition, callback ) {
		// Use the draw event to trigger a callback
		if ( callback ) {
			var api = new _Api( settings );
	
			api.one( 'draw', function () {
				callback( api.ajax.json() );
			} );
		}
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			_fnReDraw( settings, holdPosition );
		}
		else {
			_fnProcessingDisplay( settings, true );
	
			// Cancel an existing request
			var xhr = settings.jqXHR;
			if ( xhr && xhr.readyState !== 4 ) {
				xhr.abort();
			}
	
			// Trigger xhr
			_fnBuildAjax( settings, [], function( json ) {
				_fnClearTable( settings );
	
				var data = _fnAjaxDataSrc( settings, json );
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					_fnAddData( settings, data[i] );
				}
	
				_fnReDraw( settings, holdPosition );
				_fnProcessingDisplay( settings, false );
			} );
		}
	};
	
	
	/**
	 * Get the JSON response from the last Ajax request that DataTables made to the
	 * server. Note that this returns the JSON from the first table in the current
	 * context.
	 *
	 * @return {object} JSON received from the server.
	 */
	_api_register( 'ajax.json()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].json;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Get the data submitted in the last Ajax request
	 */
	_api_register( 'ajax.params()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].oAjaxData;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Reload tables from the Ajax data source. Note that this function will
	 * automatically re-draw the table when the remote data has been loaded.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.reload()', function ( callback, resetPaging ) {
		return this.iterator( 'table', function (settings) {
			__reload( settings, resetPaging===false, callback );
		} );
	} );
	
	
	/**
	 * Get the current Ajax URL. Note that this returns the URL from the first
	 * table in the current context.
	 *
	 * @return {string} Current Ajax source URL
	 *//**
	 * Set the Ajax URL. Note that this will set the URL for all tables in the
	 * current context.
	 *
	 * @param {string} url URL to set.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url()', function ( url ) {
		var ctx = this.context;
	
		if ( url === undefined ) {
			// get
			if ( ctx.length === 0 ) {
				return undefined;
			}
			ctx = ctx[0];
	
			return ctx.ajax ?
				$.isPlainObject( ctx.ajax ) ?
					ctx.ajax.url :
					ctx.ajax :
				ctx.sAjaxSource;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( $.isPlainObject( settings.ajax ) ) {
				settings.ajax.url = url;
			}
			else {
				settings.ajax = url;
			}
			// No need to consider sAjaxSource here since DataTables gives priority
			// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any
			// value of `sAjaxSource` redundant.
		} );
	} );
	
	
	/**
	 * Load data from the newly set Ajax URL. Note that this method is only
	 * available when `ajax.url()` is used to set a URL. Additionally, this method
	 * has the same effect as calling `ajax.reload()` but is provided for
	 * convenience when setting a new URL. Like `ajax.reload()` it will
	 * automatically redraw the table once the remote data has been loaded.
	 *
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {
		// Same as a reload, but makes sense to present it for easy access after a
		// url change
		return this.iterator( 'table', function ( ctx ) {
			__reload( ctx, resetPaging===false, callback );
		} );
	} );
	
	
	
	
	var _selector_run = function ( type, selector, selectFn, settings, opts )
	{
		var
			out = [], res,
			a, i, ien, j, jen,
			selectorType = typeof selector;
	
		// Can't just check for isArray here, as an API or jQuery instance might be
		// given with their array like look
		if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {
			selector = [ selector ];
		}
	
		for ( i=0, ien=selector.length ; i<ien ; i++ ) {
			a = selector[i] && selector[i].split ?
				selector[i].split(',') :
				[ selector[i] ];
	
			for ( j=0, jen=a.length ; j<jen ; j++ ) {
				res = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );
	
				if ( res && res.length ) {
					out = out.concat( res );
				}
			}
		}
	
		// selector extensions
		var ext = _ext.selector[ type ];
		if ( ext.length ) {
			for ( i=0, ien=ext.length ; i<ien ; i++ ) {
				out = ext[i]( settings, opts, out );
			}
		}
	
		return _unique( out );
	};
	
	
	var _selector_opts = function ( opts )
	{
		if ( ! opts ) {
			opts = {};
		}
	
		// Backwards compatibility for 1.9- which used the terminology filter rather
		// than search
		if ( opts.filter && opts.search === undefined ) {
			opts.search = opts.filter;
		}
	
		return $.extend( {
			search: 'none',
			order: 'current',
			page: 'all'
		}, opts );
	};
	
	
	var _selector_first = function ( inst )
	{
		// Reduce the API instance to the first item found
		for ( var i=0, ien=inst.length ; i<ien ; i++ ) {
			if ( inst[i].length > 0 ) {
				// Assign the first element to the first item in the instance
				// and truncate the instance and context
				inst[0] = inst[i];
				inst[0].length = 1;
				inst.length = 1;
				inst.context = [ inst.context[i] ];
	
				return inst;
			}
		}
	
		// Not found - return an empty instance
		inst.length = 0;
		return inst;
	};
	
	
	var _selector_row_indexes = function ( settings, opts )
	{
		var
			i, ien, tmp, a=[],
			displayFiltered = settings.aiDisplay,
			displayMaster = settings.aiDisplayMaster;
	
		var
			search = opts.search,  // none, applied, removed
			order  = opts.order,   // applied, current, index (original - compatibility with 1.9)
			page   = opts.page;    // all, current
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			// In server-side processing mode, most options are irrelevant since
			// rows not shown don't exist and the index order is the applied order
			// Removed is a special case - for consistency just return an empty
			// array
			return search === 'removed' ?
				[] :
				_range( 0, displayMaster.length );
		}
		else if ( page == 'current' ) {
			// Current page implies that order=current and fitler=applied, since it is
			// fairly senseless otherwise, regardless of what order and search actually
			// are
			for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {
				a.push( displayFiltered[i] );
			}
		}
		else if ( order == 'current' || order == 'applied' ) {
			a = search == 'none' ?
				displayMaster.slice() :                      // no search
				search == 'applied' ?
					displayFiltered.slice() :                // applied search
					$.map( displayMaster, function (el, i) { // removed search
						return $.inArray( el, displayFiltered ) === -1 ? el : null;
					} );
		}
		else if ( order == 'index' || order == 'original' ) {
			for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				if ( search == 'none' ) {
					a.push( i );
				}
				else { // applied | removed
					tmp = $.inArray( i, displayFiltered );
	
					if ((tmp === -1 && search == 'removed') ||
						(tmp >= 0   && search == 'applied') )
					{
						a.push( i );
					}
				}
			}
		}
	
		return a;
	};
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Rows
	 *
	 * {}          - no selector - use all available rows
	 * {integer}   - row aoData index
	 * {node}      - TR node
	 * {string}    - jQuery selector to apply to the TR elements
	 * {array}     - jQuery array of nodes, or simply an array of TR nodes
	 *
	 */
	
	
	var __row_selector = function ( settings, selector, opts )
	{
		var run = function ( sel ) {
			var selInt = _intVal( sel );
			var i, ien;
	
			// Short cut - selector is a number and no options provided (default is
			// all records, so no need to check if the index is in there, since it
			// must be - dev error if the index doesn't exist).
			if ( selInt !== null && ! opts ) {
				return [ selInt ];
			}
	
			var rows = _selector_row_indexes( settings, opts );
	
			if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {
				// Selector - integer
				return [ selInt ];
			}
			else if ( ! sel ) {
				// Selector - none
				return rows;
			}
	
			// Selector - function
			if ( typeof sel === 'function' ) {
				return $.map( rows, function (idx) {
					var row = settings.aoData[ idx ];
					return sel( idx, row._aData, row.nTr ) ? idx : null;
				} );
			}
	
			// Get nodes in the order from the `rows` array with null values removed
			var nodes = _removeEmpty(
				_pluck_order( settings.aoData, rows, 'nTr' )
			);
	
			// Selector - node
			if ( sel.nodeName ) {
				if ( sel._DT_RowIndex !== undefined ) {
					return [ sel._DT_RowIndex ]; // Property added by DT for fast lookup
				}
				else if ( sel._DT_CellIndex ) {
					return [ sel._DT_CellIndex.row ];
				}
				else {
					var host = $(sel).closest('*[data-dt-row]');
					return host.length ?
						[ host.data('dt-row') ] :
						[];
				}
			}
	
			// ID selector. Want to always be able to select rows by id, regardless
			// of if the tr element has been created or not, so can't rely upon
			// jQuery here - hence a custom implementation. This does not match
			// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
			// but to select it using a CSS selector engine (like Sizzle or
			// querySelect) it would need to need to be escaped for some characters.
			// DataTables simplifies this for row selectors since you can select
			// only a row. A # indicates an id any anything that follows is the id -
			// unescaped.
			if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {
				// get row index from id
				var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];
				if ( rowObj !== undefined ) {
					return [ rowObj.idx ];
				}
	
				// need to fall through to jQuery in case there is DOM id that
				// matches
			}
	
			// Selector - jQuery selector string, array of nodes or jQuery object/
			// As jQuery's .filter() allows jQuery objects to be passed in filter,
			// it also allows arrays, so this will cope with all three options
			return $(nodes)
				.filter( sel )
				.map( function () {
					return this._DT_RowIndex;
				} )
				.toArray();
		};
	
		return _selector_run( 'row', selector, run, settings, opts );
	};
	
	
	_api_register( 'rows()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __row_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in __row_selector?
		inst.selector.rows = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_register( 'rows().nodes()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return settings.aoData[ row ].nTr || undefined;
		}, 1 );
	} );
	
	_api_register( 'rows().data()', function () {
		return this.iterator( true, 'rows', function ( settings, rows ) {
			return _pluck_order( settings.aoData, rows, '_aData' );
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {
		return this.iterator( 'row', function ( settings, row ) {
			var r = settings.aoData[ row ];
			return type === 'search' ? r._aFilterData : r._aSortData;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {
		return this.iterator( 'row', function ( settings, row ) {
			_fnInvalidate( settings, row, src );
		} );
	} );
	
	_api_registerPlural( 'rows().indexes()', 'row().index()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return row;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {
		var a = [];
		var context = this.context;
	
		// `iterator` will drop undefined values, but in this case we want them
		for ( var i=0, ien=context.length ; i<ien ; i++ ) {
			for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {
				var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );
				a.push( (hash === true ? '#' : '' )+ id );
			}
		}
	
		return new _Api( context, a );
	} );
	
	_api_registerPlural( 'rows().remove()', 'row().remove()', function () {
		var that = this;
	
		this.iterator( 'row', function ( settings, row, thatIdx ) {
			var data = settings.aoData;
			var rowData = data[ row ];
			var i, ien, j, jen;
			var loopRow, loopCells;
	
			data.splice( row, 1 );
	
			// Update the cached indexes
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				loopRow = data[i];
				loopCells = loopRow.anCells;
	
				// Rows
				if ( loopRow.nTr !== null ) {
					loopRow.nTr._DT_RowIndex = i;
				}
	
				// Cells
				if ( loopCells !== null ) {
					for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {
						loopCells[j]._DT_CellIndex.row = i;
					}
				}
			}
	
			// Delete from the display arrays
			_fnDeleteIndex( settings.aiDisplayMaster, row );
			_fnDeleteIndex( settings.aiDisplay, row );
			_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes
	
			// Check for an 'overflow' they case for displaying the table
			_fnLengthOverflow( settings );
	
			// Remove the row's ID reference if there is one
			var id = settings.rowIdFn( rowData._aData );
			if ( id !== undefined ) {
				delete settings.aIds[ id ];
			}
		} );
	
		this.iterator( 'table', function ( settings ) {
			for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				settings.aoData[i].idx = i;
			}
		} );
	
		return this;
	} );
	
	
	_api_register( 'rows.add()', function ( rows ) {
		var newRows = this.iterator( 'table', function ( settings ) {
				var row, i, ien;
				var out = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
						out.push( _fnAddTr( settings, row )[0] );
					}
					else {
						out.push( _fnAddData( settings, row ) );
					}
				}
	
				return out;
			}, 1 );
	
		// Return an Api.rows() extended instance, so rows().nodes() etc can be used
		var modRows = this.rows( -1 );
		modRows.pop();
		$.merge( modRows, newRows );
	
		return modRows;
	} );
	
	
	
	
	
	/**
	 *
	 */
	_api_register( 'row()', function ( selector, opts ) {
		return _selector_first( this.rows( selector, opts ) );
	} );
	
	
	_api_register( 'row().data()', function ( data ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// Get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._aData :
				undefined;
		}
	
		// Set
		ctx[0].aoData[ this[0] ]._aData = data;
	
		// Automatically invalidate
		_fnInvalidate( ctx[0], this[0], 'data' );
	
		return this;
	} );
	
	
	_api_register( 'row().node()', function () {
		var ctx = this.context;
	
		return ctx.length && this.length ?
			ctx[0].aoData[ this[0] ].nTr || null :
			null;
	} );
	
	
	_api_register( 'row.add()', function ( row ) {
		// Allow a jQuery object to be passed in - only a single row is added from
		// it though - the first element in the set
		if ( row instanceof $ && row.length ) {
			row = row[0];
		}
	
		var rows = this.iterator( 'table', function ( settings ) {
			if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
				return _fnAddTr( settings, row )[0];
			}
			return _fnAddData( settings, row );
		} );
	
		// Return an Api.rows() extended instance, with the newly added row selected
		return this.row( rows[0] );
	} );
	
	
	
	var __details_add = function ( ctx, row, data, klass )
	{
		// Convert to array of TR elements
		var rows = [];
		var addRow = function ( r, k ) {
			// Recursion to allow for arrays of jQuery objects
			if ( $.isArray( r ) || r instanceof $ ) {
				for ( var i=0, ien=r.length ; i<ien ; i++ ) {
					addRow( r[i], k );
				}
				return;
			}
	
			// If we get a TR element, then just add it directly - up to the dev
			// to add the correct number of columns etc
			if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {
				rows.push( r );
			}
			else {
				// Otherwise create a row with a wrapper
				var created = $('<tr><td/></tr>').addClass( k );
				$('td', created)
					.addClass( k )
					.html( r )
					[0].colSpan = _fnVisbleColumns( ctx );
	
				rows.push( created[0] );
			}
		};
	
		addRow( data, klass );
	
		if ( row._details ) {
			row._details.remove();
		}
	
		row._details = $(rows);
	
		// If the children were already shown, that state should be retained
		if ( row._detailsShow ) {
			row._details.insertAfter( row.nTr );
		}
	};
	
	
	var __details_remove = function ( api, idx )
	{
		var ctx = api.context;
	
		if ( ctx.length ) {
			var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];
	
			if ( row && row._details ) {
				row._details.remove();
	
				row._detailsShow = undefined;
				row._details = undefined;
			}
		}
	};
	
	
	var __details_display = function ( api, show ) {
		var ctx = api.context;
	
		if ( ctx.length && api.length ) {
			var row = ctx[0].aoData[ api[0] ];
	
			if ( row._details ) {
				row._detailsShow = show;
	
				if ( show ) {
					row._details.insertAfter( row.nTr );
				}
				else {
					row._details.detach();
				}
	
				__details_events( ctx[0] );
			}
		}
	};
	
	
	var __details_events = function ( settings )
	{
		var api = new _Api( settings );
		var namespace = '.dt.DT_details';
		var drawEvent = 'draw'+namespace;
		var colvisEvent = 'column-visibility'+namespace;
		var destroyEvent = 'destroy'+namespace;
		var data = settings.aoData;
	
		api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );
	
		if ( _pluck( data, '_details' ).length > 0 ) {
			// On each draw, insert the required elements into the document
			api.on( drawEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				api.rows( {page:'current'} ).eq(0).each( function (idx) {
					// Internal data grab
					var row = data[ idx ];
	
					if ( row._detailsShow ) {
						row._details.insertAfter( row.nTr );
					}
				} );
			} );
	
			// Column visibility change - update the colspan
			api.on( colvisEvent, function ( e, ctx, idx, vis ) {
				if ( settings !== ctx ) {
					return;
				}
	
				// Update the colspan for the details rows (note, only if it already has
				// a colspan)
				var row, visible = _fnVisbleColumns( ctx );
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					row = data[i];
	
					if ( row._details ) {
						row._details.children('td[colspan]').attr('colspan', visible );
					}
				}
			} );
	
			// Table destroyed - nuke any child rows
			api.on( destroyEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					if ( data[i]._details ) {
						__details_remove( api, i );
					}
				}
			} );
		}
	};
	
	// Strings for the method names to help minification
	var _emp = '';
	var _child_obj = _emp+'row().child';
	var _child_mth = _child_obj+'()';
	
	// data can be:
	//  tr
	//  string
	//  jQuery or array of any of the above
	_api_register( _child_mth, function ( data, klass ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._details :
				undefined;
		}
		else if ( data === true ) {
			// show
			this.child.show();
		}
		else if ( data === false ) {
			// remove
			__details_remove( this );
		}
		else if ( ctx.length && this.length ) {
			// set
			__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );
		}
	
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.show()',
		_child_mth+'.show()' // only when `child()` was called with parameters (without
	], function ( show ) {   // it returns an object and this method is not executed)
		__details_display( this, true );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.hide()',
		_child_mth+'.hide()' // only when `child()` was called with parameters (without
	], function () {         // it returns an object and this method is not executed)
		__details_display( this, false );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.remove()',
		_child_mth+'.remove()' // only when `child()` was called with parameters (without
	], function () {           // it returns an object and this method is not executed)
		__details_remove( this );
		return this;
	} );
	
	
	_api_register( _child_obj+'.isShown()', function () {
		var ctx = this.context;
	
		if ( ctx.length && this.length ) {
			// _detailsShown as false or undefined will fall through to return false
			return ctx[0].aoData[ this[0] ]._detailsShow || false;
		}
		return false;
	} );
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Columns
	 *
	 * {integer}           - column index (>=0 count from left, <0 count from right)
	 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
	 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
	 * "{string}:name"     - column name
	 * "{string}"          - jQuery selector on column header nodes
	 *
	 */
	
	// can be an array of these items, comma separated list, or an array of comma
	// separated lists
	
	var __re_column_selector = /^(.+):(name|visIdx|visible)$/;
	
	
	// r1 and r2 are redundant - but it means that the parameters match for the
	// iterator callback in columns().data()
	var __columnData = function ( settings, column, r1, r2, rows ) {
		var a = [];
		for ( var row=0, ien=rows.length ; row<ien ; row++ ) {
			a.push( _fnGetCellData( settings, rows[row], column ) );
		}
		return a;
	};
	
	
	var __column_selector = function ( settings, selector, opts )
	{
		var
			columns = settings.aoColumns,
			names = _pluck( columns, 'sName' ),
			nodes = _pluck( columns, 'nTh' );
	
		var run = function ( s ) {
			var selInt = _intVal( s );
	
			// Selector - all
			if ( s === '' ) {
				return _range( columns.length );
			}
	
			// Selector - index
			if ( selInt !== null ) {
				return [ selInt >= 0 ?
					selInt : // Count from left
					columns.length + selInt // Count from right (+ because its a negative value)
				];
			}
	
			// Selector = function
			if ( typeof s === 'function' ) {
				var rows = _selector_row_indexes( settings, opts );
	
				return $.map( columns, function (col, idx) {
					return s(
							idx,
							__columnData( settings, idx, 0, 0, rows ),
							nodes[ idx ]
						) ? idx : null;
				} );
			}
	
			// jQuery or string selector
			var match = typeof s === 'string' ?
				s.match( __re_column_selector ) :
				'';
	
			if ( match ) {
				switch( match[2] ) {
					case 'visIdx':
					case 'visible':
						var idx = parseInt( match[1], 10 );
						// Visible index given, convert to column index
						if ( idx < 0 ) {
							// Counting from the right
							var visColumns = $.map( columns, function (col,i) {
								return col.bVisible ? i : null;
							} );
							return [ visColumns[ visColumns.length + idx ] ];
						}
						// Counting from the left
						return [ _fnVisibleToColumnIndex( settings, idx ) ];
	
					case 'name':
						// match by name. `names` is column index complete and in order
						return $.map( names, function (name, i) {
							return name === match[1] ? i : null;
						} );
	
					default:
						return [];
				}
			}
	
			// Cell in the table body
			if ( s.nodeName && s._DT_CellIndex ) {
				return [ s._DT_CellIndex.column ];
			}
	
			// jQuery selector on the TH elements for the columns
			var jqResult = $( nodes )
				.filter( s )
				.map( function () {
					return $.inArray( this, nodes ); // `nodes` is column index complete and in order
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise a node which might have a `dt-column` data attribute, or be
			// a child or such an element
			var host = $(s).closest('*[data-dt-column]');
			return host.length ?
				[ host.data('dt-column') ] :
				[];
		};
	
		return _selector_run( 'column', selector, run, settings, opts );
	};
	
	
	var __setColumnVis = function ( settings, column, vis ) {
		var
			cols = settings.aoColumns,
			col  = cols[ column ],
			data = settings.aoData,
			row, cells, i, ien, tr;
	
		// Get
		if ( vis === undefined ) {
			return col.bVisible;
		}
	
		// Set
		// No change
		if ( col.bVisible === vis ) {
			return;
		}
	
		if ( vis ) {
			// Insert column
			// Need to decide if we should use appendChild or insertBefore
			var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );
	
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				tr = data[i].nTr;
				cells = data[i].anCells;
	
				if ( tr ) {
					// insertBefore can act like appendChild if 2nd arg is null
					tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );
				}
			}
		}
		else {
			// Remove column
			$( _pluck( settings.aoData, 'anCells', column ) ).detach();
		}
	
		// Common actions
		col.bVisible = vis;
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		_fnSaveState( settings );
	};
	
	
	_api_register( 'columns()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __column_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in _row_selector?
		inst.selector.cols = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTh;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTf;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().data()', 'column().data()', function () {
		return this.iterator( 'column-rows', __columnData, 1 );
	} );
	
	_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].mData;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows,
				type === 'search' ? '_aFilterData' : '_aSortData', column
			);
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows, 'anCells', column ) ;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {
		var ret = this.iterator( 'column', function ( settings, column ) {
			if ( vis === undefined ) {
				return settings.aoColumns[ column ].bVisible;
			} // else
			__setColumnVis( settings, column, vis );
		} );
	
		// Group the column visibility changes
		if ( vis !== undefined ) {
			// Second loop once the first is done for events
			this.iterator( 'column', function ( settings, column ) {
				_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );
			} );
	
			if ( calc === undefined || calc ) {
				this.columns.adjust();
			}
		}
	
		return ret;
	} );
	
	_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {
		return this.iterator( 'column', function ( settings, column ) {
			return type === 'visible' ?
				_fnColumnIndexToVisible( settings, column ) :
				column;
		}, 1 );
	} );
	
	_api_register( 'columns.adjust()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnAdjustColumnSizing( settings );
		}, 1 );
	} );
	
	_api_register( 'column.index()', function ( type, idx ) {
		if ( this.context.length !== 0 ) {
			var ctx = this.context[0];
	
			if ( type === 'fromVisible' || type === 'toData' ) {
				return _fnVisibleToColumnIndex( ctx, idx );
			}
			else if ( type === 'fromData' || type === 'toVisible' ) {
				return _fnColumnIndexToVisible( ctx, idx );
			}
		}
	} );
	
	_api_register( 'column()', function ( selector, opts ) {
		return _selector_first( this.columns( selector, opts ) );
	} );
	
	
	
	var __cell_selector = function ( settings, selector, opts )
	{
		var data = settings.aoData;
		var rows = _selector_row_indexes( settings, opts );
		var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );
		var allCells = $( [].concat.apply([], cells) );
		var row;
		var columns = settings.aoColumns.length;
		var a, i, ien, j, o, host;
	
		var run = function ( s ) {
			var fnSelector = typeof s === 'function';
	
			if ( s === null || s === undefined || fnSelector ) {
				// All cells and function selectors
				a = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					for ( j=0 ; j<columns ; j++ ) {
						o = {
							row: row,
							column: j
						};
	
						if ( fnSelector ) {
							// Selector - function
							host = data[ row ];
	
							if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {
								a.push( o );
							}
						}
						else {
							// Selector - all
							a.push( o );
						}
					}
				}
	
				return a;
			}
			
			// Selector - index
			if ( $.isPlainObject( s ) ) {
				return [s];
			}
	
			// Selector - jQuery filtered cells
			var jqResult = allCells
				.filter( s )
				.map( function (i, el) {
					return { // use a new object, in case someone changes the values
						row:    el._DT_CellIndex.row,
						column: el._DT_CellIndex.column
	 				};
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise the selector is a node, and there is one last option - the
			// element might be a child of an element which has dt-row and dt-column
			// data attributes
			host = $(s).closest('*[data-dt-row]');
			return host.length ?
				[ {
					row: host.data('dt-row'),
					column: host.data('dt-column')
				} ] :
				[];
		};
	
		return _selector_run( 'cell', selector, run, settings, opts );
	};
	
	
	
	
	_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {
		// Argument shifting
		if ( $.isPlainObject( rowSelector ) ) {
			// Indexes
			if ( rowSelector.row === undefined ) {
				// Selector options in first parameter
				opts = rowSelector;
				rowSelector = null;
			}
			else {
				// Cell index objects in first parameter
				opts = columnSelector;
				columnSelector = null;
			}
		}
		if ( $.isPlainObject( columnSelector ) ) {
			opts = columnSelector;
			columnSelector = null;
		}
	
		// Cell selector
		if ( columnSelector === null || columnSelector === undefined ) {
			return this.iterator( 'table', function ( settings ) {
				return __cell_selector( settings, rowSelector, _selector_opts( opts ) );
			} );
		}
	
		// Row + column selector
		var columns = this.columns( columnSelector, opts );
		var rows = this.rows( rowSelector, opts );
		var a, i, ien, j, jen;
	
		var cells = this.iterator( 'table', function ( settings, idx ) {
			a = [];
	
			for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {
				for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {
					a.push( {
						row:    rows[idx][i],
						column: columns[idx][j]
					} );
				}
			}
	
			return a;
		}, 1 );
	
		$.extend( cells.selector, {
			cols: columnSelector,
			rows: rowSelector,
			opts: opts
		} );
	
		return cells;
	} );
	
	
	_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			var data = settings.aoData[ row ];
	
			return data && data.anCells ?
				data.anCells[ column ] :
				undefined;
		}, 1 );
	} );
	
	
	_api_register( 'cells().data()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {
		type = type === 'search' ? '_aFilterData' : '_aSortData';
	
		return this.iterator( 'cell', function ( settings, row, column ) {
			return settings.aoData[ row ][ type ][ column ];
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column, type );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return {
				row: row,
				column: column,
				columnVisible: _fnColumnIndexToVisible( settings, column )
			};
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			_fnInvalidate( settings, row, src, column );
		} );
	} );
	
	
	
	_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {
		return _selector_first( this.cells( rowSelector, columnSelector, opts ) );
	} );
	
	
	_api_register( 'cell().data()', function ( data ) {
		var ctx = this.context;
		var cell = this[0];
	
		if ( data === undefined ) {
			// Get
			return ctx.length && cell.length ?
				_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :
				undefined;
		}
	
		// Set
		_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );
		_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );
	
		return this;
	} );
	
	
	
	/**
	 * Get current ordering (sorting) that has been applied to the table.
	 *
	 * @returns {array} 2D array containing the sorting information for the first
	 *   table in the current context. Each element in the parent array represents
	 *   a column being sorted upon (i.e. multi-sorting with two columns would have
	 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
	 *   the column index that the sorting condition applies to, the second is the
	 *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
	 *   index of the sorting order from the `column.sorting` initialisation array.
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {integer} order Column index to sort upon.
	 * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 1D array of sorting information to be applied.
	 * @param {array} [...] Optional additional sorting conditions
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 2D array of sorting information to be applied.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order()', function ( order, dir ) {
		var ctx = this.context;
	
		if ( order === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].aaSorting :
				undefined;
		}
	
		// set
		if ( typeof order === 'number' ) {
			// Simple column / direction passed in
			order = [ [ order, dir ] ];
		}
		else if ( order.length && ! $.isArray( order[0] ) ) {
			// Arguments passed in (list of 1D arrays)
			order = Array.prototype.slice.call( arguments );
		}
		// otherwise a 2D array was passed in
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSorting = order.slice();
		} );
	} );
	
	
	/**
	 * Attach a sort listener to an element for a given column
	 *
	 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
	 *   listener to. This can take the form of a single DOM node, a jQuery
	 *   collection of nodes or a jQuery selector which will identify the node(s).
	 * @param {integer} column the column that a click on this node will sort on
	 * @param {function} [callback] callback function when sort is run
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order.listener()', function ( node, column, callback ) {
		return this.iterator( 'table', function ( settings ) {
			_fnSortAttachListener( settings, node, column, callback );
		} );
	} );
	
	
	_api_register( 'order.fixed()', function ( set ) {
		if ( ! set ) {
			var ctx = this.context;
			var fixed = ctx.length ?
				ctx[0].aaSortingFixed :
				undefined;
	
			return $.isArray( fixed ) ?
				{ pre: fixed } :
				fixed;
		}
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSortingFixed = $.extend( true, {}, set );
		} );
	} );
	
	
	// Order by the selected column(s)
	_api_register( [
		'columns().order()',
		'column().order()'
	], function ( dir ) {
		var that = this;
	
		return this.iterator( 'table', function ( settings, i ) {
			var sort = [];
	
			$.each( that[i], function (j, col) {
				sort.push( [ col, dir ] );
			} );
	
			settings.aaSorting = sort;
		} );
	} );
	
	
	
	_api_register( 'search()', function ( input, regex, smart, caseInsen ) {
		var ctx = this.context;
	
		if ( input === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].oPreviousSearch.sSearch :
				undefined;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( ! settings.oFeatures.bFilter ) {
				return;
			}
	
			_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {
				"sSearch": input+"",
				"bRegex":  regex === null ? false : regex,
				"bSmart":  smart === null ? true  : smart,
				"bCaseInsensitive": caseInsen === null ? true : caseInsen
			} ), 1 );
		} );
	} );
	
	
	_api_registerPlural(
		'columns().search()',
		'column().search()',
		function ( input, regex, smart, caseInsen ) {
			return this.iterator( 'column', function ( settings, column ) {
				var preSearch = settings.aoPreSearchCols;
	
				if ( input === undefined ) {
					// get
					return preSearch[ column ].sSearch;
				}
	
				// set
				if ( ! settings.oFeatures.bFilter ) {
					return;
				}
	
				$.extend( preSearch[ column ], {
					"sSearch": input+"",
					"bRegex":  regex === null ? false : regex,
					"bSmart":  smart === null ? true  : smart,
					"bCaseInsensitive": caseInsen === null ? true : caseInsen
				} );
	
				_fnFilterComplete( settings, settings.oPreviousSearch, 1 );
			} );
		}
	);
	
	/*
	 * State API methods
	 */
	
	_api_register( 'state()', function () {
		return this.context.length ?
			this.context[0].oSavedState :
			null;
	} );
	
	
	_api_register( 'state.clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			// Save an empty object
			settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );
		} );
	} );
	
	
	_api_register( 'state.loaded()', function () {
		return this.context.length ?
			this.context[0].oLoadedState :
			null;
	} );
	
	
	_api_register( 'state.save()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnSaveState( settings );
		} );
	} );
	
	
	
	/**
	 * Provide a common method for plug-ins to check the version of DataTables being
	 * used, in order to ensure compatibility.
	 *
	 *  @param {string} version Version string to check for, in the format "X.Y.Z".
	 *    Note that the formats "X" and "X.Y" are also acceptable.
	 *  @returns {boolean} true if this version of DataTables is greater or equal to
	 *    the required version, or false if this version of DataTales is not
	 *    suitable
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
	 */
	DataTable.versionCheck = DataTable.fnVersionCheck = function( version )
	{
		var aThis = DataTable.version.split('.');
		var aThat = version.split('.');
		var iThis, iThat;
	
		for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {
			iThis = parseInt( aThis[i], 10 ) || 0;
			iThat = parseInt( aThat[i], 10 ) || 0;
	
			// Parts are the same, keep comparing
			if (iThis === iThat) {
				continue;
			}
	
			// Parts are different, return immediately
			return iThis > iThat;
		}
	
		return true;
	};
	
	
	/**
	 * Check if a `<table>` node is a DataTable table already or not.
	 *
	 *  @param {node|jquery|string} table Table node, jQuery object or jQuery
	 *      selector for the table to test. Note that if more than more than one
	 *      table is passed on, only the first will be checked
	 *  @returns {boolean} true the table given is a DataTable, or false otherwise
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
	 *      $('#example').dataTable();
	 *    }
	 */
	DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )
	{
		var t = $(table).get(0);
		var is = false;
	
		$.each( DataTable.settings, function (i, o) {
			var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;
			var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;
	
			if ( o.nTable === t || head === t || foot === t ) {
				is = true;
			}
		} );
	
		return is;
	};
	
	
	/**
	 * Get all DataTable tables that have been initialised - optionally you can
	 * select to get only currently visible tables.
	 *
	 *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
	 *    or visible tables only.
	 *  @returns {array} Array of `table` nodes (not DataTable instances) which are
	 *    DataTables
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    $.each( $.fn.dataTable.tables(true), function () {
	 *      $(table).DataTable().columns.adjust();
	 *    } );
	 */
	DataTable.tables = DataTable.fnTables = function ( visible )
	{
		var api = false;
	
		if ( $.isPlainObject( visible ) ) {
			api = visible.api;
			visible = visible.visible;
		}
	
		var a = $.map( DataTable.settings, function (o) {
			if ( !visible || (visible && $(o.nTable).is(':visible')) ) {
				return o.nTable;
			}
		} );
	
		return api ?
			new _Api( a ) :
			a;
	};
	
	
	/**
	 * Convert from camel case parameters to Hungarian notation. This is made public
	 * for the extensions to provide the same ability as DataTables core to accept
	 * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
	 * parameters.
	 *
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 */
	DataTable.camelToHungarian = _fnCamelToHungarian;
	
	
	
	/**
	 *
	 */
	_api_register( '$()', function ( selector, opts ) {
		var
			rows   = this.rows( opts ).nodes(), // Get all rows
			jqRows = $(rows);
	
		return $( [].concat(
			jqRows.filter( selector ).toArray(),
			jqRows.find( selector ).toArray()
		) );
	} );
	
	
	// jQuery functions to operate on the tables
	$.each( [ 'on', 'one', 'off' ], function (i, key) {
		_api_register( key+'()', function ( /* event, handler */ ) {
			var args = Array.prototype.slice.call(arguments);
	
			// Add the `dt` namespace automatically if it isn't already present
			if ( ! args[0].match(/\.dt\b/) ) {
				args[0] += '.dt';
			}
	
			var inst = $( this.tables().nodes() );
			inst[key].apply( inst, args );
			return this;
		} );
	} );
	
	
	_api_register( 'clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnClearTable( settings );
		} );
	} );
	
	
	_api_register( 'settings()', function () {
		return new _Api( this.context, this.context );
	} );
	
	
	_api_register( 'init()', function () {
		var ctx = this.context;
		return ctx.length ? ctx[0].oInit : null;
	} );
	
	
	_api_register( 'data()', function () {
		return this.iterator( 'table', function ( settings ) {
			return _pluck( settings.aoData, '_aData' );
		} ).flatten();
	} );
	
	
	_api_register( 'destroy()', function ( remove ) {
		remove = remove || false;
	
		return this.iterator( 'table', function ( settings ) {
			var orig      = settings.nTableWrapper.parentNode;
			var classes   = settings.oClasses;
			var table     = settings.nTable;
			var tbody     = settings.nTBody;
			var thead     = settings.nTHead;
			var tfoot     = settings.nTFoot;
			var jqTable   = $(table);
			var jqTbody   = $(tbody);
			var jqWrapper = $(settings.nTableWrapper);
			var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );
			var i, ien;
	
			// Flag to note that the table is currently being destroyed - no action
			// should be taken
			settings.bDestroying = true;
	
			// Fire off the destroy callbacks for plug-ins etc
			_fnCallbackFire( settings, "aoDestroyCallback", "destroy", [settings] );
	
			// If not being removed from the document, make all columns visible
			if ( ! remove ) {
				new _Api( settings ).columns().visible( true );
			}
	
			// Blitz all `DT` namespaced events (these are internal events, the
			// lowercase, `dt` events are user subscribed and they are responsible
			// for removing them
			jqWrapper.unbind('.DT').find(':not(tbody *)').unbind('.DT');
			$(window).unbind('.DT-'+settings.sInstance);
	
			// When scrolling we had to break the table up - restore it
			if ( table != thead.parentNode ) {
				jqTable.children('thead').detach();
				jqTable.append( thead );
			}
	
			if ( tfoot && table != tfoot.parentNode ) {
				jqTable.children('tfoot').detach();
				jqTable.append( tfoot );
			}
	
			settings.aaSorting = [];
			settings.aaSortingFixed = [];
			_fnSortingClasses( settings );
	
			$( rows ).removeClass( settings.asStripeClasses.join(' ') );
	
			$('th, td', thead).removeClass( classes.sSortable+' '+
				classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone
			);
	
			if ( settings.bJUI ) {
				$('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();
				$('th, td', thead).each( function () {
					var wrapper = $('div.'+classes.sSortJUIWrapper, this);
					$(this).append( wrapper.contents() );
					wrapper.detach();
				} );
			}
	
			// Add the TR elements back into the table in their original order
			jqTbody.children().detach();
			jqTbody.append( rows );
	
			// Remove the DataTables generated nodes, events and classes
			var removedMethod = remove ? 'remove' : 'detach';
			jqTable[ removedMethod ]();
			jqWrapper[ removedMethod ]();
	
			// If we need to reattach the table to the document
			if ( ! remove && orig ) {
				// insertBefore acts like appendChild if !arg[1]
				orig.insertBefore( table, settings.nTableReinsertBefore );
	
				// Restore the width of the original table - was read from the style property,
				// so we can restore directly to that
				jqTable
					.css( 'width', settings.sDestroyWidth )
					.removeClass( classes.sTable );
	
				// If the were originally stripe classes - then we add them back here.
				// Note this is not fool proof (for example if not all rows had stripe
				// classes - but it's a good effort without getting carried away
				ien = settings.asDestroyStripes.length;
	
				if ( ien ) {
					jqTbody.children().each( function (i) {
						$(this).addClass( settings.asDestroyStripes[i % ien] );
					} );
				}
			}
	
			/* Remove the settings object from the settings array */
			var idx = $.inArray( settings, DataTable.settings );
			if ( idx !== -1 ) {
				DataTable.settings.splice( idx, 1 );
			}
		} );
	} );
	
	
	// Add the `every()` method for rows, columns and cells in a compact form
	$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {
		_api_register( type+'s().every()', function ( fn ) {
			var opts = this.selector.opts;
			var api = this;
	
			return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {
				// Rows and columns:
				//  arg1 - index
				//  arg2 - table counter
				//  arg3 - loop counter
				//  arg4 - undefined
				// Cells:
				//  arg1 - row index
				//  arg2 - column index
				//  arg3 - table counter
				//  arg4 - loop counter
				fn.call(
					api[ type ](
						arg1,
						type==='cell' ? arg2 : opts,
						type==='cell' ? opts : undefined
					),
					arg1, arg2, arg3, arg4
				);
			} );
		} );
	} );
	
	
	// i18n method for extensions to be able to use the language object from the
	// DataTable
	_api_register( 'i18n()', function ( token, def, plural ) {
		var ctx = this.context[0];
		var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );
	
		if ( resolved === undefined ) {
			resolved = def;
		}
	
		if ( plural !== undefined && $.isPlainObject( resolved ) ) {
			resolved = resolved[ plural ] !== undefined ?
				resolved[ plural ] :
				resolved._;
		}
	
		return resolved.replace( '%d', plural ); // nb: plural might be undefined,
	} );

	/**
	 * Version string for plug-ins to check compatibility. Allowed format is
	 * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
	 * only for non-release builds. See http://semver.org/ for more information.
	 *  @member
	 *  @type string
	 *  @default Version number
	 */
	DataTable.version = "1.10.12";

	/**
	 * Private data store, containing all of the settings objects that are
	 * created for the tables on a given page.
	 *
	 * Note that the `DataTable.settings` object is aliased to
	 * `jQuery.fn.dataTableExt` through which it may be accessed and
	 * manipulated, or `jQuery.fn.dataTable.settings`.
	 *  @member
	 *  @type array
	 *  @default []
	 *  @private
	 */
	DataTable.settings = [];

	/**
	 * Object models container, for the various models that DataTables has
	 * available to it. These models define the objects that are used to hold
	 * the active state and configuration of the table.
	 *  @namespace
	 */
	DataTable.models = {};
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * search information for the global filter and individual column filters.
	 *  @namespace
	 */
	DataTable.models.oSearch = {
		/**
		 * Flag to indicate if the filtering should be case insensitive or not
		 *  @type boolean
		 *  @default true
		 */
		"bCaseInsensitive": true,
	
		/**
		 * Applied search term
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sSearch": "",
	
		/**
		 * Flag to indicate if the search term should be interpreted as a
		 * regular expression (true) or not (false) and therefore and special
		 * regex characters escaped.
		 *  @type boolean
		 *  @default false
		 */
		"bRegex": false,
	
		/**
		 * Flag to indicate if DataTables is to use its smart filtering or not.
		 *  @type boolean
		 *  @default true
		 */
		"bSmart": true
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * each individual row. This is the object format used for the settings
	 * aoData array.
	 *  @namespace
	 */
	DataTable.models.oRow = {
		/**
		 * TR element for the row
		 *  @type node
		 *  @default null
		 */
		"nTr": null,
	
		/**
		 * Array of TD elements for each row. This is null until the row has been
		 * created.
		 *  @type array nodes
		 *  @default []
		 */
		"anCells": null,
	
		/**
		 * Data object from the original data source for the row. This is either
		 * an array if using the traditional form of DataTables, or an object if
		 * using mData options. The exact type will depend on the passed in
		 * data from the data source, or will be an array if using DOM a data
		 * source.
		 *  @type array|object
		 *  @default []
		 */
		"_aData": [],
	
		/**
		 * Sorting data cache - this array is ostensibly the same length as the
		 * number of columns (although each index is generated only as it is
		 * needed), and holds the data that is used for sorting each column in the
		 * row. We do this cache generation at the start of the sort in order that
		 * the formatting of the sort data need be done only once for each cell
		 * per sort. This array should not be read from or written to by anything
		 * other than the master sorting methods.
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aSortData": null,
	
		/**
		 * Per cell filtering data cache. As per the sort data cache, used to
		 * increase the performance of the filtering in DataTables
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aFilterData": null,
	
		/**
		 * Filtering data cache. This is the same as the cell filtering cache, but
		 * in this case a string rather than an array. This is easily computed with
		 * a join on `_aFilterData`, but is provided as a cache so the join isn't
		 * needed on every search (memory traded for performance)
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_sFilterRow": null,
	
		/**
		 * Cache of the class name that DataTables has applied to the row, so we
		 * can quickly look at this variable rather than needing to do a DOM check
		 * on className for the nTr property.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *  @private
		 */
		"_sRowStripe": "",
	
		/**
		 * Denote if the original data source was from the DOM, or the data source
		 * object. This is used for invalidating data, so DataTables can
		 * automatically read data from the original source, unless uninstructed
		 * otherwise.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"src": null,
	
		/**
		 * Index in the aoData array. This saves an indexOf lookup when we have the
		 * object, but want to know the index
		 *  @type integer
		 *  @default -1
		 *  @private
		 */
		"idx": -1
	};
	
	
	/**
	 * Template object for the column information object in DataTables. This object
	 * is held in the settings aoColumns array and contains all the information that
	 * DataTables needs about each individual column.
	 *
	 * Note that this object is related to {@link DataTable.defaults.column}
	 * but this one is the internal data store for DataTables's cache of columns.
	 * It should NOT be manipulated outside of DataTables. Any configuration should
	 * be done through the initialisation options.
	 *  @namespace
	 */
	DataTable.models.oColumn = {
		/**
		 * Column index. This could be worked out on-the-fly with $.inArray, but it
		 * is faster to just hold it as a variable
		 *  @type integer
		 *  @default null
		 */
		"idx": null,
	
		/**
		 * A list of the columns that sorting should occur on when this column
		 * is sorted. That this property is an array allows multi-column sorting
		 * to be defined for a column (for example first name / last name columns
		 * would benefit from this). The values are integers pointing to the
		 * columns to be sorted on (typically it will be a single integer pointing
		 * at itself, but that doesn't need to be the case).
		 *  @type array
		 */
		"aDataSort": null,
	
		/**
		 * Define the sorting directions that are applied to the column, in sequence
		 * as the column is repeatedly sorted upon - i.e. the first value is used
		 * as the sorting direction when the column if first sorted (clicked on).
		 * Sort it again (click again) and it will move on to the next index.
		 * Repeat until loop.
		 *  @type array
		 */
		"asSorting": null,
	
		/**
		 * Flag to indicate if the column is searchable, and thus should be included
		 * in the filtering or not.
		 *  @type boolean
		 */
		"bSearchable": null,
	
		/**
		 * Flag to indicate if the column is sortable or not.
		 *  @type boolean
		 */
		"bSortable": null,
	
		/**
		 * Flag to indicate if the column is currently visible in the table or not
		 *  @type boolean
		 */
		"bVisible": null,
	
		/**
		 * Store for manual type assignment using the `column.type` option. This
		 * is held in store so we can manipulate the column's `sType` property.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"_sManualType": null,
	
		/**
		 * Flag to indicate if HTML5 data attributes should be used as the data
		 * source for filtering or sorting. True is either are.
		 *  @type boolean
		 *  @default false
		 *  @private
		 */
		"_bAttrSrc": false,
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} nTd The TD node that has been created
		 *  @param {*} sData The Data for the cell
		 *  @param {array|object} oData The data for the whole row
		 *  @param {int} iRow The row index for the aoData data store
		 *  @default null
		 */
		"fnCreatedCell": null,
	
		/**
		 * Function to get data from a cell in a column. You should <b>never</b>
		 * access data directly through _aData internally in DataTables - always use
		 * the method attached to this property. It allows mData to function as
		 * required. This function is automatically assigned by the column
		 * initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {string} sSpecific The specific data type you want to get -
		 *    'display', 'type' 'filter' 'sort'
		 *  @returns {*} The data for the cell from the given row's data
		 *  @default null
		 */
		"fnGetData": null,
	
		/**
		 * Function to set data for a cell in the column. You should <b>never</b>
		 * set the data directly to _aData internally in DataTables - always use
		 * this method. It allows mData to function as required. This function
		 * is automatically assigned by the column initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {*} sValue Value to set
		 *  @default null
		 */
		"fnSetData": null,
	
		/**
		 * Property to read the value for the cells in the column from the data
		 * source array / object. If null, then the default content is used, if a
		 * function is given then the return from the function is used.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mData": null,
	
		/**
		 * Partner property to mData which is used (only when defined) to get
		 * the data - i.e. it is basically the same as mData, but without the
		 * 'set' option, and also the data fed to it is the result from mData.
		 * This is the rendering method to match the data method of mData.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mRender": null,
	
		/**
		 * Unique header TH/TD element for this column - this is what the sorting
		 * listener is attached to (if sorting is enabled.)
		 *  @type node
		 *  @default null
		 */
		"nTh": null,
	
		/**
		 * Unique footer TH/TD element for this column (if there is one). Not used
		 * in DataTables as such, but can be used for plug-ins to reference the
		 * footer for each column.
		 *  @type node
		 *  @default null
		 */
		"nTf": null,
	
		/**
		 * The class to apply to all TD elements in the table's TBODY for the column
		 *  @type string
		 *  @default null
		 */
		"sClass": null,
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 *  @type string
		 */
		"sContentPadding": null,
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because mData
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 */
		"sDefaultContent": null,
	
		/**
		 * Name for the column, allowing reference to the column by name as well as
		 * by index (needs a lookup to work by name).
		 *  @type string
		 */
		"sName": null,
	
		/**
		 * Custom sorting data type - defines which of the available plug-ins in
		 * afnSortData the custom sorting will use - if any is defined.
		 *  @type string
		 *  @default std
		 */
		"sSortDataType": 'std',
	
		/**
		 * Class to be applied to the header element when sorting on this column
		 *  @type string
		 *  @default null
		 */
		"sSortingClass": null,
	
		/**
		 * Class to be applied to the header element when sorting on this column -
		 * when jQuery UI theming is used.
		 *  @type string
		 *  @default null
		 */
		"sSortingClassJUI": null,
	
		/**
		 * Title of the column - what is seen in the TH element (nTh).
		 *  @type string
		 */
		"sTitle": null,
	
		/**
		 * Column sorting and filtering type
		 *  @type string
		 *  @default null
		 */
		"sType": null,
	
		/**
		 * Width of the column
		 *  @type string
		 *  @default null
		 */
		"sWidth": null,
	
		/**
		 * Width of the column when it was first "encountered"
		 *  @type string
		 *  @default null
		 */
		"sWidthOrig": null
	};
	
	
	/*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would at around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit.
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */
	
	/**
	 * Initialisation options that can be given to DataTables at initialisation
	 * time.
	 *  @namespace
	 */
	DataTable.defaults = {
		/**
		 * An array of data to use for the table, passed in at initialisation which
		 * will be used in preference to any data which is already in the DOM. This is
		 * particularly useful for constructing tables purely in Javascript, for
		 * example with a custom Ajax call.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.data
		 *
		 *  @example
		 *    // Using a 2D array data source
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using an array of objects as a data source (`data`)
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"aaData": null,
	
	
		/**
		 * If ordering is enabled, then DataTables will perform a first pass sort on
		 * initialisation. You can define which column(s) the sort is performed
		 * upon, and the sorting direction, with this variable. The `sorting` array
		 * should contain an array for each column to be sorted initially containing
		 * the column's index and a direction string ('asc' or 'desc').
		 *  @type array
		 *  @default [[0,'asc']]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.order
		 *
		 *  @example
		 *    // Sort by 3rd column first, and then 4th column
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
		 *
		 *    // No initial sorting
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": []
		 *      } );
		 *    } );
		 */
		"aaSorting": [[0,'asc']],
	
	
		/**
		 * This parameter is basically identical to the `sorting` parameter, but
		 * cannot be overridden by user interaction with the table. What this means
		 * is that you could have a column (visible or hidden) which the sorting
		 * will always be forced on first - any sorting after that (from the user)
		 * will then be performed as required. This can be useful for grouping rows
		 * together.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.orderFixed
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderFixed": [[0,'asc']]
		 *      } );
		 *    } )
		 */
		"aaSortingFixed": [],
	
	
		/**
		 * DataTables can be instructed to load data to display in the table from a
		 * Ajax source. This option defines how that Ajax call is made and where to.
		 *
		 * The `ajax` property has three different modes of operation, depending on
		 * how it is defined. These are:
		 *
		 * * `string` - Set the URL from where the data should be loaded from.
		 * * `object` - Define properties for `jQuery.ajax`.
		 * * `function` - Custom data get function
		 *
		 * `string`
		 * --------
		 *
		 * As a string, the `ajax` property simply defines the URL from which
		 * DataTables will load data.
		 *
		 * `object`
		 * --------
		 *
		 * As an object, the parameters in the object are passed to
		 * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
		 * of the Ajax request. DataTables has a number of default parameters which
		 * you can override using this option. Please refer to the jQuery
		 * documentation for a full description of the options available, although
		 * the following parameters provide additional options in DataTables or
		 * require special consideration:
		 *
		 * * `data` - As with jQuery, `data` can be provided as an object, but it
		 *   can also be used as a function to manipulate the data DataTables sends
		 *   to the server. The function takes a single parameter, an object of
		 *   parameters with the values that DataTables has readied for sending. An
		 *   object may be returned which will be merged into the DataTables
		 *   defaults, or you can add the items to the object that was passed in and
		 *   not return anything from the function. This supersedes `fnServerParams`
		 *   from DataTables 1.9-.
		 *
		 * * `dataSrc` - By default DataTables will look for the property `data` (or
		 *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
		 *   from an Ajax source or for server-side processing - this parameter
		 *   allows that property to be changed. You can use Javascript dotted
		 *   object notation to get a data source for multiple levels of nesting, or
		 *   it my be used as a function. As a function it takes a single parameter,
		 *   the JSON returned from the server, which can be manipulated as
		 *   required, with the returned value being that used by DataTables as the
		 *   data source for the table. This supersedes `sAjaxDataProp` from
		 *   DataTables 1.9-.
		 *
		 * * `success` - Should not be overridden it is used internally in
		 *   DataTables. To manipulate / transform the data returned by the server
		 *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
		 *
		 * `function`
		 * ----------
		 *
		 * As a function, making the Ajax call is left up to yourself allowing
		 * complete control of the Ajax request. Indeed, if desired, a method other
		 * than Ajax could be used to obtain the required data, such as Web storage
		 * or an AIR database.
		 *
		 * The function is given four parameters and no return is required. The
		 * parameters are:
		 *
		 * 1. _object_ - Data to send to the server
		 * 2. _function_ - Callback function that must be executed when the required
		 *    data has been obtained. That data should be passed into the callback
		 *    as the only parameter
		 * 3. _object_ - DataTables settings object for the table
		 *
		 * Note that this supersedes `fnServerData` from DataTables 1.9-.
		 *
		 *  @type string|object|function
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.ajax
		 *  @since 1.10.0
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax.
		 *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).
		 *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to change
		 *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to read data
		 *   // from a plain array rather than an array in an object
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Manipulate the data returned from the server - add a link to data
		 *   // (note this can, should, be done using `render` for the column - this
		 *   // is just a simple example of how the data can be manipulated).
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Add data to the request
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Send request as POST
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get the data from localStorage (could interface with a form for
		 *   // adding, editing and removing rows).
		 *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
		 */
		"ajax": null,
	
	
		/**
		 * This parameter allows you to readily specify the entries in the length drop
		 * down menu that DataTables shows when pagination is enabled. It can be
		 * either a 1D array of options which will be used for both the displayed
		 * option and the value, or a 2D array which will use the array in the first
		 * position as the value, and the array in the second position as the
		 * displayed options (useful for language strings such as 'All').
		 *
		 * Note that the `pageLength` property will be automatically set to the
		 * first value given in this array, unless `pageLength` is also provided.
		 *  @type array
		 *  @default [ 10, 25, 50, 100 ]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.lengthMenu
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
		 */
		"aLengthMenu": [ 10, 25, 50, 100 ],
	
	
		/**
		 * The `columns` option in the initialisation parameter allows you to define
		 * details about the way individual columns behave. For a full list of
		 * column options that can be set, please see
		 * {@link DataTable.defaults.column}. Note that if you use `columns` to
		 * define your columns, you must have an entry in the array for every single
		 * column that you have in your table (these can be null if you don't which
		 * to specify any options).
		 *  @member
		 *
		 *  @name DataTable.defaults.column
		 */
		"aoColumns": null,
	
		/**
		 * Very similar to `columns`, `columnDefs` allows you to target a specific
		 * column, multiple columns, or all columns, using the `targets` property of
		 * each object in the array. This allows great flexibility when creating
		 * tables, as the `columnDefs` arrays can be of any length, targeting the
		 * columns you specifically want. `columnDefs` may use any of the column
		 * options available: {@link DataTable.defaults.column}, but it _must_
		 * have `targets` defined in each object in the array. Values in the `targets`
		 * array may be:
		 *   <ul>
		 *     <li>a string - class name will be matched on the TH for the column</li>
		 *     <li>0 or a positive integer - column index counting from the left</li>
		 *     <li>a negative integer - column index counting from the right</li>
		 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
		 *   </ul>
		 *  @member
		 *
		 *  @name DataTable.defaults.columnDefs
		 */
		"aoColumnDefs": null,
	
	
		/**
		 * Basically the same as `search`, this parameter defines the individual column
		 * filtering state at initialisation time. The array must be of the same size
		 * as the number of columns, and each element be an object with the parameters
		 * `search` and `escapeRegex` (the latter is optional). 'null' is also
		 * accepted and the default will be used.
		 *  @type array
		 *  @default []
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.searchCols
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
		 */
		"aoSearchCols": [],
	
	
		/**
		 * An array of CSS classes that should be applied to displayed rows. This
		 * array may be of any length, and DataTables will apply each class
		 * sequentially, looping when required.
		 *  @type array
		 *  @default null <i>Will take the values determined by the `oClasses.stripe*`
		 *    options</i>
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.stripeClasses
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
		 */
		"asStripeClasses": null,
	
	
		/**
		 * Enable or disable automatic column width calculation. This can be disabled
		 * as an optimisation (it takes some time to calculate the widths) if the
		 * tables widths are passed in using `columns`.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.autoWidth
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
		 */
		"bAutoWidth": true,
	
	
		/**
		 * Deferred rendering can provide DataTables with a huge speed boost when you
		 * are using an Ajax or JS data source for the table. This option, when set to
		 * true, will cause DataTables to defer the creation of the table elements for
		 * each row until they are needed for a draw - saving a significant amount of
		 * time.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.deferRender
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajax": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
		 */
		"bDeferRender": false,
	
	
		/**
		 * Replace a DataTable which matches the given selector and replace it with
		 * one which has the properties of the new initialisation object passed. If no
		 * table matches the selector, then the new DataTable will be constructed as
		 * per normal.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.destroy
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
		 */
		"bDestroy": false,
	
	
		/**
		 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
		 * that it allows the end user to input multiple words (space separated) and
		 * will match a row containing those words, even if not in the order that was
		 * specified (this allow matching across multiple columns). Note that if you
		 * wish to use filtering in DataTables this must remain 'true' - to remove the
		 * default filtering input box and retain filtering abilities, please use
		 * {@link DataTable.defaults.dom}.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.searching
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "searching": false
		 *      } );
		 *    } );
		 */
		"bFilter": true,
	
	
		/**
		 * Enable or disable the table information display. This shows information
		 * about the data that is currently visible on the page, including information
		 * about filtered data if that action is being performed.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.info
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
		 */
		"bInfo": true,
	
	
		/**
		 * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some
		 * slightly different and additional mark-up from what DataTables has
		 * traditionally used).
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.jQueryUI
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "jQueryUI": true
		 *      } );
		 *    } );
		 */
		"bJQueryUI": false,
	
	
		/**
		 * Allows the end user to select the size of a formatted page from a select
		 * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.lengthChange
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
		 */
		"bLengthChange": true,
	
	
		/**
		 * Enable or disable pagination.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.paging
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paging": false
		 *      } );
		 *    } );
		 */
		"bPaginate": true,
	
	
		/**
		 * Enable or disable the display of a 'processing' indicator when the table is
		 * being processed (e.g. a sort). This is particularly useful for tables with
		 * large amounts of data where it can take a noticeable amount of time to sort
		 * the entries.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.processing
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
		 */
		"bProcessing": false,
	
	
		/**
		 * Retrieve the DataTables object for the given selector. Note that if the
		 * table has already been initialised, this parameter will cause DataTables
		 * to simply return the object that has already been set up - it will not take
		 * account of any changes you might have made to the initialisation object
		 * passed to DataTables (setting this parameter to true is an acknowledgement
		 * that you understand this). `destroy` can be used to reinitialise a table if
		 * you need.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.retrieve
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
		 *
		 *    function initTable ()
		 *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
		 *
		 *    function tableActions ()
		 *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
		 */
		"bRetrieve": false,
	
	
		/**
		 * When vertical (y) scrolling is enabled, DataTables will force the height of
		 * the table's viewport to the given height at all times (useful for layout).
		 * However, this can look odd when filtering data down to a small data set,
		 * and the footer is left "floating" further down. This parameter (when
		 * enabled) will cause DataTables to collapse the table's viewport down when
		 * the result set will fit within the given Y height.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollCollapse
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"bScrollCollapse": false,
	
	
		/**
		 * Configure DataTables to use server-side processing. Note that the
		 * `ajax` parameter must also be given in order to give DataTables a
		 * source to obtain the required data for each draw.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverSide
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
		 */
		"bServerSide": false,
	
	
		/**
		 * Enable or disable sorting of columns. Sorting of individual columns can be
		 * disabled by the `sortable` option for each column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.ordering
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "ordering": false
		 *      } );
		 *    } );
		 */
		"bSort": true,
	
	
		/**
		 * Enable or display DataTables' ability to sort multiple columns at the
		 * same time (activated by shift-click by the user).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderMulti
		 *
		 *  @example
		 *    // Disable multiple column sorting ability
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderMulti": false
		 *      } );
		 *    } );
		 */
		"bSortMulti": true,
	
	
		/**
		 * Allows control over whether DataTables should use the top (true) unique
		 * cell that is found for a single column, or the bottom (false - default).
		 * This is useful when using complex headers.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderCellsTop
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderCellsTop": true
		 *      } );
		 *    } );
		 */
		"bSortCellsTop": false,
	
	
		/**
		 * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
		 * `sorting\_3` to the columns which are currently being sorted on. This is
		 * presented as a feature switch as it can increase processing time (while
		 * classes are removed and added) so for large data sets you might want to
		 * turn this off.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.orderClasses
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderClasses": false
		 *      } );
		 *    } );
		 */
		"bSortClasses": true,
	
	
		/**
		 * Enable or disable state saving. When enabled HTML5 `localStorage` will be
		 * used to save table display information such as pagination information,
		 * display length, filtering and sorting. As such when the end user reloads
		 * the page the display display will match what thy had previously set up.
		 *
		 * Due to the use of `localStorage` the default state saving is not supported
		 * in IE6 or 7. If state saving is required in those browsers, use
		 * `stateSaveCallback` to provide a storage solution such as cookies.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.stateSave
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
		 */
		"bStateSave": false,
	
	
		/**
		 * This function is called when a TR element is created (and all TD child
		 * elements have been inserted), or registered if using a DOM source, allowing
		 * manipulation of the TR element (adding classes etc).
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} dataIndex The index of this row in the internal aoData array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.createdRow
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnCreatedRow": null,
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify any aspect you want about the created DOM.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.drawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "drawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnDrawCallback": null,
	
	
		/**
		 * Identical to fnHeaderCallback() but for the table footer this function
		 * allows you to modify the table footer on every 'draw' event.
		 *  @type function
		 *  @param {node} foot "TR" element for the footer
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.footerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( tfoot, data, start, end, display ) {
		 *          tfoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
		 */
		"fnFooterCallback": null,
	
	
		/**
		 * When rendering large numbers in the information element for the table
		 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
		 * to have a comma separator for the 'thousands' units (e.g. 1 million is
		 * rendered as "1,000,000") to help readability for the end user. This
		 * function will override the default method DataTables uses.
		 *  @type function
		 *  @member
		 *  @param {int} toFormat number to be formatted
		 *  @returns {string} formatted string for DataTables to show the number
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.formatNumber
		 *
		 *  @example
		 *    // Format a number using a single quote for the separator (note that
		 *    // this can also be done with the language.thousands option)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          return toFormat.toString().replace(
		 *            /\B(?=(\d{3})+(?!\d))/g, "'"
		 *          );
		 *        };
		 *      } );
		 *    } );
		 */
		"fnFormatNumber": function ( toFormat ) {
			return toFormat.toString().replace(
				/\B(?=(\d{3})+(?!\d))/g,
				this.oLanguage.sThousands
			);
		},
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify the header row. This can be used to calculate and
		 * display useful information about the table.
		 *  @type function
		 *  @param {node} head "TR" element for the header
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.headerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
		 */
		"fnHeaderCallback": null,
	
	
		/**
		 * The information element can be used to convey information about the current
		 * state of the table. Although the internationalisation options presented by
		 * DataTables are quite capable of dealing with most customisations, there may
		 * be times where you wish to customise the string further. This callback
		 * allows you to do exactly that.
		 *  @type function
		 *  @param {object} oSettings DataTables settings object
		 *  @param {int} start Starting position in data for the draw
		 *  @param {int} end End position in data for the draw
		 *  @param {int} max Total number of rows in the table (regardless of
		 *    filtering)
		 *  @param {int} total Total number of rows in the data set, after filtering
		 *  @param {string} pre The string that DataTables has formatted using it's
		 *    own rules
		 *  @returns {string} The string to be displayed in the information element.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.infoCallback
		 *
		 *  @example
		 *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, max, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
		 */
		"fnInfoCallback": null,
	
	
		/**
		 * Called when the table has been initialised. Normally DataTables will
		 * initialise sequentially and there will be no need for this function,
		 * however, this does not hold true when using external language information
		 * since that is obtained using an async XHR call.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} json The JSON object request from the server - only
		 *    present if client-side Ajax sourced data is used
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.initComplete
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
		 */
		"fnInitComplete": null,
	
	
		/**
		 * Called at the very start of each table draw and can be used to cancel the
		 * draw by returning false, any other return (including undefined) results in
		 * the full draw occurring).
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @returns {boolean} False will cancel the draw, anything else (including no
		 *    return) will allow it to complete.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.preDrawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnPreDrawCallback": null,
	
	
		/**
		 * This function allows you to 'post process' each row after it have been
		 * generated for each table draw, but before it is rendered on screen. This
		 * function might be used for setting the row class name etc.
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} displayIndex The display index for the current table draw
		 *  @param {int} displayIndexFull The index of the data in the full list of
		 *    rows (after filtering)
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.rowCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnRowCallback": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * This parameter allows you to override the default function which obtains
		 * the data from the server so something more suitable for your application.
		 * For example you could use POST data, or pull information from a Gears or
		 * AIR database.
		 *  @type function
		 *  @member
		 *  @param {string} source HTTP source to obtain the data from (`ajax`)
		 *  @param {array} data A key/value pair object containing the data to send
		 *    to the server
		 *  @param {function} callback to be called on completion of the data get
		 *    process that will draw the data on the page.
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverData
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerData": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 *  It is often useful to send extra data to the server when making an Ajax
		 * request - for example custom filtering information, and this callback
		 * function makes it trivial to send extra information to the server. The
		 * passed in parameter is the data set that has been constructed by
		 * DataTables, and you can add to this or modify it as you require.
		 *  @type function
		 *  @param {array} data Data array (array of objects which are name/value
		 *    pairs) that has been constructed by DataTables and will be sent to the
		 *    server. In the case of Ajax sourced data with server-side processing
		 *    this will be an empty array, for server-side processing there will be a
		 *    significant number of parameters!
		 *  @returns {undefined} Ensure that you modify the data array passed in,
		 *    as this is passed by reference.
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverParams
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerParams": null,
	
	
		/**
		 * Load the table state. With this function you can define from where, and how, the
		 * state of a table is loaded. By default DataTables will load from `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @return {object} The DataTables state object to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings) {
		 *          var o;
		 *
		 *          // Send an Ajax request to the server to get the data. Note that
		 *          // this is a synchronous request.
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "async": false,
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              o = json;
		 *            }
		 *          } );
		 *
		 *          return o;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadCallback": function ( settings ) {
			try {
				return JSON.parse(
					(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
						'DataTables_'+settings.sInstance+'_'+location.pathname
					)
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the saved state prior to loading that state.
		 * This callback is called when the table is loading state from the stored data, but
		 * prior to the settings object being modified by the saved state. Note that for
		 * plug-in authors, you should use the `stateLoadParams` event to load parameters for
		 * a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that is to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never loaded
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Disallow state loading by returning false
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadParams": null,
	
	
		/**
		 * Callback that is called when the state has been loaded from the state saving method
		 * and the DataTables settings object has been modified as a result of the loaded state.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that was loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoaded
		 *
		 *  @example
		 *    // Show an alert with the filtering value that was saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoaded": null,
	
	
		/**
		 * Save the table state. This function allows you to define where and how the state
		 * information for the table is stored By default DataTables will use `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveCallback": function ( settings, data ) {
			try {
				(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
					'DataTables_'+settings.sInstance+'_'+location.pathname,
					JSON.stringify( data )
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the state to be saved. Called when the table
		 * has changed state a new state save is required. This method allows modification of
		 * the state saving object prior to actually doing the save, including addition or
		 * other state properties or modification. Note that for plug-in authors, you should
		 * use the `stateSaveParams` event to save parameters for a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveParams": null,
	
	
		/**
		 * Duration for which the saved state information is considered valid. After this period
		 * has elapsed the state will be returned to the default.
		 * Value is given in seconds.
		 *  @type int
		 *  @default 7200 <i>(2 hours)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.stateDuration
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
		 */
		"iStateDuration": 7200,
	
	
		/**
		 * When enabled DataTables will not make a request to the server for the first
		 * page draw - rather it will use the data already on the page (no sorting etc
		 * will be applied to it), thus saving on an XHR at load time. `deferLoading`
		 * is used to indicate that deferred loading is required, but it is also used
		 * to tell DataTables how many records there are in the full table (allowing
		 * the information element and pagination to be displayed correctly). In the case
		 * where a filtering is applied to the table on initial load, this can be
		 * indicated by giving the parameter as an array, where the first element is
		 * the number of records available after filtering and the second element is the
		 * number of records without filtering (allowing the table information element
		 * to be shown correctly).
		 *  @type int | array
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.deferLoading
		 *
		 *  @example
		 *    // 57 records available in the table, no filtering applied
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // 57 records after filtering, 100 without filtering (an initial filter applied)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
		 */
		"iDeferLoading": null,
	
	
		/**
		 * Number of rows to display on a single page when using pagination. If
		 * feature enabled (`lengthChange`) then the end user will be able to override
		 * this to a custom setting using a pop-up menu.
		 *  @type int
		 *  @default 10
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pageLength
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pageLength": 50
		 *      } );
		 *    } )
		 */
		"iDisplayLength": 10,
	
	
		/**
		 * Define the starting point for data display when using DataTables with
		 * pagination. Note that this parameter is the number of records, rather than
		 * the page number, so if you have 10 records per page and want to start on
		 * the third page, it should be "20".
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayStart
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
		 */
		"iDisplayStart": 0,
	
	
		/**
		 * By default DataTables allows keyboard navigation of the table (sorting, paging,
		 * and filtering) by adding a `tabindex` attribute to the required elements. This
		 * allows you to tab through the controls and press the enter key to activate them.
		 * The tabindex is default 0, meaning that the tab follows the flow of the document.
		 * You can overrule this using this parameter if you wish. Use a value of -1 to
		 * disable built-in keyboard navigation.
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.tabIndex
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
		 */
		"iTabIndex": 0,
	
	
		/**
		 * Classes that DataTables assigns to the various components and features
		 * that it adds to the HTML table. This allows classes to be configured
		 * during initialisation in addition to through the static
		 * {@link DataTable.ext.oStdClasses} object).
		 *  @namespace
		 *  @name DataTable.defaults.classes
		 */
		"oClasses": {},
	
	
		/**
		 * All strings that DataTables uses in the user interface that it creates
		 * are defined in this object, allowing you to modified them individually or
		 * completely replace them all as required.
		 *  @namespace
		 *  @name DataTable.defaults.language
		 */
		"oLanguage": {
			/**
			 * Strings that are used for WAI-ARIA labels and controls only (these are not
			 * actually visible on the page, but will be read by screenreaders, and thus
			 * must be internationalised as well).
			 *  @namespace
			 *  @name DataTable.defaults.language.aria
			 */
			"oAria": {
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted ascending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortAscending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortAscending": ": activate to sort column ascending",
	
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted descending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortDescending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortDescending": ": activate to sort column descending"
			},
	
			/**
			 * Pagination string used by DataTables for the built-in pagination
			 * control types.
			 *  @namespace
			 *  @name DataTable.defaults.language.paginate
			 */
			"oPaginate": {
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the first page.
				 *  @type string
				 *  @default First
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.first
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sFirst": "First",
	
	
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the last page.
				 *  @type string
				 *  @default Last
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.last
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sLast": "Last",
	
	
				/**
				 * Text to use for the 'next' pagination button (to take the user to the
				 * next page).
				 *  @type string
				 *  @default Next
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.next
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sNext": "Next",
	
	
				/**
				 * Text to use for the 'previous' pagination button (to take the user to
				 * the previous page).
				 *  @type string
				 *  @default Previous
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.previous
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sPrevious": "Previous"
			},
	
			/**
			 * This string is shown in preference to `zeroRecords` when the table is
			 * empty of data (regardless of filtering). Note that this is an optional
			 * parameter - if it is not given, the value of `zeroRecords` will be used
			 * instead (either the default or given value).
			 *  @type string
			 *  @default No data available in table
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.emptyTable
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sEmptyTable": "No data available in table",
	
	
			/**
			 * This string gives information to the end user about the information
			 * that is current on display on the page. The following tokens can be
			 * used in the string and will be dynamically replaced as the table
			 * display updates. This tokens can be placed anywhere in the string, or
			 * removed as needed by the language requires:
			 *
			 * * `\_START\_` - Display index of the first record on the current page
			 * * `\_END\_` - Display index of the last record on the current page
			 * * `\_TOTAL\_` - Number of records in the table after filtering
			 * * `\_MAX\_` - Number of records in the table without filtering
			 * * `\_PAGE\_` - Current page number
			 * * `\_PAGES\_` - Total number of pages of data in the table
			 *
			 *  @type string
			 *  @default Showing _START_ to _END_ of _TOTAL_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.info
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Showing page _PAGE_ of _PAGES_"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
	
	
			/**
			 * Display information string for when the table is empty. Typically the
			 * format of this string should match `info`.
			 *  @type string
			 *  @default Showing 0 to 0 of 0 entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoEmpty
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoEmpty": "Showing 0 to 0 of 0 entries",
	
	
			/**
			 * When a user filters the information in a table, this string is appended
			 * to the information (`info`) to give an idea of how strong the filtering
			 * is. The variable _MAX_ is dynamically updated.
			 *  @type string
			 *  @default (filtered from _MAX_ total entries)
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoFiltered
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoFiltered": "(filtered from _MAX_ total entries)",
	
	
			/**
			 * If can be useful to append extra information to the info string at times,
			 * and this variable does exactly that. This information will be appended to
			 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
			 * being used) at all times.
			 *  @type string
			 *  @default <i>Empty string</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoPostFix
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoPostFix": "",
	
	
			/**
			 * This decimal place operator is a little different from the other
			 * language options since DataTables doesn't output floating point
			 * numbers, so it won't ever use this for display of a number. Rather,
			 * what this parameter does is modify the sort methods of the table so
			 * that numbers which are in a format which has a character other than
			 * a period (`.`) as a decimal place will be sorted numerically.
			 *
			 * Note that numbers with different decimal places cannot be shown in
			 * the same table and still be sortable, the table must be consistent.
			 * However, multiple different tables on the page can use different
			 * decimal place characters.
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.decimal
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "decimal": ","
			 *          "thousands": "."
			 *        }
			 *      } );
			 *    } );
			 */
			"sDecimal": "",
	
	
			/**
			 * DataTables has a build in number formatter (`formatNumber`) which is
			 * used to format large numbers that are used in the table information.
			 * By default a comma is used, but this can be trivially changed to any
			 * character you wish with this parameter.
			 *  @type string
			 *  @default ,
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.thousands
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "thousands": "'"
			 *        }
			 *      } );
			 *    } );
			 */
			"sThousands": ",",
	
	
			/**
			 * Detail the action that will be taken when the drop down menu for the
			 * pagination length option is changed. The '_MENU_' variable is replaced
			 * with a default select list of 10, 25, 50 and 100, and can be replaced
			 * with a custom select box if required.
			 *  @type string
			 *  @default Show _MENU_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.lengthMenu
			 *
			 *  @example
			 *    // Language change only
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Language and options change
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
			 */
			"sLengthMenu": "Show _MENU_ entries",
	
	
			/**
			 * When using Ajax sourced data and during the first draw when DataTables is
			 * gathering the data, this message is shown in an empty row in the table to
			 * indicate to the end user the the data is being loaded. Note that this
			 * parameter is not used when loading data by server-side processing, just
			 * Ajax sourced data with client-side processing.
			 *  @type string
			 *  @default Loading...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.loadingRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
			 */
			"sLoadingRecords": "Loading...",
	
	
			/**
			 * Text which is displayed when the table is processing a user action
			 * (usually a sort command or similar).
			 *  @type string
			 *  @default Processing...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.processing
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
			 */
			"sProcessing": "Processing...",
	
	
			/**
			 * Details the actions that will be taken when the user types into the
			 * filtering input text box. The variable "_INPUT_", if used in the string,
			 * is replaced with the HTML text box for the filtering input allowing
			 * control over where it appears in the string. If "_INPUT_" is not given
			 * then the input box is appended to the string automatically.
			 *  @type string
			 *  @default Search:
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.search
			 *
			 *  @example
			 *    // Input text box will be appended at the end automatically
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Specify where the filter should appear
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sSearch": "Search:",
	
	
			/**
			 * Assign a `placeholder` attribute to the search `input` element
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.searchPlaceholder
			 */
			"sSearchPlaceholder": "",
	
	
			/**
			 * All of the language information can be stored in a file on the
			 * server-side, which DataTables will look up if this parameter is passed.
			 * It must store the URL of the language file, which is in a JSON format,
			 * and the object has the same properties as the oLanguage object in the
			 * initialiser object (i.e. the above parameters). Please refer to one of
			 * the example language files to see how this works in action.
			 *  @type string
			 *  @default <i>Empty string - i.e. disabled</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.url
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
			 */
			"sUrl": "",
	
	
			/**
			 * Text shown inside the table records when the is no information to be
			 * displayed after filtering. `emptyTable` is shown when there is simply no
			 * information in the table at all (regardless of filtering).
			 *  @type string
			 *  @default No matching records found
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.zeroRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
			 */
			"sZeroRecords": "No matching records found"
		},
	
	
		/**
		 * This parameter allows you to have define the global filtering state at
		 * initialisation time. As an object the `search` parameter must be
		 * defined, but all other parameters are optional. When `regex` is true,
		 * the search string will be treated as a regular expression, when false
		 * (default) it will be treated as a straight string. When `smart`
		 * DataTables will use it's smart filtering methods (to word match at
		 * any point in the data), when false this will not be done.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.search
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
		 */
		"oSearch": $.extend( {}, DataTable.models.oSearch ),
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * By default DataTables will look for the property `data` (or `aaData` for
		 * compatibility with DataTables 1.9-) when obtaining data from an Ajax
		 * source or for server-side processing - this parameter allows that
		 * property to be changed. You can use Javascript dotted object notation to
		 * get a data source for multiple levels of nesting.
		 *  @type string
		 *  @default data
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxDataProp
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxDataProp": "data",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * You can instruct DataTables to load data from an external
		 * source using this parameter (use aData if you want to pass data in you
		 * already have). Simply provide a url a JSON object can be obtained from.
		 *  @type string
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxSource
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxSource": null,
	
	
		/**
		 * This initialisation variable allows you to specify exactly where in the
		 * DOM you want DataTables to inject the various controls it adds to the page
		 * (for example you might want the pagination controls at the top of the
		 * table). DIV elements (with or without a custom class) can also be added to
		 * aid styling. The follow syntax is used:
		 *   <ul>
		 *     <li>The following options are allowed:
		 *       <ul>
		 *         <li>'l' - Length changing</li>
		 *         <li>'f' - Filtering input</li>
		 *         <li>'t' - The table!</li>
		 *         <li>'i' - Information</li>
		 *         <li>'p' - Pagination</li>
		 *         <li>'r' - pRocessing</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following constants are allowed:
		 *       <ul>
		 *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
		 *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following syntax is expected:
		 *       <ul>
		 *         <li>'&lt;' and '&gt;' - div elements</li>
		 *         <li>'&lt;"class" and '&gt;' - div with a class</li>
		 *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
		 *       </ul>
		 *     </li>
		 *     <li>Examples:
		 *       <ul>
		 *         <li>'&lt;"wrapper"flipt&gt;'</li>
		 *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
		 *       </ul>
		 *     </li>
		 *   </ul>
		 *  @type string
		 *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>
		 *    <"H"lfr>t<"F"ip> <i>(when `jQueryUI` is true)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.dom
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
		 */
		"sDom": "lfrtip",
	
	
		/**
		 * Search delay option. This will throttle full table searches that use the
		 * DataTables provided search input element (it does not effect calls to
		 * `dt-api search()`, providing a delay before the search is made.
		 *  @type integer
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.searchDelay
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchDelay": 200
		 *      } );
		 *    } )
		 */
		"searchDelay": null,
	
	
		/**
		 * DataTables features four different built-in options for the buttons to
		 * display for pagination control:
		 *
		 * * `simple` - 'Previous' and 'Next' buttons only
		 * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
		 * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
		 * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus
		 *   page numbers
		 *  
		 * Further methods can be added using {@link DataTable.ext.oPagination}.
		 *  @type string
		 *  @default simple_numbers
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pagingType
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pagingType": "full_numbers"
		 *      } );
		 *    } )
		 */
		"sPaginationType": "simple_numbers",
	
	
		/**
		 * Enable horizontal scrolling. When a table is too wide to fit into a
		 * certain layout, or you have a large number of columns in the table, you
		 * can enable x-scrolling to show the table in a viewport, which can be
		 * scrolled. This property can be `true` which will allow the table to
		 * scroll horizontally when needed, or any CSS unit, or a number (in which
		 * case it will be treated as a pixel measurement). Setting as simply `true`
		 * is recommended.
		 *  @type boolean|string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollX
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": true,
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"sScrollX": "",
	
	
		/**
		 * This property can be used to force a DataTable to use more width than it
		 * might otherwise do when x-scrolling is enabled. For example if you have a
		 * table which requires to be well spaced, this parameter is useful for
		 * "over-sizing" the table, and thus forcing scrolling. This property can by
		 * any CSS unit, or a number (in which case it will be treated as a pixel
		 * measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollXInner
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
		 */
		"sScrollXInner": "",
	
	
		/**
		 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
		 * to the given height, and enable scrolling for any data which overflows the
		 * current viewport. This can be used as an alternative to paging to display
		 * a lot of data in a small area (although paging and scrolling can both be
		 * enabled at the same time). This property can be any CSS unit, or a number
		 * (in which case it will be treated as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollY
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"sScrollY": "",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * Set the HTTP method that is used to make the Ajax call for server-side
		 * processing or Ajax sourced data.
		 *  @type string
		 *  @default GET
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverMethod
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sServerMethod": "GET",
	
	
		/**
		 * DataTables makes use of renderers when displaying HTML elements for
		 * a table. These renderers can be added or modified by plug-ins to
		 * generate suitable mark-up for a site. For example the Bootstrap
		 * integration plug-in for DataTables uses a paging button renderer to
		 * display pagination buttons in the mark-up required by Bootstrap.
		 *
		 * For further information about the renderers available see
		 * DataTable.ext.renderer
		 *  @type string|object
		 *  @default null
		 *
		 *  @name DataTable.defaults.renderer
		 *
		 */
		"renderer": null,
	
	
		/**
		 * Set the data property name that DataTables should use to get a row's id
		 * to set as the `id` property in the node.
		 *  @type string
		 *  @default DT_RowId
		 *
		 *  @name DataTable.defaults.rowId
		 */
		"rowId": "DT_RowId"
	};
	
	_fnHungarianMap( DataTable.defaults );
	
	
	
	/*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */
	
	/**
	 * Column options that can be given to DataTables at initialisation time.
	 *  @namespace
	 */
	DataTable.defaults.column = {
		/**
		 * Define which column(s) an order will occur on for this column. This
		 * allows a column's ordering to take multiple columns into account when
		 * doing a sort or use the data from a different column. For example first
		 * name / last name columns make sense to do a multi-column sort over the
		 * two columns.
		 *  @type array|int
		 *  @default null <i>Takes the value of the column index automatically</i>
		 *
		 *  @name DataTable.defaults.column.orderData
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderData": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "orderData": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "orderData": 2, "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderData": [ 0, 1 ] },
		 *          { "orderData": [ 1, 0 ] },
		 *          { "orderData": 2 },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"aDataSort": null,
		"iDataSort": -1,
	
	
		/**
		 * You can control the default ordering direction, and even alter the
		 * behaviour of the sort handler (i.e. only allow ascending ordering etc)
		 * using this parameter.
		 *  @type array
		 *  @default [ 'asc', 'desc' ]
		 *
		 *  @name DataTable.defaults.column.orderSequence
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderSequence": [ "asc" ], "targets": [ 1 ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "orderSequence": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "orderSequence": [ "asc" ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ] },
		 *          { "orderSequence": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"asSorting": [ 'asc', 'desc' ],
	
	
		/**
		 * Enable or disable filtering on the data in this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.searchable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSearchable": true,
	
	
		/**
		 * Enable or disable ordering on this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.orderable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSortable": true,
	
	
		/**
		 * Enable or disable the display of this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.visible
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bVisible": true,
	
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} td The TD node that has been created
		 *  @param {*} cellData The Data for the cell
		 *  @param {array|object} rowData The data for the whole row
		 *  @param {int} row The row index for the aoData data store
		 *  @param {int} col The column index for aoColumns
		 *
		 *  @name DataTable.defaults.column.createdCell
		 *  @dtopt Columns
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
		 */
		"fnCreatedCell": null,
	
	
		/**
		 * This parameter has been replaced by `data` in DataTables to ensure naming
		 * consistency. `dataProp` can still be used, as there is backwards
		 * compatibility in DataTables for this option, but it is strongly
		 * recommended that you use `data` in preference to `dataProp`.
		 *  @name DataTable.defaults.column.dataProp
		 */
	
	
		/**
		 * This property can be used to read data from any data source property,
		 * including deeply nested objects / properties. `data` can be given in a
		 * number of different ways which effect its behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object. Note that
		 *      function notation is recommended for use in `render` rather than
		 *      `data` as it is much simpler to use as a renderer.
		 * * `null` - use the original data source for the row rather than plucking
		 *   data directly from it. This action has effects on two other
		 *   initialisation options:
		 *    * `defaultContent` - When null is given as the `data` option and
		 *      `defaultContent` is specified for the column, the value defined by
		 *      `defaultContent` will be used for the cell.
		 *    * `render` - When null is used for the `data` option and the `render`
		 *      option is specified for the column, the whole data source for the
		 *      row is used for the renderer.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * `{array|object}` The data source for the row
		 *      * `{string}` The type call data requested - this will be 'set' when
		 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
		 *        when gathering data. Note that when `undefined` is given for the
		 *        type DataTables expects to get the raw data for the object back<
		 *      * `{*}` Data to set when the second parameter is 'set'.
		 *    * Return:
		 *      * The return value from the function is not required when 'set' is
		 *        the type of call, but otherwise the return is what will be used
		 *        for the data requested.
		 *
		 * Note that `data` is a getter and setter option. If you just require
		 * formatting of data for output, you will likely want to use `render` which
		 * is simply a getter and thus simpler to use.
		 *
		 * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
		 * name change reflects the flexibility of this property and is consistent
		 * with the naming of mRender. If 'mDataProp' is given, then it will still
		 * be used by DataTables, as it automatically maps the old name to the new
		 * if required.
		 *
		 *  @type string|int|function|null
		 *  @default null <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.data
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Read table data from objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Read information from deeply nested objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "platform.details.0" },
		 *          { "data": "platform.details.1" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `data` as a function to provide different information for
		 *    // sorting, filtering and display. In this case, currency (price)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using default content
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using array notation - outputting a list from an array
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 */
		"mData": null,
	
	
		/**
		 * This property is the rendering partner to `data` and it is suggested that
		 * when you want to manipulate data for display (including filtering,
		 * sorting etc) without altering the underlying data for the table, use this
		 * property. `render` can be considered to be the the read only companion to
		 * `data` which is read / write (then as such more complex). Like `data`
		 * this option can be given in a number of different ways to effect its
		 * behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object.
		 * * `object` - use different data for the different data types requested by
		 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
		 *   of the object is the data type the property refers to and the value can
		 *   defined using an integer, string or function using the same rules as
		 *   `render` normally does. Note that an `_` option _must_ be specified.
		 *   This is the default value to use if you haven't specified a value for
		 *   the data type requested by DataTables.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * {array|object} The data source for the row (based on `data`)
		 *      * {string} The type call data requested - this will be 'filter',
		 *        'display', 'type' or 'sort'.
		 *      * {array|object} The full data source for the row (not based on
		 *        `data`)
		 *    * Return:
		 *      * The return value from the function is what will be used for the
		 *        data requested.
		 *
		 *  @type string|int|function|object|null
		 *  @default null Use the data source value.
		 *
		 *  @name DataTable.defaults.column.render
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Create a comma separated list from an array of objects
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Execute a function to obtain data
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // As an object, extracting different data for the different types
		 *    // This would be used with a data source such as:
		 *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
		 *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`
		 *    // (which has both forms) is used for filtering for if a user inputs either format, while
		 *    // the formatted phone number is the one that is shown in the table.
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Use as a function to create a link from the data source
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 */
		"mRender": null,
	
	
		/**
		 * Change the cell type created for the column - either TD cells or TH cells. This
		 * can be useful as TH cells have semantic meaning in the table body, allowing them
		 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
		 *  @type string
		 *  @default td
		 *
		 *  @name DataTable.defaults.column.cellType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Make the first column use TH cells
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
		 */
		"sCellType": "td",
	
	
		/**
		 * Class to give to each cell in this column.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.class
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sClass": "",
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 * Generally you shouldn't need this!
		 *  @type string
		 *  @default <i>Empty string<i>
		 *
		 *  @name DataTable.defaults.column.contentPadding
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sContentPadding": "",
	
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because `data`
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 *
		 *  @name DataTable.defaults.column.defaultContent
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sDefaultContent": null,
	
	
		/**
		 * This parameter is only used in DataTables' server-side processing. It can
		 * be exceptionally useful to know what columns are being displayed on the
		 * client side, and to map these to database fields. When defined, the names
		 * also allow DataTables to reorder information from the server if it comes
		 * back in an unexpected order (i.e. if you switch your columns around on the
		 * client-side, your server-side code does not also need updating).
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.name
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sName": "",
	
	
		/**
		 * Defines a data source type for the ordering which can be used to read
		 * real-time information from the table (updating the internally cached
		 * version) prior to ordering. This allows ordering to occur on user
		 * editable elements such as form inputs.
		 *  @type string
		 *  @default std
		 *
		 *  @name DataTable.defaults.column.orderDataType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "orderDataType": "dom-select", "targets": [ 4 ] },
		 *          { "orderDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "orderDataType": "dom-text" },
		 *          { "orderDataType": "dom-text", "type": "numeric" },
		 *          { "orderDataType": "dom-select" },
		 *          { "orderDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sSortDataType": "std",
	
	
		/**
		 * The title of this column.
		 *  @type string
		 *  @default null <i>Derived from the 'TH' value for this column in the
		 *    original HTML table.</i>
		 *
		 *  @name DataTable.defaults.column.title
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sTitle": null,
	
	
		/**
		 * The type allows you to specify how the data for this column will be
		 * ordered. Four types (string, numeric, date and html (which will strip
		 * HTML tags before ordering)) are currently available. Note that only date
		 * formats understood by Javascript's Date() object will be accepted as type
		 * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
		 * 'numeric', 'date' or 'html' (by default). Further types can be adding
		 * through plug-ins.
		 *  @type string
		 *  @default null <i>Auto-detected from raw data</i>
		 *
		 *  @name DataTable.defaults.column.type
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sType": null,
	
	
		/**
		 * Defining the width of the column, this parameter may take any CSS value
		 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
		 * been given a specific width through this interface ensuring that the table
		 * remains readable.
		 *  @type string
		 *  @default null <i>Automatic</i>
		 *
		 *  @name DataTable.defaults.column.width
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sWidth": null
	};
	
	_fnHungarianMap( DataTable.defaults.column );
	
	
	
	/**
	 * DataTables settings object - this holds all the information needed for a
	 * given table, including configuration, data and current application of the
	 * table options. DataTables does not have a single instance for each DataTable
	 * with the settings attached to that instance, but rather instances of the
	 * DataTable "class" are created on-the-fly as needed (typically by a
	 * $().dataTable() call) and the settings object is then applied to that
	 * instance.
	 *
	 * Note that this object is related to {@link DataTable.defaults} but this
	 * one is the internal data store for DataTables's cache of columns. It should
	 * NOT be manipulated outside of DataTables. Any configuration should be done
	 * through the initialisation options.
	 *  @namespace
	 *  @todo Really should attach the settings object to individual instances so we
	 *    don't need to create new instances on each $().dataTable() call (if the
	 *    table already exists). It would also save passing oSettings around and
	 *    into every single function. However, this is a very significant
	 *    architecture change for DataTables and will almost certainly break
	 *    backwards compatibility with older installations. This is something that
	 *    will be done in 2.0.
	 */
	DataTable.models.oSettings = {
		/**
		 * Primary features of DataTables and their enablement state.
		 *  @namespace
		 */
		"oFeatures": {
	
			/**
			 * Flag to say if DataTables should automatically try to calculate the
			 * optimum table and columns widths (true) or not (false).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoWidth": null,
	
			/**
			 * Delay the creation of TR and TD elements until they are actually
			 * needed by a driven page draw. This can give a significant speed
			 * increase for Ajax source and Javascript source data, but makes no
			 * difference at all fro DOM and server-side processing tables.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bDeferRender": null,
	
			/**
			 * Enable filtering on the table or not. Note that if this is disabled
			 * then there is no filtering at all on the table, including fnFilter.
			 * To just remove the filtering input use sDom and remove the 'f' option.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bFilter": null,
	
			/**
			 * Table information element (the 'Showing x of y records' div) enable
			 * flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfo": null,
	
			/**
			 * Present a user control allowing the end user to change the page size
			 * when pagination is enabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bLengthChange": null,
	
			/**
			 * Pagination enabled or not. Note that if this is disabled then length
			 * changing must also be disabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bPaginate": null,
	
			/**
			 * Processing indicator enable flag whenever DataTables is enacting a
			 * user request - typically an Ajax request for server-side processing.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bProcessing": null,
	
			/**
			 * Server-side processing enabled flag - when enabled DataTables will
			 * get all data from the server for every draw - there is no filtering,
			 * sorting or paging done on the client-side.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bServerSide": null,
	
			/**
			 * Sorting enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSort": null,
	
			/**
			 * Multi-column sorting
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortMulti": null,
	
			/**
			 * Apply a class to the columns which are being sorted to provide a
			 * visual highlight or not. This can slow things down when enabled since
			 * there is a lot of DOM interaction.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortClasses": null,
	
			/**
			 * State saving enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bStateSave": null
		},
	
	
		/**
		 * Scrolling settings for a table.
		 *  @namespace
		 */
		"oScroll": {
			/**
			 * When the table is shorter in height than sScrollY, collapse the
			 * table container down to the height of the table (when true).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bCollapse": null,
	
			/**
			 * Width of the scrollbar for the web-browser's platform. Calculated
			 * during table initialisation.
			 *  @type int
			 *  @default 0
			 */
			"iBarWidth": 0,
	
			/**
			 * Viewport width for horizontal scrolling. Horizontal scrolling is
			 * disabled if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sX": null,
	
			/**
			 * Width to expand the table to when using x-scrolling. Typically you
			 * should not need to use this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 *  @deprecated
			 */
			"sXInner": null,
	
			/**
			 * Viewport height for vertical scrolling. Vertical scrolling is disabled
			 * if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sY": null
		},
	
		/**
		 * Language information for the table.
		 *  @namespace
		 *  @extends DataTable.defaults.oLanguage
		 */
		"oLanguage": {
			/**
			 * Information callback function. See
			 * {@link DataTable.defaults.fnInfoCallback}
			 *  @type function
			 *  @default null
			 */
			"fnInfoCallback": null
		},
	
		/**
		 * Browser support parameters
		 *  @namespace
		 */
		"oBrowser": {
			/**
			 * Indicate if the browser incorrectly calculates width:100% inside a
			 * scrolling element (IE6/7)
			 *  @type boolean
			 *  @default false
			 */
			"bScrollOversize": false,
	
			/**
			 * Determine if the vertical scrollbar is on the right or left of the
			 * scrolling container - needed for rtl language layout, although not
			 * all browsers move the scrollbar (Safari).
			 *  @type boolean
			 *  @default false
			 */
			"bScrollbarLeft": false,
	
			/**
			 * Flag for if `getBoundingClientRect` is fully supported or not
			 *  @type boolean
			 *  @default false
			 */
			"bBounding": false,
	
			/**
			 * Browser scrollbar width
			 *  @type integer
			 *  @default 0
			 */
			"barWidth": 0
		},
	
	
		"ajax": null,
	
	
		/**
		 * Array referencing the nodes which are used for the features. The
		 * parameters of this object match what is allowed by sDom - i.e.
		 *   <ul>
		 *     <li>'l' - Length changing</li>
		 *     <li>'f' - Filtering input</li>
		 *     <li>'t' - The table!</li>
		 *     <li>'i' - Information</li>
		 *     <li>'p' - Pagination</li>
		 *     <li>'r' - pRocessing</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aanFeatures": [],
	
		/**
		 * Store data information - see {@link DataTable.models.oRow} for detailed
		 * information.
		 *  @type array
		 *  @default []
		 */
		"aoData": [],
	
		/**
		 * Array of indexes which are in the current display (after filtering etc)
		 *  @type array
		 *  @default []
		 */
		"aiDisplay": [],
	
		/**
		 * Array of indexes for display - no filtering
		 *  @type array
		 *  @default []
		 */
		"aiDisplayMaster": [],
	
		/**
		 * Map of row ids to data indexes
		 *  @type object
		 *  @default {}
		 */
		"aIds": {},
	
		/**
		 * Store information about each column that is in use
		 *  @type array
		 *  @default []
		 */
		"aoColumns": [],
	
		/**
		 * Store information about the table's header
		 *  @type array
		 *  @default []
		 */
		"aoHeader": [],
	
		/**
		 * Store information about the table's footer
		 *  @type array
		 *  @default []
		 */
		"aoFooter": [],
	
		/**
		 * Store the applied global search information in case we want to force a
		 * research or compare the old search to a new one.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 */
		"oPreviousSearch": {},
	
		/**
		 * Store the applied search for each column - see
		 * {@link DataTable.models.oSearch} for the format that is used for the
		 * filtering information for each column.
		 *  @type array
		 *  @default []
		 */
		"aoPreSearchCols": [],
	
		/**
		 * Sorting that is applied to the table. Note that the inner arrays are
		 * used in the following manner:
		 * <ul>
		 *   <li>Index 0 - column number</li>
		 *   <li>Index 1 - current sorting direction</li>
		 * </ul>
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @todo These inner arrays should really be objects
		 */
		"aaSorting": null,
	
		/**
		 * Sorting that is always applied to the table (i.e. prefixed in front of
		 * aaSorting).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aaSortingFixed": [],
	
		/**
		 * Classes to use for the striping of a table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"asStripeClasses": null,
	
		/**
		 * If restoring a table - we should restore its striping classes as well
		 *  @type array
		 *  @default []
		 */
		"asDestroyStripes": [],
	
		/**
		 * If restoring a table - we should restore its width
		 *  @type int
		 *  @default 0
		 */
		"sDestroyWidth": 0,
	
		/**
		 * Callback functions array for every time a row is inserted (i.e. on a draw).
		 *  @type array
		 *  @default []
		 */
		"aoRowCallback": [],
	
		/**
		 * Callback functions for the header on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoHeaderCallback": [],
	
		/**
		 * Callback function for the footer on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoFooterCallback": [],
	
		/**
		 * Array of callback functions for draw callback functions
		 *  @type array
		 *  @default []
		 */
		"aoDrawCallback": [],
	
		/**
		 * Array of callback functions for row created function
		 *  @type array
		 *  @default []
		 */
		"aoRowCreatedCallback": [],
	
		/**
		 * Callback functions for just before the table is redrawn. A return of
		 * false will be used to cancel the draw.
		 *  @type array
		 *  @default []
		 */
		"aoPreDrawCallback": [],
	
		/**
		 * Callback functions for when the table has been initialised.
		 *  @type array
		 *  @default []
		 */
		"aoInitComplete": [],
	
	
		/**
		 * Callbacks for modifying the settings to be stored for state saving, prior to
		 * saving state.
		 *  @type array
		 *  @default []
		 */
		"aoStateSaveParams": [],
	
		/**
		 * Callbacks for modifying the settings that have been stored for state saving
		 * prior to using the stored values to restore the state.
		 *  @type array
		 *  @default []
		 */
		"aoStateLoadParams": [],
	
		/**
		 * Callbacks for operating on the settings object once the saved state has been
		 * loaded
		 *  @type array
		 *  @default []
		 */
		"aoStateLoaded": [],
	
		/**
		 * Cache the table ID for quick access
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sTableId": "",
	
		/**
		 * The TABLE node for the main table
		 *  @type node
		 *  @default null
		 */
		"nTable": null,
	
		/**
		 * Permanent ref to the thead element
		 *  @type node
		 *  @default null
		 */
		"nTHead": null,
	
		/**
		 * Permanent ref to the tfoot element - if it exists
		 *  @type node
		 *  @default null
		 */
		"nTFoot": null,
	
		/**
		 * Permanent ref to the tbody element
		 *  @type node
		 *  @default null
		 */
		"nTBody": null,
	
		/**
		 * Cache the wrapper node (contains all DataTables controlled elements)
		 *  @type node
		 *  @default null
		 */
		"nTableWrapper": null,
	
		/**
		 * Indicate if when using server-side processing the loading of data
		 * should be deferred until the second draw.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 *  @default false
		 */
		"bDeferLoading": false,
	
		/**
		 * Indicate if all required information has been read in
		 *  @type boolean
		 *  @default false
		 */
		"bInitialised": false,
	
		/**
		 * Information about open rows. Each object in the array has the parameters
		 * 'nTr' and 'nParent'
		 *  @type array
		 *  @default []
		 */
		"aoOpenRows": [],
	
		/**
		 * Dictate the positioning of DataTables' control elements - see
		 * {@link DataTable.model.oInit.sDom}.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sDom": null,
	
		/**
		 * Search delay (in mS)
		 *  @type integer
		 *  @default null
		 */
		"searchDelay": null,
	
		/**
		 * Which type of pagination should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default two_button
		 */
		"sPaginationType": "two_button",
	
		/**
		 * The state duration (for `stateSave`) in seconds.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type int
		 *  @default 0
		 */
		"iStateDuration": 0,
	
		/**
		 * Array of callback functions for state saving. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the JSON string to save that has been thus far created. Returns
		 *       a JSON string to be inserted into a json object
		 *       (i.e. '"param": [ 0, 1, 2]')</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateSave": [],
	
		/**
		 * Array of callback functions for state loading. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the object stored. May return false to cancel state loading</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateLoad": [],
	
		/**
		 * State that was saved. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oSavedState": null,
	
		/**
		 * State that was loaded. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oLoadedState": null,
	
		/**
		 * Source url for AJAX data for the table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sAjaxSource": null,
	
		/**
		 * Property from a given object from which to read the table data from. This
		 * can be an empty string (when not server-side processing), in which case
		 * it is  assumed an an array is given directly.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sAjaxDataProp": null,
	
		/**
		 * Note if draw should be blocked while getting data
		 *  @type boolean
		 *  @default true
		 */
		"bAjaxDataGet": true,
	
		/**
		 * The last jQuery XHR object that was used for server-side data gathering.
		 * This can be used for working with the XHR information in one of the
		 * callbacks
		 *  @type object
		 *  @default null
		 */
		"jqXHR": null,
	
		/**
		 * JSON returned from the server in the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"json": undefined,
	
		/**
		 * Data submitted as part of the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"oAjaxData": undefined,
	
		/**
		 * Function to get the server-side data.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnServerData": null,
	
		/**
		 * Functions which are called prior to sending an Ajax request so extra
		 * parameters can easily be sent to the server
		 *  @type array
		 *  @default []
		 */
		"aoServerParams": [],
	
		/**
		 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
		 * required).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sServerMethod": null,
	
		/**
		 * Format numbers for display.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnFormatNumber": null,
	
		/**
		 * List of options that can be used for the user selectable length menu.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aLengthMenu": null,
	
		/**
		 * Counter for the draws that the table does. Also used as a tracker for
		 * server-side processing
		 *  @type int
		 *  @default 0
		 */
		"iDraw": 0,
	
		/**
		 * Indicate if a redraw is being done - useful for Ajax
		 *  @type boolean
		 *  @default false
		 */
		"bDrawing": false,
	
		/**
		 * Draw index (iDraw) of the last error when parsing the returned data
		 *  @type int
		 *  @default -1
		 */
		"iDrawError": -1,
	
		/**
		 * Paging display length
		 *  @type int
		 *  @default 10
		 */
		"_iDisplayLength": 10,
	
		/**
		 * Paging start point - aiDisplay index
		 *  @type int
		 *  @default 0
		 */
		"_iDisplayStart": 0,
	
		/**
		 * Server-side processing - number of records in the result set
		 * (i.e. before filtering), Use fnRecordsTotal rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type int
		 *  @default 0
		 *  @private
		 */
		"_iRecordsTotal": 0,
	
		/**
		 * Server-side processing - number of records in the current display set
		 * (i.e. after filtering). Use fnRecordsDisplay rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type boolean
		 *  @default 0
		 *  @private
		 */
		"_iRecordsDisplay": 0,
	
		/**
		 * Flag to indicate if jQuery UI marking and classes should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bJUI": null,
	
		/**
		 * The classes to use for the table
		 *  @type object
		 *  @default {}
		 */
		"oClasses": {},
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if filtering has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bFiltered": false,
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if sorting has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bSorted": false,
	
		/**
		 * Indicate that if multiple rows are in the header and there is more than
		 * one unique cell per column, if the top one (true) or bottom one (false)
		 * should be used for sorting / title by DataTables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bSortCellsTop": null,
	
		/**
		 * Initialisation object that is used for the table
		 *  @type object
		 *  @default null
		 */
		"oInit": null,
	
		/**
		 * Destroy callback functions - for plug-ins to attach themselves to the
		 * destroy so they can clean up markup and events.
		 *  @type array
		 *  @default []
		 */
		"aoDestroyCallback": [],
	
	
		/**
		 * Get the number of records in the current record set, before filtering
		 *  @type function
		 */
		"fnRecordsTotal": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsTotal * 1 :
				this.aiDisplayMaster.length;
		},
	
		/**
		 * Get the number of records in the current record set, after filtering
		 *  @type function
		 */
		"fnRecordsDisplay": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsDisplay * 1 :
				this.aiDisplay.length;
		},
	
		/**
		 * Get the display end point - aiDisplay index
		 *  @type function
		 */
		"fnDisplayEnd": function ()
		{
			var
				len      = this._iDisplayLength,
				start    = this._iDisplayStart,
				calc     = start + len,
				records  = this.aiDisplay.length,
				features = this.oFeatures,
				paginate = features.bPaginate;
	
			if ( features.bServerSide ) {
				return paginate === false || len === -1 ?
					start + records :
					Math.min( start+len, this._iRecordsDisplay );
			}
			else {
				return ! paginate || calc>records || len===-1 ?
					records :
					calc;
			}
		},
	
		/**
		 * The DataTables object for this table
		 *  @type object
		 *  @default null
		 */
		"oInstance": null,
	
		/**
		 * Unique identifier for each instance of the DataTables object. If there
		 * is an ID on the table node, then it takes that value, otherwise an
		 * incrementing internal counter is used.
		 *  @type string
		 *  @default null
		 */
		"sInstance": null,
	
		/**
		 * tabindex attribute value that is added to DataTables control elements, allowing
		 * keyboard navigation of the table and its controls.
		 */
		"iTabIndex": 0,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollHead": null,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollFoot": null,
	
		/**
		 * Last applied sort
		 *  @type array
		 *  @default []
		 */
		"aLastSort": [],
	
		/**
		 * Stored plug-in instances
		 *  @type object
		 *  @default {}
		 */
		"oPlugins": {},
	
		/**
		 * Function used to get a row's id from the row's data
		 *  @type function
		 *  @default null
		 */
		"rowIdFn": null,
	
		/**
		 * Data location where to store a row's id
		 *  @type string
		 *  @default null
		 */
		"rowId": null
	};

	/**
	 * Extension object for DataTables that is used to provide all extension
	 * options.
	 *
	 * Note that the `DataTable.ext` object is available through
	 * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
	 * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
	 *  @namespace
	 *  @extends DataTable.models.ext
	 */
	
	
	/**
	 * DataTables extensions
	 * 
	 * This namespace acts as a collection area for plug-ins that can be used to
	 * extend DataTables capabilities. Indeed many of the build in methods
	 * use this method to provide their own capabilities (sorting methods for
	 * example).
	 *
	 * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy
	 * reasons
	 *
	 *  @namespace
	 */
	DataTable.ext = _ext = {
		/**
		 * Buttons. For use with the Buttons extension for DataTables. This is
		 * defined here so other extensions can define buttons regardless of load
		 * order. It is _not_ used by DataTables core.
		 *
		 *  @type object
		 *  @default {}
		 */
		buttons: {},
	
	
		/**
		 * Element class names
		 *
		 *  @type object
		 *  @default {}
		 */
		classes: {},
	
	
		/**
		 * DataTables build type (expanded by the download builder)
		 *
		 *  @type string
		 */
		builder: "-source-",
	
	
		/**
		 * Error reporting.
		 * 
		 * How should DataTables report an error. Can take the value 'alert',
		 * 'throw', 'none' or a function.
		 *
		 *  @type string|function
		 *  @default alert
		 */
		errMode: "alert",
	
	
		/**
		 * Feature plug-ins.
		 * 
		 * This is an array of objects which describe the feature plug-ins that are
		 * available to DataTables. These feature plug-ins are then available for
		 * use through the `dom` initialisation option.
		 * 
		 * Each feature plug-in is described by an object which must have the
		 * following properties:
		 * 
		 * * `fnInit` - function that is used to initialise the plug-in,
		 * * `cFeature` - a character so the feature can be enabled by the `dom`
		 *   instillation option. This is case sensitive.
		 *
		 * The `fnInit` function has the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 *
		 * And the following return is expected:
		 * 
		 * * {node|null} The element which contains your feature. Note that the
		 *   return may also be void if your plug-in does not require to inject any
		 *   DOM elements into DataTables control (`dom`) - for example this might
		 *   be useful when developing a plug-in which allows table control via
		 *   keyboard entry
		 *
		 *  @type array
		 *
		 *  @example
		 *    $.fn.dataTable.ext.features.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T"
		 *    } );
		 */
		feature: [],
	
	
		/**
		 * Row searching.
		 * 
		 * This method of searching is complimentary to the default type based
		 * searching, and a lot more comprehensive as it allows you complete control
		 * over the searching logic. Each element in this array is a function
		 * (parameters described below) that is called for every row in the table,
		 * and your logic decides if it should be included in the searching data set
		 * or not.
		 *
		 * Searching functions have the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{array|object}` Data for the row to be processed (same as the
		 *    original format that was passed in as the data source, or an array
		 *    from a DOM data source
		 * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
		 *    can be useful to retrieve the `TR` element if you need DOM interaction.
		 *
		 * And the following return is expected:
		 *
		 * * {boolean} Include the row in the searched result set (true) or not
		 *   (false)
		 *
		 * Note that as with the main search ability in DataTables, technically this
		 * is "filtering", since it is subtractive. However, for consistency in
		 * naming we call it searching here.
		 *
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // The following example shows custom search being applied to the
		 *    // fourth column (i.e. the data[3] index) based on two input values
		 *    // from the end-user, matching the data in a certain range.
		 *    $.fn.dataTable.ext.search.push(
		 *      function( settings, data, dataIndex ) {
		 *        var min = document.getElementById('min').value * 1;
		 *        var max = document.getElementById('max').value * 1;
		 *        var version = data[3] == "-" ? 0 : data[3]*1;
		 *
		 *        if ( min == "" && max == "" ) {
		 *          return true;
		 *        }
		 *        else if ( min == "" && version < max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && "" == max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && version < max ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
		 *    );
		 */
		search: [],
	
	
		/**
		 * Selector extensions
		 *
		 * The `selector` option can be used to extend the options available for the
		 * selector modifier options (`selector-modifier` object data type) that
		 * each of the three built in selector types offer (row, column and cell +
		 * their plural counterparts). For example the Select extension uses this
		 * mechanism to provide an option to select only rows, columns and cells
		 * that have been marked as selected by the end user (`{selected: true}`),
		 * which can be used in conjunction with the existing built in selector
		 * options.
		 *
		 * Each property is an array to which functions can be pushed. The functions
		 * take three attributes:
		 *
		 * * Settings object for the host table
		 * * Options object (`selector-modifier` object type)
		 * * Array of selected item indexes
		 *
		 * The return is an array of the resulting item indexes after the custom
		 * selector has been applied.
		 *
		 *  @type object
		 */
		selector: {
			cell: [],
			column: [],
			row: []
		},
	
	
		/**
		 * Internal functions, exposed for used in plug-ins.
		 * 
		 * Please note that you should not need to use the internal methods for
		 * anything other than a plug-in (and even then, try to avoid if possible).
		 * The internal function may change between releases.
		 *
		 *  @type object
		 *  @default {}
		 */
		internal: {},
	
	
		/**
		 * Legacy configuration options. Enable and disable legacy options that
		 * are available in DataTables.
		 *
		 *  @type object
		 */
		legacy: {
			/**
			 * Enable / disable DataTables 1.9 compatible server-side processing
			 * requests
			 *
			 *  @type boolean
			 *  @default null
			 */
			ajax: null
		},
	
	
		/**
		 * Pagination plug-in methods.
		 * 
		 * Each entry in this object is a function and defines which buttons should
		 * be shown by the pagination rendering method that is used for the table:
		 * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
		 * buttons are displayed in the document, while the functions here tell it
		 * what buttons to display. This is done by returning an array of button
		 * descriptions (what each button will do).
		 *
		 * Pagination types (the four built in options and any additional plug-in
		 * options defined here) can be used through the `paginationType`
		 * initialisation parameter.
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{int} page` The current page index
		 * 2. `{int} pages` The number of pages in the table
		 *
		 * Each function is expected to return an array where each element of the
		 * array can be one of:
		 *
		 * * `first` - Jump to first page when activated
		 * * `last` - Jump to last page when activated
		 * * `previous` - Show previous page when activated
		 * * `next` - Show next page when activated
		 * * `{int}` - Show page of the index given
		 * * `{array}` - A nested array containing the above elements to add a
		 *   containing 'DIV' element (might be useful for styling).
		 *
		 * Note that DataTables v1.9- used this object slightly differently whereby
		 * an object with two functions would be defined for each plug-in. That
		 * ability is still supported by DataTables 1.10+ to provide backwards
		 * compatibility, but this option of use is now decremented and no longer
		 * documented in DataTables 1.10+.
		 *
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Show previous, next and current page buttons only
		 *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
		 *      return [ 'previous', page, 'next' ];
		 *    };
		 */
		pager: {},
	
	
		renderer: {
			pageButton: {},
			header: {}
		},
	
	
		/**
		 * Ordering plug-ins - custom data source
		 * 
		 * The extension options for ordering of data available here is complimentary
		 * to the default type based ordering that DataTables typically uses. It
		 * allows much greater control over the the data that is being used to
		 * order a column, but is necessarily therefore more complex.
		 * 
		 * This type of ordering is useful if you want to do ordering based on data
		 * live from the DOM (for example the contents of an 'input' element) rather
		 * than just the static string that DataTables knows of.
		 * 
		 * The way these plug-ins work is that you create an array of the values you
		 * wish to be ordering for the column in question and then return that
		 * array. The data in the array much be in the index order of the rows in
		 * the table (not the currently ordering order!). Which order data gathering
		 * function is run here depends on the `dt-init columns.orderDataType`
		 * parameter that is used for the column (if any).
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{int}` Target column index
		 *
		 * Each function is expected to return an array:
		 *
		 * * `{array}` Data for the column to be ordering upon
		 *
		 *  @type array
		 *
		 *  @example
		 *    // Ordering using `input` node values
		 *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
		 *    {
		 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
		 *        return $('input', td).val();
		 *      } );
		 *    }
		 */
		order: {},
	
	
		/**
		 * Type based plug-ins.
		 *
		 * Each column in DataTables has a type assigned to it, either by automatic
		 * detection or by direct assignment using the `type` option for the column.
		 * The type of a column will effect how it is ordering and search (plug-ins
		 * can also make use of the column type if required).
		 *
		 * @namespace
		 */
		type: {
			/**
			 * Type detection functions.
			 *
			 * The functions defined in this object are used to automatically detect
			 * a column's type, making initialisation of DataTables super easy, even
			 * when complex data is in the table.
			 *
			 * The functions defined take two parameters:
			 *
		     *  1. `{*}` Data from the column cell to be analysed
		     *  2. `{settings}` DataTables settings object. This can be used to
		     *     perform context specific type detection - for example detection
		     *     based on language settings such as using a comma for a decimal
		     *     place. Generally speaking the options from the settings will not
		     *     be required
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Data type detected, or null if unknown (and thus
			 *   pass it on to the other type detection functions.
			 *
			 *  @type array
			 *
			 *  @example
			 *    // Currency type detection plug-in:
			 *    $.fn.dataTable.ext.type.detect.push(
			 *      function ( data, settings ) {
			 *        // Check the numeric part
			 *        if ( ! $.isNumeric( data.substring(1) ) ) {
			 *          return null;
			 *        }
			 *
			 *        // Check prefixed by currency
			 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
			 *          return 'currency';
			 *        }
			 *        return null;
			 *      }
			 *    );
			 */
			detect: [],
	
	
			/**
			 * Type based search formatting.
			 *
			 * The type based searching functions can be used to pre-format the
			 * data to be search on. For example, it can be used to strip HTML
			 * tags or to de-format telephone numbers for numeric only searching.
			 *
			 * Note that is a search is not defined for a column of a given type,
			 * no search formatting will be performed.
			 * 
			 * Pre-processing of searching data plug-ins - When you assign the sType
			 * for a column (or have it automatically detected for you by DataTables
			 * or a type detection plug-in), you will typically be using this for
			 * custom sorting, but it can also be used to provide custom searching
			 * by allowing you to pre-processing the data and returning the data in
			 * the format that should be searched upon. This is done by adding
			 * functions this object with a parameter name which matches the sType
			 * for that target column. This is the corollary of <i>afnSortData</i>
			 * for searching data.
			 *
			 * The functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for searching
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Formatted string that will be used for the searching.
			 *
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
			 *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
			 *    }
			 */
			search: {},
	
	
			/**
			 * Type based ordering.
			 *
			 * The column type tells DataTables what ordering to apply to the table
			 * when a column is sorted upon. The order for each type that is defined,
			 * is defined by the functions available in this object.
			 *
			 * Each ordering option can be described by three properties added to
			 * this object:
			 *
			 * * `{type}-pre` - Pre-formatting function
			 * * `{type}-asc` - Ascending order function
			 * * `{type}-desc` - Descending order function
			 *
			 * All three can be used together, only `{type}-pre` or only
			 * `{type}-asc` and `{type}-desc` together. It is generally recommended
			 * that only `{type}-pre` is used, as this provides the optimal
			 * implementation in terms of speed, although the others are provided
			 * for compatibility with existing Javascript sort functions.
			 *
			 * `{type}-pre`: Functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for ordering
			 *
			 * And return:
			 *
			 * * `{*}` Data to be sorted upon
			 *
			 * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
			 * functions, taking two parameters:
			 *
		     *  1. `{*}` Data to compare to the second parameter
		     *  2. `{*}` Data to compare to the first parameter
			 *
			 * And returning:
			 *
			 * * `{*}` Ordering match: <0 if first parameter should be sorted lower
			 *   than the second parameter, ===0 if the two parameters are equal and
			 *   >0 if the first parameter should be sorted height than the second
			 *   parameter.
			 * 
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    // Numeric ordering of formatted numbers with a pre-formatter
			 *    $.extend( $.fn.dataTable.ext.type.order, {
			 *      "string-pre": function(x) {
			 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
			 *        return parseFloat( a );
			 *      }
			 *    } );
			 *
			 *  @example
			 *    // Case-sensitive string ordering, with no pre-formatting method
			 *    $.extend( $.fn.dataTable.ext.order, {
			 *      "string-case-asc": function(x,y) {
			 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			 *      },
			 *      "string-case-desc": function(x,y) {
			 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
			 *      }
			 *    } );
			 */
			order: {}
		},
	
		/**
		 * Unique DataTables instance counter
		 *
		 * @type int
		 * @private
		 */
		_unique: 0,
	
	
		//
		// Depreciated
		// The following properties are retained for backwards compatiblity only.
		// The should not be used in new projects and will be removed in a future
		// version
		//
	
		/**
		 * Version check function.
		 *  @type function
		 *  @depreciated Since 1.10
		 */
		fnVersionCheck: DataTable.fnVersionCheck,
	
	
		/**
		 * Index for what 'this' index API functions should use
		 *  @type int
		 *  @deprecated Since v1.10
		 */
		iApiIndex: 0,
	
	
		/**
		 * jQuery UI class container
		 *  @type object
		 *  @deprecated Since v1.10
		 */
		oJUIClasses: {},
	
	
		/**
		 * Software version
		 *  @type string
		 *  @deprecated Since v1.10
		 */
		sVersion: DataTable.version
	};
	
	
	//
	// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
	//
	$.extend( _ext, {
		afnFiltering: _ext.search,
		aTypes:       _ext.type.detect,
		ofnSearch:    _ext.type.search,
		oSort:        _ext.type.order,
		afnSortData:  _ext.order,
		aoFeatures:   _ext.feature,
		oApi:         _ext.internal,
		oStdClasses:  _ext.classes,
		oPagination:  _ext.pager
	} );
	
	
	$.extend( DataTable.ext.classes, {
		"sTable": "dataTable",
		"sNoFooter": "no-footer",
	
		/* Paging buttons */
		"sPageButton": "paginate_button",
		"sPageButtonActive": "current",
		"sPageButtonDisabled": "disabled",
	
		/* Striping classes */
		"sStripeOdd": "odd",
		"sStripeEven": "even",
	
		/* Empty row */
		"sRowEmpty": "dataTables_empty",
	
		/* Features */
		"sWrapper": "dataTables_wrapper",
		"sFilter": "dataTables_filter",
		"sInfo": "dataTables_info",
		"sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
		"sLength": "dataTables_length",
		"sProcessing": "dataTables_processing",
	
		/* Sorting */
		"sSortAsc": "sorting_asc",
		"sSortDesc": "sorting_desc",
		"sSortable": "sorting", /* Sortable in both directions */
		"sSortableAsc": "sorting_asc_disabled",
		"sSortableDesc": "sorting_desc_disabled",
		"sSortableNone": "sorting_disabled",
		"sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
	
		/* Filtering */
		"sFilterInput": "",
	
		/* Page length */
		"sLengthSelect": "",
	
		/* Scrolling */
		"sScrollWrapper": "dataTables_scroll",
		"sScrollHead": "dataTables_scrollHead",
		"sScrollHeadInner": "dataTables_scrollHeadInner",
		"sScrollBody": "dataTables_scrollBody",
		"sScrollFoot": "dataTables_scrollFoot",
		"sScrollFootInner": "dataTables_scrollFootInner",
	
		/* Misc */
		"sHeaderTH": "",
		"sFooterTH": "",
	
		// Deprecated
		"sSortJUIAsc": "",
		"sSortJUIDesc": "",
		"sSortJUI": "",
		"sSortJUIAscAllowed": "",
		"sSortJUIDescAllowed": "",
		"sSortJUIWrapper": "",
		"sSortIcon": "",
		"sJUIHeader": "",
		"sJUIFooter": ""
	} );
	
	
	(function() {
	
	// Reused strings for better compression. Closure compiler appears to have a
	// weird edge case where it is trying to expand strings rather than use the
	// variable version. This results in about 200 bytes being added, for very
	// little preference benefit since it this run on script load only.
	var _empty = '';
	_empty = '';
	
	var _stateDefault = _empty + 'ui-state-default';
	var _sortIcon     = _empty + 'css_right ui-icon ui-icon-';
	var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';
	
	$.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {
		/* Full numbers paging buttons */
		"sPageButton":         "fg-button ui-button "+_stateDefault,
		"sPageButtonActive":   "ui-state-disabled",
		"sPageButtonDisabled": "ui-state-disabled",
	
		/* Features */
		"sPaging": "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi "+
			"ui-buttonset-multi paging_", /* Note that the type is postfixed */
	
		/* Sorting */
		"sSortAsc":            _stateDefault+" sorting_asc",
		"sSortDesc":           _stateDefault+" sorting_desc",
		"sSortable":           _stateDefault+" sorting",
		"sSortableAsc":        _stateDefault+" sorting_asc_disabled",
		"sSortableDesc":       _stateDefault+" sorting_desc_disabled",
		"sSortableNone":       _stateDefault+" sorting_disabled",
		"sSortJUIAsc":         _sortIcon+"triangle-1-n",
		"sSortJUIDesc":        _sortIcon+"triangle-1-s",
		"sSortJUI":            _sortIcon+"carat-2-n-s",
		"sSortJUIAscAllowed":  _sortIcon+"carat-1-n",
		"sSortJUIDescAllowed": _sortIcon+"carat-1-s",
		"sSortJUIWrapper":     "DataTables_sort_wrapper",
		"sSortIcon":           "DataTables_sort_icon",
	
		/* Scrolling */
		"sScrollHead": "dataTables_scrollHead "+_stateDefault,
		"sScrollFoot": "dataTables_scrollFoot "+_stateDefault,
	
		/* Misc */
		"sHeaderTH":  _stateDefault,
		"sFooterTH":  _stateDefault,
		"sJUIHeader": _headerFooter+" ui-corner-tl ui-corner-tr",
		"sJUIFooter": _headerFooter+" ui-corner-bl ui-corner-br"
	} );
	
	}());
	
	
	
	var extPagination = DataTable.ext.pager;
	
	function _numbers ( page, pages ) {
		var
			numbers = [],
			buttons = extPagination.numbers_length,
			half = Math.floor( buttons / 2 ),
			i = 1;
	
		if ( pages <= buttons ) {
			numbers = _range( 0, pages );
		}
		else if ( page <= half ) {
			numbers = _range( 0, buttons-2 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
		}
		else if ( page >= pages - 1 - half ) {
			numbers = _range( pages-(buttons-2), pages );
			numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6
			numbers.splice( 0, 0, 0 );
		}
		else {
			numbers = _range( page-half+2, page+half-1 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
			numbers.splice( 0, 0, 'ellipsis' );
			numbers.splice( 0, 0, 0 );
		}
	
		numbers.DT_el = 'span';
		return numbers;
	}
	
	
	$.extend( extPagination, {
		simple: function ( page, pages ) {
			return [ 'previous', 'next' ];
		},
	
		full: function ( page, pages ) {
			return [  'first', 'previous', 'next', 'last' ];
		},
	
		numbers: function ( page, pages ) {
			return [ _numbers(page, pages) ];
		},
	
		simple_numbers: function ( page, pages ) {
			return [ 'previous', _numbers(page, pages), 'next' ];
		},
	
		full_numbers: function ( page, pages ) {
			return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];
		},
	
		// For testing and plug-ins to use
		_numbers: _numbers,
	
		// Number of number buttons (including ellipsis) to show. _Must be odd!_
		numbers_length: 7
	} );
	
	
	$.extend( true, DataTable.ext.renderer, {
		pageButton: {
			_: function ( settings, host, idx, buttons, page, pages ) {
				var classes = settings.oClasses;
				var lang = settings.oLanguage.oPaginate;
				var aria = settings.oLanguage.oAria.paginate || {};
				var btnDisplay, btnClass, counter=0;
	
				var attach = function( container, buttons ) {
					var i, ien, node, button;
					var clickHandler = function ( e ) {
						_fnPageChange( settings, e.data.action, true );
					};
	
					for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
						button = buttons[i];
	
						if ( $.isArray( button ) ) {
							var inner = $( '<'+(button.DT_el || 'div')+'/>' )
								.appendTo( container );
							attach( inner, button );
						}
						else {
							btnDisplay = null;
							btnClass = '';
	
							switch ( button ) {
								case 'ellipsis':
									container.append('<span class="ellipsis">&#x2026;</span>');
									break;
	
								case 'first':
									btnDisplay = lang.sFirst;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'previous':
									btnDisplay = lang.sPrevious;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'next':
									btnDisplay = lang.sNext;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'last':
									btnDisplay = lang.sLast;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								default:
									btnDisplay = button + 1;
									btnClass = page === button ?
										classes.sPageButtonActive : '';
									break;
							}
	
							if ( btnDisplay !== null ) {
								node = $('<a>', {
										'class': classes.sPageButton+' '+btnClass,
										'aria-controls': settings.sTableId,
										'aria-label': aria[ button ],
										'data-dt-idx': counter,
										'tabindex': settings.iTabIndex,
										'id': idx === 0 && typeof button === 'string' ?
											settings.sTableId +'_'+ button :
											null
									} )
									.html( btnDisplay )
									.appendTo( container );
	
								_fnBindAction(
									node, {action: button}, clickHandler
								);
	
								counter++;
							}
						}
					}
				};
	
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame. Try / catch the error. Not good for
				// accessibility, but neither are frames.
				var activeEl;
	
				try {
					// Because this approach is destroying and recreating the paging
					// elements, focus is lost on the select button which is bad for
					// accessibility. So we want to restore focus once the draw has
					// completed
					activeEl = $(host).find(document.activeElement).data('dt-idx');
				}
				catch (e) {}
	
				attach( $(host).empty(), buttons );
	
				if ( activeEl ) {
					$(host).find( '[data-dt-idx='+activeEl+']' ).focus();
				}
			}
		}
	} );
	
	
	
	// Built in type detection. See model.ext.aTypes for information about
	// what is required from this methods.
	$.extend( DataTable.ext.type.detect, [
		// Plain numbers - first since V8 detects some plain numbers as dates
		// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal ) ? 'num'+decimal : null;
		},
	
		// Dates (only those recognised by the browser's Date.parse)
		function ( d, settings )
		{
			// V8 will remove any unknown characters at the start and end of the
			// expression, leading to false matches such as `$245.12` or `10%` being
			// a valid date. See forum thread 18941 for detail.
			if ( d && !(d instanceof Date) && ( ! _re_date_start.test(d) || ! _re_date_end.test(d) ) ) {
				return null;
			}
			var parsed = Date.parse(d);
			return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
		},
	
		// Formatted numbers
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;
		},
	
		// HTML numeric
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;
		},
	
		// HTML numeric, formatted
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;
		},
	
		// HTML (this is strict checking - there must be html)
		function ( d, settings )
		{
			return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
				'html' : null;
		}
	] );
	
	
	
	// Filter formatting functions. See model.ext.ofnSearch for information about
	// what is required from these methods.
	// 
	// Note that additional search methods are added for the html numbers and
	// html formatted numbers by `_addNumericSort()` when we know what the decimal
	// place is
	
	
	$.extend( DataTable.ext.type.search, {
		html: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data
						.replace( _re_new_lines, " " )
						.replace( _re_html, "" ) :
					'';
		},
	
		string: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data.replace( _re_new_lines, " " ) :
					data;
		}
	} );
	
	
	
	var __numericReplace = function ( d, decimalPlace, re1, re2 ) {
		if ( d !== 0 && (!d || d === '-') ) {
			return -Infinity;
		}
	
		// If a decimal place other than `.` is used, it needs to be given to the
		// function so we can detect it and replace with a `.` which is the only
		// decimal place Javascript recognises - it is not locale aware.
		if ( decimalPlace ) {
			d = _numToDecimal( d, decimalPlace );
		}
	
		if ( d.replace ) {
			if ( re1 ) {
				d = d.replace( re1, '' );
			}
	
			if ( re2 ) {
				d = d.replace( re2, '' );
			}
		}
	
		return d * 1;
	};
	
	
	// Add the numeric 'deformatting' functions for sorting and search. This is done
	// in a function to provide an easy ability for the language options to add
	// additional methods if a non-period decimal place is used.
	function _addNumericSort ( decimalPlace ) {
		$.each(
			{
				// Plain numbers
				"num": function ( d ) {
					return __numericReplace( d, decimalPlace );
				},
	
				// Formatted numbers
				"num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_formatted_numeric );
				},
	
				// HTML numeric
				"html-num": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html );
				},
	
				// HTML numeric, formatted
				"html-num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );
				}
			},
			function ( key, fn ) {
				// Add the ordering method
				_ext.type.order[ key+decimalPlace+'-pre' ] = fn;
	
				// For HTML types add a search formatter that will strip the HTML
				if ( key.match(/^html\-/) ) {
					_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;
				}
			}
		);
	}
	
	
	// Default sort methods
	$.extend( _ext.type.order, {
		// Dates
		"date-pre": function ( d ) {
			return Date.parse( d ) || 0;
		},
	
		// html
		"html-pre": function ( a ) {
			return _empty(a) ?
				'' :
				a.replace ?
					a.replace( /<.*?>/g, "" ).toLowerCase() :
					a+'';
		},
	
		// string
		"string-pre": function ( a ) {
			// This is a little complex, but faster than always calling toString,
			// http://jsperf.com/tostring-v-check
			return _empty(a) ?
				'' :
				typeof a === 'string' ?
					a.toLowerCase() :
					! a.toString ?
						'' :
						a.toString();
		},
	
		// string-asc and -desc are retained only for compatibility with the old
		// sort methods
		"string-asc": function ( x, y ) {
			return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		},
	
		"string-desc": function ( x, y ) {
			return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		}
	} );
	
	
	// Numeric sorting types - order doesn't matter here
	_addNumericSort( '' );
	
	
	$.extend( true, DataTable.ext.renderer, {
		header: {
			_: function ( settings, cell, column, classes ) {
				// No additional mark-up required
				// Attach a sort listener to update on sort - note that using the
				// `DT` namespace will allow the event to be removed automatically
				// on destroy, while the `dt` namespaced event is the one we are
				// listening for
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) { // need to check this this is the host
						return;               // table, not a nested one
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass(
							column.sSortingClass +' '+
							classes.sSortAsc +' '+
							classes.sSortDesc
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
				} );
			},
	
			jqueryui: function ( settings, cell, column, classes ) {
				$('<div/>')
					.addClass( classes.sSortJUIWrapper )
					.append( cell.contents() )
					.append( $('<span/>')
						.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )
					)
					.appendTo( cell );
	
				// Attach a sort listener to update on sort
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) {
						return;
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass( classes.sSortAsc +" "+classes.sSortDesc )
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
	
					cell
						.find( 'span.'+classes.sSortIcon )
						.removeClass(
							classes.sSortJUIAsc +" "+
							classes.sSortJUIDesc +" "+
							classes.sSortJUI +" "+
							classes.sSortJUIAscAllowed +" "+
							classes.sSortJUIDescAllowed
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortJUIDesc :
								column.sSortingClassJUI
						);
				} );
			}
		}
	} );
	
	/*
	 * Public helper functions. These aren't used internally by DataTables, or
	 * called by any of the options passed into DataTables, but they can be used
	 * externally by developers working with DataTables. They are helper functions
	 * to make working with DataTables a little bit easier.
	 */
	
	var __htmlEscapeEntities = function ( d ) {
		return typeof d === 'string' ?
			d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;') :
			d;
	};
	
	/**
	 * Helpers for `columns.render`.
	 *
	 * The options defined here can be used with the `columns.render` initialisation
	 * option to provide a display renderer. The following functions are defined:
	 *
	 * * `number` - Will format numeric data (defined by `columns.data`) for
	 *   display, retaining the original unformatted data for sorting and filtering.
	 *   It takes 5 parameters:
	 *   * `string` - Thousands grouping separator
	 *   * `string` - Decimal point indicator
	 *   * `integer` - Number of decimal points to show
	 *   * `string` (optional) - Prefix.
	 *   * `string` (optional) - Postfix (/suffix).
	 * * `text` - Escape HTML to help prevent XSS attacks. It has no optional
	 *   parameters.
	 *
	 * @example
	 *   // Column definition using the number renderer
	 *   {
	 *     data: "salary",
	 *     render: $.fn.dataTable.render.number( '\'', '.', 0, '$' )
	 *   }
	 *
	 * @namespace
	 */
	DataTable.render = {
		number: function ( thousands, decimal, precision, prefix, postfix ) {
			return {
				display: function ( d ) {
					if ( typeof d !== 'number' && typeof d !== 'string' ) {
						return d;
					}
	
					var negative = d < 0 ? '-' : '';
					var flo = parseFloat( d );
	
					// If NaN then there isn't much formatting that we can do - just
					// return immediately, escaping any HTML (this was supposed to
					// be a number after all)
					if ( isNaN( flo ) ) {
						return __htmlEscapeEntities( d );
					}
	
					d = Math.abs( flo );
	
					var intPart = parseInt( d, 10 );
					var floatPart = precision ?
						decimal+(d - intPart).toFixed( precision ).substring( 2 ):
						'';
	
					return negative + (prefix||'') +
						intPart.toString().replace(
							/\B(?=(\d{3})+(?!\d))/g, thousands
						) +
						floatPart +
						(postfix||'');
				}
			};
		},
	
		text: function () {
			return {
				display: __htmlEscapeEntities
			};
		}
	};
	
	
	/*
	 * This is really a good bit rubbish this method of exposing the internal methods
	 * publicly... - To be fixed in 2.0 using methods on the prototype
	 */
	
	
	/**
	 * Create a wrapper function for exporting an internal functions to an external API.
	 *  @param {string} fn API function name
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#internal
	 */
	function _fnExternApiFunc (fn)
	{
		return function() {
			var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(
				Array.prototype.slice.call(arguments)
			);
			return DataTable.ext.internal[fn].apply( this, args );
		};
	}
	
	
	/**
	 * Reference to internal functions for use by plug-in developers. Note that
	 * these methods are references to internal functions and are considered to be
	 * private. If you use these methods, be aware that they are liable to change
	 * between versions.
	 *  @namespace
	 */
	$.extend( DataTable.ext.internal, {
		_fnExternApiFunc: _fnExternApiFunc,
		_fnBuildAjax: _fnBuildAjax,
		_fnAjaxUpdate: _fnAjaxUpdate,
		_fnAjaxParameters: _fnAjaxParameters,
		_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
		_fnAjaxDataSrc: _fnAjaxDataSrc,
		_fnAddColumn: _fnAddColumn,
		_fnColumnOptions: _fnColumnOptions,
		_fnAdjustColumnSizing: _fnAdjustColumnSizing,
		_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
		_fnColumnIndexToVisible: _fnColumnIndexToVisible,
		_fnVisbleColumns: _fnVisbleColumns,
		_fnGetColumns: _fnGetColumns,
		_fnColumnTypes: _fnColumnTypes,
		_fnApplyColumnDefs: _fnApplyColumnDefs,
		_fnHungarianMap: _fnHungarianMap,
		_fnCamelToHungarian: _fnCamelToHungarian,
		_fnLanguageCompat: _fnLanguageCompat,
		_fnBrowserDetect: _fnBrowserDetect,
		_fnAddData: _fnAddData,
		_fnAddTr: _fnAddTr,
		_fnNodeToDataIndex: _fnNodeToDataIndex,
		_fnNodeToColumnIndex: _fnNodeToColumnIndex,
		_fnGetCellData: _fnGetCellData,
		_fnSetCellData: _fnSetCellData,
		_fnSplitObjNotation: _fnSplitObjNotation,
		_fnGetObjectDataFn: _fnGetObjectDataFn,
		_fnSetObjectDataFn: _fnSetObjectDataFn,
		_fnGetDataMaster: _fnGetDataMaster,
		_fnClearTable: _fnClearTable,
		_fnDeleteIndex: _fnDeleteIndex,
		_fnInvalidate: _fnInvalidate,
		_fnGetRowElements: _fnGetRowElements,
		_fnCreateTr: _fnCreateTr,
		_fnBuildHead: _fnBuildHead,
		_fnDrawHead: _fnDrawHead,
		_fnDraw: _fnDraw,
		_fnReDraw: _fnReDraw,
		_fnAddOptionsHtml: _fnAddOptionsHtml,
		_fnDetectHeader: _fnDetectHeader,
		_fnGetUniqueThs: _fnGetUniqueThs,
		_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
		_fnFilterComplete: _fnFilterComplete,
		_fnFilterCustom: _fnFilterCustom,
		_fnFilterColumn: _fnFilterColumn,
		_fnFilter: _fnFilter,
		_fnFilterCreateSearch: _fnFilterCreateSearch,
		_fnEscapeRegex: _fnEscapeRegex,
		_fnFilterData: _fnFilterData,
		_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
		_fnUpdateInfo: _fnUpdateInfo,
		_fnInfoMacros: _fnInfoMacros,
		_fnInitialise: _fnInitialise,
		_fnInitComplete: _fnInitComplete,
		_fnLengthChange: _fnLengthChange,
		_fnFeatureHtmlLength: _fnFeatureHtmlLength,
		_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
		_fnPageChange: _fnPageChange,
		_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
		_fnProcessingDisplay: _fnProcessingDisplay,
		_fnFeatureHtmlTable: _fnFeatureHtmlTable,
		_fnScrollDraw: _fnScrollDraw,
		_fnApplyToChildren: _fnApplyToChildren,
		_fnCalculateColumnWidths: _fnCalculateColumnWidths,
		_fnThrottle: _fnThrottle,
		_fnConvertToWidth: _fnConvertToWidth,
		_fnGetWidestNode: _fnGetWidestNode,
		_fnGetMaxLenString: _fnGetMaxLenString,
		_fnStringToCss: _fnStringToCss,
		_fnSortFlatten: _fnSortFlatten,
		_fnSort: _fnSort,
		_fnSortAria: _fnSortAria,
		_fnSortListener: _fnSortListener,
		_fnSortAttachListener: _fnSortAttachListener,
		_fnSortingClasses: _fnSortingClasses,
		_fnSortData: _fnSortData,
		_fnSaveState: _fnSaveState,
		_fnLoadState: _fnLoadState,
		_fnSettingsFromNode: _fnSettingsFromNode,
		_fnLog: _fnLog,
		_fnMap: _fnMap,
		_fnBindAction: _fnBindAction,
		_fnCallbackReg: _fnCallbackReg,
		_fnCallbackFire: _fnCallbackFire,
		_fnLengthOverflow: _fnLengthOverflow,
		_fnRenderer: _fnRenderer,
		_fnDataSource: _fnDataSource,
		_fnRowAttributes: _fnRowAttributes,
		_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant
		                                // in 1.10, so this dead-end function is
		                                // added to prevent errors
	} );
	

	// jQuery access
	$.fn.dataTable = DataTable;

	// Provide access to the host jQuery object (circular reference)
	DataTable.$ = $;

	// Legacy aliases
	$.fn.dataTableSettings = DataTable.settings;
	$.fn.dataTableExt = DataTable.ext;

	// With a capital `D` we return a DataTables API instance rather than a
	// jQuery object
	$.fn.DataTable = function ( opts ) {
		return $(this).dataTable( opts ).api();
	};

	// All properties that are available to $.fn.dataTable should also be
	// available on $.fn.DataTable
	$.each( DataTable, function ( prop, val ) {
		$.fn.DataTable[ prop ] = val;
	} );


	// Information about events fired by DataTables - for documentation.
	/**
	 * Draw event, fired whenever the table is redrawn on the page, at the same
	 * point as fnDrawCallback. This may be useful for binding events or
	 * performing calculations when the table is altered at all.
	 *  @name DataTable#draw.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Search event, fired when the searching applied to the table (using the
	 * built-in global search, or column filters) is altered.
	 *  @name DataTable#search.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page change event, fired when the paging of the table is altered.
	 *  @name DataTable#page.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Order event, fired when the ordering applied to the table is altered.
	 *  @name DataTable#order.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * DataTables initialisation complete event, fired when the table is fully
	 * drawn, including Ajax data loaded, if Ajax data is required.
	 *  @name DataTable#init.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The JSON object request from the server - only
	 *    present if client-side Ajax sourced data is used</li></ol>
	 */

	/**
	 * State save event, fired when the table has changed state a new state save
	 * is required. This event allows modification of the state saving object
	 * prior to actually doing the save, including addition or other state
	 * properties (for plug-ins) or modification of a DataTables core property.
	 *  @name DataTable#stateSaveParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The state information to be saved
	 */

	/**
	 * State load event, fired when the table is loading state from the stored
	 * data, but prior to the settings object being modified by the saved state
	 * - allowing modification of the saved state is required or loading of
	 * state for a plug-in.
	 *  @name DataTable#stateLoadParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * State loaded event, fired when state has been loaded from stored data and
	 * the settings object has been modified by the loaded data.
	 *  @name DataTable#stateLoaded.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * Processing event, fired when DataTables is doing some kind of processing
	 * (be it, order, searcg or anything else). It can be used to indicate to
	 * the end user that there is something happening, or that something has
	 * finished.
	 *  @name DataTable#processing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {boolean} bShow Flag for if DataTables is doing processing or not
	 */

	/**
	 * Ajax (XHR) event, fired whenever an Ajax request is completed from a
	 * request to made to the server for new data. This event is called before
	 * DataTables processed the returned data, so it can also be used to pre-
	 * process the data returned from the server, if needed.
	 *
	 * Note that this trigger is called in `fnServerData`, if you override
	 * `fnServerData` and which to use this event, you need to trigger it in you
	 * success function.
	 *  @name DataTable#xhr.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {object} json JSON returned from the server
	 *
	 *  @example
	 *     // Use a custom property returned from the server in another DOM element
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       $('#status').html( json.status );
	 *     } );
	 *
	 *  @example
	 *     // Pre-process the data returned from the server
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {
	 *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;
	 *       }
	 *       // Note no return - manipulate the data directly in the JSON object.
	 *     } );
	 */

	/**
	 * Destroy event, fired when the DataTable is destroyed by calling fnDestroy
	 * or passing the bDestroy:true parameter in the initialisation object. This
	 * can be used to remove bound events, added DOM nodes, etc.
	 *  @name DataTable#destroy.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page length change event, fired when number of records to show on each
	 * page (the length) is changed.
	 *  @name DataTable#length.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {integer} len New length
	 */

	/**
	 * Column sizing has changed.
	 *  @name DataTable#column-sizing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Column visibility has changed.
	 *  @name DataTable#column-visibility.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {int} column Column index
	 *  @param {bool} vis `false` if column now hidden, or `true` if visible
	 */

	return $.fn.dataTable;
}));
/*!
 DataTables 1.10.12
 ©2008-2015 SpryMedia Ltd - datatables.net/license
*/

(function(h){"function"===typeof define&&define.amd?define(["jquery"],function(D){return h(D,window,document)}):"object"===typeof exports?module.exports=function(D,I){D||(D=window);I||(I="undefined"!==typeof window?require("jquery"):require("jquery")(D));return h(I,D,D.document)}:h(jQuery,window,document)})(function(h,D,I,k){function X(a){var b,c,d={};h.each(a,function(e){if((b=e.match(/^([^A-Z]+?)([A-Z])/))&&-1!=="a aa ai ao as b fn i m o s ".indexOf(b[1]+" "))c=e.replace(b[0],b[2].toLowerCase()),
d[c]=e,"o"===b[1]&&X(a[e])});a._hungarianMap=d}function K(a,b,c){a._hungarianMap||X(a);var d;h.each(b,function(e){d=a._hungarianMap[e];if(d!==k&&(c||b[d]===k))"o"===d.charAt(0)?(b[d]||(b[d]={}),h.extend(!0,b[d],b[e]),K(a[d],b[d],c)):b[d]=b[e]})}function Da(a){var b=m.defaults.oLanguage,c=a.sZeroRecords;!a.sEmptyTable&&(c&&"No data available in table"===b.sEmptyTable)&&E(a,a,"sZeroRecords","sEmptyTable");!a.sLoadingRecords&&(c&&"Loading..."===b.sLoadingRecords)&&E(a,a,"sZeroRecords","sLoadingRecords");
a.sInfoThousands&&(a.sThousands=a.sInfoThousands);(a=a.sDecimal)&&db(a)}function eb(a){A(a,"ordering","bSort");A(a,"orderMulti","bSortMulti");A(a,"orderClasses","bSortClasses");A(a,"orderCellsTop","bSortCellsTop");A(a,"order","aaSorting");A(a,"orderFixed","aaSortingFixed");A(a,"paging","bPaginate");A(a,"pagingType","sPaginationType");A(a,"pageLength","iDisplayLength");A(a,"searching","bFilter");"boolean"===typeof a.sScrollX&&(a.sScrollX=a.sScrollX?"100%":"");"boolean"===typeof a.scrollX&&(a.scrollX=
a.scrollX?"100%":"");if(a=a.aoSearchCols)for(var b=0,c=a.length;b<c;b++)a[b]&&K(m.models.oSearch,a[b])}function fb(a){A(a,"orderable","bSortable");A(a,"orderData","aDataSort");A(a,"orderSequence","asSorting");A(a,"orderDataType","sortDataType");var b=a.aDataSort;b&&!h.isArray(b)&&(a.aDataSort=[b])}function gb(a){if(!m.__browser){var b={};m.__browser=b;var c=h("<div/>").css({position:"fixed",top:0,left:0,height:1,width:1,overflow:"hidden"}).append(h("<div/>").css({position:"absolute",top:1,left:1,
width:100,overflow:"scroll"}).append(h("<div/>").css({width:"100%",height:10}))).appendTo("body"),d=c.children(),e=d.children();b.barWidth=d[0].offsetWidth-d[0].clientWidth;b.bScrollOversize=100===e[0].offsetWidth&&100!==d[0].clientWidth;b.bScrollbarLeft=1!==Math.round(e.offset().left);b.bBounding=c[0].getBoundingClientRect().width?!0:!1;c.remove()}h.extend(a.oBrowser,m.__browser);a.oScroll.iBarWidth=m.__browser.barWidth}function hb(a,b,c,d,e,f){var g,j=!1;c!==k&&(g=c,j=!0);for(;d!==e;)a.hasOwnProperty(d)&&
(g=j?b(g,a[d],d,a):a[d],j=!0,d+=f);return g}function Ea(a,b){var c=m.defaults.column,d=a.aoColumns.length,c=h.extend({},m.models.oColumn,c,{nTh:b?b:I.createElement("th"),sTitle:c.sTitle?c.sTitle:b?b.innerHTML:"",aDataSort:c.aDataSort?c.aDataSort:[d],mData:c.mData?c.mData:d,idx:d});a.aoColumns.push(c);c=a.aoPreSearchCols;c[d]=h.extend({},m.models.oSearch,c[d]);ja(a,d,h(b).data())}function ja(a,b,c){var b=a.aoColumns[b],d=a.oClasses,e=h(b.nTh);if(!b.sWidthOrig){b.sWidthOrig=e.attr("width")||null;var f=
(e.attr("style")||"").match(/width:\s*(\d+[pxem%]+)/);f&&(b.sWidthOrig=f[1])}c!==k&&null!==c&&(fb(c),K(m.defaults.column,c),c.mDataProp!==k&&!c.mData&&(c.mData=c.mDataProp),c.sType&&(b._sManualType=c.sType),c.className&&!c.sClass&&(c.sClass=c.className),h.extend(b,c),E(b,c,"sWidth","sWidthOrig"),c.iDataSort!==k&&(b.aDataSort=[c.iDataSort]),E(b,c,"aDataSort"));var g=b.mData,j=Q(g),i=b.mRender?Q(b.mRender):null,c=function(a){return"string"===typeof a&&-1!==a.indexOf("@")};b._bAttrSrc=h.isPlainObject(g)&&
(c(g.sort)||c(g.type)||c(g.filter));b._setter=null;b.fnGetData=function(a,b,c){var d=j(a,b,k,c);return i&&b?i(d,b,a,c):d};b.fnSetData=function(a,b,c){return R(g)(a,b,c)};"number"!==typeof g&&(a._rowReadObject=!0);a.oFeatures.bSort||(b.bSortable=!1,e.addClass(d.sSortableNone));a=-1!==h.inArray("asc",b.asSorting);c=-1!==h.inArray("desc",b.asSorting);!b.bSortable||!a&&!c?(b.sSortingClass=d.sSortableNone,b.sSortingClassJUI=""):a&&!c?(b.sSortingClass=d.sSortableAsc,b.sSortingClassJUI=d.sSortJUIAscAllowed):
!a&&c?(b.sSortingClass=d.sSortableDesc,b.sSortingClassJUI=d.sSortJUIDescAllowed):(b.sSortingClass=d.sSortable,b.sSortingClassJUI=d.sSortJUI)}function Y(a){if(!1!==a.oFeatures.bAutoWidth){var b=a.aoColumns;Fa(a);for(var c=0,d=b.length;c<d;c++)b[c].nTh.style.width=b[c].sWidth}b=a.oScroll;(""!==b.sY||""!==b.sX)&&ka(a);u(a,null,"column-sizing",[a])}function Z(a,b){var c=la(a,"bVisible");return"number"===typeof c[b]?c[b]:null}function $(a,b){var c=la(a,"bVisible"),c=h.inArray(b,c);return-1!==c?c:null}
function aa(a){var b=0;h.each(a.aoColumns,function(a,d){d.bVisible&&"none"!==h(d.nTh).css("display")&&b++});return b}function la(a,b){var c=[];h.map(a.aoColumns,function(a,e){a[b]&&c.push(e)});return c}function Ga(a){var b=a.aoColumns,c=a.aoData,d=m.ext.type.detect,e,f,g,j,i,h,l,q,t;e=0;for(f=b.length;e<f;e++)if(l=b[e],t=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){g=0;for(j=d.length;g<j;g++){i=0;for(h=c.length;i<h;i++){t[i]===k&&(t[i]=B(a,i,e,"type"));q=d[g](t[i],a);if(!q&&
g!==d.length-1)break;if("html"===q)break}if(q){l.sType=q;break}}l.sType||(l.sType="string")}}function ib(a,b,c,d){var e,f,g,j,i,n,l=a.aoColumns;if(b)for(e=b.length-1;0<=e;e--){n=b[e];var q=n.targets!==k?n.targets:n.aTargets;h.isArray(q)||(q=[q]);f=0;for(g=q.length;f<g;f++)if("number"===typeof q[f]&&0<=q[f]){for(;l.length<=q[f];)Ea(a);d(q[f],n)}else if("number"===typeof q[f]&&0>q[f])d(l.length+q[f],n);else if("string"===typeof q[f]){j=0;for(i=l.length;j<i;j++)("_all"==q[f]||h(l[j].nTh).hasClass(q[f]))&&
d(j,n)}}if(c){e=0;for(a=c.length;e<a;e++)d(e,c[e])}}function N(a,b,c,d){var e=a.aoData.length,f=h.extend(!0,{},m.models.oRow,{src:c?"dom":"data",idx:e});f._aData=b;a.aoData.push(f);for(var g=a.aoColumns,j=0,i=g.length;j<i;j++)g[j].sType=null;a.aiDisplayMaster.push(e);b=a.rowIdFn(b);b!==k&&(a.aIds[b]=f);(c||!a.oFeatures.bDeferRender)&&Ha(a,e,c,d);return e}function ma(a,b){var c;b instanceof h||(b=h(b));return b.map(function(b,e){c=Ia(a,e);return N(a,c.data,e,c.cells)})}function B(a,b,c,d){var e=a.iDraw,
f=a.aoColumns[c],g=a.aoData[b]._aData,j=f.sDefaultContent,i=f.fnGetData(g,d,{settings:a,row:b,col:c});if(i===k)return a.iDrawError!=e&&null===j&&(L(a,0,"Requested unknown parameter "+("function"==typeof f.mData?"{function}":"'"+f.mData+"'")+" for row "+b+", column "+c,4),a.iDrawError=e),j;if((i===g||null===i)&&null!==j&&d!==k)i=j;else if("function"===typeof i)return i.call(g);return null===i&&"display"==d?"":i}function jb(a,b,c,d){a.aoColumns[c].fnSetData(a.aoData[b]._aData,d,{settings:a,row:b,col:c})}
function Ja(a){return h.map(a.match(/(\\.|[^\.])+/g)||[""],function(a){return a.replace(/\\./g,".")})}function Q(a){if(h.isPlainObject(a)){var b={};h.each(a,function(a,c){c&&(b[a]=Q(c))});return function(a,c,f,g){var j=b[c]||b._;return j!==k?j(a,c,f,g):a}}if(null===a)return function(a){return a};if("function"===typeof a)return function(b,c,f,g){return a(b,c,f,g)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var c=function(a,b,f){var g,j;if(""!==f){j=Ja(f);
for(var i=0,n=j.length;i<n;i++){f=j[i].match(ba);g=j[i].match(U);if(f){j[i]=j[i].replace(ba,"");""!==j[i]&&(a=a[j[i]]);g=[];j.splice(0,i+1);j=j.join(".");if(h.isArray(a)){i=0;for(n=a.length;i<n;i++)g.push(c(a[i],b,j))}a=f[0].substring(1,f[0].length-1);a=""===a?g:g.join(a);break}else if(g){j[i]=j[i].replace(U,"");a=a[j[i]]();continue}if(null===a||a[j[i]]===k)return k;a=a[j[i]]}}return a};return function(b,e){return c(b,e,a)}}return function(b){return b[a]}}function R(a){if(h.isPlainObject(a))return R(a._);
if(null===a)return function(){};if("function"===typeof a)return function(b,d,e){a(b,"set",d,e)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var b=function(a,d,e){var e=Ja(e),f;f=e[e.length-1];for(var g,j,i=0,n=e.length-1;i<n;i++){g=e[i].match(ba);j=e[i].match(U);if(g){e[i]=e[i].replace(ba,"");a[e[i]]=[];f=e.slice();f.splice(0,i+1);g=f.join(".");if(h.isArray(d)){j=0;for(n=d.length;j<n;j++)f={},b(f,d[j],g),a[e[i]].push(f)}else a[e[i]]=d;return}j&&(e[i]=e[i].replace(U,
""),a=a[e[i]](d));if(null===a[e[i]]||a[e[i]]===k)a[e[i]]={};a=a[e[i]]}if(f.match(U))a[f.replace(U,"")](d);else a[f.replace(ba,"")]=d};return function(c,d){return b(c,d,a)}}return function(b,d){b[a]=d}}function Ka(a){return G(a.aoData,"_aData")}function na(a){a.aoData.length=0;a.aiDisplayMaster.length=0;a.aiDisplay.length=0;a.aIds={}}function oa(a,b,c){for(var d=-1,e=0,f=a.length;e<f;e++)a[e]==b?d=e:a[e]>b&&a[e]--; -1!=d&&c===k&&a.splice(d,1)}function ca(a,b,c,d){var e=a.aoData[b],f,g=function(c,d){for(;c.childNodes.length;)c.removeChild(c.firstChild);
c.innerHTML=B(a,b,d,"display")};if("dom"===c||(!c||"auto"===c)&&"dom"===e.src)e._aData=Ia(a,e,d,d===k?k:e._aData).data;else{var j=e.anCells;if(j)if(d!==k)g(j[d],d);else{c=0;for(f=j.length;c<f;c++)g(j[c],c)}}e._aSortData=null;e._aFilterData=null;g=a.aoColumns;if(d!==k)g[d].sType=null;else{c=0;for(f=g.length;c<f;c++)g[c].sType=null;La(a,e)}}function Ia(a,b,c,d){var e=[],f=b.firstChild,g,j,i=0,n,l=a.aoColumns,q=a._rowReadObject,d=d!==k?d:q?{}:[],t=function(a,b){if("string"===typeof a){var c=a.indexOf("@");
-1!==c&&(c=a.substring(c+1),R(a)(d,b.getAttribute(c)))}},S=function(a){if(c===k||c===i)j=l[i],n=h.trim(a.innerHTML),j&&j._bAttrSrc?(R(j.mData._)(d,n),t(j.mData.sort,a),t(j.mData.type,a),t(j.mData.filter,a)):q?(j._setter||(j._setter=R(j.mData)),j._setter(d,n)):d[i]=n;i++};if(f)for(;f;){g=f.nodeName.toUpperCase();if("TD"==g||"TH"==g)S(f),e.push(f);f=f.nextSibling}else{e=b.anCells;f=0;for(g=e.length;f<g;f++)S(e[f])}if(b=b.firstChild?b:b.nTr)(b=b.getAttribute("id"))&&R(a.rowId)(d,b);return{data:d,cells:e}}
function Ha(a,b,c,d){var e=a.aoData[b],f=e._aData,g=[],j,i,n,l,q;if(null===e.nTr){j=c||I.createElement("tr");e.nTr=j;e.anCells=g;j._DT_RowIndex=b;La(a,e);l=0;for(q=a.aoColumns.length;l<q;l++){n=a.aoColumns[l];i=c?d[l]:I.createElement(n.sCellType);i._DT_CellIndex={row:b,column:l};g.push(i);if((!c||n.mRender||n.mData!==l)&&(!h.isPlainObject(n.mData)||n.mData._!==l+".display"))i.innerHTML=B(a,b,l,"display");n.sClass&&(i.className+=" "+n.sClass);n.bVisible&&!c?j.appendChild(i):!n.bVisible&&c&&i.parentNode.removeChild(i);
n.fnCreatedCell&&n.fnCreatedCell.call(a.oInstance,i,B(a,b,l),f,b,l)}u(a,"aoRowCreatedCallback",null,[j,f,b])}e.nTr.setAttribute("role","row")}function La(a,b){var c=b.nTr,d=b._aData;if(c){var e=a.rowIdFn(d);e&&(c.id=e);d.DT_RowClass&&(e=d.DT_RowClass.split(" "),b.__rowc=b.__rowc?pa(b.__rowc.concat(e)):e,h(c).removeClass(b.__rowc.join(" ")).addClass(d.DT_RowClass));d.DT_RowAttr&&h(c).attr(d.DT_RowAttr);d.DT_RowData&&h(c).data(d.DT_RowData)}}function kb(a){var b,c,d,e,f,g=a.nTHead,j=a.nTFoot,i=0===
h("th, td",g).length,n=a.oClasses,l=a.aoColumns;i&&(e=h("<tr/>").appendTo(g));b=0;for(c=l.length;b<c;b++)f=l[b],d=h(f.nTh).addClass(f.sClass),i&&d.appendTo(e),a.oFeatures.bSort&&(d.addClass(f.sSortingClass),!1!==f.bSortable&&(d.attr("tabindex",a.iTabIndex).attr("aria-controls",a.sTableId),Ma(a,f.nTh,b))),f.sTitle!=d[0].innerHTML&&d.html(f.sTitle),Na(a,"header")(a,d,f,n);i&&da(a.aoHeader,g);h(g).find(">tr").attr("role","row");h(g).find(">tr>th, >tr>td").addClass(n.sHeaderTH);h(j).find(">tr>th, >tr>td").addClass(n.sFooterTH);
if(null!==j){a=a.aoFooter[0];b=0;for(c=a.length;b<c;b++)f=l[b],f.nTf=a[b].cell,f.sClass&&h(f.nTf).addClass(f.sClass)}}function ea(a,b,c){var d,e,f,g=[],j=[],i=a.aoColumns.length,n;if(b){c===k&&(c=!1);d=0;for(e=b.length;d<e;d++){g[d]=b[d].slice();g[d].nTr=b[d].nTr;for(f=i-1;0<=f;f--)!a.aoColumns[f].bVisible&&!c&&g[d].splice(f,1);j.push([])}d=0;for(e=g.length;d<e;d++){if(a=g[d].nTr)for(;f=a.firstChild;)a.removeChild(f);f=0;for(b=g[d].length;f<b;f++)if(n=i=1,j[d][f]===k){a.appendChild(g[d][f].cell);
for(j[d][f]=1;g[d+i]!==k&&g[d][f].cell==g[d+i][f].cell;)j[d+i][f]=1,i++;for(;g[d][f+n]!==k&&g[d][f].cell==g[d][f+n].cell;){for(c=0;c<i;c++)j[d+c][f+n]=1;n++}h(g[d][f].cell).attr("rowspan",i).attr("colspan",n)}}}}function O(a){var b=u(a,"aoPreDrawCallback","preDraw",[a]);if(-1!==h.inArray(!1,b))C(a,!1);else{var b=[],c=0,d=a.asStripeClasses,e=d.length,f=a.oLanguage,g=a.iInitDisplayStart,j="ssp"==y(a),i=a.aiDisplay;a.bDrawing=!0;g!==k&&-1!==g&&(a._iDisplayStart=j?g:g>=a.fnRecordsDisplay()?0:g,a.iInitDisplayStart=
-1);var g=a._iDisplayStart,n=a.fnDisplayEnd();if(a.bDeferLoading)a.bDeferLoading=!1,a.iDraw++,C(a,!1);else if(j){if(!a.bDestroying&&!lb(a))return}else a.iDraw++;if(0!==i.length){f=j?a.aoData.length:n;for(j=j?0:g;j<f;j++){var l=i[j],q=a.aoData[l];null===q.nTr&&Ha(a,l);l=q.nTr;if(0!==e){var t=d[c%e];q._sRowStripe!=t&&(h(l).removeClass(q._sRowStripe).addClass(t),q._sRowStripe=t)}u(a,"aoRowCallback",null,[l,q._aData,c,j]);b.push(l);c++}}else c=f.sZeroRecords,1==a.iDraw&&"ajax"==y(a)?c=f.sLoadingRecords:
f.sEmptyTable&&0===a.fnRecordsTotal()&&(c=f.sEmptyTable),b[0]=h("<tr/>",{"class":e?d[0]:""}).append(h("<td />",{valign:"top",colSpan:aa(a),"class":a.oClasses.sRowEmpty}).html(c))[0];u(a,"aoHeaderCallback","header",[h(a.nTHead).children("tr")[0],Ka(a),g,n,i]);u(a,"aoFooterCallback","footer",[h(a.nTFoot).children("tr")[0],Ka(a),g,n,i]);d=h(a.nTBody);d.children().detach();d.append(h(b));u(a,"aoDrawCallback","draw",[a]);a.bSorted=!1;a.bFiltered=!1;a.bDrawing=!1}}function T(a,b){var c=a.oFeatures,d=c.bFilter;
c.bSort&&mb(a);d?fa(a,a.oPreviousSearch):a.aiDisplay=a.aiDisplayMaster.slice();!0!==b&&(a._iDisplayStart=0);a._drawHold=b;O(a);a._drawHold=!1}function nb(a){var b=a.oClasses,c=h(a.nTable),c=h("<div/>").insertBefore(c),d=a.oFeatures,e=h("<div/>",{id:a.sTableId+"_wrapper","class":b.sWrapper+(a.nTFoot?"":" "+b.sNoFooter)});a.nHolding=c[0];a.nTableWrapper=e[0];a.nTableReinsertBefore=a.nTable.nextSibling;for(var f=a.sDom.split(""),g,j,i,n,l,q,t=0;t<f.length;t++){g=null;j=f[t];if("<"==j){i=h("<div/>")[0];
n=f[t+1];if("'"==n||'"'==n){l="";for(q=2;f[t+q]!=n;)l+=f[t+q],q++;"H"==l?l=b.sJUIHeader:"F"==l&&(l=b.sJUIFooter);-1!=l.indexOf(".")?(n=l.split("."),i.id=n[0].substr(1,n[0].length-1),i.className=n[1]):"#"==l.charAt(0)?i.id=l.substr(1,l.length-1):i.className=l;t+=q}e.append(i);e=h(i)}else if(">"==j)e=e.parent();else if("l"==j&&d.bPaginate&&d.bLengthChange)g=ob(a);else if("f"==j&&d.bFilter)g=pb(a);else if("r"==j&&d.bProcessing)g=qb(a);else if("t"==j)g=rb(a);else if("i"==j&&d.bInfo)g=sb(a);else if("p"==
j&&d.bPaginate)g=tb(a);else if(0!==m.ext.feature.length){i=m.ext.feature;q=0;for(n=i.length;q<n;q++)if(j==i[q].cFeature){g=i[q].fnInit(a);break}}g&&(i=a.aanFeatures,i[j]||(i[j]=[]),i[j].push(g),e.append(g))}c.replaceWith(e);a.nHolding=null}function da(a,b){var c=h(b).children("tr"),d,e,f,g,j,i,n,l,q,t;a.splice(0,a.length);f=0;for(i=c.length;f<i;f++)a.push([]);f=0;for(i=c.length;f<i;f++){d=c[f];for(e=d.firstChild;e;){if("TD"==e.nodeName.toUpperCase()||"TH"==e.nodeName.toUpperCase()){l=1*e.getAttribute("colspan");
q=1*e.getAttribute("rowspan");l=!l||0===l||1===l?1:l;q=!q||0===q||1===q?1:q;g=0;for(j=a[f];j[g];)g++;n=g;t=1===l?!0:!1;for(j=0;j<l;j++)for(g=0;g<q;g++)a[f+g][n+j]={cell:e,unique:t},a[f+g].nTr=d}e=e.nextSibling}}}function qa(a,b,c){var d=[];c||(c=a.aoHeader,b&&(c=[],da(c,b)));for(var b=0,e=c.length;b<e;b++)for(var f=0,g=c[b].length;f<g;f++)if(c[b][f].unique&&(!d[f]||!a.bSortCellsTop))d[f]=c[b][f].cell;return d}function ra(a,b,c){u(a,"aoServerParams","serverParams",[b]);if(b&&h.isArray(b)){var d={},
e=/(.*?)\[\]$/;h.each(b,function(a,b){var c=b.name.match(e);c?(c=c[0],d[c]||(d[c]=[]),d[c].push(b.value)):d[b.name]=b.value});b=d}var f,g=a.ajax,j=a.oInstance,i=function(b){u(a,null,"xhr",[a,b,a.jqXHR]);c(b)};if(h.isPlainObject(g)&&g.data){f=g.data;var n=h.isFunction(f)?f(b,a):f,b=h.isFunction(f)&&n?n:h.extend(!0,b,n);delete g.data}n={data:b,success:function(b){var c=b.error||b.sError;c&&L(a,0,c);a.json=b;i(b)},dataType:"json",cache:!1,type:a.sServerMethod,error:function(b,c){var d=u(a,null,"xhr",
[a,null,a.jqXHR]);-1===h.inArray(!0,d)&&("parsererror"==c?L(a,0,"Invalid JSON response",1):4===b.readyState&&L(a,0,"Ajax error",7));C(a,!1)}};a.oAjaxData=b;u(a,null,"preXhr",[a,b]);a.fnServerData?a.fnServerData.call(j,a.sAjaxSource,h.map(b,function(a,b){return{name:b,value:a}}),i,a):a.sAjaxSource||"string"===typeof g?a.jqXHR=h.ajax(h.extend(n,{url:g||a.sAjaxSource})):h.isFunction(g)?a.jqXHR=g.call(j,b,i,a):(a.jqXHR=h.ajax(h.extend(n,g)),g.data=f)}function lb(a){return a.bAjaxDataGet?(a.iDraw++,C(a,
!0),ra(a,ub(a),function(b){vb(a,b)}),!1):!0}function ub(a){var b=a.aoColumns,c=b.length,d=a.oFeatures,e=a.oPreviousSearch,f=a.aoPreSearchCols,g,j=[],i,n,l,q=V(a);g=a._iDisplayStart;i=!1!==d.bPaginate?a._iDisplayLength:-1;var k=function(a,b){j.push({name:a,value:b})};k("sEcho",a.iDraw);k("iColumns",c);k("sColumns",G(b,"sName").join(","));k("iDisplayStart",g);k("iDisplayLength",i);var S={draw:a.iDraw,columns:[],order:[],start:g,length:i,search:{value:e.sSearch,regex:e.bRegex}};for(g=0;g<c;g++)n=b[g],
l=f[g],i="function"==typeof n.mData?"function":n.mData,S.columns.push({data:i,name:n.sName,searchable:n.bSearchable,orderable:n.bSortable,search:{value:l.sSearch,regex:l.bRegex}}),k("mDataProp_"+g,i),d.bFilter&&(k("sSearch_"+g,l.sSearch),k("bRegex_"+g,l.bRegex),k("bSearchable_"+g,n.bSearchable)),d.bSort&&k("bSortable_"+g,n.bSortable);d.bFilter&&(k("sSearch",e.sSearch),k("bRegex",e.bRegex));d.bSort&&(h.each(q,function(a,b){S.order.push({column:b.col,dir:b.dir});k("iSortCol_"+a,b.col);k("sSortDir_"+
a,b.dir)}),k("iSortingCols",q.length));b=m.ext.legacy.ajax;return null===b?a.sAjaxSource?j:S:b?j:S}function vb(a,b){var c=sa(a,b),d=b.sEcho!==k?b.sEcho:b.draw,e=b.iTotalRecords!==k?b.iTotalRecords:b.recordsTotal,f=b.iTotalDisplayRecords!==k?b.iTotalDisplayRecords:b.recordsFiltered;if(d){if(1*d<a.iDraw)return;a.iDraw=1*d}na(a);a._iRecordsTotal=parseInt(e,10);a._iRecordsDisplay=parseInt(f,10);d=0;for(e=c.length;d<e;d++)N(a,c[d]);a.aiDisplay=a.aiDisplayMaster.slice();a.bAjaxDataGet=!1;O(a);a._bInitComplete||
ta(a,b);a.bAjaxDataGet=!0;C(a,!1)}function sa(a,b){var c=h.isPlainObject(a.ajax)&&a.ajax.dataSrc!==k?a.ajax.dataSrc:a.sAjaxDataProp;return"data"===c?b.aaData||b[c]:""!==c?Q(c)(b):b}function pb(a){var b=a.oClasses,c=a.sTableId,d=a.oLanguage,e=a.oPreviousSearch,f=a.aanFeatures,g='<input type="search" class="'+b.sFilterInput+'"/>',j=d.sSearch,j=j.match(/_INPUT_/)?j.replace("_INPUT_",g):j+g,b=h("<div/>",{id:!f.f?c+"_filter":null,"class":b.sFilter}).append(h("<label/>").append(j)),f=function(){var b=!this.value?
"":this.value;b!=e.sSearch&&(fa(a,{sSearch:b,bRegex:e.bRegex,bSmart:e.bSmart,bCaseInsensitive:e.bCaseInsensitive}),a._iDisplayStart=0,O(a))},g=null!==a.searchDelay?a.searchDelay:"ssp"===y(a)?400:0,i=h("input",b).val(e.sSearch).attr("placeholder",d.sSearchPlaceholder).bind("keyup.DT search.DT input.DT paste.DT cut.DT",g?Oa(f,g):f).bind("keypress.DT",function(a){if(13==a.keyCode)return!1}).attr("aria-controls",c);h(a.nTable).on("search.dt.DT",function(b,c){if(a===c)try{i[0]!==I.activeElement&&i.val(e.sSearch)}catch(d){}});
return b[0]}function fa(a,b,c){var d=a.oPreviousSearch,e=a.aoPreSearchCols,f=function(a){d.sSearch=a.sSearch;d.bRegex=a.bRegex;d.bSmart=a.bSmart;d.bCaseInsensitive=a.bCaseInsensitive};Ga(a);if("ssp"!=y(a)){wb(a,b.sSearch,c,b.bEscapeRegex!==k?!b.bEscapeRegex:b.bRegex,b.bSmart,b.bCaseInsensitive);f(b);for(b=0;b<e.length;b++)xb(a,e[b].sSearch,b,e[b].bEscapeRegex!==k?!e[b].bEscapeRegex:e[b].bRegex,e[b].bSmart,e[b].bCaseInsensitive);yb(a)}else f(b);a.bFiltered=!0;u(a,null,"search",[a])}function yb(a){for(var b=
m.ext.search,c=a.aiDisplay,d,e,f=0,g=b.length;f<g;f++){for(var j=[],i=0,n=c.length;i<n;i++)e=c[i],d=a.aoData[e],b[f](a,d._aFilterData,e,d._aData,i)&&j.push(e);c.length=0;h.merge(c,j)}}function xb(a,b,c,d,e,f){if(""!==b)for(var g=a.aiDisplay,d=Pa(b,d,e,f),e=g.length-1;0<=e;e--)b=a.aoData[g[e]]._aFilterData[c],d.test(b)||g.splice(e,1)}function wb(a,b,c,d,e,f){var d=Pa(b,d,e,f),e=a.oPreviousSearch.sSearch,f=a.aiDisplayMaster,g;0!==m.ext.search.length&&(c=!0);g=zb(a);if(0>=b.length)a.aiDisplay=f.slice();
else{if(g||c||e.length>b.length||0!==b.indexOf(e)||a.bSorted)a.aiDisplay=f.slice();b=a.aiDisplay;for(c=b.length-1;0<=c;c--)d.test(a.aoData[b[c]]._sFilterRow)||b.splice(c,1)}}function Pa(a,b,c,d){a=b?a:Qa(a);c&&(a="^(?=.*?"+h.map(a.match(/"[^"]+"|[^ ]+/g)||[""],function(a){if('"'===a.charAt(0))var b=a.match(/^"(.*)"$/),a=b?b[1]:a;return a.replace('"',"")}).join(")(?=.*?")+").*$");return RegExp(a,d?"i":"")}function zb(a){var b=a.aoColumns,c,d,e,f,g,j,i,h,l=m.ext.type.search;c=!1;d=0;for(f=a.aoData.length;d<
f;d++)if(h=a.aoData[d],!h._aFilterData){j=[];e=0;for(g=b.length;e<g;e++)c=b[e],c.bSearchable?(i=B(a,d,e,"filter"),l[c.sType]&&(i=l[c.sType](i)),null===i&&(i=""),"string"!==typeof i&&i.toString&&(i=i.toString())):i="",i.indexOf&&-1!==i.indexOf("&")&&(ua.innerHTML=i,i=Zb?ua.textContent:ua.innerText),i.replace&&(i=i.replace(/[\r\n]/g,"")),j.push(i);h._aFilterData=j;h._sFilterRow=j.join("  ");c=!0}return c}function Ab(a){return{search:a.sSearch,smart:a.bSmart,regex:a.bRegex,caseInsensitive:a.bCaseInsensitive}}
function Bb(a){return{sSearch:a.search,bSmart:a.smart,bRegex:a.regex,bCaseInsensitive:a.caseInsensitive}}function sb(a){var b=a.sTableId,c=a.aanFeatures.i,d=h("<div/>",{"class":a.oClasses.sInfo,id:!c?b+"_info":null});c||(a.aoDrawCallback.push({fn:Cb,sName:"information"}),d.attr("role","status").attr("aria-live","polite"),h(a.nTable).attr("aria-describedby",b+"_info"));return d[0]}function Cb(a){var b=a.aanFeatures.i;if(0!==b.length){var c=a.oLanguage,d=a._iDisplayStart+1,e=a.fnDisplayEnd(),f=a.fnRecordsTotal(),
g=a.fnRecordsDisplay(),j=g?c.sInfo:c.sInfoEmpty;g!==f&&(j+=" "+c.sInfoFiltered);j+=c.sInfoPostFix;j=Db(a,j);c=c.fnInfoCallback;null!==c&&(j=c.call(a.oInstance,a,d,e,f,g,j));h(b).html(j)}}function Db(a,b){var c=a.fnFormatNumber,d=a._iDisplayStart+1,e=a._iDisplayLength,f=a.fnRecordsDisplay(),g=-1===e;return b.replace(/_START_/g,c.call(a,d)).replace(/_END_/g,c.call(a,a.fnDisplayEnd())).replace(/_MAX_/g,c.call(a,a.fnRecordsTotal())).replace(/_TOTAL_/g,c.call(a,f)).replace(/_PAGE_/g,c.call(a,g?1:Math.ceil(d/
e))).replace(/_PAGES_/g,c.call(a,g?1:Math.ceil(f/e)))}function ga(a){var b,c,d=a.iInitDisplayStart,e=a.aoColumns,f;c=a.oFeatures;var g=a.bDeferLoading;if(a.bInitialised){nb(a);kb(a);ea(a,a.aoHeader);ea(a,a.aoFooter);C(a,!0);c.bAutoWidth&&Fa(a);b=0;for(c=e.length;b<c;b++)f=e[b],f.sWidth&&(f.nTh.style.width=x(f.sWidth));u(a,null,"preInit",[a]);T(a);e=y(a);if("ssp"!=e||g)"ajax"==e?ra(a,[],function(c){var f=sa(a,c);for(b=0;b<f.length;b++)N(a,f[b]);a.iInitDisplayStart=d;T(a);C(a,!1);ta(a,c)},a):(C(a,!1),
ta(a))}else setTimeout(function(){ga(a)},200)}function ta(a,b){a._bInitComplete=!0;(b||a.oInit.aaData)&&Y(a);u(a,null,"plugin-init",[a,b]);u(a,"aoInitComplete","init",[a,b])}function Ra(a,b){var c=parseInt(b,10);a._iDisplayLength=c;Sa(a);u(a,null,"length",[a,c])}function ob(a){for(var b=a.oClasses,c=a.sTableId,d=a.aLengthMenu,e=h.isArray(d[0]),f=e?d[0]:d,d=e?d[1]:d,e=h("<select/>",{name:c+"_length","aria-controls":c,"class":b.sLengthSelect}),g=0,j=f.length;g<j;g++)e[0][g]=new Option(d[g],f[g]);var i=
h("<div><label/></div>").addClass(b.sLength);a.aanFeatures.l||(i[0].id=c+"_length");i.children().append(a.oLanguage.sLengthMenu.replace("_MENU_",e[0].outerHTML));h("select",i).val(a._iDisplayLength).bind("change.DT",function(){Ra(a,h(this).val());O(a)});h(a.nTable).bind("length.dt.DT",function(b,c,d){a===c&&h("select",i).val(d)});return i[0]}function tb(a){var b=a.sPaginationType,c=m.ext.pager[b],d="function"===typeof c,e=function(a){O(a)},b=h("<div/>").addClass(a.oClasses.sPaging+b)[0],f=a.aanFeatures;
d||c.fnInit(a,b,e);f.p||(b.id=a.sTableId+"_paginate",a.aoDrawCallback.push({fn:function(a){if(d){var b=a._iDisplayStart,i=a._iDisplayLength,h=a.fnRecordsDisplay(),l=-1===i,b=l?0:Math.ceil(b/i),i=l?1:Math.ceil(h/i),h=c(b,i),k,l=0;for(k=f.p.length;l<k;l++)Na(a,"pageButton")(a,f.p[l],l,h,b,i)}else c.fnUpdate(a,e)},sName:"pagination"}));return b}function Ta(a,b,c){var d=a._iDisplayStart,e=a._iDisplayLength,f=a.fnRecordsDisplay();0===f||-1===e?d=0:"number"===typeof b?(d=b*e,d>f&&(d=0)):"first"==b?d=0:
"previous"==b?(d=0<=e?d-e:0,0>d&&(d=0)):"next"==b?d+e<f&&(d+=e):"last"==b?d=Math.floor((f-1)/e)*e:L(a,0,"Unknown paging action: "+b,5);b=a._iDisplayStart!==d;a._iDisplayStart=d;b&&(u(a,null,"page",[a]),c&&O(a));return b}function qb(a){return h("<div/>",{id:!a.aanFeatures.r?a.sTableId+"_processing":null,"class":a.oClasses.sProcessing}).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]}function C(a,b){a.oFeatures.bProcessing&&h(a.aanFeatures.r).css("display",b?"block":"none");u(a,null,"processing",
[a,b])}function rb(a){var b=h(a.nTable);b.attr("role","grid");var c=a.oScroll;if(""===c.sX&&""===c.sY)return a.nTable;var d=c.sX,e=c.sY,f=a.oClasses,g=b.children("caption"),j=g.length?g[0]._captionSide:null,i=h(b[0].cloneNode(!1)),n=h(b[0].cloneNode(!1)),l=b.children("tfoot");l.length||(l=null);i=h("<div/>",{"class":f.sScrollWrapper}).append(h("<div/>",{"class":f.sScrollHead}).css({overflow:"hidden",position:"relative",border:0,width:d?!d?null:x(d):"100%"}).append(h("<div/>",{"class":f.sScrollHeadInner}).css({"box-sizing":"content-box",
width:c.sXInner||"100%"}).append(i.removeAttr("id").css("margin-left",0).append("top"===j?g:null).append(b.children("thead"))))).append(h("<div/>",{"class":f.sScrollBody}).css({position:"relative",overflow:"auto",width:!d?null:x(d)}).append(b));l&&i.append(h("<div/>",{"class":f.sScrollFoot}).css({overflow:"hidden",border:0,width:d?!d?null:x(d):"100%"}).append(h("<div/>",{"class":f.sScrollFootInner}).append(n.removeAttr("id").css("margin-left",0).append("bottom"===j?g:null).append(b.children("tfoot")))));
var b=i.children(),k=b[0],f=b[1],t=l?b[2]:null;if(d)h(f).on("scroll.DT",function(){var a=this.scrollLeft;k.scrollLeft=a;l&&(t.scrollLeft=a)});h(f).css(e&&c.bCollapse?"max-height":"height",e);a.nScrollHead=k;a.nScrollBody=f;a.nScrollFoot=t;a.aoDrawCallback.push({fn:ka,sName:"scrolling"});return i[0]}function ka(a){var b=a.oScroll,c=b.sX,d=b.sXInner,e=b.sY,b=b.iBarWidth,f=h(a.nScrollHead),g=f[0].style,j=f.children("div"),i=j[0].style,n=j.children("table"),j=a.nScrollBody,l=h(j),q=j.style,t=h(a.nScrollFoot).children("div"),
m=t.children("table"),o=h(a.nTHead),F=h(a.nTable),p=F[0],r=p.style,u=a.nTFoot?h(a.nTFoot):null,Eb=a.oBrowser,Ua=Eb.bScrollOversize,s=G(a.aoColumns,"nTh"),P,v,w,y,z=[],A=[],B=[],C=[],D,E=function(a){a=a.style;a.paddingTop="0";a.paddingBottom="0";a.borderTopWidth="0";a.borderBottomWidth="0";a.height=0};v=j.scrollHeight>j.clientHeight;if(a.scrollBarVis!==v&&a.scrollBarVis!==k)a.scrollBarVis=v,Y(a);else{a.scrollBarVis=v;F.children("thead, tfoot").remove();u&&(w=u.clone().prependTo(F),P=u.find("tr"),w=
w.find("tr"));y=o.clone().prependTo(F);o=o.find("tr");v=y.find("tr");y.find("th, td").removeAttr("tabindex");c||(q.width="100%",f[0].style.width="100%");h.each(qa(a,y),function(b,c){D=Z(a,b);c.style.width=a.aoColumns[D].sWidth});u&&J(function(a){a.style.width=""},w);f=F.outerWidth();if(""===c){r.width="100%";if(Ua&&(F.find("tbody").height()>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=x(F.outerWidth()-b);f=F.outerWidth()}else""!==d&&(r.width=x(d),f=F.outerWidth());J(E,v);J(function(a){B.push(a.innerHTML);
z.push(x(h(a).css("width")))},v);J(function(a,b){if(h.inArray(a,s)!==-1)a.style.width=z[b]},o);h(v).height(0);u&&(J(E,w),J(function(a){C.push(a.innerHTML);A.push(x(h(a).css("width")))},w),J(function(a,b){a.style.width=A[b]},P),h(w).height(0));J(function(a,b){a.innerHTML='<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+B[b]+"</div>";a.style.width=z[b]},v);u&&J(function(a,b){a.innerHTML='<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+C[b]+"</div>";a.style.width=
A[b]},w);if(F.outerWidth()<f){P=j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")?f+b:f;if(Ua&&(j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=x(P-b);(""===c||""!==d)&&L(a,1,"Possible column misalignment",6)}else P="100%";q.width=x(P);g.width=x(P);u&&(a.nScrollFoot.style.width=x(P));!e&&Ua&&(q.height=x(p.offsetHeight+b));c=F.outerWidth();n[0].style.width=x(c);i.width=x(c);d=F.height()>j.clientHeight||"scroll"==l.css("overflow-y");e="padding"+(Eb.bScrollbarLeft?"Left":
"Right");i[e]=d?b+"px":"0px";u&&(m[0].style.width=x(c),t[0].style.width=x(c),t[0].style[e]=d?b+"px":"0px");F.children("colgroup").insertBefore(F.children("thead"));l.scroll();if((a.bSorted||a.bFiltered)&&!a._drawHold)j.scrollTop=0}}function J(a,b,c){for(var d=0,e=0,f=b.length,g,j;e<f;){g=b[e].firstChild;for(j=c?c[e].firstChild:null;g;)1===g.nodeType&&(c?a(g,j,d):a(g,d),d++),g=g.nextSibling,j=c?j.nextSibling:null;e++}}function Fa(a){var b=a.nTable,c=a.aoColumns,d=a.oScroll,e=d.sY,f=d.sX,g=d.sXInner,
j=c.length,i=la(a,"bVisible"),n=h("th",a.nTHead),l=b.getAttribute("width"),k=b.parentNode,t=!1,m,o,p=a.oBrowser,d=p.bScrollOversize;(m=b.style.width)&&-1!==m.indexOf("%")&&(l=m);for(m=0;m<i.length;m++)o=c[i[m]],null!==o.sWidth&&(o.sWidth=Fb(o.sWidthOrig,k),t=!0);if(d||!t&&!f&&!e&&j==aa(a)&&j==n.length)for(m=0;m<j;m++)i=Z(a,m),null!==i&&(c[i].sWidth=x(n.eq(m).width()));else{j=h(b).clone().css("visibility","hidden").removeAttr("id");j.find("tbody tr").remove();var r=h("<tr/>").appendTo(j.find("tbody"));
j.find("thead, tfoot").remove();j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());j.find("tfoot th, tfoot td").css("width","");n=qa(a,j.find("thead")[0]);for(m=0;m<i.length;m++)o=c[i[m]],n[m].style.width=null!==o.sWidthOrig&&""!==o.sWidthOrig?x(o.sWidthOrig):"",o.sWidthOrig&&f&&h(n[m]).append(h("<div/>").css({width:o.sWidthOrig,margin:0,padding:0,border:0,height:1}));if(a.aoData.length)for(m=0;m<i.length;m++)t=i[m],o=c[t],h(Gb(a,t)).clone(!1).append(o.sContentPadding).appendTo(r);h("[name]",
j).removeAttr("name");o=h("<div/>").css(f||e?{position:"absolute",top:0,left:0,height:1,right:0,overflow:"hidden"}:{}).append(j).appendTo(k);f&&g?j.width(g):f?(j.css("width","auto"),j.removeAttr("width"),j.width()<k.clientWidth&&l&&j.width(k.clientWidth)):e?j.width(k.clientWidth):l&&j.width(l);for(m=e=0;m<i.length;m++)k=h(n[m]),g=k.outerWidth()-k.width(),k=p.bBounding?Math.ceil(n[m].getBoundingClientRect().width):k.outerWidth(),e+=k,c[i[m]].sWidth=x(k-g);b.style.width=x(e);o.remove()}l&&(b.style.width=
x(l));if((l||f)&&!a._reszEvt)b=function(){h(D).bind("resize.DT-"+a.sInstance,Oa(function(){Y(a)}))},d?setTimeout(b,1E3):b(),a._reszEvt=!0}function Fb(a,b){if(!a)return 0;var c=h("<div/>").css("width",x(a)).appendTo(b||I.body),d=c[0].offsetWidth;c.remove();return d}function Gb(a,b){var c=Hb(a,b);if(0>c)return null;var d=a.aoData[c];return!d.nTr?h("<td/>").html(B(a,c,b,"display"))[0]:d.anCells[b]}function Hb(a,b){for(var c,d=-1,e=-1,f=0,g=a.aoData.length;f<g;f++)c=B(a,f,b,"display")+"",c=c.replace($b,
""),c=c.replace(/&nbsp;/g," "),c.length>d&&(d=c.length,e=f);return e}function x(a){return null===a?"0px":"number"==typeof a?0>a?"0px":a+"px":a.match(/\d$/)?a+"px":a}function V(a){var b,c,d=[],e=a.aoColumns,f,g,j,i;b=a.aaSortingFixed;c=h.isPlainObject(b);var n=[];f=function(a){a.length&&!h.isArray(a[0])?n.push(a):h.merge(n,a)};h.isArray(b)&&f(b);c&&b.pre&&f(b.pre);f(a.aaSorting);c&&b.post&&f(b.post);for(a=0;a<n.length;a++){i=n[a][0];f=e[i].aDataSort;b=0;for(c=f.length;b<c;b++)g=f[b],j=e[g].sType||
"string",n[a]._idx===k&&(n[a]._idx=h.inArray(n[a][1],e[g].asSorting)),d.push({src:i,col:g,dir:n[a][1],index:n[a]._idx,type:j,formatter:m.ext.type.order[j+"-pre"]})}return d}function mb(a){var b,c,d=[],e=m.ext.type.order,f=a.aoData,g=0,j,i=a.aiDisplayMaster,h;Ga(a);h=V(a);b=0;for(c=h.length;b<c;b++)j=h[b],j.formatter&&g++,Ib(a,j.col);if("ssp"!=y(a)&&0!==h.length){b=0;for(c=i.length;b<c;b++)d[i[b]]=b;g===h.length?i.sort(function(a,b){var c,e,g,j,i=h.length,k=f[a]._aSortData,m=f[b]._aSortData;for(g=
0;g<i;g++)if(j=h[g],c=k[j.col],e=m[j.col],c=c<e?-1:c>e?1:0,0!==c)return"asc"===j.dir?c:-c;c=d[a];e=d[b];return c<e?-1:c>e?1:0}):i.sort(function(a,b){var c,g,j,i,k=h.length,m=f[a]._aSortData,p=f[b]._aSortData;for(j=0;j<k;j++)if(i=h[j],c=m[i.col],g=p[i.col],i=e[i.type+"-"+i.dir]||e["string-"+i.dir],c=i(c,g),0!==c)return c;c=d[a];g=d[b];return c<g?-1:c>g?1:0})}a.bSorted=!0}function Jb(a){for(var b,c,d=a.aoColumns,e=V(a),a=a.oLanguage.oAria,f=0,g=d.length;f<g;f++){c=d[f];var j=c.asSorting;b=c.sTitle.replace(/<.*?>/g,
"");var i=c.nTh;i.removeAttribute("aria-sort");c.bSortable&&(0<e.length&&e[0].col==f?(i.setAttribute("aria-sort","asc"==e[0].dir?"ascending":"descending"),c=j[e[0].index+1]||j[0]):c=j[0],b+="asc"===c?a.sSortAscending:a.sSortDescending);i.setAttribute("aria-label",b)}}function Va(a,b,c,d){var e=a.aaSorting,f=a.aoColumns[b].asSorting,g=function(a,b){var c=a._idx;c===k&&(c=h.inArray(a[1],f));return c+1<f.length?c+1:b?null:0};"number"===typeof e[0]&&(e=a.aaSorting=[e]);c&&a.oFeatures.bSortMulti?(c=h.inArray(b,
G(e,"0")),-1!==c?(b=g(e[c],!0),null===b&&1===e.length&&(b=0),null===b?e.splice(c,1):(e[c][1]=f[b],e[c]._idx=b)):(e.push([b,f[0],0]),e[e.length-1]._idx=0)):e.length&&e[0][0]==b?(b=g(e[0]),e.length=1,e[0][1]=f[b],e[0]._idx=b):(e.length=0,e.push([b,f[0]]),e[0]._idx=0);T(a);"function"==typeof d&&d(a)}function Ma(a,b,c,d){var e=a.aoColumns[c];Wa(b,{},function(b){!1!==e.bSortable&&(a.oFeatures.bProcessing?(C(a,!0),setTimeout(function(){Va(a,c,b.shiftKey,d);"ssp"!==y(a)&&C(a,!1)},0)):Va(a,c,b.shiftKey,d))})}
function va(a){var b=a.aLastSort,c=a.oClasses.sSortColumn,d=V(a),e=a.oFeatures,f,g;if(e.bSort&&e.bSortClasses){e=0;for(f=b.length;e<f;e++)g=b[e].src,h(G(a.aoData,"anCells",g)).removeClass(c+(2>e?e+1:3));e=0;for(f=d.length;e<f;e++)g=d[e].src,h(G(a.aoData,"anCells",g)).addClass(c+(2>e?e+1:3))}a.aLastSort=d}function Ib(a,b){var c=a.aoColumns[b],d=m.ext.order[c.sSortDataType],e;d&&(e=d.call(a.oInstance,a,b,$(a,b)));for(var f,g=m.ext.type.order[c.sType+"-pre"],j=0,i=a.aoData.length;j<i;j++)if(c=a.aoData[j],
c._aSortData||(c._aSortData=[]),!c._aSortData[b]||d)f=d?e[j]:B(a,j,b,"sort"),c._aSortData[b]=g?g(f):f}function wa(a){if(a.oFeatures.bStateSave&&!a.bDestroying){var b={time:+new Date,start:a._iDisplayStart,length:a._iDisplayLength,order:h.extend(!0,[],a.aaSorting),search:Ab(a.oPreviousSearch),columns:h.map(a.aoColumns,function(b,d){return{visible:b.bVisible,search:Ab(a.aoPreSearchCols[d])}})};u(a,"aoStateSaveParams","stateSaveParams",[a,b]);a.oSavedState=b;a.fnStateSaveCallback.call(a.oInstance,a,
b)}}function Kb(a){var b,c,d=a.aoColumns;if(a.oFeatures.bStateSave){var e=a.fnStateLoadCallback.call(a.oInstance,a);if(e&&e.time&&(b=u(a,"aoStateLoadParams","stateLoadParams",[a,e]),-1===h.inArray(!1,b)&&(b=a.iStateDuration,!(0<b&&e.time<+new Date-1E3*b)&&d.length===e.columns.length))){a.oLoadedState=h.extend(!0,{},e);e.start!==k&&(a._iDisplayStart=e.start,a.iInitDisplayStart=e.start);e.length!==k&&(a._iDisplayLength=e.length);e.order!==k&&(a.aaSorting=[],h.each(e.order,function(b,c){a.aaSorting.push(c[0]>=
d.length?[0,c[1]]:c)}));e.search!==k&&h.extend(a.oPreviousSearch,Bb(e.search));b=0;for(c=e.columns.length;b<c;b++){var f=e.columns[b];f.visible!==k&&(d[b].bVisible=f.visible);f.search!==k&&h.extend(a.aoPreSearchCols[b],Bb(f.search))}u(a,"aoStateLoaded","stateLoaded",[a,e])}}}function xa(a){var b=m.settings,a=h.inArray(a,G(b,"nTable"));return-1!==a?b[a]:null}function L(a,b,c,d){c="DataTables warning: "+(a?"table id="+a.sTableId+" - ":"")+c;d&&(c+=". For more information about this error, please see http://datatables.net/tn/"+
d);if(b)D.console&&console.log&&console.log(c);else if(b=m.ext,b=b.sErrMode||b.errMode,a&&u(a,null,"error",[a,d,c]),"alert"==b)alert(c);else{if("throw"==b)throw Error(c);"function"==typeof b&&b(a,d,c)}}function E(a,b,c,d){h.isArray(c)?h.each(c,function(c,d){h.isArray(d)?E(a,b,d[0],d[1]):E(a,b,d)}):(d===k&&(d=c),b[c]!==k&&(a[d]=b[c]))}function Lb(a,b,c){var d,e;for(e in b)b.hasOwnProperty(e)&&(d=b[e],h.isPlainObject(d)?(h.isPlainObject(a[e])||(a[e]={}),h.extend(!0,a[e],d)):a[e]=c&&"data"!==e&&"aaData"!==
e&&h.isArray(d)?d.slice():d);return a}function Wa(a,b,c){h(a).bind("click.DT",b,function(b){a.blur();c(b)}).bind("keypress.DT",b,function(a){13===a.which&&(a.preventDefault(),c(a))}).bind("selectstart.DT",function(){return!1})}function z(a,b,c,d){c&&a[b].push({fn:c,sName:d})}function u(a,b,c,d){var e=[];b&&(e=h.map(a[b].slice().reverse(),function(b){return b.fn.apply(a.oInstance,d)}));null!==c&&(b=h.Event(c+".dt"),h(a.nTable).trigger(b,d),e.push(b.result));return e}function Sa(a){var b=a._iDisplayStart,
c=a.fnDisplayEnd(),d=a._iDisplayLength;b>=c&&(b=c-d);b-=b%d;if(-1===d||0>b)b=0;a._iDisplayStart=b}function Na(a,b){var c=a.renderer,d=m.ext.renderer[b];return h.isPlainObject(c)&&c[b]?d[c[b]]||d._:"string"===typeof c?d[c]||d._:d._}function y(a){return a.oFeatures.bServerSide?"ssp":a.ajax||a.sAjaxSource?"ajax":"dom"}function ya(a,b){var c=[],c=Mb.numbers_length,d=Math.floor(c/2);b<=c?c=W(0,b):a<=d?(c=W(0,c-2),c.push("ellipsis"),c.push(b-1)):(a>=b-1-d?c=W(b-(c-2),b):(c=W(a-d+2,a+d-1),c.push("ellipsis"),
c.push(b-1)),c.splice(0,0,"ellipsis"),c.splice(0,0,0));c.DT_el="span";return c}function db(a){h.each({num:function(b){return za(b,a)},"num-fmt":function(b){return za(b,a,Xa)},"html-num":function(b){return za(b,a,Aa)},"html-num-fmt":function(b){return za(b,a,Aa,Xa)}},function(b,c){v.type.order[b+a+"-pre"]=c;b.match(/^html\-/)&&(v.type.search[b+a]=v.type.search.html)})}function Nb(a){return function(){var b=[xa(this[m.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return m.ext.internal[a].apply(this,
b)}}var m=function(a){this.$=function(a,b){return this.api(!0).$(a,b)};this._=function(a,b){return this.api(!0).rows(a,b).data()};this.api=function(a){return a?new r(xa(this[v.iApiIndex])):new r(this)};this.fnAddData=function(a,b){var c=this.api(!0),d=h.isArray(a)&&(h.isArray(a[0])||h.isPlainObject(a[0]))?c.rows.add(a):c.row.add(a);(b===k||b)&&c.draw();return d.flatten().toArray()};this.fnAdjustColumnSizing=function(a){var b=this.api(!0).columns.adjust(),c=b.settings()[0],d=c.oScroll;a===k||a?b.draw(!1):
(""!==d.sX||""!==d.sY)&&ka(c)};this.fnClearTable=function(a){var b=this.api(!0).clear();(a===k||a)&&b.draw()};this.fnClose=function(a){this.api(!0).row(a).child.hide()};this.fnDeleteRow=function(a,b,c){var d=this.api(!0),a=d.rows(a),e=a.settings()[0],h=e.aoData[a[0][0]];a.remove();b&&b.call(this,e,h);(c===k||c)&&d.draw();return h};this.fnDestroy=function(a){this.api(!0).destroy(a)};this.fnDraw=function(a){this.api(!0).draw(a)};this.fnFilter=function(a,b,c,d,e,h){e=this.api(!0);null===b||b===k?e.search(a,
c,d,h):e.column(b).search(a,c,d,h);e.draw()};this.fnGetData=function(a,b){var c=this.api(!0);if(a!==k){var d=a.nodeName?a.nodeName.toLowerCase():"";return b!==k||"td"==d||"th"==d?c.cell(a,b).data():c.row(a).data()||null}return c.data().toArray()};this.fnGetNodes=function(a){var b=this.api(!0);return a!==k?b.row(a).node():b.rows().nodes().flatten().toArray()};this.fnGetPosition=function(a){var b=this.api(!0),c=a.nodeName.toUpperCase();return"TR"==c?b.row(a).index():"TD"==c||"TH"==c?(a=b.cell(a).index(),
[a.row,a.columnVisible,a.column]):null};this.fnIsOpen=function(a){return this.api(!0).row(a).child.isShown()};this.fnOpen=function(a,b,c){return this.api(!0).row(a).child(b,c).show().child()[0]};this.fnPageChange=function(a,b){var c=this.api(!0).page(a);(b===k||b)&&c.draw(!1)};this.fnSetColumnVis=function(a,b,c){a=this.api(!0).column(a).visible(b);(c===k||c)&&a.columns.adjust().draw()};this.fnSettings=function(){return xa(this[v.iApiIndex])};this.fnSort=function(a){this.api(!0).order(a).draw()};this.fnSortListener=
function(a,b,c){this.api(!0).order.listener(a,b,c)};this.fnUpdate=function(a,b,c,d,e){var h=this.api(!0);c===k||null===c?h.row(b).data(a):h.cell(b,c).data(a);(e===k||e)&&h.columns.adjust();(d===k||d)&&h.draw();return 0};this.fnVersionCheck=v.fnVersionCheck;var b=this,c=a===k,d=this.length;c&&(a={});this.oApi=this.internal=v.internal;for(var e in m.ext.internal)e&&(this[e]=Nb(e));this.each(function(){var e={},e=1<d?Lb(e,a,!0):a,g=0,j,i=this.getAttribute("id"),n=!1,l=m.defaults,q=h(this);if("table"!=
this.nodeName.toLowerCase())L(null,0,"Non-table node initialisation ("+this.nodeName+")",2);else{eb(l);fb(l.column);K(l,l,!0);K(l.column,l.column,!0);K(l,h.extend(e,q.data()));var t=m.settings,g=0;for(j=t.length;g<j;g++){var p=t[g];if(p.nTable==this||p.nTHead.parentNode==this||p.nTFoot&&p.nTFoot.parentNode==this){g=e.bRetrieve!==k?e.bRetrieve:l.bRetrieve;if(c||g)return p.oInstance;if(e.bDestroy!==k?e.bDestroy:l.bDestroy){p.oInstance.fnDestroy();break}else{L(p,0,"Cannot reinitialise DataTable",3);
return}}if(p.sTableId==this.id){t.splice(g,1);break}}if(null===i||""===i)this.id=i="DataTables_Table_"+m.ext._unique++;var o=h.extend(!0,{},m.models.oSettings,{sDestroyWidth:q[0].style.width,sInstance:i,sTableId:i});o.nTable=this;o.oApi=b.internal;o.oInit=e;t.push(o);o.oInstance=1===b.length?b:q.dataTable();eb(e);e.oLanguage&&Da(e.oLanguage);e.aLengthMenu&&!e.iDisplayLength&&(e.iDisplayLength=h.isArray(e.aLengthMenu[0])?e.aLengthMenu[0][0]:e.aLengthMenu[0]);e=Lb(h.extend(!0,{},l),e);E(o.oFeatures,
e,"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));E(o,e,["asStripeClasses","ajax","fnServerData","fnFormatNumber","sServerMethod","aaSorting","aaSortingFixed","aLengthMenu","sPaginationType","sAjaxSource","sAjaxDataProp","iStateDuration","sDom","bSortCellsTop","iTabIndex","fnStateLoadCallback","fnStateSaveCallback","renderer","searchDelay","rowId",["iCookieDuration","iStateDuration"],["oSearch","oPreviousSearch"],["aoSearchCols",
"aoPreSearchCols"],["iDisplayLength","_iDisplayLength"],["bJQueryUI","bJUI"]]);E(o.oScroll,e,[["sScrollX","sX"],["sScrollXInner","sXInner"],["sScrollY","sY"],["bScrollCollapse","bCollapse"]]);E(o.oLanguage,e,"fnInfoCallback");z(o,"aoDrawCallback",e.fnDrawCallback,"user");z(o,"aoServerParams",e.fnServerParams,"user");z(o,"aoStateSaveParams",e.fnStateSaveParams,"user");z(o,"aoStateLoadParams",e.fnStateLoadParams,"user");z(o,"aoStateLoaded",e.fnStateLoaded,"user");z(o,"aoRowCallback",e.fnRowCallback,
"user");z(o,"aoRowCreatedCallback",e.fnCreatedRow,"user");z(o,"aoHeaderCallback",e.fnHeaderCallback,"user");z(o,"aoFooterCallback",e.fnFooterCallback,"user");z(o,"aoInitComplete",e.fnInitComplete,"user");z(o,"aoPreDrawCallback",e.fnPreDrawCallback,"user");o.rowIdFn=Q(e.rowId);gb(o);i=o.oClasses;e.bJQueryUI?(h.extend(i,m.ext.oJUIClasses,e.oClasses),e.sDom===l.sDom&&"lfrtip"===l.sDom&&(o.sDom='<"H"lfr>t<"F"ip>'),o.renderer)?h.isPlainObject(o.renderer)&&!o.renderer.header&&(o.renderer.header="jqueryui"):
o.renderer="jqueryui":h.extend(i,m.ext.classes,e.oClasses);q.addClass(i.sTable);o.iInitDisplayStart===k&&(o.iInitDisplayStart=e.iDisplayStart,o._iDisplayStart=e.iDisplayStart);null!==e.iDeferLoading&&(o.bDeferLoading=!0,g=h.isArray(e.iDeferLoading),o._iRecordsDisplay=g?e.iDeferLoading[0]:e.iDeferLoading,o._iRecordsTotal=g?e.iDeferLoading[1]:e.iDeferLoading);var r=o.oLanguage;h.extend(!0,r,e.oLanguage);""!==r.sUrl&&(h.ajax({dataType:"json",url:r.sUrl,success:function(a){Da(a);K(l.oLanguage,a);h.extend(true,
r,a);ga(o)},error:function(){ga(o)}}),n=!0);null===e.asStripeClasses&&(o.asStripeClasses=[i.sStripeOdd,i.sStripeEven]);var g=o.asStripeClasses,v=q.children("tbody").find("tr").eq(0);-1!==h.inArray(!0,h.map(g,function(a){return v.hasClass(a)}))&&(h("tbody tr",this).removeClass(g.join(" ")),o.asDestroyStripes=g.slice());t=[];g=this.getElementsByTagName("thead");0!==g.length&&(da(o.aoHeader,g[0]),t=qa(o));if(null===e.aoColumns){p=[];g=0;for(j=t.length;g<j;g++)p.push(null)}else p=e.aoColumns;g=0;for(j=
p.length;g<j;g++)Ea(o,t?t[g]:null);ib(o,e.aoColumnDefs,p,function(a,b){ja(o,a,b)});if(v.length){var s=function(a,b){return a.getAttribute("data-"+b)!==null?b:null};h(v[0]).children("th, td").each(function(a,b){var c=o.aoColumns[a];if(c.mData===a){var d=s(b,"sort")||s(b,"order"),e=s(b,"filter")||s(b,"search");if(d!==null||e!==null){c.mData={_:a+".display",sort:d!==null?a+".@data-"+d:k,type:d!==null?a+".@data-"+d:k,filter:e!==null?a+".@data-"+e:k};ja(o,a)}}})}var w=o.oFeatures;e.bStateSave&&(w.bStateSave=
!0,Kb(o,e),z(o,"aoDrawCallback",wa,"state_save"));if(e.aaSorting===k){t=o.aaSorting;g=0;for(j=t.length;g<j;g++)t[g][1]=o.aoColumns[g].asSorting[0]}va(o);w.bSort&&z(o,"aoDrawCallback",function(){if(o.bSorted){var a=V(o),b={};h.each(a,function(a,c){b[c.src]=c.dir});u(o,null,"order",[o,a,b]);Jb(o)}});z(o,"aoDrawCallback",function(){(o.bSorted||y(o)==="ssp"||w.bDeferRender)&&va(o)},"sc");g=q.children("caption").each(function(){this._captionSide=q.css("caption-side")});j=q.children("thead");0===j.length&&
(j=h("<thead/>").appendTo(this));o.nTHead=j[0];j=q.children("tbody");0===j.length&&(j=h("<tbody/>").appendTo(this));o.nTBody=j[0];j=q.children("tfoot");if(0===j.length&&0<g.length&&(""!==o.oScroll.sX||""!==o.oScroll.sY))j=h("<tfoot/>").appendTo(this);0===j.length||0===j.children().length?q.addClass(i.sNoFooter):0<j.length&&(o.nTFoot=j[0],da(o.aoFooter,o.nTFoot));if(e.aaData)for(g=0;g<e.aaData.length;g++)N(o,e.aaData[g]);else(o.bDeferLoading||"dom"==y(o))&&ma(o,h(o.nTBody).children("tr"));o.aiDisplay=
o.aiDisplayMaster.slice();o.bInitialised=!0;!1===n&&ga(o)}});b=null;return this},v,r,p,s,Ya={},Ob=/[\r\n]/g,Aa=/<.*?>/g,ac=/^[\w\+\-]/,bc=/[\w\+\-]$/,cc=RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)","g"),Xa=/[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi,M=function(a){return!a||!0===a||"-"===a?!0:!1},Pb=function(a){var b=parseInt(a,10);return!isNaN(b)&&isFinite(a)?b:null},Qb=function(a,b){Ya[b]||(Ya[b]=RegExp(Qa(b),"g"));return"string"===typeof a&&"."!==b?a.replace(/\./g,
"").replace(Ya[b],"."):a},Za=function(a,b,c){var d="string"===typeof a;if(M(a))return!0;b&&d&&(a=Qb(a,b));c&&d&&(a=a.replace(Xa,""));return!isNaN(parseFloat(a))&&isFinite(a)},Rb=function(a,b,c){return M(a)?!0:!(M(a)||"string"===typeof a)?null:Za(a.replace(Aa,""),b,c)?!0:null},G=function(a,b,c){var d=[],e=0,f=a.length;if(c!==k)for(;e<f;e++)a[e]&&a[e][b]&&d.push(a[e][b][c]);else for(;e<f;e++)a[e]&&d.push(a[e][b]);return d},ha=function(a,b,c,d){var e=[],f=0,g=b.length;if(d!==k)for(;f<g;f++)a[b[f]][c]&&
e.push(a[b[f]][c][d]);else for(;f<g;f++)e.push(a[b[f]][c]);return e},W=function(a,b){var c=[],d;b===k?(b=0,d=a):(d=b,b=a);for(var e=b;e<d;e++)c.push(e);return c},Sb=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},pa=function(a){var b=[],c,d,e=a.length,f,g=0;d=0;a:for(;d<e;d++){c=a[d];for(f=0;f<g;f++)if(b[f]===c)continue a;b.push(c);g++}return b};m.util={throttle:function(a,b){var c=b!==k?b:200,d,e;return function(){var b=this,g=+new Date,h=arguments;d&&g<d+c?(clearTimeout(e),
e=setTimeout(function(){d=k;a.apply(b,h)},c)):(d=g,a.apply(b,h))}},escapeRegex:function(a){return a.replace(cc,"\\$1")}};var A=function(a,b,c){a[b]!==k&&(a[c]=a[b])},ba=/\[.*?\]$/,U=/\(\)$/,Qa=m.util.escapeRegex,ua=h("<div>")[0],Zb=ua.textContent!==k,$b=/<.*?>/g,Oa=m.util.throttle,Tb=[],w=Array.prototype,dc=function(a){var b,c,d=m.settings,e=h.map(d,function(a){return a.nTable});if(a){if(a.nTable&&a.oApi)return[a];if(a.nodeName&&"table"===a.nodeName.toLowerCase())return b=h.inArray(a,e),-1!==b?[d[b]]:
null;if(a&&"function"===typeof a.settings)return a.settings().toArray();"string"===typeof a?c=h(a):a instanceof h&&(c=a)}else return[];if(c)return c.map(function(){b=h.inArray(this,e);return-1!==b?d[b]:null}).toArray()};r=function(a,b){if(!(this instanceof r))return new r(a,b);var c=[],d=function(a){(a=dc(a))&&(c=c.concat(a))};if(h.isArray(a))for(var e=0,f=a.length;e<f;e++)d(a[e]);else d(a);this.context=pa(c);b&&h.merge(this,b);this.selector={rows:null,cols:null,opts:null};r.extend(this,this,Tb)};
m.Api=r;h.extend(r.prototype,{any:function(){return 0!==this.count()},concat:w.concat,context:[],count:function(){return this.flatten().length},each:function(a){for(var b=0,c=this.length;b<c;b++)a.call(this,this[b],b,this);return this},eq:function(a){var b=this.context;return b.length>a?new r(b[a],this[a]):null},filter:function(a){var b=[];if(w.filter)b=w.filter.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)a.call(this,this[c],c,this)&&b.push(this[c]);return new r(this.context,b)},flatten:function(){var a=
[];return new r(this.context,a.concat.apply(a,this.toArray()))},join:w.join,indexOf:w.indexOf||function(a,b){for(var c=b||0,d=this.length;c<d;c++)if(this[c]===a)return c;return-1},iterator:function(a,b,c,d){var e=[],f,g,h,i,n,l=this.context,m,t,p=this.selector;"string"===typeof a&&(d=c,c=b,b=a,a=!1);g=0;for(h=l.length;g<h;g++){var o=new r(l[g]);if("table"===b)f=c.call(o,l[g],g),f!==k&&e.push(f);else if("columns"===b||"rows"===b)f=c.call(o,l[g],this[g],g),f!==k&&e.push(f);else if("column"===b||"column-rows"===
b||"row"===b||"cell"===b){t=this[g];"column-rows"===b&&(m=Ba(l[g],p.opts));i=0;for(n=t.length;i<n;i++)f=t[i],f="cell"===b?c.call(o,l[g],f.row,f.column,g,i):c.call(o,l[g],f,g,i,m),f!==k&&e.push(f)}}return e.length||d?(a=new r(l,a?e.concat.apply([],e):e),b=a.selector,b.rows=p.rows,b.cols=p.cols,b.opts=p.opts,a):this},lastIndexOf:w.lastIndexOf||function(a,b){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(a){var b=[];if(w.map)b=w.map.call(this,a,this);else for(var c=
0,d=this.length;c<d;c++)b.push(a.call(this,this[c],c));return new r(this.context,b)},pluck:function(a){return this.map(function(b){return b[a]})},pop:w.pop,push:w.push,reduce:w.reduce||function(a,b){return hb(this,a,b,0,this.length,1)},reduceRight:w.reduceRight||function(a,b){return hb(this,a,b,this.length-1,-1,-1)},reverse:w.reverse,selector:null,shift:w.shift,sort:w.sort,splice:w.splice,toArray:function(){return w.slice.call(this)},to$:function(){return h(this)},toJQuery:function(){return h(this)},
unique:function(){return new r(this.context,pa(this))},unshift:w.unshift});r.extend=function(a,b,c){if(c.length&&b&&(b instanceof r||b.__dt_wrapper)){var d,e,f,g=function(a,b,c){return function(){var d=b.apply(a,arguments);r.extend(d,d,c.methodExt);return d}};d=0;for(e=c.length;d<e;d++)f=c[d],b[f.name]="function"===typeof f.val?g(a,f.val,f):h.isPlainObject(f.val)?{}:f.val,b[f.name].__dt_wrapper=!0,r.extend(a,b[f.name],f.propExt)}};r.register=p=function(a,b){if(h.isArray(a))for(var c=0,d=a.length;c<
d;c++)r.register(a[c],b);else for(var e=a.split("."),f=Tb,g,j,c=0,d=e.length;c<d;c++){g=(j=-1!==e[c].indexOf("()"))?e[c].replace("()",""):e[c];var i;a:{i=0;for(var n=f.length;i<n;i++)if(f[i].name===g){i=f[i];break a}i=null}i||(i={name:g,val:{},methodExt:[],propExt:[]},f.push(i));c===d-1?i.val=b:f=j?i.methodExt:i.propExt}};r.registerPlural=s=function(a,b,c){r.register(a,c);r.register(b,function(){var a=c.apply(this,arguments);return a===this?this:a instanceof r?a.length?h.isArray(a[0])?new r(a.context,
a[0]):a[0]:k:a})};p("tables()",function(a){var b;if(a){b=r;var c=this.context;if("number"===typeof a)a=[c[a]];else var d=h.map(c,function(a){return a.nTable}),a=h(d).filter(a).map(function(){var a=h.inArray(this,d);return c[a]}).toArray();b=new b(a)}else b=this;return b});p("table()",function(a){var a=this.tables(a),b=a.context;return b.length?new r(b[0]):a});s("tables().nodes()","table().node()",function(){return this.iterator("table",function(a){return a.nTable},1)});s("tables().body()","table().body()",
function(){return this.iterator("table",function(a){return a.nTBody},1)});s("tables().header()","table().header()",function(){return this.iterator("table",function(a){return a.nTHead},1)});s("tables().footer()","table().footer()",function(){return this.iterator("table",function(a){return a.nTFoot},1)});s("tables().containers()","table().container()",function(){return this.iterator("table",function(a){return a.nTableWrapper},1)});p("draw()",function(a){return this.iterator("table",function(b){"page"===
a?O(b):("string"===typeof a&&(a="full-hold"===a?!1:!0),T(b,!1===a))})});p("page()",function(a){return a===k?this.page.info().page:this.iterator("table",function(b){Ta(b,a)})});p("page.info()",function(){if(0===this.context.length)return k;var a=this.context[0],b=a._iDisplayStart,c=a.oFeatures.bPaginate?a._iDisplayLength:-1,d=a.fnRecordsDisplay(),e=-1===c;return{page:e?0:Math.floor(b/c),pages:e?1:Math.ceil(d/c),start:b,end:a.fnDisplayEnd(),length:c,recordsTotal:a.fnRecordsTotal(),recordsDisplay:d,
serverSide:"ssp"===y(a)}});p("page.len()",function(a){return a===k?0!==this.context.length?this.context[0]._iDisplayLength:k:this.iterator("table",function(b){Ra(b,a)})});var Ub=function(a,b,c){if(c){var d=new r(a);d.one("draw",function(){c(d.ajax.json())})}if("ssp"==y(a))T(a,b);else{C(a,!0);var e=a.jqXHR;e&&4!==e.readyState&&e.abort();ra(a,[],function(c){na(a);for(var c=sa(a,c),d=0,e=c.length;d<e;d++)N(a,c[d]);T(a,b);C(a,!1)})}};p("ajax.json()",function(){var a=this.context;if(0<a.length)return a[0].json});
p("ajax.params()",function(){var a=this.context;if(0<a.length)return a[0].oAjaxData});p("ajax.reload()",function(a,b){return this.iterator("table",function(c){Ub(c,!1===b,a)})});p("ajax.url()",function(a){var b=this.context;if(a===k){if(0===b.length)return k;b=b[0];return b.ajax?h.isPlainObject(b.ajax)?b.ajax.url:b.ajax:b.sAjaxSource}return this.iterator("table",function(b){h.isPlainObject(b.ajax)?b.ajax.url=a:b.ajax=a})});p("ajax.url().load()",function(a,b){return this.iterator("table",function(c){Ub(c,
!1===b,a)})});var $a=function(a,b,c,d,e){var f=[],g,j,i,n,l,m;i=typeof b;if(!b||"string"===i||"function"===i||b.length===k)b=[b];i=0;for(n=b.length;i<n;i++){j=b[i]&&b[i].split?b[i].split(","):[b[i]];l=0;for(m=j.length;l<m;l++)(g=c("string"===typeof j[l]?h.trim(j[l]):j[l]))&&g.length&&(f=f.concat(g))}a=v.selector[a];if(a.length){i=0;for(n=a.length;i<n;i++)f=a[i](d,e,f)}return pa(f)},ab=function(a){a||(a={});a.filter&&a.search===k&&(a.search=a.filter);return h.extend({search:"none",order:"current",
page:"all"},a)},bb=function(a){for(var b=0,c=a.length;b<c;b++)if(0<a[b].length)return a[0]=a[b],a[0].length=1,a.length=1,a.context=[a.context[b]],a;a.length=0;return a},Ba=function(a,b){var c,d,e,f=[],g=a.aiDisplay;c=a.aiDisplayMaster;var j=b.search;d=b.order;e=b.page;if("ssp"==y(a))return"removed"===j?[]:W(0,c.length);if("current"==e){c=a._iDisplayStart;for(d=a.fnDisplayEnd();c<d;c++)f.push(g[c])}else if("current"==d||"applied"==d)f="none"==j?c.slice():"applied"==j?g.slice():h.map(c,function(a){return-1===
h.inArray(a,g)?a:null});else if("index"==d||"original"==d){c=0;for(d=a.aoData.length;c<d;c++)"none"==j?f.push(c):(e=h.inArray(c,g),(-1===e&&"removed"==j||0<=e&&"applied"==j)&&f.push(c))}return f};p("rows()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=ab(b),c=this.iterator("table",function(c){var e=b;return $a("row",a,function(a){var b=Pb(a);if(b!==null&&!e)return[b];var j=Ba(c,e);if(b!==null&&h.inArray(b,j)!==-1)return[b];if(!a)return j;if(typeof a==="function")return h.map(j,function(b){var e=
c.aoData[b];return a(b,e._aData,e.nTr)?b:null});b=Sb(ha(c.aoData,j,"nTr"));if(a.nodeName){if(a._DT_RowIndex!==k)return[a._DT_RowIndex];if(a._DT_CellIndex)return[a._DT_CellIndex.row];b=h(a).closest("*[data-dt-row]");return b.length?[b.data("dt-row")]:[]}if(typeof a==="string"&&a.charAt(0)==="#"){j=c.aIds[a.replace(/^#/,"")];if(j!==k)return[j.idx]}return h(b).filter(a).map(function(){return this._DT_RowIndex}).toArray()},c,e)},1);c.selector.rows=a;c.selector.opts=b;return c});p("rows().nodes()",function(){return this.iterator("row",
function(a,b){return a.aoData[b].nTr||k},1)});p("rows().data()",function(){return this.iterator(!0,"rows",function(a,b){return ha(a.aoData,b,"_aData")},1)});s("rows().cache()","row().cache()",function(a){return this.iterator("row",function(b,c){var d=b.aoData[c];return"search"===a?d._aFilterData:d._aSortData},1)});s("rows().invalidate()","row().invalidate()",function(a){return this.iterator("row",function(b,c){ca(b,c,a)})});s("rows().indexes()","row().index()",function(){return this.iterator("row",
function(a,b){return b},1)});s("rows().ids()","row().id()",function(a){for(var b=[],c=this.context,d=0,e=c.length;d<e;d++)for(var f=0,g=this[d].length;f<g;f++){var h=c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);b.push((!0===a?"#":"")+h)}return new r(c,b)});s("rows().remove()","row().remove()",function(){var a=this;this.iterator("row",function(b,c,d){var e=b.aoData,f=e[c],g,h,i,n,l;e.splice(c,1);g=0;for(h=e.length;g<h;g++)if(i=e[g],l=i.anCells,null!==i.nTr&&(i.nTr._DT_RowIndex=g),null!==l){i=0;for(n=
l.length;i<n;i++)l[i]._DT_CellIndex.row=g}oa(b.aiDisplayMaster,c);oa(b.aiDisplay,c);oa(a[d],c,!1);Sa(b);c=b.rowIdFn(f._aData);c!==k&&delete b.aIds[c]});this.iterator("table",function(a){for(var c=0,d=a.aoData.length;c<d;c++)a.aoData[c].idx=c});return this});p("rows.add()",function(a){var b=this.iterator("table",function(b){var c,f,g,h=[];f=0;for(g=a.length;f<g;f++)c=a[f],c.nodeName&&"TR"===c.nodeName.toUpperCase()?h.push(ma(b,c)[0]):h.push(N(b,c));return h},1),c=this.rows(-1);c.pop();h.merge(c,b);
return c});p("row()",function(a,b){return bb(this.rows(a,b))});p("row().data()",function(a){var b=this.context;if(a===k)return b.length&&this.length?b[0].aoData[this[0]]._aData:k;b[0].aoData[this[0]]._aData=a;ca(b[0],this[0],"data");return this});p("row().node()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]].nTr||null:null});p("row.add()",function(a){a instanceof h&&a.length&&(a=a[0]);var b=this.iterator("table",function(b){return a.nodeName&&"TR"===a.nodeName.toUpperCase()?
ma(b,a)[0]:N(b,a)});return this.row(b[0])});var cb=function(a,b){var c=a.context;if(c.length&&(c=c[0].aoData[b!==k?b:a[0]])&&c._details)c._details.remove(),c._detailsShow=k,c._details=k},Vb=function(a,b){var c=a.context;if(c.length&&a.length){var d=c[0].aoData[a[0]];if(d._details){(d._detailsShow=b)?d._details.insertAfter(d.nTr):d._details.detach();var e=c[0],f=new r(e),g=e.aoData;f.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details");0<G(g,"_details").length&&(f.on("draw.dt.DT_details",
function(a,b){e===b&&f.rows({page:"current"}).eq(0).each(function(a){a=g[a];a._detailsShow&&a._details.insertAfter(a.nTr)})}),f.on("column-visibility.dt.DT_details",function(a,b){if(e===b)for(var c,d=aa(b),f=0,h=g.length;f<h;f++)c=g[f],c._details&&c._details.children("td[colspan]").attr("colspan",d)}),f.on("destroy.dt.DT_details",function(a,b){if(e===b)for(var c=0,d=g.length;c<d;c++)g[c]._details&&cb(f,c)}))}}};p("row().child()",function(a,b){var c=this.context;if(a===k)return c.length&&this.length?
c[0].aoData[this[0]]._details:k;if(!0===a)this.child.show();else if(!1===a)cb(this);else if(c.length&&this.length){var d=c[0],c=c[0].aoData[this[0]],e=[],f=function(a,b){if(h.isArray(a)||a instanceof h)for(var c=0,k=a.length;c<k;c++)f(a[c],b);else a.nodeName&&"tr"===a.nodeName.toLowerCase()?e.push(a):(c=h("<tr><td/></tr>").addClass(b),h("td",c).addClass(b).html(a)[0].colSpan=aa(d),e.push(c[0]))};f(a,b);c._details&&c._details.remove();c._details=h(e);c._detailsShow&&c._details.insertAfter(c.nTr)}return this});
p(["row().child.show()","row().child().show()"],function(){Vb(this,!0);return this});p(["row().child.hide()","row().child().hide()"],function(){Vb(this,!1);return this});p(["row().child.remove()","row().child().remove()"],function(){cb(this);return this});p("row().child.isShown()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]]._detailsShow||!1:!1});var ec=/^(.+):(name|visIdx|visible)$/,Wb=function(a,b,c,d,e){for(var c=[],d=0,f=e.length;d<f;d++)c.push(B(a,e[d],b));
return c};p("columns()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=ab(b),c=this.iterator("table",function(c){var e=a,f=b,g=c.aoColumns,j=G(g,"sName"),i=G(g,"nTh");return $a("column",e,function(a){var b=Pb(a);if(a==="")return W(g.length);if(b!==null)return[b>=0?b:g.length+b];if(typeof a==="function"){var e=Ba(c,f);return h.map(g,function(b,f){return a(f,Wb(c,f,0,0,e),i[f])?f:null})}var k=typeof a==="string"?a.match(ec):"";if(k)switch(k[2]){case "visIdx":case "visible":b=parseInt(k[1],
10);if(b<0){var m=h.map(g,function(a,b){return a.bVisible?b:null});return[m[m.length+b]]}return[Z(c,b)];case "name":return h.map(j,function(a,b){return a===k[1]?b:null});default:return[]}if(a.nodeName&&a._DT_CellIndex)return[a._DT_CellIndex.column];b=h(i).filter(a).map(function(){return h.inArray(this,i)}).toArray();if(b.length||!a.nodeName)return b;b=h(a).closest("*[data-dt-column]");return b.length?[b.data("dt-column")]:[]},c,f)},1);c.selector.cols=a;c.selector.opts=b;return c});s("columns().header()",
"column().header()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTh},1)});s("columns().footer()","column().footer()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTf},1)});s("columns().data()","column().data()",function(){return this.iterator("column-rows",Wb,1)});s("columns().dataSrc()","column().dataSrc()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].mData},1)});s("columns().cache()","column().cache()",
function(a){return this.iterator("column-rows",function(b,c,d,e,f){return ha(b.aoData,f,"search"===a?"_aFilterData":"_aSortData",c)},1)});s("columns().nodes()","column().nodes()",function(){return this.iterator("column-rows",function(a,b,c,d,e){return ha(a.aoData,e,"anCells",b)},1)});s("columns().visible()","column().visible()",function(a,b){var c=this.iterator("column",function(b,c){if(a===k)return b.aoColumns[c].bVisible;var f=b.aoColumns,g=f[c],j=b.aoData,i,n,l;if(a!==k&&g.bVisible!==a){if(a){var m=
h.inArray(!0,G(f,"bVisible"),c+1);i=0;for(n=j.length;i<n;i++)l=j[i].nTr,f=j[i].anCells,l&&l.insertBefore(f[c],f[m]||null)}else h(G(b.aoData,"anCells",c)).detach();g.bVisible=a;ea(b,b.aoHeader);ea(b,b.aoFooter);wa(b)}});a!==k&&(this.iterator("column",function(c,e){u(c,null,"column-visibility",[c,e,a,b])}),(b===k||b)&&this.columns.adjust());return c});s("columns().indexes()","column().index()",function(a){return this.iterator("column",function(b,c){return"visible"===a?$(b,c):c},1)});p("columns.adjust()",
function(){return this.iterator("table",function(a){Y(a)},1)});p("column.index()",function(a,b){if(0!==this.context.length){var c=this.context[0];if("fromVisible"===a||"toData"===a)return Z(c,b);if("fromData"===a||"toVisible"===a)return $(c,b)}});p("column()",function(a,b){return bb(this.columns(a,b))});p("cells()",function(a,b,c){h.isPlainObject(a)&&(a.row===k?(c=a,a=null):(c=b,b=null));h.isPlainObject(b)&&(c=b,b=null);if(null===b||b===k)return this.iterator("table",function(b){var d=a,e=ab(c),f=
b.aoData,g=Ba(b,e),j=Sb(ha(f,g,"anCells")),i=h([].concat.apply([],j)),l,n=b.aoColumns.length,m,p,r,u,v,s;return $a("cell",d,function(a){var c=typeof a==="function";if(a===null||a===k||c){m=[];p=0;for(r=g.length;p<r;p++){l=g[p];for(u=0;u<n;u++){v={row:l,column:u};if(c){s=f[l];a(v,B(b,l,u),s.anCells?s.anCells[u]:null)&&m.push(v)}else m.push(v)}}return m}if(h.isPlainObject(a))return[a];c=i.filter(a).map(function(a,b){return{row:b._DT_CellIndex.row,column:b._DT_CellIndex.column}}).toArray();if(c.length||
!a.nodeName)return c;s=h(a).closest("*[data-dt-row]");return s.length?[{row:s.data("dt-row"),column:s.data("dt-column")}]:[]},b,e)});var d=this.columns(b,c),e=this.rows(a,c),f,g,j,i,n,l=this.iterator("table",function(a,b){f=[];g=0;for(j=e[b].length;g<j;g++){i=0;for(n=d[b].length;i<n;i++)f.push({row:e[b][g],column:d[b][i]})}return f},1);h.extend(l.selector,{cols:b,rows:a,opts:c});return l});s("cells().nodes()","cell().node()",function(){return this.iterator("cell",function(a,b,c){return(a=a.aoData[b])&&
a.anCells?a.anCells[c]:k},1)});p("cells().data()",function(){return this.iterator("cell",function(a,b,c){return B(a,b,c)},1)});s("cells().cache()","cell().cache()",function(a){a="search"===a?"_aFilterData":"_aSortData";return this.iterator("cell",function(b,c,d){return b.aoData[c][a][d]},1)});s("cells().render()","cell().render()",function(a){return this.iterator("cell",function(b,c,d){return B(b,c,d,a)},1)});s("cells().indexes()","cell().index()",function(){return this.iterator("cell",function(a,
b,c){return{row:b,column:c,columnVisible:$(a,c)}},1)});s("cells().invalidate()","cell().invalidate()",function(a){return this.iterator("cell",function(b,c,d){ca(b,c,a,d)})});p("cell()",function(a,b,c){return bb(this.cells(a,b,c))});p("cell().data()",function(a){var b=this.context,c=this[0];if(a===k)return b.length&&c.length?B(b[0],c[0].row,c[0].column):k;jb(b[0],c[0].row,c[0].column,a);ca(b[0],c[0].row,"data",c[0].column);return this});p("order()",function(a,b){var c=this.context;if(a===k)return 0!==
c.length?c[0].aaSorting:k;"number"===typeof a?a=[[a,b]]:a.length&&!h.isArray(a[0])&&(a=Array.prototype.slice.call(arguments));return this.iterator("table",function(b){b.aaSorting=a.slice()})});p("order.listener()",function(a,b,c){return this.iterator("table",function(d){Ma(d,a,b,c)})});p("order.fixed()",function(a){if(!a){var b=this.context,b=b.length?b[0].aaSortingFixed:k;return h.isArray(b)?{pre:b}:b}return this.iterator("table",function(b){b.aaSortingFixed=h.extend(!0,{},a)})});p(["columns().order()",
"column().order()"],function(a){var b=this;return this.iterator("table",function(c,d){var e=[];h.each(b[d],function(b,c){e.push([c,a])});c.aaSorting=e})});p("search()",function(a,b,c,d){var e=this.context;return a===k?0!==e.length?e[0].oPreviousSearch.sSearch:k:this.iterator("table",function(e){e.oFeatures.bFilter&&fa(e,h.extend({},e.oPreviousSearch,{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),1)})});s("columns().search()","column().search()",function(a,
b,c,d){return this.iterator("column",function(e,f){var g=e.aoPreSearchCols;if(a===k)return g[f].sSearch;e.oFeatures.bFilter&&(h.extend(g[f],{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),fa(e,e.oPreviousSearch,1))})});p("state()",function(){return this.context.length?this.context[0].oSavedState:null});p("state.clear()",function(){return this.iterator("table",function(a){a.fnStateSaveCallback.call(a.oInstance,a,{})})});p("state.loaded()",function(){return this.context.length?
this.context[0].oLoadedState:null});p("state.save()",function(){return this.iterator("table",function(a){wa(a)})});m.versionCheck=m.fnVersionCheck=function(a){for(var b=m.version.split("."),a=a.split("."),c,d,e=0,f=a.length;e<f;e++)if(c=parseInt(b[e],10)||0,d=parseInt(a[e],10)||0,c!==d)return c>d;return!0};m.isDataTable=m.fnIsDataTable=function(a){var b=h(a).get(0),c=!1;h.each(m.settings,function(a,e){var f=e.nScrollHead?h("table",e.nScrollHead)[0]:null,g=e.nScrollFoot?h("table",e.nScrollFoot)[0]:
null;if(e.nTable===b||f===b||g===b)c=!0});return c};m.tables=m.fnTables=function(a){var b=!1;h.isPlainObject(a)&&(b=a.api,a=a.visible);var c=h.map(m.settings,function(b){if(!a||a&&h(b.nTable).is(":visible"))return b.nTable});return b?new r(c):c};m.camelToHungarian=K;p("$()",function(a,b){var c=this.rows(b).nodes(),c=h(c);return h([].concat(c.filter(a).toArray(),c.find(a).toArray()))});h.each(["on","one","off"],function(a,b){p(b+"()",function(){var a=Array.prototype.slice.call(arguments);a[0].match(/\.dt\b/)||
(a[0]+=".dt");var d=h(this.tables().nodes());d[b].apply(d,a);return this})});p("clear()",function(){return this.iterator("table",function(a){na(a)})});p("settings()",function(){return new r(this.context,this.context)});p("init()",function(){var a=this.context;return a.length?a[0].oInit:null});p("data()",function(){return this.iterator("table",function(a){return G(a.aoData,"_aData")}).flatten()});p("destroy()",function(a){a=a||!1;return this.iterator("table",function(b){var c=b.nTableWrapper.parentNode,
d=b.oClasses,e=b.nTable,f=b.nTBody,g=b.nTHead,j=b.nTFoot,i=h(e),f=h(f),k=h(b.nTableWrapper),l=h.map(b.aoData,function(a){return a.nTr}),p;b.bDestroying=!0;u(b,"aoDestroyCallback","destroy",[b]);a||(new r(b)).columns().visible(!0);k.unbind(".DT").find(":not(tbody *)").unbind(".DT");h(D).unbind(".DT-"+b.sInstance);e!=g.parentNode&&(i.children("thead").detach(),i.append(g));j&&e!=j.parentNode&&(i.children("tfoot").detach(),i.append(j));b.aaSorting=[];b.aaSortingFixed=[];va(b);h(l).removeClass(b.asStripeClasses.join(" "));
h("th, td",g).removeClass(d.sSortable+" "+d.sSortableAsc+" "+d.sSortableDesc+" "+d.sSortableNone);b.bJUI&&(h("th span."+d.sSortIcon+", td span."+d.sSortIcon,g).detach(),h("th, td",g).each(function(){var a=h("div."+d.sSortJUIWrapper,this);h(this).append(a.contents());a.detach()}));f.children().detach();f.append(l);g=a?"remove":"detach";i[g]();k[g]();!a&&c&&(c.insertBefore(e,b.nTableReinsertBefore),i.css("width",b.sDestroyWidth).removeClass(d.sTable),(p=b.asDestroyStripes.length)&&f.children().each(function(a){h(this).addClass(b.asDestroyStripes[a%
p])}));c=h.inArray(b,m.settings);-1!==c&&m.settings.splice(c,1)})});h.each(["column","row","cell"],function(a,b){p(b+"s().every()",function(a){var d=this.selector.opts,e=this;return this.iterator(b,function(f,g,h,i,n){a.call(e[b](g,"cell"===b?h:d,"cell"===b?d:k),g,h,i,n)})})});p("i18n()",function(a,b,c){var d=this.context[0],a=Q(a)(d.oLanguage);a===k&&(a=b);c!==k&&h.isPlainObject(a)&&(a=a[c]!==k?a[c]:a._);return a.replace("%d",c)});m.version="1.10.12";m.settings=[];m.models={};m.models.oSearch={bCaseInsensitive:!0,
sSearch:"",bRegex:!1,bSmart:!0};m.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:"",src:null,idx:-1};m.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:"std",sSortingClass:null,sSortingClassJUI:null,
sTitle:null,sType:null,sWidth:null,sWidthOrig:null};m.defaults={aaData:null,aaSorting:[[0,"asc"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bJQueryUI:!1,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,
fnFormatNumber:function(a){return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(a){try{return JSON.parse((-1===a.iStateDuration?sessionStorage:localStorage).getItem("DataTables_"+a.sInstance+"_"+location.pathname))}catch(b){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(a,b){try{(-1===
a.iStateDuration?sessionStorage:localStorage).setItem("DataTables_"+a.sInstance+"_"+location.pathname,JSON.stringify(b))}catch(c){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:": activate to sort column ascending",sSortDescending:": activate to sort column descending"},oPaginate:{sFirst:"First",sLast:"Last",sNext:"Next",sPrevious:"Previous"},sEmptyTable:"No data available in table",sInfo:"Showing _START_ to _END_ of _TOTAL_ entries",
sInfoEmpty:"Showing 0 to 0 of 0 entries",sInfoFiltered:"(filtered from _MAX_ total entries)",sInfoPostFix:"",sDecimal:"",sThousands:",",sLengthMenu:"Show _MENU_ entries",sLoadingRecords:"Loading...",sProcessing:"Processing...",sSearch:"Search:",sSearchPlaceholder:"",sUrl:"",sZeroRecords:"No matching records found"},oSearch:h.extend({},m.models.oSearch),sAjaxDataProp:"data",sAjaxSource:null,sDom:"lfrtip",searchDelay:null,sPaginationType:"simple_numbers",sScrollX:"",sScrollXInner:"",sScrollY:"",sServerMethod:"GET",
renderer:null,rowId:"DT_RowId"};X(m.defaults);m.defaults.column={aDataSort:null,iDataSort:-1,asSorting:["asc","desc"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:"td",sClass:"",sContentPadding:"",sDefaultContent:null,sName:"",sSortDataType:"std",sTitle:null,sType:null,sWidth:null};X(m.defaults.column);m.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,
bSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1,bBounding:!1,barWidth:0},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aIds:{},aoColumns:[],aoHeader:[],aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],
aoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:"",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:"two_button",iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:k,oAjaxData:k,
fnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,bJUI:null,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return"ssp"==y(this)?1*this._iRecordsTotal:this.aiDisplayMaster.length},fnRecordsDisplay:function(){return"ssp"==y(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var a=
this._iDisplayLength,b=this._iDisplayStart,c=b+a,d=this.aiDisplay.length,e=this.oFeatures,f=e.bPaginate;return e.bServerSide?!1===f||-1===a?b+d:Math.min(b+a,this._iRecordsDisplay):!f||c>d||-1===a?d:c},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{},rowIdFn:null,rowId:null};m.ext=v={buttons:{},classes:{},builder:"-source-",errMode:"alert",feature:[],search:[],selector:{cell:[],column:[],row:[]},internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},
header:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:m.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:m.version};h.extend(v,{afnFiltering:v.search,aTypes:v.type.detect,ofnSearch:v.type.search,oSort:v.type.order,afnSortData:v.order,aoFeatures:v.feature,oApi:v.internal,oStdClasses:v.classes,oPagination:v.pager});h.extend(m.ext.classes,{sTable:"dataTable",sNoFooter:"no-footer",sPageButton:"paginate_button",sPageButtonActive:"current",sPageButtonDisabled:"disabled",sStripeOdd:"odd",
sStripeEven:"even",sRowEmpty:"dataTables_empty",sWrapper:"dataTables_wrapper",sFilter:"dataTables_filter",sInfo:"dataTables_info",sPaging:"dataTables_paginate paging_",sLength:"dataTables_length",sProcessing:"dataTables_processing",sSortAsc:"sorting_asc",sSortDesc:"sorting_desc",sSortable:"sorting",sSortableAsc:"sorting_asc_disabled",sSortableDesc:"sorting_desc_disabled",sSortableNone:"sorting_disabled",sSortColumn:"sorting_",sFilterInput:"",sLengthSelect:"",sScrollWrapper:"dataTables_scroll",sScrollHead:"dataTables_scrollHead",
sScrollHeadInner:"dataTables_scrollHeadInner",sScrollBody:"dataTables_scrollBody",sScrollFoot:"dataTables_scrollFoot",sScrollFootInner:"dataTables_scrollFootInner",sHeaderTH:"",sFooterTH:"",sSortJUIAsc:"",sSortJUIDesc:"",sSortJUI:"",sSortJUIAscAllowed:"",sSortJUIDescAllowed:"",sSortJUIWrapper:"",sSortIcon:"",sJUIHeader:"",sJUIFooter:""});var Ca="",Ca="",H=Ca+"ui-state-default",ia=Ca+"css_right ui-icon ui-icon-",Xb=Ca+"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix";h.extend(m.ext.oJUIClasses,
m.ext.classes,{sPageButton:"fg-button ui-button "+H,sPageButtonActive:"ui-state-disabled",sPageButtonDisabled:"ui-state-disabled",sPaging:"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",sSortAsc:H+" sorting_asc",sSortDesc:H+" sorting_desc",sSortable:H+" sorting",sSortableAsc:H+" sorting_asc_disabled",sSortableDesc:H+" sorting_desc_disabled",sSortableNone:H+" sorting_disabled",sSortJUIAsc:ia+"triangle-1-n",sSortJUIDesc:ia+"triangle-1-s",sSortJUI:ia+"carat-2-n-s",
sSortJUIAscAllowed:ia+"carat-1-n",sSortJUIDescAllowed:ia+"carat-1-s",sSortJUIWrapper:"DataTables_sort_wrapper",sSortIcon:"DataTables_sort_icon",sScrollHead:"dataTables_scrollHead "+H,sScrollFoot:"dataTables_scrollFoot "+H,sHeaderTH:H,sFooterTH:H,sJUIHeader:Xb+" ui-corner-tl ui-corner-tr",sJUIFooter:Xb+" ui-corner-bl ui-corner-br"});var Mb=m.ext.pager;h.extend(Mb,{simple:function(){return["previous","next"]},full:function(){return["first","previous","next","last"]},numbers:function(a,b){return[ya(a,
b)]},simple_numbers:function(a,b){return["previous",ya(a,b),"next"]},full_numbers:function(a,b){return["first","previous",ya(a,b),"next","last"]},_numbers:ya,numbers_length:7});h.extend(!0,m.ext.renderer,{pageButton:{_:function(a,b,c,d,e,f){var g=a.oClasses,j=a.oLanguage.oPaginate,i=a.oLanguage.oAria.paginate||{},k,l,m=0,p=function(b,d){var o,r,u,s,v=function(b){Ta(a,b.data.action,true)};o=0;for(r=d.length;o<r;o++){s=d[o];if(h.isArray(s)){u=h("<"+(s.DT_el||"div")+"/>").appendTo(b);p(u,s)}else{k=null;
l="";switch(s){case "ellipsis":b.append('<span class="ellipsis">&#x2026;</span>');break;case "first":k=j.sFirst;l=s+(e>0?"":" "+g.sPageButtonDisabled);break;case "previous":k=j.sPrevious;l=s+(e>0?"":" "+g.sPageButtonDisabled);break;case "next":k=j.sNext;l=s+(e<f-1?"":" "+g.sPageButtonDisabled);break;case "last":k=j.sLast;l=s+(e<f-1?"":" "+g.sPageButtonDisabled);break;default:k=s+1;l=e===s?g.sPageButtonActive:""}if(k!==null){u=h("<a>",{"class":g.sPageButton+" "+l,"aria-controls":a.sTableId,"aria-label":i[s],
"data-dt-idx":m,tabindex:a.iTabIndex,id:c===0&&typeof s==="string"?a.sTableId+"_"+s:null}).html(k).appendTo(b);Wa(u,{action:s},v);m++}}}},r;try{r=h(b).find(I.activeElement).data("dt-idx")}catch(o){}p(h(b).empty(),d);r&&h(b).find("[data-dt-idx="+r+"]").focus()}}});h.extend(m.ext.type.detect,[function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c)?"num"+c:null},function(a){if(a&&!(a instanceof Date)&&(!ac.test(a)||!bc.test(a)))return null;var b=Date.parse(a);return null!==b&&!isNaN(b)||M(a)?"date":
null},function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c,!0)?"num-fmt"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c)?"html-num"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c,!0)?"html-num-fmt"+c:null},function(a){return M(a)||"string"===typeof a&&-1!==a.indexOf("<")?"html":null}]);h.extend(m.ext.type.search,{html:function(a){return M(a)?a:"string"===typeof a?a.replace(Ob," ").replace(Aa,""):""},string:function(a){return M(a)?a:"string"===typeof a?a.replace(Ob,
" "):a}});var za=function(a,b,c,d){if(0!==a&&(!a||"-"===a))return-Infinity;b&&(a=Qb(a,b));a.replace&&(c&&(a=a.replace(c,"")),d&&(a=a.replace(d,"")));return 1*a};h.extend(v.type.order,{"date-pre":function(a){return Date.parse(a)||0},"html-pre":function(a){return M(a)?"":a.replace?a.replace(/<.*?>/g,"").toLowerCase():a+""},"string-pre":function(a){return M(a)?"":"string"===typeof a?a.toLowerCase():!a.toString?"":a.toString()},"string-asc":function(a,b){return a<b?-1:a>b?1:0},"string-desc":function(a,
b){return a<b?1:a>b?-1:0}});db("");h.extend(!0,m.ext.renderer,{header:{_:function(a,b,c,d){h(a.nTable).on("order.dt.DT",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(c.sSortingClass+" "+d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass)}})},jqueryui:function(a,b,c,d){h("<div/>").addClass(d.sSortJUIWrapper).append(b.contents()).append(h("<span/>").addClass(d.sSortIcon+" "+c.sSortingClassJUI)).appendTo(b);h(a.nTable).on("order.dt.DT",function(e,
f,g,h){if(a===f){e=c.idx;b.removeClass(d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass);b.find("span."+d.sSortIcon).removeClass(d.sSortJUIAsc+" "+d.sSortJUIDesc+" "+d.sSortJUI+" "+d.sSortJUIAscAllowed+" "+d.sSortJUIDescAllowed).addClass(h[e]=="asc"?d.sSortJUIAsc:h[e]=="desc"?d.sSortJUIDesc:c.sSortingClassJUI)}})}}});var Yb=function(a){return"string"===typeof a?a.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"):a};m.render={number:function(a,
b,c,d,e){return{display:function(f){if("number"!==typeof f&&"string"!==typeof f)return f;var g=0>f?"-":"",h=parseFloat(f);if(isNaN(h))return Yb(f);f=Math.abs(h);h=parseInt(f,10);f=c?b+(f-h).toFixed(c).substring(2):"";return g+(d||"")+h.toString().replace(/\B(?=(\d{3})+(?!\d))/g,a)+f+(e||"")}}},text:function(){return{display:Yb}}};h.extend(m.ext.internal,{_fnExternApiFunc:Nb,_fnBuildAjax:ra,_fnAjaxUpdate:lb,_fnAjaxParameters:ub,_fnAjaxUpdateDraw:vb,_fnAjaxDataSrc:sa,_fnAddColumn:Ea,_fnColumnOptions:ja,
_fnAdjustColumnSizing:Y,_fnVisibleToColumnIndex:Z,_fnColumnIndexToVisible:$,_fnVisbleColumns:aa,_fnGetColumns:la,_fnColumnTypes:Ga,_fnApplyColumnDefs:ib,_fnHungarianMap:X,_fnCamelToHungarian:K,_fnLanguageCompat:Da,_fnBrowserDetect:gb,_fnAddData:N,_fnAddTr:ma,_fnNodeToDataIndex:function(a,b){return b._DT_RowIndex!==k?b._DT_RowIndex:null},_fnNodeToColumnIndex:function(a,b,c){return h.inArray(c,a.aoData[b].anCells)},_fnGetCellData:B,_fnSetCellData:jb,_fnSplitObjNotation:Ja,_fnGetObjectDataFn:Q,_fnSetObjectDataFn:R,
_fnGetDataMaster:Ka,_fnClearTable:na,_fnDeleteIndex:oa,_fnInvalidate:ca,_fnGetRowElements:Ia,_fnCreateTr:Ha,_fnBuildHead:kb,_fnDrawHead:ea,_fnDraw:O,_fnReDraw:T,_fnAddOptionsHtml:nb,_fnDetectHeader:da,_fnGetUniqueThs:qa,_fnFeatureHtmlFilter:pb,_fnFilterComplete:fa,_fnFilterCustom:yb,_fnFilterColumn:xb,_fnFilter:wb,_fnFilterCreateSearch:Pa,_fnEscapeRegex:Qa,_fnFilterData:zb,_fnFeatureHtmlInfo:sb,_fnUpdateInfo:Cb,_fnInfoMacros:Db,_fnInitialise:ga,_fnInitComplete:ta,_fnLengthChange:Ra,_fnFeatureHtmlLength:ob,
_fnFeatureHtmlPaginate:tb,_fnPageChange:Ta,_fnFeatureHtmlProcessing:qb,_fnProcessingDisplay:C,_fnFeatureHtmlTable:rb,_fnScrollDraw:ka,_fnApplyToChildren:J,_fnCalculateColumnWidths:Fa,_fnThrottle:Oa,_fnConvertToWidth:Fb,_fnGetWidestNode:Gb,_fnGetMaxLenString:Hb,_fnStringToCss:x,_fnSortFlatten:V,_fnSort:mb,_fnSortAria:Jb,_fnSortListener:Va,_fnSortAttachListener:Ma,_fnSortingClasses:va,_fnSortData:Ib,_fnSaveState:wa,_fnLoadState:Kb,_fnSettingsFromNode:xa,_fnLog:L,_fnMap:E,_fnBindAction:Wa,_fnCallbackReg:z,
_fnCallbackFire:u,_fnLengthOverflow:Sa,_fnRenderer:Na,_fnDataSource:y,_fnRowAttributes:La,_fnCalculateEnd:function(){}});h.fn.dataTable=m;m.$=h;h.fn.dataTableSettings=m.settings;h.fn.dataTableExt=m.ext;h.fn.DataTable=function(a){return h(this).dataTable(a).api()};h.each(m,function(a,b){h.fn.DataTable[a]=b});return h.fn.dataTable});
/*! Responsive 2.1.0
 * 2014-2016 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     Responsive
 * @description Responsive tables plug-in for DataTables
 * @version     2.1.0
 * @file        dataTables.responsive.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2014-2016 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/**
 * Responsive is a plug-in for the DataTables library that makes use of
 * DataTables' ability to change the visibility of columns, changing the
 * visibility of columns so the displayed columns fit into the table container.
 * The end result is that complex tables will be dynamically adjusted to fit
 * into the viewport, be it on a desktop, tablet or mobile browser.
 *
 * Responsive for DataTables has two modes of operation, which can used
 * individually or combined:
 *
 * * Class name based control - columns assigned class names that match the
 *   breakpoint logic can be shown / hidden as required for each breakpoint.
 * * Automatic control - columns are automatically hidden when there is no
 *   room left to display them. Columns removed from the right.
 *
 * In additional to column visibility control, Responsive also has built into
 * options to use DataTables' child row display to show / hide the information
 * from the table that has been hidden. There are also two modes of operation
 * for this child row display:
 *
 * * Inline - when the control element that the user can use to show / hide
 *   child rows is displayed inside the first column of the table.
 * * Column - where a whole column is dedicated to be the show / hide control.
 *
 * Initialisation of Responsive is performed by:
 *
 * * Adding the class `responsive` or `dt-responsive` to the table. In this case
 *   Responsive will automatically be initialised with the default configuration
 *   options when the DataTable is created.
 * * Using the `responsive` option in the DataTables configuration options. This
 *   can also be used to specify the configuration options, or simply set to
 *   `true` to use the defaults.
 *
 *  @class
 *  @param {object} settings DataTables settings object for the host table
 *  @param {object} [opts] Configuration options
 *  @requires jQuery 1.7+
 *  @requires DataTables 1.10.3+
 *
 *  @example
 *      $('#example').DataTable( {
 *        responsive: true
 *      } );
 *    } );
 */
var Responsive = function ( settings, opts ) {
	// Sanity check that we are using DataTables 1.10 or newer
	if ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.3' ) ) {
		throw 'DataTables Responsive requires DataTables 1.10.3 or newer';
	}

	this.s = {
		dt: new DataTable.Api( settings ),
		columns: [],
		current: []
	};

	// Check if responsive has already been initialised on this table
	if ( this.s.dt.settings()[0].responsive ) {
		return;
	}

	// details is an object, but for simplicity the user can give it as a string
	// or a boolean
	if ( opts && typeof opts.details === 'string' ) {
		opts.details = { type: opts.details };
	}
	else if ( opts && opts.details === false ) {
		opts.details = { type: false };
	}
	else if ( opts && opts.details === true ) {
		opts.details = { type: 'inline' };
	}

	this.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );
	settings.responsive = this;
	this._constructor();
};

$.extend( Responsive.prototype, {
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Constructor
	 */

	/**
	 * Initialise the Responsive instance
	 *
	 * @private
	 */
	_constructor: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var dtPrivateSettings = dt.settings()[0];
		var oldWindowWidth = $(window).width();

		dt.settings()[0]._responsive = this;

		// Use DataTables' throttle function to avoid processor thrashing on
		// resize
		$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {
			// iOS has a bug whereby resize can fire when only scrolling
			// See: http://stackoverflow.com/questions/8898412
			var width = $(window).width();

			if ( width !== oldWindowWidth ) {
				that._resize();
				oldWindowWidth = width;
			}
		} ) );

		// DataTables doesn't currently trigger an event when a row is added, so
		// we need to hook into its private API to enforce the hidden rows when
		// new data is added
		dtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {
			if ( $.inArray( false, that.s.current ) !== -1 ) {
				$('td, th', tr).each( function ( i ) {
					var idx = dt.column.index( 'toData', i );

					if ( that.s.current[idx] === false ) {
						$(this).css('display', 'none');
					}
				} );
			}
		} );

		// Destroy event handler
		dt.on( 'destroy.dtr', function () {
			dt.off( '.dtr' );
			$( dt.table().body() ).off( '.dtr' );
			$(window).off( 'resize.dtr orientationchange.dtr' );

			// Restore the columns that we've hidden
			$.each( that.s.current, function ( i, val ) {
				if ( val === false ) {
					that._setColumnVis( i, true );
				}
			} );
		} );

		// Reorder the breakpoints array here in case they have been added out
		// of order
		this.c.breakpoints.sort( function (a, b) {
			return a.width < b.width ? 1 :
				a.width > b.width ? -1 : 0;
		} );

		this._classLogic();
		this._resizeAuto();

		// Details handler
		var details = this.c.details;

		if ( details.type !== false ) {
			that._detailsInit();

			// DataTables will trigger this event on every column it shows and
			// hides individually
			dt.on( 'column-visibility.dtr', function (e, ctx, col, vis) {
				that._classLogic();
				that._resizeAuto();
				that._resize();
			} );

			// Redraw the details box on each draw which will happen if the data
			// has changed. This is used until DataTables implements a native
			// `updated` event for rows
			dt.on( 'draw.dtr', function () {
				that._redrawChildren();
			} );

			$(dt.table().node()).addClass( 'dtr-'+details.type );
		}

		dt.on( 'column-reorder.dtr', function (e, settings, details) {
			that._classLogic();
			that._resizeAuto();
			that._resize();
		} );

		// Change in column sizes means we need to calc
		dt.on( 'column-sizing.dtr', function () {
			that._resizeAuto();
			that._resize();
		});

		dt.on( 'init.dtr', function (e, settings, details) {
			that._resizeAuto();
			that._resize();

			// If columns were hidden, then DataTables needs to adjust the
			// column sizing
			if ( $.inArray( false, that.s.current ) ) {
				dt.columns.adjust();
			}
		} );

		// First pass - draw the table for the current viewport size
		this._resize();
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Private methods
	 */

	/**
	 * Calculate the visibility for the columns in a table for a given
	 * breakpoint. The result is pre-determined based on the class logic if
	 * class names are used to control all columns, but the width of the table
	 * is also used if there are columns which are to be automatically shown
	 * and hidden.
	 *
	 * @param  {string} breakpoint Breakpoint name to use for the calculation
	 * @return {array} Array of boolean values initiating the visibility of each
	 *   column.
	 *  @private
	 */
	_columnsVisiblity: function ( breakpoint )
	{
		var dt = this.s.dt;
		var columns = this.s.columns;
		var i, ien;

		// Create an array that defines the column ordering based first on the
		// column's priority, and secondly the column index. This allows the
		// columns to be removed from the right if the priority matches
		var order = columns
			.map( function ( col, idx ) {
				return {
					columnIdx: idx,
					priority: col.priority
				};
			} )
			.sort( function ( a, b ) {
				if ( a.priority !== b.priority ) {
					return a.priority - b.priority;
				}
				return a.columnIdx - b.columnIdx;
			} );

		// Class logic - determine which columns are in this breakpoint based
		// on the classes. If no class control (i.e. `auto`) then `-` is used
		// to indicate this to the rest of the function
		var display = $.map( columns, function ( col ) {
			return col.auto && col.minWidth === null ?
				false :
				col.auto === true ?
					'-' :
					$.inArray( breakpoint, col.includeIn ) !== -1;
		} );

		// Auto column control - first pass: how much width is taken by the
		// ones that must be included from the non-auto columns
		var requiredWidth = 0;
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( display[i] === true ) {
				requiredWidth += columns[i].minWidth;
			}
		}

		// Second pass, use up any remaining width for other columns. For
		// scrolling tables we need to subtract the width of the scrollbar. It
		// may not be requires which makes this sub-optimal, but it would
		// require another full redraw to make complete use of those extra few
		// pixels
		var scrolling = dt.settings()[0].oScroll;
		var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;
		var widthAvailable = dt.table().container().offsetWidth - bar;
		var usedWidth = widthAvailable - requiredWidth;

		// Control column needs to always be included. This makes it sub-
		// optimal in terms of using the available with, but to stop layout
		// thrashing or overflow. Also we need to account for the control column
		// width first so we know how much width is available for the other
		// columns, since the control column might not be the first one shown
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				usedWidth -= columns[i].minWidth;
			}
		}

		// Allow columns to be shown (counting by priority and then right to
		// left) until we run out of room
		var empty = false;
		for ( i=0, ien=order.length ; i<ien ; i++ ) {
			var colIdx = order[i].columnIdx;

			if ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {
				// Once we've found a column that won't fit we don't let any
				// others display either, or columns might disappear in the
				// middle of the table
				if ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {
					empty = true;
					display[colIdx] = false;
				}
				else {
					display[colIdx] = true;
				}

				usedWidth -= columns[colIdx].minWidth;
			}
		}

		// Determine if the 'control' column should be shown (if there is one).
		// This is the case when there is a hidden column (that is not the
		// control column). The two loops look inefficient here, but they are
		// trivial and will fly through. We need to know the outcome from the
		// first , before the action in the second can be taken
		var showControl = false;

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( ! columns[i].control && ! columns[i].never && ! display[i] ) {
				showControl = true;
				break;
			}
		}

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				display[i] = showControl;
			}
		}

		// Finally we need to make sure that there is at least one column that
		// is visible
		if ( $.inArray( true, display ) === -1 ) {
			display[0] = true;
		}

		return display;
	},


	/**
	 * Create the internal `columns` array with information about the columns
	 * for the table. This includes determining which breakpoints the column
	 * will appear in, based upon class names in the column, which makes up the
	 * vast majority of this method.
	 *
	 * @private
	 */
	_classLogic: function ()
	{
		var that = this;
		var calc = {};
		var breakpoints = this.c.breakpoints;
		var dt = this.s.dt;
		var columns = dt.columns().eq(0).map( function (i) {
			var column = this.column(i);
			var className = column.header().className;
			var priority = dt.settings()[0].aoColumns[i].responsivePriority;

			if ( priority === undefined ) {
				var dataPriority = $(column.header()).data('priority');

				priority = dataPriority !== undefined ?
					dataPriority * 1 :
					10000;
			}

			return {
				className: className,
				includeIn: [],
				auto:      false,
				control:   false,
				never:     className.match(/\bnever\b/) ? true : false,
				priority:  priority
			};
		} );

		// Simply add a breakpoint to `includeIn` array, ensuring that there are
		// no duplicates
		var add = function ( colIdx, name ) {
			var includeIn = columns[ colIdx ].includeIn;

			if ( $.inArray( name, includeIn ) === -1 ) {
				includeIn.push( name );
			}
		};

		var column = function ( colIdx, name, operator, matched ) {
			var size, i, ien;

			if ( ! operator ) {
				columns[ colIdx ].includeIn.push( name );
			}
			else if ( operator === 'max-' ) {
				// Add this breakpoint and all smaller
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width <= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'min-' ) {
				// Add this breakpoint and all larger
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width >= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'not-' ) {
				// Add all but this breakpoint
				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].name.indexOf( matched ) === -1 ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
		};

		// Loop over each column and determine if it has a responsive control
		// class
		columns.each( function ( col, i ) {
			var classNames = col.className.split(' ');
			var hasClass = false;

			// Split the class name up so multiple rules can be applied if needed
			for ( var k=0, ken=classNames.length ; k<ken ; k++ ) {
				var className = $.trim( classNames[k] );

				if ( className === 'all' ) {
					// Include in all
					hasClass = true;
					col.includeIn = $.map( breakpoints, function (a) {
						return a.name;
					} );
					return;
				}
				else if ( className === 'none' || col.never ) {
					// Include in none (default) and no auto
					hasClass = true;
					return;
				}
				else if ( className === 'control' ) {
					// Special column that is only visible, when one of the other
					// columns is hidden. This is used for the details control
					hasClass = true;
					col.control = true;
					return;
				}

				$.each( breakpoints, function ( j, breakpoint ) {
					// Does this column have a class that matches this breakpoint?
					var brokenPoint = breakpoint.name.split('-');
					var re = new RegExp( '(min\\-|max\\-|not\\-)?('+brokenPoint[0]+')(\\-[_a-zA-Z0-9])?' );
					var match = className.match( re );

					if ( match ) {
						hasClass = true;

						if ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {
							// Class name matches breakpoint name fully
							column( i, breakpoint.name, match[1], match[2]+match[3] );
						}
						else if ( match[2] === brokenPoint[0] && ! match[3] ) {
							// Class name matched primary breakpoint name with no qualifier
							column( i, breakpoint.name, match[1], match[2] );
						}
					}
				} );
			}

			// If there was no control class, then automatic sizing is used
			if ( ! hasClass ) {
				col.auto = true;
			}
		} );

		this.s.columns = columns;
	},


	/**
	 * Show the details for the child row
	 *
	 * @param  {DataTables.Api} row    API instance for the row
	 * @param  {boolean}        update Update flag
	 * @private
	 */
	_detailsDisplay: function ( row, update )
	{
		var that = this;
		var dt = this.s.dt;
		var details = this.c.details;

		if ( details && details.type !== false ) {
			var res = details.display( row, update, function () {
				return details.renderer(
					dt, row[0], that._detailsObj(row[0])
				);
			} );

			if ( res === true || res === false ) {
				$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );
			}
		}
	},


	/**
	 * Initialisation for the details handler
	 *
	 * @private
	 */
	_detailsInit: function ()
	{
		var that    = this;
		var dt      = this.s.dt;
		var details = this.c.details;

		// The inline type always uses the first child as the target
		if ( details.type === 'inline' ) {
			details.target = 'td:first-child, th:first-child';
		}

		// Keyboard accessibility
		dt.on( 'draw.dtr', function () {
			that._tabIndexes();
		} );
		that._tabIndexes(); // Initial draw has already happened

		$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {
			if ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {
				$(this).click();
			}
		} );

		// type.target can be a string jQuery selector or a column index
		var target   = details.target;
		var selector = typeof target === 'string' ? target : 'td, th';

		// Click handler to show / hide the details rows when they are available
		$( dt.table().body() )
			.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {
				// If the table is not collapsed (i.e. there is no hidden columns)
				// then take no action
				if ( ! $(dt.table().node()).hasClass('collapsed' ) ) {
					return;
				}

				// Check that the row is actually a DataTable's controlled node
				if ( ! dt.row( $(this).closest('tr') ).length ) {
					return;
				}

				// For column index, we determine if we should act or not in the
				// handler - otherwise it is already okay
				if ( typeof target === 'number' ) {
					var targetIdx = target < 0 ?
						dt.columns().eq(0).length + target :
						target;

					if ( dt.cell( this ).index().column !== targetIdx ) {
						return;
					}
				}

				// $().closest() includes itself in its check
				var row = dt.row( $(this).closest('tr') );

				// Check event type to do an action
				if ( e.type === 'click' ) {
					// The renderer is given as a function so the caller can execute it
					// only when they need (i.e. if hiding there is no point is running
					// the renderer)
					that._detailsDisplay( row, false );
				}
				else if ( e.type === 'mousedown' ) {
					// For mouse users, prevent the focus ring from showing
					$(this).css('outline', 'none');
				}
				else if ( e.type === 'mouseup' ) {
					// And then re-allow at the end of the click
					$(this).blur().css('outline', '');
				}
			} );
	},


	/**
	 * Get the details to pass to a renderer for a row
	 * @param  {int} rowIdx Row index
	 * @private
	 */
	_detailsObj: function ( rowIdx )
	{
		var that = this;
		var dt = this.s.dt;

		return $.map( this.s.columns, function( col, i ) {
			// Never and control columns should not be passed to the renderer
			if ( col.never || col.control ) {
				return;
			}

			return {
				title:       dt.settings()[0].aoColumns[ i ].sTitle,
				data:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),
				hidden:      dt.column( i ).visible() && !that.s.current[ i ],
				columnIndex: i,
				rowIndex:    rowIdx
			};
		} );
	},


	/**
	 * Find a breakpoint object from a name
	 *
	 * @param  {string} name Breakpoint name to find
	 * @return {object}      Breakpoint description object
	 * @private
	 */
	_find: function ( name )
	{
		var breakpoints = this.c.breakpoints;

		for ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {
			if ( breakpoints[i].name === name ) {
				return breakpoints[i];
			}
		}
	},


	/**
	 * Re-create the contents of the child rows as the display has changed in
	 * some way.
	 *
	 * @private
	 */
	_redrawChildren: function ()
	{
		var that = this;
		var dt = this.s.dt;

		dt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {
			var row = dt.row( idx );

			that._detailsDisplay( dt.row( idx ), true );
		} );
	},


	/**
	 * Alter the table display for a resized viewport. This involves first
	 * determining what breakpoint the window currently is in, getting the
	 * column visibilities to apply and then setting them.
	 *
	 * @private
	 */
	_resize: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var width = $(window).width();
		var breakpoints = this.c.breakpoints;
		var breakpoint = breakpoints[0].name;
		var columns = this.s.columns;
		var i, ien;
		var oldVis = this.s.current.slice();

		// Determine what breakpoint we are currently at
		for ( i=breakpoints.length-1 ; i>=0 ; i-- ) {
			if ( width <= breakpoints[i].width ) {
				breakpoint = breakpoints[i].name;
				break;
			}
		}
		
		// Show the columns for that break point
		var columnsVis = this._columnsVisiblity( breakpoint );
		this.s.current = columnsVis;

		// Set the class before the column visibility is changed so event
		// listeners know what the state is. Need to determine if there are
		// any columns that are not visible but can be shown
		var collapsedClass = false;
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control ) {
				collapsedClass = true;
				break;
			}
		}

		$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );

		var changed = false;

		dt.columns().eq(0).each( function ( colIdx, i ) {
			if ( columnsVis[i] !== oldVis[i] ) {
				changed = true;
				that._setColumnVis( colIdx, columnsVis[i] );
			}
		} );

		if ( changed ) {
			this._redrawChildren();

			// Inform listeners of the change
			$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );
		}
	},


	/**
	 * Determine the width of each column in the table so the auto column hiding
	 * has that information to work with. This method is never going to be 100%
	 * perfect since column widths can change slightly per page, but without
	 * seriously compromising performance this is quite effective.
	 *
	 * @private
	 */
	_resizeAuto: function ()
	{
		var dt = this.s.dt;
		var columns = this.s.columns;

		// Are we allowed to do auto sizing?
		if ( ! this.c.auto ) {
			return;
		}

		// Are there any columns that actually need auto-sizing, or do they all
		// have classes defined
		if ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {
			return;
		}

		// Clone the table with the current data in it
		var tableWidth   = dt.table().node().offsetWidth;
		var columnWidths = dt.columns;
		var clonedTable  = dt.table().node().cloneNode( false );
		var clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );
		var clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8

		// Header
		var headerCells = dt.columns()
			.header()
			.filter( function (idx) {
				return dt.column(idx).visible();
			} )
			.to$()
			.clone( false )
			.css( 'display', 'table-cell' );

		// Body rows - we don't need to take account of DataTables' column
		// visibility since we implement our own here (hence the `display` set)
		$(clonedBody)
			.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )
			.find( 'th, td' ).css( 'display', '' );

		// Footer
		var footer = dt.table().footer();
		if ( footer ) {
			var clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );
			var footerCells = dt.columns()
				.footer()
				.filter( function (idx) {
					return dt.column(idx).visible();
				} )
				.to$()
				.clone( false )
				.css( 'display', 'table-cell' );

			$('<tr/>')
				.append( footerCells )
				.appendTo( clonedFooter );
		}

		$('<tr/>')
			.append( headerCells )
			.appendTo( clonedHeader );

		// In the inline case extra padding is applied to the first column to
		// give space for the show / hide icon. We need to use this in the
		// calculation
		if ( this.c.details.type === 'inline' ) {
			$(clonedTable).addClass( 'dtr-inline collapsed' );
		}
		
		// It is unsafe to insert elements with the same name into the DOM
		// multiple times. For example, cloning and inserting a checked radio
		// clears the chcecked state of the original radio.
		$( clonedTable ).find( '[name]' ).removeAttr( 'name' );
		
		var inserted = $('<div/>')
			.css( {
				width: 1,
				height: 1,
				overflow: 'hidden'
			} )
			.append( clonedTable );

		inserted.insertBefore( dt.table().node() );

		// The cloned header now contains the smallest that each column can be
		headerCells.each( function (i) {
			var idx = dt.column.index( 'fromVisible', i );
			columns[ idx ].minWidth =  this.offsetWidth || 0;
		} );

		inserted.remove();
	},

	/**
	 * Set a column's visibility.
	 *
	 * We don't use DataTables' column visibility controls in order to ensure
	 * that column visibility can Responsive can no-exist. Since only IE8+ is
	 * supported (and all evergreen browsers of course) the control of the
	 * display attribute works well.
	 *
	 * @param {integer} col      Column index
	 * @param {boolean} showHide Show or hide (true or false)
	 * @private
	 */
	_setColumnVis: function ( col, showHide )
	{
		var dt = this.s.dt;
		var display = showHide ? '' : 'none'; // empty string will remove the attr

		$( dt.column( col ).header() ).css( 'display', display );
		$( dt.column( col ).footer() ).css( 'display', display );
		dt.column( col ).nodes().to$().css( 'display', display );
	},


	/**
	 * Update the cell tab indexes for keyboard accessibility. This is called on
	 * every table draw - that is potentially inefficient, but also the least
	 * complex option given that column visibility can change on the fly. Its a
	 * shame user-focus was removed from CSS 3 UI, as it would have solved this
	 * issue with a single CSS statement.
	 *
	 * @private
	 */
	_tabIndexes: function ()
	{
		var dt = this.s.dt;
		var cells = dt.cells( { page: 'current' } ).nodes().to$();
		var ctx = dt.settings()[0];
		var target = this.c.details.target;

		cells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );

		var selector = typeof target === 'number' ?
			':eq('+target+')' :
			target;

		$( selector, dt.rows( { page: 'current' } ).nodes() )
			.attr( 'tabIndex', ctx.iTabIndex )
			.data( 'dtr-keyboard', 1 );
	}
} );


/**
 * List of default breakpoints. Each item in the array is an object with two
 * properties:
 *
 * * `name` - the breakpoint name.
 * * `width` - the breakpoint width
 *
 * @name Responsive.breakpoints
 * @static
 */
Responsive.breakpoints = [
	{ name: 'desktop',  width: Infinity },
	{ name: 'tablet-l', width: 1024 },
	{ name: 'tablet-p', width: 768 },
	{ name: 'mobile-l', width: 480 },
	{ name: 'mobile-p', width: 320 }
];


/**
 * Display methods - functions which define how the hidden data should be shown
 * in the table.
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.display = {
	childRow: function ( row, update, render ) {
		if ( update ) {
			if ( $(row.node()).hasClass('parent') ) {
				row.child( render(), 'child' ).show();

				return true;
			}
		}
		else {
			if ( ! row.child.isShown()  ) {
				row.child( render(), 'child' ).show();
				$( row.node() ).addClass( 'parent' );

				return true;
			}
			else {
				row.child( false );
				$( row.node() ).removeClass( 'parent' );

				return false;
			}
		}
	},

	childRowImmediate: function ( row, update, render ) {
		if ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {
			// User interaction and the row is show, or nothing to show
			row.child( false );
			$( row.node() ).removeClass( 'parent' );

			return false;
		}
		else {
			// Display
			row.child( render(), 'child' ).show();
			$( row.node() ).addClass( 'parent' );

			return true;
		}
	},

	// This is a wrapper so the modal options for Bootstrap and jQuery UI can
	// have options passed into them. This specific one doesn't need to be a
	// function but it is for consistency in the `modal` name
	modal: function ( options ) {
		return function ( row, update, render ) {
			if ( ! update ) {
				// Show a modal
				var close = function () {
					modal.remove(); // will tidy events for us
					$(document).off( 'keypress.dtr' );
				};

				var modal = $('<div class="dtr-modal"/>')
					.append( $('<div class="dtr-modal-display"/>')
						.append( $('<div class="dtr-modal-content"/>')
							.append( render() )
						)
						.append( $('<div class="dtr-modal-close">&times;</div>' )
							.click( function () {
								close();
							} )
						)
					)
					.append( $('<div class="dtr-modal-background"/>')
						.click( function () {
							close();
						} )
					)
					.appendTo( 'body' );

				$(document).on( 'keyup.dtr', function (e) {
					if ( e.keyCode === 27 ) {
						e.stopPropagation();

						close();
					}
				} );
			}
			else {
				$('div.dtr-modal-content')
					.empty()
					.append( render() );
			}

			if ( options && options.header ) {
				$('div.dtr-modal-content').prepend(
					'<h2>'+options.header( row )+'</h2>'
				);
			}
		};
	}
};


/**
 * Display methods - functions which define how the hidden data should be shown
 * in the table.
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.renderer = {
	listHidden: function () {
		return function ( api, rowIdx, columns ) {
			var data = $.map( columns, function ( col ) {
				return col.hidden ?
					'<li data-dtr-index="'+col.columnIndex+'" data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
						'<span class="dtr-title">'+
							col.title+
						'</span> '+
						'<span class="dtr-data">'+
							col.data+
						'</span>'+
					'</li>' :
					'';
			} ).join('');

			return data ?
				$('<ul data-dtr-index="'+rowIdx+'"/>').append( data ) :
				false;
		}
	},

	tableAll: function ( options ) {
		options = $.extend( {
			tableClass: ''
		}, options );

		return function ( api, rowIdx, columns ) {
			var data = $.map( columns, function ( col ) {
				return '<tr data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
						'<td>'+col.title+':'+'</td> '+
						'<td>'+col.data+'</td>'+
					'</tr>';
			} ).join('');

			return $('<table class="'+options.tableClass+'" width="100%"/>').append( data );
		}
	}
};

/**
 * Responsive default settings for initialisation
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.defaults = {
	/**
	 * List of breakpoints for the instance. Note that this means that each
	 * instance can have its own breakpoints. Additionally, the breakpoints
	 * cannot be changed once an instance has been creased.
	 *
	 * @type {Array}
	 * @default Takes the value of `Responsive.breakpoints`
	 */
	breakpoints: Responsive.breakpoints,

	/**
	 * Enable / disable auto hiding calculations. It can help to increase
	 * performance slightly if you disable this option, but all columns would
	 * need to have breakpoint classes assigned to them
	 *
	 * @type {Boolean}
	 * @default  `true`
	 */
	auto: true,

	/**
	 * Details control. If given as a string value, the `type` property of the
	 * default object is set to that value, and the defaults used for the rest
	 * of the object - this is for ease of implementation.
	 *
	 * The object consists of the following properties:
	 *
	 * * `display` - A function that is used to show and hide the hidden details
	 * * `renderer` - function that is called for display of the child row data.
	 *   The default function will show the data from the hidden columns
	 * * `target` - Used as the selector for what objects to attach the child
	 *   open / close to
	 * * `type` - `false` to disable the details display, `inline` or `column`
	 *   for the two control types
	 *
	 * @type {Object|string}
	 */
	details: {
		display: Responsive.display.childRow,

		renderer: Responsive.renderer.listHidden(),

		target: 0,

		type: 'inline'
	},

	/**
	 * Orthogonal data request option. This is used to define the data type
	 * requested when Responsive gets the data to show in the child row.
	 *
	 * @type {String}
	 */
	orthogonal: 'display'
};


/*
 * API
 */
var Api = $.fn.dataTable.Api;

// Doesn't do anything - work around for a bug in DT... Not documented
Api.register( 'responsive()', function () {
	return this;
} );

Api.register( 'responsive.index()', function ( li ) {
	li = $(li);

	return {
		column: li.data('dtr-index'),
		row:    li.parent().data('dtr-index')
	};
} );

Api.register( 'responsive.rebuild()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._classLogic();
		}
	} );
} );

Api.register( 'responsive.recalc()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._resizeAuto();
			ctx._responsive._resize();
		}
	} );
} );

Api.register( 'responsive.hasHidden()', function () {
	var ctx = this.context[0];

	return ctx._responsive ?
		$.inArray( false, ctx._responsive.s.current ) !== -1 :
		false;
} );


/**
 * Version information
 *
 * @name Responsive.version
 * @static
 */
Responsive.version = '2.1.0';


$.fn.dataTable.Responsive = Responsive;
$.fn.DataTable.Responsive = Responsive;

// Attach a listener to the document which listens for DataTables initialisation
// events so we can automatically initialise
$(document).on( 'preInit.dt.dtr', function (e, settings, json) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	if ( $(settings.nTable).hasClass( 'responsive' ) ||
		 $(settings.nTable).hasClass( 'dt-responsive' ) ||
		 settings.oInit.responsive ||
		 DataTable.defaults.responsive
	) {
		var init = settings.oInit.responsive;

		if ( init !== false ) {
			new Responsive( settings, $.isPlainObject( init ) ? init : {}  );
		}
	}
} );


return Responsive;
}));
/*!
 Responsive 2.1.0
 2014-2016 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(l){return c(l,window,document)}):"object"===typeof exports?module.exports=function(l,k){l||(l=window);if(!k||!k.fn.dataTable)k=require("datatables.net")(l,k).$;return c(k,l,l.document)}:c(jQuery,window,document)})(function(c,l,k,p){var m=c.fn.dataTable,j=function(a,b){if(!m.versionCheck||!m.versionCheck("1.10.3"))throw"DataTables Responsive requires DataTables 1.10.3 or newer";this.s={dt:new m.Api(a),columns:[],
current:[]};this.s.dt.settings()[0].responsive||(b&&"string"===typeof b.details?b.details={type:b.details}:b&&!1===b.details?b.details={type:!1}:b&&!0===b.details&&(b.details={type:"inline"}),this.c=c.extend(!0,{},j.defaults,m.defaults.responsive,b),a.responsive=this,this._constructor())};c.extend(j.prototype,{_constructor:function(){var a=this,b=this.s.dt,d=b.settings()[0],e=c(l).width();b.settings()[0]._responsive=this;c(l).on("resize.dtr orientationchange.dtr",m.util.throttle(function(){var b=
c(l).width();b!==e&&(a._resize(),e=b)}));d.oApi._fnCallbackReg(d,"aoRowCreatedCallback",function(e){-1!==c.inArray(!1,a.s.current)&&c("td, th",e).each(function(e){e=b.column.index("toData",e);!1===a.s.current[e]&&c(this).css("display","none")})});b.on("destroy.dtr",function(){b.off(".dtr");c(b.table().body()).off(".dtr");c(l).off("resize.dtr orientationchange.dtr");c.each(a.s.current,function(b,e){!1===e&&a._setColumnVis(b,!0)})});this.c.breakpoints.sort(function(a,b){return a.width<b.width?1:a.width>
b.width?-1:0});this._classLogic();this._resizeAuto();d=this.c.details;!1!==d.type&&(a._detailsInit(),b.on("column-visibility.dtr",function(){a._classLogic();a._resizeAuto();a._resize()}),b.on("draw.dtr",function(){a._redrawChildren()}),c(b.table().node()).addClass("dtr-"+d.type));b.on("column-reorder.dtr",function(){a._classLogic();a._resizeAuto();a._resize()});b.on("column-sizing.dtr",function(){a._resizeAuto();a._resize()});b.on("init.dtr",function(){a._resizeAuto();a._resize();c.inArray(false,
a.s.current)&&b.columns.adjust()});this._resize()},_columnsVisiblity:function(a){var b=this.s.dt,d=this.s.columns,e,f,g=d.map(function(a,b){return{columnIdx:b,priority:a.priority}}).sort(function(a,b){return a.priority!==b.priority?a.priority-b.priority:a.columnIdx-b.columnIdx}),h=c.map(d,function(b){return b.auto&&null===b.minWidth?!1:!0===b.auto?"-":-1!==c.inArray(a,b.includeIn)}),n=0;e=0;for(f=h.length;e<f;e++)!0===h[e]&&(n+=d[e].minWidth);e=b.settings()[0].oScroll;e=e.sY||e.sX?e.iBarWidth:0;b=
b.table().container().offsetWidth-e-n;e=0;for(f=h.length;e<f;e++)d[e].control&&(b-=d[e].minWidth);n=!1;e=0;for(f=g.length;e<f;e++){var i=g[e].columnIdx;"-"===h[i]&&(!d[i].control&&d[i].minWidth)&&(n||0>b-d[i].minWidth?(n=!0,h[i]=!1):h[i]=!0,b-=d[i].minWidth)}g=!1;e=0;for(f=d.length;e<f;e++)if(!d[e].control&&!d[e].never&&!h[e]){g=!0;break}e=0;for(f=d.length;e<f;e++)d[e].control&&(h[e]=g);-1===c.inArray(!0,h)&&(h[0]=!0);return h},_classLogic:function(){var a=this,b=this.c.breakpoints,d=this.s.dt,e=
d.columns().eq(0).map(function(a){var b=this.column(a),e=b.header().className,a=d.settings()[0].aoColumns[a].responsivePriority;a===p&&(b=c(b.header()).data("priority"),a=b!==p?1*b:1E4);return{className:e,includeIn:[],auto:!1,control:!1,never:e.match(/\bnever\b/)?!0:!1,priority:a}}),f=function(a,b){var d=e[a].includeIn;-1===c.inArray(b,d)&&d.push(b)},g=function(c,d,i,g){if(i)if("max-"===i){g=a._find(d).width;d=0;for(i=b.length;d<i;d++)b[d].width<=g&&f(c,b[d].name)}else if("min-"===i){g=a._find(d).width;
d=0;for(i=b.length;d<i;d++)b[d].width>=g&&f(c,b[d].name)}else{if("not-"===i){d=0;for(i=b.length;d<i;d++)-1===b[d].name.indexOf(g)&&f(c,b[d].name)}}else e[c].includeIn.push(d)};e.each(function(a,e){for(var d=a.className.split(" "),f=!1,j=0,l=d.length;j<l;j++){var k=c.trim(d[j]);if("all"===k){f=!0;a.includeIn=c.map(b,function(a){return a.name});return}if("none"===k||a.never){f=!0;return}if("control"===k){f=!0;a.control=!0;return}c.each(b,function(a,b){var d=b.name.split("-"),c=k.match(RegExp("(min\\-|max\\-|not\\-)?("+
d[0]+")(\\-[_a-zA-Z0-9])?"));c&&(f=!0,c[2]===d[0]&&c[3]==="-"+d[1]?g(e,b.name,c[1],c[2]+c[3]):c[2]===d[0]&&!c[3]&&g(e,b.name,c[1],c[2]))})}f||(a.auto=!0)});this.s.columns=e},_detailsDisplay:function(a,b){var d=this,e=this.s.dt,f=this.c.details;if(f&&!1!==f.type){var g=f.display(a,b,function(){return f.renderer(e,a[0],d._detailsObj(a[0]))});(!0===g||!1===g)&&c(e.table().node()).triggerHandler("responsive-display.dt",[e,a,g,b])}},_detailsInit:function(){var a=this,b=this.s.dt,d=this.c.details;"inline"===
d.type&&(d.target="td:first-child, th:first-child");b.on("draw.dtr",function(){a._tabIndexes()});a._tabIndexes();c(b.table().body()).on("keyup.dtr","td, th",function(a){a.keyCode===13&&c(this).data("dtr-keyboard")&&c(this).click()});var e=d.target;c(b.table().body()).on("click.dtr mousedown.dtr mouseup.dtr","string"===typeof e?e:"td, th",function(d){if(c(b.table().node()).hasClass("collapsed")&&b.row(c(this).closest("tr")).length){if(typeof e==="number"){var g=e<0?b.columns().eq(0).length+e:e;if(b.cell(this).index().column!==
g)return}g=b.row(c(this).closest("tr"));d.type==="click"?a._detailsDisplay(g,false):d.type==="mousedown"?c(this).css("outline","none"):d.type==="mouseup"&&c(this).blur().css("outline","")}})},_detailsObj:function(a){var b=this,d=this.s.dt;return c.map(this.s.columns,function(e,c){if(!e.never&&!e.control)return{title:d.settings()[0].aoColumns[c].sTitle,data:d.cell(a,c).render(b.c.orthogonal),hidden:d.column(c).visible()&&!b.s.current[c],columnIndex:c,rowIndex:a}})},_find:function(a){for(var b=this.c.breakpoints,
d=0,c=b.length;d<c;d++)if(b[d].name===a)return b[d]},_redrawChildren:function(){var a=this,b=this.s.dt;b.rows({page:"current"}).iterator("row",function(c,e){b.row(e);a._detailsDisplay(b.row(e),!0)})},_resize:function(){var a=this,b=this.s.dt,d=c(l).width(),e=this.c.breakpoints,f=e[0].name,g=this.s.columns,h,j=this.s.current.slice();for(h=e.length-1;0<=h;h--)if(d<=e[h].width){f=e[h].name;break}var i=this._columnsVisiblity(f);this.s.current=i;e=!1;h=0;for(d=g.length;h<d;h++)if(!1===i[h]&&!g[h].never&&
!g[h].control){e=!0;break}c(b.table().node()).toggleClass("collapsed",e);var k=!1;b.columns().eq(0).each(function(b,c){i[c]!==j[c]&&(k=!0,a._setColumnVis(b,i[c]))});k&&(this._redrawChildren(),c(b.table().node()).trigger("responsive-resize.dt",[b,this.s.current]))},_resizeAuto:function(){var a=this.s.dt,b=this.s.columns;if(this.c.auto&&-1!==c.inArray(!0,c.map(b,function(a){return a.auto}))){a.table().node();var d=a.table().node().cloneNode(!1),e=c(a.table().header().cloneNode(!1)).appendTo(d),f=c(a.table().body()).clone(!1,
!1).empty().appendTo(d),g=a.columns().header().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display","table-cell");c(f).append(c(a.rows({page:"current"}).nodes()).clone(!1)).find("th, td").css("display","");if(f=a.table().footer()){var f=c(f.cloneNode(!1)).appendTo(d),h=a.columns().footer().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display","table-cell");c("<tr/>").append(h).appendTo(f)}c("<tr/>").append(g).appendTo(e);"inline"===this.c.details.type&&
c(d).addClass("dtr-inline collapsed");c(d).find("[name]").removeAttr("name");d=c("<div/>").css({width:1,height:1,overflow:"hidden"}).append(d);d.insertBefore(a.table().node());g.each(function(c){c=a.column.index("fromVisible",c);b[c].minWidth=this.offsetWidth||0});d.remove()}},_setColumnVis:function(a,b){var d=this.s.dt,e=b?"":"none";c(d.column(a).header()).css("display",e);c(d.column(a).footer()).css("display",e);d.column(a).nodes().to$().css("display",e)},_tabIndexes:function(){var a=this.s.dt,
b=a.cells({page:"current"}).nodes().to$(),d=a.settings()[0],e=this.c.details.target;b.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");c("number"===typeof e?":eq("+e+")":e,a.rows({page:"current"}).nodes()).attr("tabIndex",d.iTabIndex).data("dtr-keyboard",1)}});j.breakpoints=[{name:"desktop",width:Infinity},{name:"tablet-l",width:1024},{name:"tablet-p",width:768},{name:"mobile-l",width:480},{name:"mobile-p",width:320}];j.display={childRow:function(a,b,d){if(b){if(c(a.node()).hasClass("parent"))return a.child(d(),
"child").show(),!0}else{if(a.child.isShown())return a.child(!1),c(a.node()).removeClass("parent"),!1;a.child(d(),"child").show();c(a.node()).addClass("parent");return!0}},childRowImmediate:function(a,b,d){if(!b&&a.child.isShown()||!a.responsive.hasHidden())return a.child(!1),c(a.node()).removeClass("parent"),!1;a.child(d(),"child").show();c(a.node()).addClass("parent");return!0},modal:function(a){return function(b,d,e){if(d)c("div.dtr-modal-content").empty().append(e());else{var f=function(){g.remove();
c(k).off("keypress.dtr")},g=c('<div class="dtr-modal"/>').append(c('<div class="dtr-modal-display"/>').append(c('<div class="dtr-modal-content"/>').append(e())).append(c('<div class="dtr-modal-close">&times;</div>').click(function(){f()}))).append(c('<div class="dtr-modal-background"/>').click(function(){f()})).appendTo("body");c(k).on("keyup.dtr",function(a){27===a.keyCode&&(a.stopPropagation(),f())})}a&&a.header&&c("div.dtr-modal-content").prepend("<h2>"+a.header(b)+"</h2>")}}};j.renderer={listHidden:function(){return function(a,
b,d){return(a=c.map(d,function(a){return a.hidden?'<li data-dtr-index="'+a.columnIndex+'" data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><span class="dtr-title">'+a.title+'</span> <span class="dtr-data">'+a.data+"</span></li>":""}).join(""))?c('<ul data-dtr-index="'+b+'"/>').append(a):!1}},tableAll:function(a){a=c.extend({tableClass:""},a);return function(b,d,e){b=c.map(e,function(a){return'<tr data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><td>'+a.title+":</td> <td>"+
a.data+"</td></tr>"}).join("");return c('<table class="'+a.tableClass+'" width="100%"/>').append(b)}}};j.defaults={breakpoints:j.breakpoints,auto:!0,details:{display:j.display.childRow,renderer:j.renderer.listHidden(),target:0,type:"inline"},orthogonal:"display"};var o=c.fn.dataTable.Api;o.register("responsive()",function(){return this});o.register("responsive.index()",function(a){a=c(a);return{column:a.data("dtr-index"),row:a.parent().data("dtr-index")}});o.register("responsive.rebuild()",function(){return this.iterator("table",
function(a){a._responsive&&a._responsive._classLogic()})});o.register("responsive.recalc()",function(){return this.iterator("table",function(a){a._responsive&&(a._responsive._resizeAuto(),a._responsive._resize())})});o.register("responsive.hasHidden()",function(){var a=this.context[0];return a._responsive?-1!==c.inArray(!1,a._responsive.s.current):!1});j.version="2.1.0";c.fn.dataTable.Responsive=j;c.fn.DataTable.Responsive=j;c(k).on("preInit.dt.dtr",function(a,b){if("dt"===a.namespace&&(c(b.nTable).hasClass("responsive")||
c(b.nTable).hasClass("dt-responsive")||b.oInit.responsive||m.defaults.responsive)){var d=b.oInit.responsive;!1!==d&&new j(b,c.isPlainObject(d)?d:{})}});return j});
/*! Bootstrap integration for DataTables' Responsive
 * ©2015-2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-bs', 'datatables.net-responsive'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-bs')(root, $).$;
			}

			if ( ! $.fn.dataTable.Responsive ) {
				require('datatables.net-responsive')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var _display = DataTable.Responsive.display;
var _original = _display.modal;
var _modal = $(
	'<div class="modal fade dtr-bs-modal" role="dialog">'+
		'<div class="modal-dialog" role="document">'+
			'<div class="modal-content">'+
				'<div class="modal-header">'+
					'<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>'+
				'</div>'+
				'<div class="modal-body"/>'+
			'</div>'+
		'</div>'+
	'</div>'
);

_display.modal = function ( options ) {
	return function ( row, update, render ) {
		if ( ! $.fn.modal ) {
			_original( row, update, render );
		}
		else {
			if ( ! update ) {
				if ( options && options.header ) {
					_modal.find('div.modal-header')
						.empty()
						.append( '<h4 class="modal-title">'+options.header( row )+'</h4>' );
				}

				_modal.find( 'div.modal-body' )
					.empty()
					.append( render() );

				_modal
					.appendTo( 'body' )
					.modal();
			}
		}
	};
};


return DataTable.Responsive;
}));
/*!
 Bootstrap integration for DataTables' Responsive
 ©2015-2016 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-bs","datatables.net-responsive"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net-bs")(a,b).$;b.fn.dataTable.Responsive||require("datatables.net-responsive")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c){var a=c.fn.dataTable,b=a.Responsive.display,g=b.modal,d=c('<div class="modal fade dtr-bs-modal" role="dialog"><div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button></div><div class="modal-body"/></div></div></div>');
b.modal=function(a){return function(b,e,f){c.fn.modal?e||(a&&a.header&&d.find("div.modal-header").empty().append('<h4 class="modal-title">'+a.header(b)+"</h4>"),d.find("div.modal-body").empty().append(f()),d.appendTo("body").modal()):g(b,e,f)}};return a.Responsive});
/*! Foundation integration for DataTables' Responsive
 * ©2015 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-zf', 'datatables.net-responsive'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-zf')(root, $).$;
			}

			if ( ! $.fn.dataTable.Responsive ) {
				require('datatables.net-responsive')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var _display = DataTable.Responsive.display;
var _original = _display.modal;

_display.modal = function ( options ) {
	return function ( row, update, render ) {
		if ( ! $.fn.foundation ) {
			_original( row, update, render );
		}
		else {
			if ( ! update ) {
				$( '<div class="reveal-modal" data-reveal/>' )
					.append( '<a class="close-reveal-modal" aria-label="Close">&#215;</a>' )
					.append( options && options.header ? '<h4>'+options.header( row )+'</h4>' : null )
					.append( render() )
					.appendTo( 'body' )
					.foundation( 'reveal', 'open' );
			}
		}
	};
};


return DataTable.Responsive;
}));
/*!
 Foundation integration for DataTables' Responsive
 ©2015 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-zf","datatables.net-responsive"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net-zf")(a,b).$;b.fn.dataTable.Responsive||require("datatables.net-responsive")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c){var a=c.fn.dataTable,b=a.Responsive.display,f=b.modal;b.modal=function(a){return function(b,
d,e){c.fn.foundation?d||c('<div class="reveal-modal" data-reveal/>').append('<a class="close-reveal-modal" aria-label="Close">&#215;</a>').append(a&&a.header?"<h4>"+a.header(b)+"</h4>":null).append(e()).appendTo("body").foundation("reveal","open"):f(b,d,e)}};return a.Responsive});
/*! jQuery UI integration for DataTables' Responsive
 * ©2015 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-jqui', 'datatables.net-responsive'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-jqui')(root, $).$;
			}

			if ( ! $.fn.dataTable.Responsive ) {
				require('datatables.net-responsive')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var _display = DataTable.Responsive.display;
var _original = _display.modal;

_display.modal = function ( options ) {
	return function ( row, update, render ) {
		if ( ! $.fn.dialog ) {
			_original( row, update, render );
		}
		else {
			if ( ! update ) {
				$( '<div/>' )
					.append( render() )
					.appendTo( 'body' )
					.dialog( $.extend( true, {
						title: options && options.header ? options.header( row ) : '',
						width: 500
					}, options.dialog ) );
			}
		}
	};
};


return DataTable.Responsive;
}));
/*!
 jQuery UI integration for DataTables' Responsive
 ©2015 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-jqui","datatables.net-responsive"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);if(!b||!b.fn.dataTable)b=require("datatables.net-jqui")(a,b).$;b.fn.dataTable.Responsive||require("datatables.net-responsive")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c){var a=c.fn.dataTable,b=a.Responsive.display,f=b.modal;b.modal=function(a){return function(b,
d,e){c.fn.dialog?d||c("<div/>").append(e()).appendTo("body").dialog(c.extend(!0,{title:a&&a.header?a.header(b):"",width:500},a.dialog)):f(b,d,e)}};return a.Responsive});
/*! Select for DataTables 1.2.0
 * 2015-2016 SpryMedia Ltd - datatables.net/license/mit
 */

/**
 * @summary     Select for DataTables
 * @description A collection of API methods, events and buttons for DataTables
 *   that provides selection options of the items in a DataTable
 * @version     1.2.0
 * @file        dataTables.select.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     datatables.net/forums
 * @copyright   Copyright 2015-2016 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net/extensions/select
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


// Version information for debugger
DataTable.select = {};

DataTable.select.version = '1.2.0';

DataTable.select.init = function ( dt ) {
	var ctx = dt.settings()[0];
	var init = ctx.oInit.select;
	var defaults = DataTable.defaults.select;
	var opts = init === undefined ?
		defaults :
		init;

	// Set defaults
	var items = 'row';
	var style = 'api';
	var blurable = false;
	var info = true;
	var selector = 'td, th';
	var className = 'selected';

	ctx._select = {};

	// Initialisation customisations
	if ( opts === true ) {
		style = 'os';
	}
	else if ( typeof opts === 'string' ) {
		style = opts;
	}
	else if ( $.isPlainObject( opts ) ) {
		if ( opts.blurable !== undefined ) {
			blurable = opts.blurable;
		}

		if ( opts.info !== undefined ) {
			info = opts.info;
		}

		if ( opts.items !== undefined ) {
			items = opts.items;
		}

		if ( opts.style !== undefined ) {
			style = opts.style;
		}

		if ( opts.selector !== undefined ) {
			selector = opts.selector;
		}

		if ( opts.className !== undefined ) {
			className = opts.className;
		}
	}

	dt.select.selector( selector );
	dt.select.items( items );
	dt.select.style( style );
	dt.select.blurable( blurable );
	dt.select.info( info );
	ctx._select.className = className;


	// Sort table based on selected rows. Requires Select Datatables extension
	$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {
		return this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {
			if ( settings._select.items === 'row' ) {
				return $( td ).parent().hasClass( settings._select.className );
			} else if ( settings._select.items === 'cell' ) {
				return $( td ).hasClass( settings._select.className );
			}
			return false;
		});
	};

	// If the init options haven't enabled select, but there is a selectable
	// class name, then enable
	if ( $( dt.table().node() ).hasClass( 'selectable' ) ) {
		dt.select.style( 'os' );
	}
};

/*

Select is a collection of API methods, event handlers, event emitters and
buttons (for the `Buttons` extension) for DataTables. It provides the following
features, with an overview of how they are implemented:

## Selection of rows, columns and cells. Whether an item is selected or not is
   stored in:

* rows: a `_select_selected` property which contains a boolean value of the
  DataTables' `aoData` object for each row
* columns: a `_select_selected` property which contains a boolean value of the
  DataTables' `aoColumns` object for each column
* cells: a `_selected_cells` property which contains an array of boolean values
  of the `aoData` object for each row. The array is the same length as the
  columns array, with each element of it representing a cell.

This method of using boolean flags allows Select to operate when nodes have not
been created for rows / cells (DataTables' defer rendering feature).

## API methods

A range of API methods are available for triggering selection and de-selection
of rows. Methods are also available to configure the selection events that can
be triggered by an end user (such as which items are to be selected). To a large
extent, these of API methods *is* Select. It is basically a collection of helper
functions that can be used to select items in a DataTable.

Configuration of select is held in the object `_select` which is attached to the
DataTables settings object on initialisation. Select being available on a table
is not optional when Select is loaded, but its default is for selection only to
be available via the API - so the end user wouldn't be able to select rows
without additional configuration.

The `_select` object contains the following properties:

```
{
	items:string     - Can be `rows`, `columns` or `cells`. Defines what item 
	                   will be selected if the user is allowed to activate row
	                   selection using the mouse.
	style:string     - Can be `none`, `single`, `multi` or `os`. Defines the
	                   interaction style when selecting items
	blurable:boolean - If row selection can be cleared by clicking outside of
	                   the table
	info:boolean     - If the selection summary should be shown in the table
	                   information elements
}
```

In addition to the API methods, Select also extends the DataTables selector
options for rows, columns and cells adding a `selected` option to the selector
options object, allowing the developer to select only selected items or
unselected items.

## Mouse selection of items

Clicking on items can be used to select items. This is done by a simple event
handler that will select the items using the API methods.

 */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local functions
 */

/**
 * Add one or more cells to the selection when shift clicking in OS selection
 * style cell selection.
 *
 * Cell range is more complicated than row and column as we want to select
 * in the visible grid rather than by index in sequence. For example, if you
 * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1
 * should also be selected (and not 1-3, 1-4. etc)
 * 
 * @param  {DataTable.Api} dt   DataTable
 * @param  {object}        idx  Cell index to select to
 * @param  {object}        last Cell index to select from
 * @private
 */
function cellRange( dt, idx, last )
{
	var indexes;
	var columnIndexes;
	var rowIndexes;
	var selectColumns = function ( start, end ) {
		if ( start > end ) {
			var tmp = end;
			end = start;
			start = tmp;
		}
		
		var record = false;
		return dt.columns( ':visible' ).indexes().filter( function (i) {
			if ( i === start ) {
				record = true;
			}
			
			if ( i === end ) { // not else if, as start might === end
				record = false;
				return true;
			}

			return record;
		} );
	};

	var selectRows = function ( start, end ) {
		var indexes = dt.rows( { search: 'applied' } ).indexes();

		// Which comes first - might need to swap
		if ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {
			var tmp = end;
			end = start;
			start = tmp;
		}

		var record = false;
		return indexes.filter( function (i) {
			if ( i === start ) {
				record = true;
			}
			
			if ( i === end ) {
				record = false;
				return true;
			}

			return record;
		} );
	};

	if ( ! dt.cells( { selected: true } ).any() && ! last ) {
		// select from the top left cell to this one
		columnIndexes = selectColumns( 0, idx.column );
		rowIndexes = selectRows( 0 , idx.row );
	}
	else {
		// Get column indexes between old and new
		columnIndexes = selectColumns( last.column, idx.column );
		rowIndexes = selectRows( last.row , idx.row );
	}

	indexes = dt.cells( rowIndexes, columnIndexes ).flatten();

	if ( ! dt.cells( idx, { selected: true } ).any() ) {
		// Select range
		dt.cells( indexes ).select();
	}
	else {
		// Deselect range
		dt.cells( indexes ).deselect();
	}
}

/**
 * Disable mouse selection by removing the selectors
 *
 * @param {DataTable.Api} dt DataTable to remove events from
 * @private
 */
function disableMouseSelection( dt )
{
	var ctx = dt.settings()[0];
	var selector = ctx._select.selector;

	$( dt.table().body() )
		.off( 'mousedown.dtSelect', selector )
		.off( 'mouseup.dtSelect', selector )
		.off( 'click.dtSelect', selector );

	$('body').off( 'click.dtSelect' );
}

/**
 * Attach mouse listeners to the table to allow mouse selection of items
 *
 * @param {DataTable.Api} dt DataTable to remove events from
 * @private
 */
function enableMouseSelection ( dt )
{
	var body = $( dt.table().body() );
	var ctx = dt.settings()[0];
	var selector = ctx._select.selector;

	body
		.on( 'mousedown.dtSelect', selector, function(e) {
			// Disallow text selection for shift clicking on the table so multi
			// element selection doesn't look terrible!
			if ( e.shiftKey || e.metaKey || e.ctrlKey ) {
				body
					.css( '-moz-user-select', 'none' )
					.one('selectstart.dtSelect', selector, function () {
						return false;
					} );
			}
		} )
		.on( 'mouseup.dtSelect', selector, function() {
			// Allow text selection to occur again, Mozilla style (tested in FF
			// 35.0.1 - still required)
			body.css( '-moz-user-select', '' );
		} )
		.on( 'click.dtSelect', selector, function ( e ) {
			var items = dt.select.items();
			var idx;

			// If text was selected (click and drag), then we shouldn't change
			// the row's selected state
			if ( window.getSelection && window.getSelection().toString() ) {
				return;
			}

			var ctx = dt.settings()[0];

			// Ignore clicks inside a sub-table
			if ( $(e.target).closest('div.dataTables_wrapper')[0] != dt.table().container() ) {
				return;
			}

			var cell = dt.cell( $(e.target).closest('td, th') );

			// Check the cell actually belongs to the host DataTable (so child
			// rows, etc, are ignored)
			if ( ! cell.any() ) {
				return;
			}

			var event = $.Event('user-select.dt');
			eventTrigger( dt, event, [ items, cell, e ] );

			if ( event.isDefaultPrevented() ) {
				return;
			}

			var cellIndex = cell.index();
			if ( items === 'row' ) {
				idx = cellIndex.row;
				typeSelect( e, dt, ctx, 'row', idx );
			}
			else if ( items === 'column' ) {
				idx = cell.index().column;
				typeSelect( e, dt, ctx, 'column', idx );
			}
			else if ( items === 'cell' ) {
				idx = cell.index();
				typeSelect( e, dt, ctx, 'cell', idx );
			}

			ctx._select_lastCell = cellIndex;
		} );

	// Blurable
	$('body').on( 'click.dtSelect', function ( e ) {
		if ( ctx._select.blurable ) {
			// If the click was inside the DataTables container, don't blur
			if ( $(e.target).parents().filter( dt.table().container() ).length ) {
				return;
			}

			// Don't blur in Editor form
			if ( $(e.target).parents('div.DTE').length ) {
				return;
			}

			clear( ctx, true );
		}
	} );
}

/**
 * Trigger an event on a DataTable
 *
 * @param {DataTable.Api} api      DataTable to trigger events on
 * @param  {boolean}      selected true if selected, false if deselected
 * @param  {string}       type     Item type acting on
 * @param  {boolean}      any      Require that there are values before
 *     triggering
 * @private
 */
function eventTrigger ( api, type, args, any )
{
	if ( any && ! api.flatten().length ) {
		return;
	}

	if ( typeof type === 'string' ) {
		type = type +'.dt';
	}

	args.unshift( api );

	$(api.table().node()).triggerHandler( type, args );
}

/**
 * Update the information element of the DataTable showing information about the
 * items selected. This is done by adding tags to the existing text
 * 
 * @param {DataTable.Api} api DataTable to update
 * @private
 */
function info ( api )
{
	var ctx = api.settings()[0];

	if ( ! ctx._select.info || ! ctx.aanFeatures.i ) {
		return;
	}

	var output  = $('<span class="select-info"/>');
	var add = function ( name, num ) {
		output.append( $('<span class="select-item"/>').append( api.i18n(
			'select.'+name+'s',
			{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },
			num
		) ) );
	};

	add( 'row',    api.rows( { selected: true } ).flatten().length );
	add( 'column', api.columns( { selected: true } ).flatten().length );
	add( 'cell',   api.cells( { selected: true } ).flatten().length );

	// Internal knowledge of DataTables to loop over all information elements
	$.each( ctx.aanFeatures.i, function ( i, el ) {
		el = $(el);

		var exisiting = el.children('span.select-info');
		if ( exisiting.length ) {
			exisiting.remove();
		}

		if ( output.text() !== '' ) {
			el.append( output );
		}
	} );
}

/**
 * Initialisation of a new table. Attach event handlers and callbacks to allow
 * Select to operate correctly.
 *
 * This will occur _after_ the initial DataTables initialisation, although
 * before Ajax data is rendered, if there is ajax data
 *
 * @param  {DataTable.settings} ctx Settings object to operate on
 * @private
 */
function init ( ctx ) {
	var api = new DataTable.Api( ctx );

	// Row callback so that classes can be added to rows and cells if the item
	// was selected before the element was created. This will happen with the
	// `deferRender` option enabled.
	// 
	// This method of attaching to `aoRowCreatedCallback` is a hack until
	// DataTables has proper events for row manipulation If you are reviewing
	// this code to create your own plug-ins, please do not do this!
	ctx.aoRowCreatedCallback.push( {
		fn: function ( row, data, index ) {
			var i, ien;
			var d = ctx.aoData[ index ];

			// Row
			if ( d._select_selected ) {
				$( row ).addClass( ctx._select.className );
			}

			// Cells and columns - if separated out, we would need to do two
			// loops, so it makes sense to combine them into a single one
			for ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {
				if ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {
					$(d.anCells[i]).addClass( ctx._select.className );
				}
			}
		},
		sName: 'select-deferRender'
	} );

	// On Ajax reload we want to reselect all rows which are currently selected,
	// if there is an rowId (i.e. a unique value to identify each row with)
	api.on( 'preXhr.dt.dtSelect', function () {
		// note that column selection doesn't need to be cached and then
		// reselected, as they are already selected
		var rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {
			return d !== undefined;
		} );

		var cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {
			var id = api.row( cellIdx.row ).id( true );
			return id ?
				{ row: id, column: cellIdx.column } :
				undefined;
		} ).filter( function ( d ) {
			return d !== undefined;
		} );

		// On the next draw, reselect the currently selected items
		api.one( 'draw.dt.dtSelect', function () {
			api.rows( rows ).select();

			// `cells` is not a cell index selector, so it needs a loop
			if ( cells.any() ) {
				cells.each( function ( id ) {
					api.cells( id.row, id.column ).select();
				} );
			}
		} );
	} );

	// Update the table information element with selected item summary
	api.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {
		info( api );
	} );

	// Clean up and release
	api.on( 'destroy.dtSelect', function () {
		disableMouseSelection( api );
		api.off( '.dtSelect' );
	} );
}

/**
 * Add one or more items (rows or columns) to the selection when shift clicking
 * in OS selection style
 *
 * @param  {DataTable.Api} dt   DataTable
 * @param  {string}        type Row or column range selector
 * @param  {object}        idx  Item index to select to
 * @param  {object}        last Item index to select from
 * @private
 */
function rowColumnRange( dt, type, idx, last )
{
	// Add a range of rows from the last selected row to this one
	var indexes = dt[type+'s']( { search: 'applied' } ).indexes();
	var idx1 = $.inArray( last, indexes );
	var idx2 = $.inArray( idx, indexes );

	if ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {
		// select from top to here - slightly odd, but both Windows and Mac OS
		// do this
		indexes.splice( $.inArray( idx, indexes )+1, indexes.length );
	}
	else {
		// reverse so we can shift click 'up' as well as down
		if ( idx1 > idx2 ) {
			var tmp = idx2;
			idx2 = idx1;
			idx1 = tmp;
		}

		indexes.splice( idx2+1, indexes.length );
		indexes.splice( 0, idx1 );
	}

	if ( ! dt[type]( idx, { selected: true } ).any() ) {
		// Select range
		dt[type+'s']( indexes ).select();
	}
	else {
		// Deselect range - need to keep the clicked on row selected
		indexes.splice( $.inArray( idx, indexes ), 1 );
		dt[type+'s']( indexes ).deselect();
	}
}

/**
 * Clear all selected items
 *
 * @param  {DataTable.settings} ctx Settings object of the host DataTable
 * @param  {boolean} [force=false] Force the de-selection to happen, regardless
 *     of selection style
 * @private
 */
function clear( ctx, force )
{
	if ( force || ctx._select.style === 'single' ) {
		var api = new DataTable.Api( ctx );
		
		api.rows( { selected: true } ).deselect();
		api.columns( { selected: true } ).deselect();
		api.cells( { selected: true } ).deselect();
	}
}

/**
 * Select items based on the current configuration for style and items.
 *
 * @param  {object}             e    Mouse event object
 * @param  {DataTables.Api}     dt   DataTable
 * @param  {DataTable.settings} ctx  Settings object of the host DataTable
 * @param  {string}             type Items to select
 * @param  {int|object}         idx  Index of the item to select
 * @private
 */
function typeSelect ( e, dt, ctx, type, idx )
{
	var style = dt.select.style();
	var isSelected = dt[type]( idx, { selected: true } ).any();

	if ( style === 'os' ) {
		if ( e.ctrlKey || e.metaKey ) {
			// Add or remove from the selection
			dt[type]( idx ).select( ! isSelected );
		}
		else if ( e.shiftKey ) {
			if ( type === 'cell' ) {
				cellRange( dt, idx, ctx._select_lastCell || null );
			}
			else {
				rowColumnRange( dt, type, idx, ctx._select_lastCell ?
					ctx._select_lastCell[type] :
					null
				);
			}
		}
		else {
			// No cmd or shift click - deselect if selected, or select
			// this row only
			var selected = dt[type+'s']( { selected: true } );

			if ( isSelected && selected.flatten().length === 1 ) {
				dt[type]( idx ).deselect();
			}
			else {
				selected.deselect();
				dt[type]( idx ).select();
			}
		}
	} else if ( style == 'multi+shift' ) {
		if ( e.shiftKey ) {
			if ( type === 'cell' ) {
				cellRange( dt, idx, ctx._select_lastCell || null );
			}
			else {
				rowColumnRange( dt, type, idx, ctx._select_lastCell ?
					ctx._select_lastCell[type] :
					null
				);
			}
		}
		else {
			dt[ type ]( idx ).select( ! isSelected );
		}
	}
	else {
		dt[ type ]( idx ).select( ! isSelected );
	}
}



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables selectors
 */

// row and column are basically identical just assigned to different properties
// and checking a different array, so we can dynamically create the functions to
// reduce the code size
$.each( [
	{ type: 'row', prop: 'aoData' },
	{ type: 'column', prop: 'aoColumns' }
], function ( i, o ) {
	DataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {
		var selected = opts.selected;
		var data;
		var out = [];

		if ( selected === undefined ) {
			return indexes;
		}

		for ( var i=0, ien=indexes.length ; i<ien ; i++ ) {
			data = settings[ o.prop ][ indexes[i] ];

			if ( (selected === true && data._select_selected === true) ||
			     (selected === false && ! data._select_selected )
			) {
				out.push( indexes[i] );
			}
		}

		return out;
	} );
} );

DataTable.ext.selector.cell.push( function ( settings, opts, cells ) {
	var selected = opts.selected;
	var rowData;
	var out = [];

	if ( selected === undefined ) {
		return cells;
	}

	for ( var i=0, ien=cells.length ; i<ien ; i++ ) {
		rowData = settings.aoData[ cells[i].row ];

		if ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||
		     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )
		) {
			out.push( cells[i] );
		}
	}

	return out;
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables API
 *
 * For complete documentation, please refer to the docs/api directory or the
 * DataTables site
 */

// Local variables to improve compression
var apiRegister = DataTable.Api.register;
var apiRegisterPlural = DataTable.Api.registerPlural;

apiRegister( 'select()', function () {
	return this.iterator( 'table', function ( ctx ) {
		DataTable.select.init( new DataTable.Api( ctx ) );
	} );
} );

apiRegister( 'select.blurable()', function ( flag ) {
	if ( flag === undefined ) {
		return this.context[0]._select.blurable;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.blurable = flag;
	} );
} );

apiRegister( 'select.info()', function ( flag ) {
	if ( info === undefined ) {
		return this.context[0]._select.info;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.info = flag;
	} );
} );

apiRegister( 'select.items()', function ( items ) {
	if ( items === undefined ) {
		return this.context[0]._select.items;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.items = items;

		eventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );
	} );
} );

// Takes effect from the _next_ selection. None disables future selection, but
// does not clear the current selection. Use the `deselect` methods for that
apiRegister( 'select.style()', function ( style ) {
	if ( style === undefined ) {
		return this.context[0]._select.style;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.style = style;

		if ( ! ctx._select_init ) {
			init( ctx );
		}

		// Add / remove mouse event handlers. They aren't required when only
		// API selection is available
		var dt = new DataTable.Api( ctx );
		disableMouseSelection( dt );
		
		if ( style !== 'api' ) {
			enableMouseSelection( dt );
		}

		eventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );
	} );
} );

apiRegister( 'select.selector()', function ( selector ) {
	if ( selector === undefined ) {
		return this.context[0]._select.selector;
	}

	return this.iterator( 'table', function ( ctx ) {
		disableMouseSelection( new DataTable.Api( ctx ) );

		ctx._select.selector = selector;

		if ( ctx._select.style !== 'api' ) {
			enableMouseSelection( new DataTable.Api( ctx ) );
		}
	} );
} );



apiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'row', function ( ctx, idx ) {
		clear( ctx );

		ctx.aoData[ idx ]._select_selected = true;
		$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'row', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'column', function ( ctx, idx ) {
		clear( ctx );

		ctx.aoColumns[ idx ]._select_selected = true;

		var column = new DataTable.Api( ctx ).column( idx );

		$( column.header() ).addClass( ctx._select.className );
		$( column.footer() ).addClass( ctx._select.className );

		column.nodes().to$().addClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'column', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {
		clear( ctx );

		var data = ctx.aoData[ rowIdx ];

		if ( data._selected_cells === undefined ) {
			data._selected_cells = [];
		}

		data._selected_cells[ colIdx ] = true;

		if ( data.anCells ) {
			$( data.anCells[ colIdx ] ).addClass( ctx._select.className );
		}
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'cell', api[i] ], true );
	} );

	return this;
} );


apiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {
	var api = this;

	this.iterator( 'row', function ( ctx, idx ) {
		ctx.aoData[ idx ]._select_selected = false;
		$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'row', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {
	var api = this;

	this.iterator( 'column', function ( ctx, idx ) {
		ctx.aoColumns[ idx ]._select_selected = false;

		var api = new DataTable.Api( ctx );
		var column = api.column( idx );

		$( column.header() ).removeClass( ctx._select.className );
		$( column.footer() ).removeClass( ctx._select.className );

		// Need to loop over each cell, rather than just using
		// `column().nodes()` as cells which are individually selected should
		// not have the `selected` class removed from them
		api.cells( null, idx ).indexes().each( function (cellIdx) {
			var data = ctx.aoData[ cellIdx.row ];
			var cellSelected = data._selected_cells;

			if ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {
				$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );
			}
		} );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'column', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {
	var api = this;

	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {
		var data = ctx.aoData[ rowIdx ];

		data._selected_cells[ colIdx ] = false;

		// Remove class only if the cells exist, and the cell is not column
		// selected, in which case the class should remain (since it is selected
		// in the column)
		if ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {
			$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );
		}
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'cell', api[i] ], true );
	} );

	return this;
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Buttons
 */
function i18n( label, def ) {
	return function (dt) {
		return dt.i18n( 'buttons.'+label, def );
	};
}

$.extend( DataTable.ext.buttons, {
	selected: {
		text: i18n( 'selected', 'Selected' ),
		className: 'buttons-selected',
		init: function ( dt ) {
			var that = this;

			// .DT namespace listeners are removed by DataTables automatically
			// on table destroy
			dt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {
				var enable = that.rows( { selected: true } ).any() ||
				             that.columns( { selected: true } ).any() ||
				             that.cells( { selected: true } ).any();

				that.enable( enable );
			} );

			this.disable();
		}
	},
	selectedSingle: {
		text: i18n( 'selectedSingle', 'Selected single' ),
		className: 'buttons-selected-single',
		init: function ( dt ) {
			var that = this;

			dt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {
				var count = dt.rows( { selected: true } ).flatten().length +
				            dt.columns( { selected: true } ).flatten().length +
				            dt.cells( { selected: true } ).flatten().length;

				that.enable( count === 1 );
			} );

			this.disable();
		}
	},
	selectAll: {
		text: i18n( 'selectAll', 'Select all' ),
		className: 'buttons-select-all',
		action: function () {
			var items = this.select.items();
			this[ items+'s' ]().select();
		}
	},
	selectNone: {
		text: i18n( 'selectNone', 'Deselect all' ),
		className: 'buttons-select-none',
		action: function () {
			clear( this.settings()[0], true );
		},
		init: function ( dt ) {
			var that = this;

			dt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {
				var count = dt.rows( { selected: true } ).flatten().length +
				            dt.columns( { selected: true } ).flatten().length +
				            dt.cells( { selected: true } ).flatten().length;

				that.enable( count > 0 );
			} );

			this.disable();
		}
	}
} );

$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {
	var lc = item.toLowerCase();

	DataTable.ext.buttons[ 'select'+item+'s' ] = {
		text: i18n( 'select'+item+'s', 'Select '+lc+'s' ),
		className: 'buttons-select-'+lc+'s',
		action: function () {
			this.select.items( lc );
		},
		init: function ( dt ) {
			var that = this;

			dt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {
				that.active( items === lc );
			} );
		}
	};
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Initialisation
 */

// DataTables creation - check if select has been defined in the options. Note
// this required that the table be in the document! If it isn't then something
// needs to trigger this method unfortunately. The next major release of
// DataTables will rework the events and address this.
$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	DataTable.select.init( new DataTable.Api( ctx ) );
} );


return DataTable.select;
}));
/*!
 Select for DataTables 1.2.0
 2015-2016 SpryMedia Ltd - datatables.net/license/mit
*/

(function(e){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(i){return e(i,window,document)}):"object"===typeof exports?module.exports=function(i,l){i||(i=window);if(!l||!l.fn.dataTable)l=require("datatables.net")(i,l).$;return e(l,i,i.document)}:e(jQuery,window,document)})(function(e,i,l,h){function t(b,a,c){var d;d=function(c,a){if(c>a)var d=a,a=c,c=d;var f=!1;return b.columns(":visible").indexes().filter(function(b){b===c&&(f=!0);return b===a?(f=!1,!0):f})};var f=
function(c,a){var d=b.rows({search:"applied"}).indexes();if(d.indexOf(c)>d.indexOf(a))var f=a,a=c,c=f;var e=!1;return d.filter(function(b){b===c&&(e=!0);return b===a?(e=!1,!0):e})};!b.cells({selected:!0}).any()&&!c?(d=d(0,a.column),c=f(0,a.row)):(d=d(c.column,a.column),c=f(c.row,a.row));c=b.cells(c,d).flatten();b.cells(a,{selected:!0}).any()?b.cells(c).deselect():b.cells(c).select()}function r(b){var a=b.settings()[0]._select.selector;e(b.table().body()).off("mousedown.dtSelect",a).off("mouseup.dtSelect",
a).off("click.dtSelect",a);e("body").off("click.dtSelect")}function v(b){var a=e(b.table().body()),c=b.settings()[0],d=c._select.selector;a.on("mousedown.dtSelect",d,function(c){if(c.shiftKey||c.metaKey||c.ctrlKey)a.css("-moz-user-select","none").one("selectstart.dtSelect",d,function(){return!1})}).on("mouseup.dtSelect",d,function(){a.css("-moz-user-select","")}).on("click.dtSelect",d,function(c){var a=b.select.items();if(!i.getSelection||!i.getSelection().toString()){var d=b.settings()[0];if(e(c.target).closest("div.dataTables_wrapper")[0]==
b.table().container()){var g=b.cell(e(c.target).closest("td, th"));if(g.any()){var h=e.Event("user-select.dt");k(b,h,[a,g,c]);h.isDefaultPrevented()||(h=g.index(),"row"===a?(a=h.row,s(c,b,d,"row",a)):"column"===a?(a=g.index().column,s(c,b,d,"column",a)):"cell"===a&&(a=g.index(),s(c,b,d,"cell",a)),d._select_lastCell=h)}}}});e("body").on("click.dtSelect",function(a){c._select.blurable&&!e(a.target).parents().filter(b.table().container()).length&&(e(a.target).parents("div.DTE").length||p(c,!0))})}function k(b,
a,c,d){if(!d||b.flatten().length)"string"===typeof a&&(a+=".dt"),c.unshift(b),e(b.table().node()).triggerHandler(a,c)}function w(b){var a=b.settings()[0];if(a._select.info&&a.aanFeatures.i){var c=e('<span class="select-info"/>'),d=function(a,d){c.append(e('<span class="select-item"/>').append(b.i18n("select."+a+"s",{_:"%d "+a+"s selected","0":"",1:"1 "+a+" selected"},d)))};d("row",b.rows({selected:!0}).flatten().length);d("column",b.columns({selected:!0}).flatten().length);d("cell",b.cells({selected:!0}).flatten().length);
e.each(a.aanFeatures.i,function(a,b){var b=e(b),d=b.children("span.select-info");d.length&&d.remove();""!==c.text()&&b.append(c)})}}function x(b,a,c,d){var f=b[a+"s"]({search:"applied"}).indexes(),d=e.inArray(d,f),m=e.inArray(c,f);if(!b[a+"s"]({selected:!0}).any()&&-1===d)f.splice(e.inArray(c,f)+1,f.length);else{if(d>m)var j=m,m=d,d=j;f.splice(m+1,f.length);f.splice(0,d)}b[a](c,{selected:!0}).any()?(f.splice(e.inArray(c,f),1),b[a+"s"](f).deselect()):b[a+"s"](f).select()}function p(b,a){if(a||"single"===
b._select.style){var c=new g.Api(b);c.rows({selected:!0}).deselect();c.columns({selected:!0}).deselect();c.cells({selected:!0}).deselect()}}function s(b,a,c,d,f){var e=a.select.style(),j=a[d](f,{selected:!0}).any();"os"===e?b.ctrlKey||b.metaKey?a[d](f).select(!j):b.shiftKey?"cell"===d?t(a,f,c._select_lastCell||null):x(a,d,f,c._select_lastCell?c._select_lastCell[d]:null):(b=a[d+"s"]({selected:!0}),j&&1===b.flatten().length?a[d](f).deselect():(b.deselect(),a[d](f).select())):"multi+shift"==e?b.shiftKey?
"cell"===d?t(a,f,c._select_lastCell||null):x(a,d,f,c._select_lastCell?c._select_lastCell[d]:null):a[d](f).select(!j):a[d](f).select(!j)}function q(b,a){return function(c){return c.i18n("buttons."+b,a)}}var g=e.fn.dataTable;g.select={};g.select.version="1.2.0";g.select.init=function(b){var a=b.settings()[0],c=a.oInit.select,d=g.defaults.select,c=c===h?d:c,d="row",f="api",m=!1,j=!0,u="td, th",i="selected";a._select={};if(!0===c)f="os";else if("string"===typeof c)f=c;else if(e.isPlainObject(c)&&(c.blurable!==
h&&(m=c.blurable),c.info!==h&&(j=c.info),c.items!==h&&(d=c.items),c.style!==h&&(f=c.style),c.selector!==h&&(u=c.selector),c.className!==h))i=c.className;b.select.selector(u);b.select.items(d);b.select.style(f);b.select.blurable(m);b.select.info(j);a._select.className=i;e.fn.dataTable.ext.order["select-checkbox"]=function(a,c){return this.api().column(c,{order:"index"}).nodes().map(function(c){return"row"===a._select.items?e(c).parent().hasClass(a._select.className):"cell"===a._select.items?e(c).hasClass(a._select.className):
!1})};e(b.table().node()).hasClass("selectable")&&b.select.style("os")};e.each([{type:"row",prop:"aoData"},{type:"column",prop:"aoColumns"}],function(b,a){g.ext.selector[a.type].push(function(c,b,f){var b=b.selected,e,j=[];if(b===h)return f;for(var g=0,i=f.length;g<i;g++)e=c[a.prop][f[g]],(!0===b&&!0===e._select_selected||!1===b&&!e._select_selected)&&j.push(f[g]);return j})});g.ext.selector.cell.push(function(b,a,c){var a=a.selected,d,f=[];if(a===h)return c;for(var e=0,g=c.length;e<g;e++)d=b.aoData[c[e].row],
(!0===a&&d._selected_cells&&!0===d._selected_cells[c[e].column]||!1===a&&(!d._selected_cells||!d._selected_cells[c[e].column]))&&f.push(c[e]);return f});var n=g.Api.register,o=g.Api.registerPlural;n("select()",function(){return this.iterator("table",function(b){g.select.init(new g.Api(b))})});n("select.blurable()",function(b){return b===h?this.context[0]._select.blurable:this.iterator("table",function(a){a._select.blurable=b})});n("select.info()",function(b){return w===h?this.context[0]._select.info:
this.iterator("table",function(a){a._select.info=b})});n("select.items()",function(b){return b===h?this.context[0]._select.items:this.iterator("table",function(a){a._select.items=b;k(new g.Api(a),"selectItems",[b])})});n("select.style()",function(b){return b===h?this.context[0]._select.style:this.iterator("table",function(a){a._select.style=b;if(!a._select_init){var c=new g.Api(a);a.aoRowCreatedCallback.push({fn:function(c,b,d){b=a.aoData[d];b._select_selected&&e(c).addClass(a._select.className);
c=0;for(d=a.aoColumns.length;c<d;c++)(a.aoColumns[c]._select_selected||b._selected_cells&&b._selected_cells[c])&&e(b.anCells[c]).addClass(a._select.className)},sName:"select-deferRender"});c.on("preXhr.dt.dtSelect",function(){var a=c.rows({selected:!0}).ids(!0).filter(function(c){return c!==h}),b=c.cells({selected:!0}).eq(0).map(function(a){var b=c.row(a.row).id(!0);return b?{row:b,column:a.column}:h}).filter(function(c){return c!==h});c.one("draw.dt.dtSelect",function(){c.rows(a).select();b.any()&&
b.each(function(a){c.cells(a.row,a.column).select()})})});c.on("draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt",function(){w(c)});c.on("destroy.dtSelect",function(){r(c);c.off(".dtSelect")})}var d=new g.Api(a);r(d);"api"!==b&&v(d);k(new g.Api(a),"selectStyle",[b])})});n("select.selector()",function(b){return b===h?this.context[0]._select.selector:this.iterator("table",function(a){r(new g.Api(a));a._select.selector=b;"api"!==a._select.style&&v(new g.Api(a))})});o("rows().select()",
"row().select()",function(b){var a=this;if(!1===b)return this.deselect();this.iterator("row",function(c,a){p(c);c.aoData[a]._select_selected=!0;e(c.aoData[a].nTr).addClass(c._select.className)});this.iterator("table",function(c,b){k(a,"select",["row",a[b]],!0)});return this});o("columns().select()","column().select()",function(b){var a=this;if(!1===b)return this.deselect();this.iterator("column",function(a,b){p(a);a.aoColumns[b]._select_selected=!0;var f=(new g.Api(a)).column(b);e(f.header()).addClass(a._select.className);
e(f.footer()).addClass(a._select.className);f.nodes().to$().addClass(a._select.className)});this.iterator("table",function(c,b){k(a,"select",["column",a[b]],!0)});return this});o("cells().select()","cell().select()",function(b){var a=this;if(!1===b)return this.deselect();this.iterator("cell",function(a,b,f){p(a);b=a.aoData[b];b._selected_cells===h&&(b._selected_cells=[]);b._selected_cells[f]=!0;b.anCells&&e(b.anCells[f]).addClass(a._select.className)});this.iterator("table",function(b,d){k(a,"select",
["cell",a[d]],!0)});return this});o("rows().deselect()","row().deselect()",function(){var b=this;this.iterator("row",function(a,b){a.aoData[b]._select_selected=!1;e(a.aoData[b].nTr).removeClass(a._select.className)});this.iterator("table",function(a,c){k(b,"deselect",["row",b[c]],!0)});return this});o("columns().deselect()","column().deselect()",function(){var b=this;this.iterator("column",function(a,b){a.aoColumns[b]._select_selected=!1;var d=new g.Api(a),f=d.column(b);e(f.header()).removeClass(a._select.className);
e(f.footer()).removeClass(a._select.className);d.cells(null,b).indexes().each(function(b){var c=a.aoData[b.row],d=c._selected_cells;c.anCells&&(!d||!d[b.column])&&e(c.anCells[b.column]).removeClass(a._select.className)})});this.iterator("table",function(a,c){k(b,"deselect",["column",b[c]],!0)});return this});o("cells().deselect()","cell().deselect()",function(){var b=this;this.iterator("cell",function(a,b,d){b=a.aoData[b];b._selected_cells[d]=!1;b.anCells&&!a.aoColumns[d]._select_selected&&e(b.anCells[d]).removeClass(a._select.className)});
this.iterator("table",function(a,c){k(b,"deselect",["cell",b[c]],!0)});return this});e.extend(g.ext.buttons,{selected:{text:q("selected","Selected"),className:"buttons-selected",init:function(b){var a=this;b.on("draw.dt.DT select.dt.DT deselect.dt.DT",function(){var b=a.rows({selected:!0}).any()||a.columns({selected:!0}).any()||a.cells({selected:!0}).any();a.enable(b)});this.disable()}},selectedSingle:{text:q("selectedSingle","Selected single"),className:"buttons-selected-single",init:function(b){var a=
this;b.on("draw.dt.DT select.dt.DT deselect.dt.DT",function(){var c=b.rows({selected:!0}).flatten().length+b.columns({selected:!0}).flatten().length+b.cells({selected:!0}).flatten().length;a.enable(1===c)});this.disable()}},selectAll:{text:q("selectAll","Select all"),className:"buttons-select-all",action:function(){this[this.select.items()+"s"]().select()}},selectNone:{text:q("selectNone","Deselect all"),className:"buttons-select-none",action:function(){p(this.settings()[0],!0)},init:function(b){var a=
this;b.on("draw.dt.DT select.dt.DT deselect.dt.DT",function(){var c=b.rows({selected:!0}).flatten().length+b.columns({selected:!0}).flatten().length+b.cells({selected:!0}).flatten().length;a.enable(0<c)});this.disable()}}});e.each(["Row","Column","Cell"],function(b,a){var c=a.toLowerCase();g.ext.buttons["select"+a+"s"]={text:q("select"+a+"s","Select "+c+"s"),className:"buttons-select-"+c+"s",action:function(){this.select.items(c)},init:function(a){var b=this;a.on("selectItems.dt.DT",function(a,d,
e){b.active(e===c)})}}});e(l).on("preInit.dt.dtSelect",function(b,a){"dt"===b.namespace&&g.select.init(new g.Api(a))});return g.select});
/*
 * This combined file was created by the DataTables downloader builder:
 *   https://datatables.net/download
 *
 * To rebuild or modify this file with the latest versions of the included
 * software please visit:
 *   https://datatables.net/download/#dt/dt-1.10.12/b-1.2.2/b-colvis-1.2.2/e-1.5.6/r-2.1.0/se-1.2.0
 *
 * Included libraries:
 *   DataTables 1.10.12, Buttons 1.2.2, Column visibility 1.2.2, Editor 1.5.6, Responsive 2.1.0, Select 1.2.0
 */

/*! DataTables 1.10.12
 * ©2008-2015 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     DataTables
 * @description Paginate, search and order HTML tables
 * @version     1.10.12
 * @file        jquery.dataTables.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2008-2015 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/


(function( factory ) {
	"use strict";

	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				// CommonJS environments without a window global must pass a
				// root. This will give an error otherwise
				root = window;
			}

			if ( ! $ ) {
				$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window
					require('jquery') :
					require('jquery')( root );
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}
(function( $, window, document, undefined ) {
	"use strict";

	/**
	 * DataTables is a plug-in for the jQuery Javascript library. It is a highly
	 * flexible tool, based upon the foundations of progressive enhancement,
	 * which will add advanced interaction controls to any HTML table. For a
	 * full list of features please refer to
	 * [DataTables.net](href="http://datatables.net).
	 *
	 * Note that the `DataTable` object is not a global variable but is aliased
	 * to `jQuery.fn.DataTable` and `jQuery.fn.dataTable` through which it may
	 * be  accessed.
	 *
	 *  @class
	 *  @param {object} [init={}] Configuration object for DataTables. Options
	 *    are defined by {@link DataTable.defaults}
	 *  @requires jQuery 1.7+
	 *
	 *  @example
	 *    // Basic initialisation
	 *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
	 *
	 *  @example
	 *    // Initialisation with configuration options - in this case, disable
	 *    // pagination and sorting.
	 *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
	 */
	var DataTable = function ( options )
	{
		/**
		 * Perform a jQuery selector action on the table's TR elements (from the tbody) and
		 * return the resulting jQuery object.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
		 *    criterion ("applied") or all TR elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {object} jQuery object, filtered by the given selector.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"search": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
		 */
		this.$ = function ( sSelector, oOpts )
		{
			return this.api(true).$( sSelector, oOpts );
		};
		
		
		/**
		 * Almost identical to $ in operation, but in this case returns the data for the matched
		 * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
		 * rather than any descendants, so the data can be obtained for the row/cell. If matching
		 * rows are found, the data returned is the original data array/object that was used to
		 * create the row (or a generated array if from a DOM source).
		 *
		 * This method is often useful in-combination with $ where both functions are given the
		 * same parameters and the array indexes will match identically.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
		 *    criterion ("applied") or all elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the data in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {array} Data for the matched elements. If any elements, as a result of the
		 *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
		 *    entry in the array.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"search": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the search" );
		 *    } );
		 */
		this._ = function ( sSelector, oOpts )
		{
			return this.api(true).rows( sSelector, oOpts ).data();
		};
		
		
		/**
		 * Create a DataTables Api instance, with the currently selected tables for
		 * the Api's context.
		 * @param {boolean} [traditional=false] Set the API instance's context to be
		 *   only the table referred to by the `DataTable.ext.iApiIndex` option, as was
		 *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),
		 *   or if all tables captured in the jQuery object should be used.
		 * @return {DataTables.Api}
		 */
		this.api = function ( traditional )
		{
			return traditional ?
				new _Api(
					_fnSettingsFromNode( this[ _ext.iApiIndex ] )
				) :
				new _Api( this );
		};
		
		
		/**
		 * Add a single new row or multiple rows of data to the table. Please note
		 * that this is suitable for client-side processing only - if you are using
		 * server-side processing (i.e. "bServerSide": true), then to add data, you
		 * must add it to the data source, i.e. the server-side, through an Ajax call.
		 *  @param {array|object} data The data to be added to the table. This can be:
		 *    <ul>
		 *      <li>1D array of data - add a single row with the data provided</li>
		 *      <li>2D array of arrays - add multiple rows in a single call</li>
		 *      <li>object - data object when using <i>mData</i></li>
		 *      <li>array of objects - multiple data objects when using <i>mData</i></li>
		 *    </ul>
		 *  @param {bool} [redraw=true] redraw the table or not
		 *  @returns {array} An array of integers, representing the list of indexes in
		 *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
		 *    the table.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Global var for counter
		 *    var giCount = 2;
		 *
		 *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
		 *
		 *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
		 */
		this.fnAddData = function( data, redraw )
		{
			var api = this.api( true );
		
			/* Check if we want to add multiple rows or not */
			var rows = $.isArray(data) && ( $.isArray(data[0]) || $.isPlainObject(data[0]) ) ?
				api.rows.add( data ) :
				api.row.add( data );
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return rows.flatten().toArray();
		};
		
		
		/**
		 * This function will make DataTables recalculate the column sizes, based on the data
		 * contained in the table and the sizes applied to the columns (in the DOM, CSS or
		 * through the sWidth parameter). This can be useful when the width of the table's
		 * parent element changes (for example a window resize).
		 *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).bind('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
		 */
		this.fnAdjustColumnSizing = function ( bRedraw )
		{
			var api = this.api( true ).columns.adjust();
			var settings = api.settings()[0];
			var scroll = settings.oScroll;
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw( false );
			}
			else if ( scroll.sX !== "" || scroll.sY !== "" ) {
				/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
				_fnScrollDraw( settings );
			}
		};
		
		
		/**
		 * Quickly and simply clear a table
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
		 */
		this.fnClearTable = function( bRedraw )
		{
			var api = this.api( true ).clear();
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
		};
		
		
		/**
		 * The exact opposite of 'opening' a row, this function will close any rows which
		 * are currently 'open'.
		 *  @param {node} nTr the table row to 'close'
		 *  @returns {int} 0 on success, or 1 if failed (can't find the row)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnClose = function( nTr )
		{
			this.api( true ).row( nTr ).child.hide();
		};
		
		
		/**
		 * Remove a row for the table
		 *  @param {mixed} target The index of the row from aoData to be deleted, or
		 *    the TR element you want to delete
		 *  @param {function|null} [callBack] Callback function
		 *  @param {bool} [redraw=true] Redraw the table or not
		 *  @returns {array} The row that was deleted
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
		 */
		this.fnDeleteRow = function( target, callback, redraw )
		{
			var api = this.api( true );
			var rows = api.rows( target );
			var settings = rows.settings()[0];
			var data = settings.aoData[ rows[0][0] ];
		
			rows.remove();
		
			if ( callback ) {
				callback.call( this, settings, data );
			}
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return data;
		};
		
		
		/**
		 * Restore the table to it's original state in the DOM by removing all of DataTables
		 * enhancements, alterations to the DOM structure of the table and event listeners.
		 *  @param {boolean} [remove=false] Completely remove the table from the DOM
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
		 */
		this.fnDestroy = function ( remove )
		{
			this.api( true ).destroy( remove );
		};
		
		
		/**
		 * Redraw the table
		 *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
		 */
		this.fnDraw = function( complete )
		{
			// Note that this isn't an exact match to the old call to _fnDraw - it takes
			// into account the new data, but can hold position.
			this.api( true ).draw( complete );
		};
		
		
		/**
		 * Filter the input based on data
		 *  @param {string} sInput String to filter the table on
		 *  @param {int|null} [iColumn] Column to limit filtering to
		 *  @param {bool} [bRegex=false] Treat as regular expression or not
		 *  @param {bool} [bSmart=true] Perform smart filtering or not
		 *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
		 *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
		 */
		this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )
		{
			var api = this.api( true );
		
			if ( iColumn === null || iColumn === undefined ) {
				api.search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
			else {
				api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
		
			api.draw();
		};
		
		
		/**
		 * Get the data for the whole table, an individual row or an individual cell based on the
		 * provided parameters.
		 *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as
		 *    a TR node then the data source for the whole row will be returned. If given as a
		 *    TD/TH cell node then iCol will be automatically calculated and the data for the
		 *    cell returned. If given as an integer, then this is treated as the aoData internal
		 *    data index for the row (see fnGetPosition) and the data for that row used.
		 *  @param {int} [col] Optional column index that you want the data of.
		 *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
		 *    returned. If mRow is defined, just data for that row, and is iCol is
		 *    defined, only data for the designated cell is returned.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Row data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Individual cell data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
		 */
		this.fnGetData = function( src, col )
		{
			var api = this.api( true );
		
			if ( src !== undefined ) {
				var type = src.nodeName ? src.nodeName.toLowerCase() : '';
		
				return col !== undefined || type == 'td' || type == 'th' ?
					api.cell( src, col ).data() :
					api.row( src ).data() || null;
			}
		
			return api.data().toArray();
		};
		
		
		/**
		 * Get an array of the TR nodes that are used in the table's body. Note that you will
		 * typically want to use the '$' API method in preference to this as it is more
		 * flexible.
		 *  @param {int} [iRow] Optional row index for the TR element you want
		 *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
		 *    in the table's body, or iRow is defined, just the TR element requested.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
		 */
		this.fnGetNodes = function( iRow )
		{
			var api = this.api( true );
		
			return iRow !== undefined ?
				api.row( iRow ).node() :
				api.rows().nodes().flatten().toArray();
		};
		
		
		/**
		 * Get the array indexes of a particular cell from it's DOM element
		 * and column index including hidden columns
		 *  @param {node} node this can either be a TR, TD or TH in the table's body
		 *  @returns {int} If nNode is given as a TR, then a single index is returned, or
		 *    if given as a cell, an array of [row index, column index (visible),
		 *    column index (all)] is given.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnGetPosition = function( node )
		{
			var api = this.api( true );
			var nodeName = node.nodeName.toUpperCase();
		
			if ( nodeName == 'TR' ) {
				return api.row( node ).index();
			}
			else if ( nodeName == 'TD' || nodeName == 'TH' ) {
				var cell = api.cell( node ).index();
		
				return [
					cell.row,
					cell.columnVisible,
					cell.column
				];
			}
			return null;
		};
		
		
		/**
		 * Check to see if a row is 'open' or not.
		 *  @param {node} nTr the table row to check
		 *  @returns {boolean} true if the row is currently open, false otherwise
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnIsOpen = function( nTr )
		{
			return this.api( true ).row( nTr ).child.isShown();
		};
		
		
		/**
		 * This function will place a new row directly after a row which is currently
		 * on display on the page, with the HTML contents that is passed into the
		 * function. This can be used, for example, to ask for confirmation that a
		 * particular record should be deleted.
		 *  @param {node} nTr The table row to 'open'
		 *  @param {string|node|jQuery} mHtml The HTML to put into the row
		 *  @param {string} sClass Class to give the new TD cell
		 *  @returns {node} The row opened. Note that if the table row passed in as the
		 *    first parameter, is not found in the table, this method will silently
		 *    return.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnOpen = function( nTr, mHtml, sClass )
		{
			return this.api( true )
				.row( nTr )
				.child( mHtml, sClass )
				.show()
				.child()[0];
		};
		
		
		/**
		 * Change the pagination - provides the internal logic for pagination in a simple API
		 * function. With this function you can have a DataTables table go to the next,
		 * previous, first or last pages.
		 *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
		 *    or page number to jump to (integer), note that page 0 is the first page.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
		 */
		this.fnPageChange = function ( mAction, bRedraw )
		{
			var api = this.api( true ).page( mAction );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw(false);
			}
		};
		
		
		/**
		 * Show a particular column
		 *  @param {int} iCol The column whose display should be changed
		 *  @param {bool} bShow Show (true) or hide (false) the column
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
		 */
		this.fnSetColumnVis = function ( iCol, bShow, bRedraw )
		{
			var api = this.api( true ).column( iCol ).visible( bShow );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.columns.adjust().draw();
			}
		};
		
		
		/**
		 * Get the settings for a particular table for external manipulation
		 *  @returns {object} DataTables settings object. See
		 *    {@link DataTable.models.oSettings}
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
		 */
		this.fnSettings = function()
		{
			return _fnSettingsFromNode( this[_ext.iApiIndex] );
		};
		
		
		/**
		 * Sort the table by a particular column
		 *  @param {int} iCol the data index to sort on. Note that this will not match the
		 *    'display index' if you have hidden data entries
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
		 */
		this.fnSort = function( aaSort )
		{
			this.api( true ).order( aaSort ).draw();
		};
		
		
		/**
		 * Attach a sort listener to an element for a given column
		 *  @param {node} nNode the element to attach the sort listener to
		 *  @param {int} iColumn the column that a click on this node will sort on
		 *  @param {function} [fnCallback] callback function when sort is run
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
		 */
		this.fnSortListener = function( nNode, iColumn, fnCallback )
		{
			this.api( true ).order.listener( nNode, iColumn, fnCallback );
		};
		
		
		/**
		 * Update a table cell or row - this method will accept either a single value to
		 * update the cell with, an array of values with one element for each column or
		 * an object in the same format as the original data source. The function is
		 * self-referencing in order to make the multi column updates easier.
		 *  @param {object|array|string} mData Data to update the cell/row with
		 *  @param {node|int} mRow TR element you want to update or the aoData index
		 *  @param {int} [iColumn] The column to update, give as null or undefined to
		 *    update a whole row.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @param {bool} [bAction=true] Perform pre-draw actions or not
		 *  @returns {int} 0 on success, 1 on error
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
		 */
		this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )
		{
			var api = this.api( true );
		
			if ( iColumn === undefined || iColumn === null ) {
				api.row( mRow ).data( mData );
			}
			else {
				api.cell( mRow, iColumn ).data( mData );
			}
		
			if ( bAction === undefined || bAction ) {
				api.columns.adjust();
			}
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
			return 0;
		};
		
		
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used, in order
		 * to ensure compatibility.
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
		 *    formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
		 *    version, or false if this version of DataTales is not suitable
		 *  @method
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		this.fnVersionCheck = _ext.fnVersionCheck;
		

		var _that = this;
		var emptyInit = options === undefined;
		var len = this.length;

		if ( emptyInit ) {
			options = {};
		}

		this.oApi = this.internal = _ext.internal;

		// Extend with old style plug-in API methods
		for ( var fn in DataTable.ext.internal ) {
			if ( fn ) {
				this[fn] = _fnExternApiFunc(fn);
			}
		}

		this.each(function() {
			// For each initialisation we want to give it a clean initialisation
			// object that can be bashed around
			var o = {};
			var oInit = len > 1 ? // optimisation for single table case
				_fnExtend( o, options, true ) :
				options;

			/*global oInit,_that,emptyInit*/
			var i=0, iLen, j, jLen, k, kLen;
			var sId = this.getAttribute( 'id' );
			var bInitHandedOff = false;
			var defaults = DataTable.defaults;
			var $this = $(this);
			
			
			/* Sanity check */
			if ( this.nodeName.toLowerCase() != 'table' )
			{
				_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );
				return;
			}
			
			/* Backwards compatibility for the defaults */
			_fnCompatOpts( defaults );
			_fnCompatCols( defaults.column );
			
			/* Convert the camel-case defaults to Hungarian */
			_fnCamelToHungarian( defaults, defaults, true );
			_fnCamelToHungarian( defaults.column, defaults.column, true );
			
			/* Setting up the initialisation object */
			_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ) );
			
			
			
			/* Check to see if we are re-initialising a table */
			var allSettings = DataTable.settings;
			for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )
			{
				var s = allSettings[i];
			
				/* Base check on table node */
				if ( s.nTable == this || s.nTHead.parentNode == this || (s.nTFoot && s.nTFoot.parentNode == this) )
				{
					var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
					var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
			
					if ( emptyInit || bRetrieve )
					{
						return s.oInstance;
					}
					else if ( bDestroy )
					{
						s.oInstance.fnDestroy();
						break;
					}
					else
					{
						_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );
						return;
					}
				}
			
				/* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
				if ( s.sTableId == this.id )
				{
					allSettings.splice( i, 1 );
					break;
				}
			}
			
			/* Ensure the table has an ID - required for accessibility */
			if ( sId === null || sId === "" )
			{
				sId = "DataTables_Table_"+(DataTable.ext._unique++);
				this.id = sId;
			}
			
			/* Create the settings object for this table and set some of the default parameters */
			var oSettings = $.extend( true, {}, DataTable.models.oSettings, {
				"sDestroyWidth": $this[0].style.width,
				"sInstance":     sId,
				"sTableId":      sId
			} );
			oSettings.nTable = this;
			oSettings.oApi   = _that.internal;
			oSettings.oInit  = oInit;
			
			allSettings.push( oSettings );
			
			// Need to add the instance after the instance after the settings object has been added
			// to the settings array, so we can self reference the table instance if more than one
			oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();
			
			// Backwards compatibility, before we apply all the defaults
			_fnCompatOpts( oInit );
			
			if ( oInit.oLanguage )
			{
				_fnLanguageCompat( oInit.oLanguage );
			}
			
			// If the length menu is given, but the init display length is not, use the length menu
			if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
			{
				oInit.iDisplayLength = $.isArray( oInit.aLengthMenu[0] ) ?
					oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
			}
			
			// Apply the defaults and init options to make a single init object will all
			// options defined from defaults and instance options.
			oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );
			
			
			// Map the initialisation options onto the settings object
			_fnMap( oSettings.oFeatures, oInit, [
				"bPaginate",
				"bLengthChange",
				"bFilter",
				"bSort",
				"bSortMulti",
				"bInfo",
				"bProcessing",
				"bAutoWidth",
				"bSortClasses",
				"bServerSide",
				"bDeferRender"
			] );
			_fnMap( oSettings, oInit, [
				"asStripeClasses",
				"ajax",
				"fnServerData",
				"fnFormatNumber",
				"sServerMethod",
				"aaSorting",
				"aaSortingFixed",
				"aLengthMenu",
				"sPaginationType",
				"sAjaxSource",
				"sAjaxDataProp",
				"iStateDuration",
				"sDom",
				"bSortCellsTop",
				"iTabIndex",
				"fnStateLoadCallback",
				"fnStateSaveCallback",
				"renderer",
				"searchDelay",
				"rowId",
				[ "iCookieDuration", "iStateDuration" ], // backwards compat
				[ "oSearch", "oPreviousSearch" ],
				[ "aoSearchCols", "aoPreSearchCols" ],
				[ "iDisplayLength", "_iDisplayLength" ],
				[ "bJQueryUI", "bJUI" ]
			] );
			_fnMap( oSettings.oScroll, oInit, [
				[ "sScrollX", "sX" ],
				[ "sScrollXInner", "sXInner" ],
				[ "sScrollY", "sY" ],
				[ "bScrollCollapse", "bCollapse" ]
			] );
			_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
			
			/* Callback functions which are array driven */
			_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );
			_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );
			_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );
			_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );
			_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );
			
			oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );
			
			/* Browser support detection */
			_fnBrowserDetect( oSettings );
			
			var oClasses = oSettings.oClasses;
			
			// @todo Remove in 1.11
			if ( oInit.bJQueryUI )
			{
				/* Use the JUI classes object for display. You could clone the oStdClasses object if
				 * you want to have multiple tables with multiple independent classes
				 */
				$.extend( oClasses, DataTable.ext.oJUIClasses, oInit.oClasses );
			
				if ( oInit.sDom === defaults.sDom && defaults.sDom === "lfrtip" )
				{
					/* Set the DOM to use a layout suitable for jQuery UI's theming */
					oSettings.sDom = '<"H"lfr>t<"F"ip>';
				}
			
				if ( ! oSettings.renderer ) {
					oSettings.renderer = 'jqueryui';
				}
				else if ( $.isPlainObject( oSettings.renderer ) && ! oSettings.renderer.header ) {
					oSettings.renderer.header = 'jqueryui';
				}
			}
			else
			{
				$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );
			}
			$this.addClass( oClasses.sTable );
			
			
			if ( oSettings.iInitDisplayStart === undefined )
			{
				/* Display start point, taking into account the save saving */
				oSettings.iInitDisplayStart = oInit.iDisplayStart;
				oSettings._iDisplayStart = oInit.iDisplayStart;
			}
			
			if ( oInit.iDeferLoading !== null )
			{
				oSettings.bDeferLoading = true;
				var tmp = $.isArray( oInit.iDeferLoading );
				oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
				oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
			}
			
			/* Language definitions */
			var oLanguage = oSettings.oLanguage;
			$.extend( true, oLanguage, oInit.oLanguage );
			
			if ( oLanguage.sUrl !== "" )
			{
				/* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
				$.ajax( {
					dataType: 'json',
					url: oLanguage.sUrl,
					success: function ( json ) {
						_fnLanguageCompat( json );
						_fnCamelToHungarian( defaults.oLanguage, json );
						$.extend( true, oLanguage, json );
						_fnInitialise( oSettings );
					},
					error: function () {
						// Error occurred loading language file, continue on as best we can
						_fnInitialise( oSettings );
					}
				} );
				bInitHandedOff = true;
			}
			
			/*
			 * Stripes
			 */
			if ( oInit.asStripeClasses === null )
			{
				oSettings.asStripeClasses =[
					oClasses.sStripeOdd,
					oClasses.sStripeEven
				];
			}
			
			/* Remove row stripe classes if they are already on the table row */
			var stripeClasses = oSettings.asStripeClasses;
			var rowOne = $this.children('tbody').find('tr').eq(0);
			if ( $.inArray( true, $.map( stripeClasses, function(el, i) {
				return rowOne.hasClass(el);
			} ) ) !== -1 ) {
				$('tbody tr', this).removeClass( stripeClasses.join(' ') );
				oSettings.asDestroyStripes = stripeClasses.slice();
			}
			
			/*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName('thead');
			if ( nThead.length !== 0 )
			{
				_fnDetectHeader( oSettings.aoHeader, nThead[0] );
				anThs = _fnGetUniqueThs( oSettings );
			}
			
			/* If not given a column array, generate one with nulls */
			if ( oInit.aoColumns === null )
			{
				aoColumnsInit = [];
				for ( i=0, iLen=anThs.length ; i<iLen ; i++ )
				{
					aoColumnsInit.push( null );
				}
			}
			else
			{
				aoColumnsInit = oInit.aoColumns;
			}
			
			/* Add the columns */
			for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )
			{
				_fnAddColumn( oSettings, anThs ? anThs[i] : null );
			}
			
			/* Apply the column definitions */
			_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
				_fnColumnOptions( oSettings, iCol, oDef );
			} );
			
			/* HTML5 attribute detection - build an mData object automatically if the
			 * attributes are found
			 */
			if ( rowOne.length ) {
				var a = function ( cell, name ) {
					return cell.getAttribute( 'data-'+name ) !== null ? name : null;
				};
			
				$( rowOne[0] ).children('th, td').each( function (i, cell) {
					var col = oSettings.aoColumns[i];
			
					if ( col.mData === i ) {
						var sort = a( cell, 'sort' ) || a( cell, 'order' );
						var filter = a( cell, 'filter' ) || a( cell, 'search' );
			
						if ( sort !== null || filter !== null ) {
							col.mData = {
								_:      i+'.display',
								sort:   sort !== null   ? i+'.@data-'+sort   : undefined,
								type:   sort !== null   ? i+'.@data-'+sort   : undefined,
								filter: filter !== null ? i+'.@data-'+filter : undefined
							};
			
							_fnColumnOptions( oSettings, i );
						}
					}
				} );
			}
			
			var features = oSettings.oFeatures;
			
			/* Must be done after everything which can be overridden by the state saving! */
			if ( oInit.bStateSave )
			{
				features.bStateSave = true;
				_fnLoadState( oSettings, oInit );
				_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );
			}
			
			
			/*
			 * Sorting
			 * @todo For modularisation (1.11) this needs to do into a sort start up handler
			 */
			
			// If aaSorting is not defined, then we use the first indicator in asSorting
			// in case that has been altered, so the default sort reflects that option
			if ( oInit.aaSorting === undefined )
			{
				var sorting = oSettings.aaSorting;
				for ( i=0, iLen=sorting.length ; i<iLen ; i++ )
				{
					sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];
				}
			}
			
			/* Do a first pass on the sorting classes (allows any size changes to be taken into
			 * account, and also will apply sorting disabled classes if disabled
			 */
			_fnSortingClasses( oSettings );
			
			if ( features.bSort )
			{
				_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
					if ( oSettings.bSorted ) {
						var aSort = _fnSortFlatten( oSettings );
						var sortedColumns = {};
			
						$.each( aSort, function (i, val) {
							sortedColumns[ val.src ] = val.dir;
						} );
			
						_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );
						_fnSortAria( oSettings );
					}
				} );
			}
			
			_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
				if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {
					_fnSortingClasses( oSettings );
				}
			}, 'sc' );
			
			
			/*
			 * Final init
			 * Cache the header, body and footer as required, creating them if needed
			 */
			
			// Work around for Webkit bug 83867 - store the caption-side before removing from doc
			var captions = $this.children('caption').each( function () {
				this._captionSide = $this.css('caption-side');
			} );
			
			var thead = $this.children('thead');
			if ( thead.length === 0 )
			{
				thead = $('<thead/>').appendTo(this);
			}
			oSettings.nTHead = thead[0];
			
			var tbody = $this.children('tbody');
			if ( tbody.length === 0 )
			{
				tbody = $('<tbody/>').appendTo(this);
			}
			oSettings.nTBody = tbody[0];
			
			var tfoot = $this.children('tfoot');
			if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") )
			{
				// If we are a scrolling table, and no footer has been given, then we need to create
				// a tfoot element for the caption element to be appended to
				tfoot = $('<tfoot/>').appendTo(this);
			}
			
			if ( tfoot.length === 0 || tfoot.children().length === 0 ) {
				$this.addClass( oClasses.sNoFooter );
			}
			else if ( tfoot.length > 0 ) {
				oSettings.nTFoot = tfoot[0];
				_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );
			}
			
			/* Check if there is data passing into the constructor */
			if ( oInit.aaData )
			{
				for ( i=0 ; i<oInit.aaData.length ; i++ )
				{
					_fnAddData( oSettings, oInit.aaData[ i ] );
				}
			}
			else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' )
			{
				/* Grab the data from the page - only do this when deferred loading or no Ajax
				 * source since there is no point in reading the DOM data if we are then going
				 * to replace it with Ajax data
				 */
				_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );
			}
			
			/* Copy the data index array */
			oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
			/* Initialisation complete - table can be drawn */
			oSettings.bInitialised = true;
			
			/* Check if we need to initialise the table (it might not have been handed off to the
			 * language processor)
			 */
			if ( bInitHandedOff === false )
			{
				_fnInitialise( oSettings );
			}
		} );
		_that = null;
		return this;
	};

	
	/*
	 * It is useful to have variables which are scoped locally so only the
	 * DataTables functions can access them and they don't leak into global space.
	 * At the same time these functions are often useful over multiple files in the
	 * core and API, so we list, or at least document, all variables which are used
	 * by DataTables as private variables here. This also ensures that there is no
	 * clashing of variable names and that they can easily referenced for reuse.
	 */
	
	
	// Defined else where
	//  _selector_run
	//  _selector_opts
	//  _selector_first
	//  _selector_row_indexes
	
	var _ext; // DataTable.ext
	var _Api; // DataTable.Api
	var _api_register; // DataTable.Api.register
	var _api_registerPlural; // DataTable.Api.registerPlural
	
	var _re_dic = {};
	var _re_new_lines = /[\r\n]/g;
	var _re_html = /<.*?>/g;
	var _re_date_start = /^[\w\+\-]/;
	var _re_date_end = /[\w\+\-]$/;
	
	// Escape regular expression special characters
	var _re_escape_regex = new RegExp( '(\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\', '$', '^', '-' ].join('|\\') + ')', 'g' );
	
	// http://en.wikipedia.org/wiki/Foreign_exchange_market
	// - \u20BD - Russian ruble.
	// - \u20a9 - South Korean Won
	// - \u20BA - Turkish Lira
	// - \u20B9 - Indian Rupee
	// - R - Brazil (R$) and South Africa
	// - fr - Swiss Franc
	// - kr - Swedish krona, Norwegian krone and Danish krone
	// - \u2009 is thin space and \u202F is narrow no-break space, both used in many
	//   standards as thousands separators.
	var _re_formatted_numeric = /[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi;
	
	
	var _empty = function ( d ) {
		return !d || d === true || d === '-' ? true : false;
	};
	
	
	var _intVal = function ( s ) {
		var integer = parseInt( s, 10 );
		return !isNaN(integer) && isFinite(s) ? integer : null;
	};
	
	// Convert from a formatted number with characters other than `.` as the
	// decimal place, to a Javascript number
	var _numToDecimal = function ( num, decimalPoint ) {
		// Cache created regular expressions for speed as this function is called often
		if ( ! _re_dic[ decimalPoint ] ) {
			_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );
		}
		return typeof num === 'string' && decimalPoint !== '.' ?
			num.replace( /\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :
			num;
	};
	
	
	var _isNumber = function ( d, decimalPoint, formatted ) {
		var strType = typeof d === 'string';
	
		// If empty return immediately so there must be a number if it is a
		// formatted string (this stops the string "k", or "kr", etc being detected
		// as a formatted number for currency
		if ( _empty( d ) ) {
			return true;
		}
	
		if ( decimalPoint && strType ) {
			d = _numToDecimal( d, decimalPoint );
		}
	
		if ( formatted && strType ) {
			d = d.replace( _re_formatted_numeric, '' );
		}
	
		return !isNaN( parseFloat(d) ) && isFinite( d );
	};
	
	
	// A string without HTML in it can be considered to be HTML still
	var _isHtml = function ( d ) {
		return _empty( d ) || typeof d === 'string';
	};
	
	
	var _htmlNumeric = function ( d, decimalPoint, formatted ) {
		if ( _empty( d ) ) {
			return true;
		}
	
		var html = _isHtml( d );
		return ! html ?
			null :
			_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?
				true :
				null;
	};
	
	
	var _pluck = function ( a, prop, prop2 ) {
		var out = [];
		var i=0, ien=a.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[i] && a[i][ prop ] ) {
					out.push( a[i][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				if ( a[i] ) {
					out.push( a[i][ prop ] );
				}
			}
		}
	
		return out;
	};
	
	
	// Basically the same as _pluck, but rather than looping over `a` we use `order`
	// as the indexes to pick from `a`
	var _pluck_order = function ( a, order, prop, prop2 )
	{
		var out = [];
		var i=0, ien=order.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[ order[i] ][ prop ] ) {
					out.push( a[ order[i] ][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				out.push( a[ order[i] ][ prop ] );
			}
		}
	
		return out;
	};
	
	
	var _range = function ( len, start )
	{
		var out = [];
		var end;
	
		if ( start === undefined ) {
			start = 0;
			end = len;
		}
		else {
			end = start;
			start = len;
		}
	
		for ( var i=start ; i<end ; i++ ) {
			out.push( i );
		}
	
		return out;
	};
	
	
	var _removeEmpty = function ( a )
	{
		var out = [];
	
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( a[i] ) { // careful - will remove all falsy values!
				out.push( a[i] );
			}
		}
	
		return out;
	};
	
	
	var _stripHtml = function ( d ) {
		return d.replace( _re_html, '' );
	};
	
	
	/**
	 * Find the unique elements in a source array.
	 *
	 * @param  {array} src Source array
	 * @return {array} Array of unique items
	 * @ignore
	 */
	var _unique = function ( src )
	{
		// A faster unique method is to use object keys to identify used values,
		// but this doesn't work with arrays or objects, which we must also
		// consider. See jsperf.com/compare-array-unique-versions/4 for more
		// information.
		var
			out = [],
			val,
			i, ien=src.length,
			j, k=0;
	
		again: for ( i=0 ; i<ien ; i++ ) {
			val = src[i];
	
			for ( j=0 ; j<k ; j++ ) {
				if ( out[j] === val ) {
					continue again;
				}
			}
	
			out.push( val );
			k++;
		}
	
		return out;
	};
	
	
	/**
	 * DataTables utility methods
	 * 
	 * This namespace provides helper methods that DataTables uses internally to
	 * create a DataTable, but which are not exclusively used only for DataTables.
	 * These methods can be used by extension authors to save the duplication of
	 * code.
	 *
	 *  @namespace
	 */
	DataTable.util = {
		/**
		 * Throttle the calls to a function. Arguments and context are maintained
		 * for the throttled function.
		 *
		 * @param {function} fn Function to be called
		 * @param {integer} freq Call frequency in mS
		 * @return {function} Wrapped function
		 */
		throttle: function ( fn, freq ) {
			var
				frequency = freq !== undefined ? freq : 200,
				last,
				timer;
	
			return function () {
				var
					that = this,
					now  = +new Date(),
					args = arguments;
	
				if ( last && now < last + frequency ) {
					clearTimeout( timer );
	
					timer = setTimeout( function () {
						last = undefined;
						fn.apply( that, args );
					}, frequency );
				}
				else {
					last = now;
					fn.apply( that, args );
				}
			};
		},
	
	
		/**
		 * Escape a string such that it can be used in a regular expression
		 *
		 *  @param {string} val string to escape
		 *  @returns {string} escaped string
		 */
		escapeRegex: function ( val ) {
			return val.replace( _re_escape_regex, '\\$1' );
		}
	};
	
	
	
	/**
	 * Create a mapping object that allows camel case parameters to be looked up
	 * for their Hungarian counterparts. The mapping is stored in a private
	 * parameter called `_hungarianMap` which can be accessed on the source object.
	 *  @param {object} o
	 *  @memberof DataTable#oApi
	 */
	function _fnHungarianMap ( o )
	{
		var
			hungarian = 'a aa ai ao as b fn i m o s ',
			match,
			newKey,
			map = {};
	
		$.each( o, function (key, val) {
			match = key.match(/^([^A-Z]+?)([A-Z])/);
	
			if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
			{
				newKey = key.replace( match[0], match[2].toLowerCase() );
				map[ newKey ] = key;
	
				if ( match[1] === 'o' )
				{
					_fnHungarianMap( o[key] );
				}
			}
		} );
	
		o._hungarianMap = map;
	}
	
	
	/**
	 * Convert from camel case parameters to Hungarian, based on a Hungarian map
	 * created by _fnHungarianMap.
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 *  @memberof DataTable#oApi
	 */
	function _fnCamelToHungarian ( src, user, force )
	{
		if ( ! src._hungarianMap ) {
			_fnHungarianMap( src );
		}
	
		var hungarianKey;
	
		$.each( user, function (key, val) {
			hungarianKey = src._hungarianMap[ key ];
	
			if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
			{
				// For objects, we need to buzz down into the object to copy parameters
				if ( hungarianKey.charAt(0) === 'o' )
				{
					// Copy the camelCase options over to the hungarian
					if ( ! user[ hungarianKey ] ) {
						user[ hungarianKey ] = {};
					}
					$.extend( true, user[hungarianKey], user[key] );
	
					_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );
				}
				else {
					user[hungarianKey] = user[ key ];
				}
			}
		} );
	}
	
	
	/**
	 * Language compatibility - when certain options are given, and others aren't, we
	 * need to duplicate the values over, in order to provide backwards compatibility
	 * with older language files.
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnLanguageCompat( lang )
	{
		var defaults = DataTable.defaults.oLanguage;
		var zeroRecords = lang.sZeroRecords;
	
		/* Backwards compatibility - if there is no sEmptyTable given, then use the same as
		 * sZeroRecords - assuming that is given.
		 */
		if ( ! lang.sEmptyTable && zeroRecords &&
			defaults.sEmptyTable === "No data available in table" )
		{
			_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );
		}
	
		/* Likewise with loading records */
		if ( ! lang.sLoadingRecords && zeroRecords &&
			defaults.sLoadingRecords === "Loading..." )
		{
			_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );
		}
	
		// Old parameter name of the thousands separator mapped onto the new
		if ( lang.sInfoThousands ) {
			lang.sThousands = lang.sInfoThousands;
		}
	
		var decimal = lang.sDecimal;
		if ( decimal ) {
			_addNumericSort( decimal );
		}
	}
	
	
	/**
	 * Map one parameter onto another
	 *  @param {object} o Object to map
	 *  @param {*} knew The new parameter name
	 *  @param {*} old The old parameter name
	 */
	var _fnCompatMap = function ( o, knew, old ) {
		if ( o[ knew ] !== undefined ) {
			o[ old ] = o[ knew ];
		}
	};
	
	
	/**
	 * Provide backwards compatibility for the main DT options. Note that the new
	 * options are mapped onto the old parameters, so this is an external interface
	 * change only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatOpts ( init )
	{
		_fnCompatMap( init, 'ordering',      'bSort' );
		_fnCompatMap( init, 'orderMulti',    'bSortMulti' );
		_fnCompatMap( init, 'orderClasses',  'bSortClasses' );
		_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );
		_fnCompatMap( init, 'order',         'aaSorting' );
		_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );
		_fnCompatMap( init, 'paging',        'bPaginate' );
		_fnCompatMap( init, 'pagingType',    'sPaginationType' );
		_fnCompatMap( init, 'pageLength',    'iDisplayLength' );
		_fnCompatMap( init, 'searching',     'bFilter' );
	
		// Boolean initialisation of x-scrolling
		if ( typeof init.sScrollX === 'boolean' ) {
			init.sScrollX = init.sScrollX ? '100%' : '';
		}
		if ( typeof init.scrollX === 'boolean' ) {
			init.scrollX = init.scrollX ? '100%' : '';
		}
	
		// Column search objects are in an array, so it needs to be converted
		// element by element
		var searchCols = init.aoSearchCols;
	
		if ( searchCols ) {
			for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {
				if ( searchCols[i] ) {
					_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );
				}
			}
		}
	}
	
	
	/**
	 * Provide backwards compatibility for column options. Note that the new options
	 * are mapped onto the old parameters, so this is an external interface change
	 * only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatCols ( init )
	{
		_fnCompatMap( init, 'orderable',     'bSortable' );
		_fnCompatMap( init, 'orderData',     'aDataSort' );
		_fnCompatMap( init, 'orderSequence', 'asSorting' );
		_fnCompatMap( init, 'orderDataType', 'sortDataType' );
	
		// orderData can be given as an integer
		var dataSort = init.aDataSort;
		if ( dataSort && ! $.isArray( dataSort ) ) {
			init.aDataSort = [ dataSort ];
		}
	}
	
	
	/**
	 * Browser feature detection for capabilities, quirks
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBrowserDetect( settings )
	{
		// We don't need to do this every time DataTables is constructed, the values
		// calculated are specific to the browser and OS configuration which we
		// don't expect to change between initialisations
		if ( ! DataTable.__browser ) {
			var browser = {};
			DataTable.__browser = browser;
	
			// Scrolling feature / quirks detection
			var n = $('<div/>')
				.css( {
					position: 'fixed',
					top: 0,
					left: 0,
					height: 1,
					width: 1,
					overflow: 'hidden'
				} )
				.append(
					$('<div/>')
						.css( {
							position: 'absolute',
							top: 1,
							left: 1,
							width: 100,
							overflow: 'scroll'
						} )
						.append(
							$('<div/>')
								.css( {
									width: '100%',
									height: 10
								} )
						)
				)
				.appendTo( 'body' );
	
			var outer = n.children();
			var inner = outer.children();
	
			// Numbers below, in order, are:
			// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth
			//
			// IE6 XP:                           100 100 100  83
			// IE7 Vista:                        100 100 100  83
			// IE 8+ Windows:                     83  83 100  83
			// Evergreen Windows:                 83  83 100  83
			// Evergreen Mac with scrollbars:     85  85 100  85
			// Evergreen Mac without scrollbars: 100 100 100 100
	
			// Get scrollbar width
			browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
	
			// IE6/7 will oversize a width 100% element inside a scrolling element, to
			// include the width of the scrollbar, while other browsers ensure the inner
			// element is contained without forcing scrolling
			browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
	
			// In rtl text layout, some browsers (most, but not all) will place the
			// scrollbar on the left, rather than the right.
			browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;
	
			// IE8- don't provide height and width for getBoundingClientRect
			browser.bBounding = n[0].getBoundingClientRect().width ? true : false;
	
			n.remove();
		}
	
		$.extend( settings.oBrowser, DataTable.__browser );
		settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
	}
	
	
	/**
	 * Array.prototype reduce[Right] method, used for browsers which don't support
	 * JS 1.6. Done this way to reduce code size, since we iterate either way
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnReduce ( that, fn, init, start, end, inc )
	{
		var
			i = start,
			value,
			isSet = false;
	
		if ( init !== undefined ) {
			value = init;
			isSet = true;
		}
	
		while ( i !== end ) {
			if ( ! that.hasOwnProperty(i) ) {
				continue;
			}
	
			value = isSet ?
				fn( value, that[i], i, that ) :
				that[i];
	
			isSet = true;
			i += inc;
		}
	
		return value;
	}
	
	/**
	 * Add a column to the list used for the table with default values
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nTh The th element for this column
	 *  @memberof DataTable#oApi
	 */
	function _fnAddColumn( oSettings, nTh )
	{
		// Add column to aoColumns array
		var oDefaults = DataTable.defaults.column;
		var iCol = oSettings.aoColumns.length;
		var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {
			"nTh": nTh ? nTh : document.createElement('th'),
			"sTitle":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',
			"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
			"mData": oDefaults.mData ? oDefaults.mData : iCol,
			idx: iCol
		} );
		oSettings.aoColumns.push( oCol );
	
		// Add search object for column specific search. Note that the `searchCols[ iCol ]`
		// passed into extend can be undefined. This allows the user to give a default
		// with only some of the parameters defined, and also not give a default
		var searchCols = oSettings.aoPreSearchCols;
		searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );
	
		// Use the default column options function to initialise classes etc
		_fnColumnOptions( oSettings, iCol, $(nTh).data() );
	}
	
	
	/**
	 * Apply options for a column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column index to consider
	 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOptions( oSettings, iCol, oOptions )
	{
		var oCol = oSettings.aoColumns[ iCol ];
		var oClasses = oSettings.oClasses;
		var th = $(oCol.nTh);
	
		// Try to get width information from the DOM. We can't get it from CSS
		// as we'd need to parse the CSS stylesheet. `width` option can override
		if ( ! oCol.sWidthOrig ) {
			// Width attribute
			oCol.sWidthOrig = th.attr('width') || null;
	
			// Style attribute
			var t = (th.attr('style') || '').match(/width:\s*(\d+[pxem%]+)/);
			if ( t ) {
				oCol.sWidthOrig = t[1];
			}
		}
	
		/* User specified column options */
		if ( oOptions !== undefined && oOptions !== null )
		{
			// Backwards compatibility
			_fnCompatCols( oOptions );
	
			// Map camel case parameters to their Hungarian counterparts
			_fnCamelToHungarian( DataTable.defaults.column, oOptions );
	
			/* Backwards compatibility for mDataProp */
			if ( oOptions.mDataProp !== undefined && !oOptions.mData )
			{
				oOptions.mData = oOptions.mDataProp;
			}
	
			if ( oOptions.sType )
			{
				oCol._sManualType = oOptions.sType;
			}
	
			// `class` is a reserved word in Javascript, so we need to provide
			// the ability to use a valid name for the camel case input
			if ( oOptions.className && ! oOptions.sClass )
			{
				oOptions.sClass = oOptions.className;
			}
	
			$.extend( oCol, oOptions );
			_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );
	
			/* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
			if ( oOptions.iDataSort !== undefined )
			{
				oCol.aDataSort = [ oOptions.iDataSort ];
			}
			_fnMap( oCol, oOptions, "aDataSort" );
		}
	
		/* Cache the data get and set functions for speed */
		var mDataSrc = oCol.mData;
		var mData = _fnGetObjectDataFn( mDataSrc );
		var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;
	
		var attrTest = function( src ) {
			return typeof src === 'string' && src.indexOf('@') !== -1;
		};
		oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (
			attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
		);
		oCol._setter = null;
	
		oCol.fnGetData = function (rowData, type, meta) {
			var innerData = mData( rowData, type, undefined, meta );
	
			return mRender && type ?
				mRender( innerData, type, rowData, meta ) :
				innerData;
		};
		oCol.fnSetData = function ( rowData, val, meta ) {
			return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );
		};
	
		// Indicate if DataTables should read DOM data as an object or array
		// Used in _fnGetRowElements
		if ( typeof mDataSrc !== 'number' ) {
			oSettings._rowReadObject = true;
		}
	
		/* Feature sorting overrides column specific when off */
		if ( !oSettings.oFeatures.bSort )
		{
			oCol.bSortable = false;
			th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called
		}
	
		/* Check that the class assignment is correct for sorting */
		var bAsc = $.inArray('asc', oCol.asSorting) !== -1;
		var bDesc = $.inArray('desc', oCol.asSorting) !== -1;
		if ( !oCol.bSortable || (!bAsc && !bDesc) )
		{
			oCol.sSortingClass = oClasses.sSortableNone;
			oCol.sSortingClassJUI = "";
		}
		else if ( bAsc && !bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableAsc;
			oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
		}
		else if ( !bAsc && bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableDesc;
			oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
		}
		else
		{
			oCol.sSortingClass = oClasses.sSortable;
			oCol.sSortingClassJUI = oClasses.sSortJUI;
		}
	}
	
	
	/**
	 * Adjust the table column widths for new data. Note: you would probably want to
	 * do a redraw after calling this function!
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAdjustColumnSizing ( settings )
	{
		/* Not interested in doing column width calculation if auto-width is disabled */
		if ( settings.oFeatures.bAutoWidth !== false )
		{
			var columns = settings.aoColumns;
	
			_fnCalculateColumnWidths( settings );
			for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )
			{
				columns[i].nTh.style.width = columns[i].sWidth;
			}
		}
	
		var scroll = settings.oScroll;
		if ( scroll.sY !== '' || scroll.sX !== '')
		{
			_fnScrollDraw( settings );
		}
	
		_fnCallbackFire( settings, null, 'column-sizing', [settings] );
	}
	
	
	/**
	 * Covert the index of a visible column to the index in the data array (take account
	 * of hidden columns)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMatch Visible column index to lookup
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnVisibleToColumnIndex( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	
		return typeof aiVis[iMatch] === 'number' ?
			aiVis[iMatch] :
			null;
	}
	
	
	/**
	 * Covert the index of an index in the data array and convert it to the visible
	 *   column index (take account of hidden columns)
	 *  @param {int} iMatch Column index to lookup
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnIndexToVisible( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
		var iPos = $.inArray( iMatch, aiVis );
	
		return iPos !== -1 ? iPos : null;
	}
	
	
	/**
	 * Get the number of visible columns
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the number of visible columns
	 *  @memberof DataTable#oApi
	 */
	function _fnVisbleColumns( oSettings )
	{
		var vis = 0;
	
		// No reduce in IE8, use a loop for now
		$.each( oSettings.aoColumns, function ( i, col ) {
			if ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {
				vis++;
			}
		} );
	
		return vis;
	}
	
	
	/**
	 * Get an array of column indexes that match a given property
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sParam Parameter in aoColumns to look for - typically
	 *    bVisible or bSearchable
	 *  @returns {array} Array of indexes with matched properties
	 *  @memberof DataTable#oApi
	 */
	function _fnGetColumns( oSettings, sParam )
	{
		var a = [];
	
		$.map( oSettings.aoColumns, function(val, i) {
			if ( val[sParam] ) {
				a.push( i );
			}
		} );
	
		return a;
	}
	
	
	/**
	 * Calculate the 'type' of a column
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnTypes ( settings )
	{
		var columns = settings.aoColumns;
		var data = settings.aoData;
		var types = DataTable.ext.type.detect;
		var i, ien, j, jen, k, ken;
		var col, cell, detectedType, cache;
	
		// For each column, spin over the 
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			col = columns[i];
			cache = [];
	
			if ( ! col.sType && col._sManualType ) {
				col.sType = col._sManualType;
			}
			else if ( ! col.sType ) {
				for ( j=0, jen=types.length ; j<jen ; j++ ) {
					for ( k=0, ken=data.length ; k<ken ; k++ ) {
						// Use a cache array so we only need to get the type data
						// from the formatter once (when using multiple detectors)
						if ( cache[k] === undefined ) {
							cache[k] = _fnGetCellData( settings, k, i, 'type' );
						}
	
						detectedType = types[j]( cache[k], settings );
	
						// If null, then this type can't apply to this column, so
						// rather than testing all cells, break out. There is an
						// exception for the last type which is `html`. We need to
						// scan all rows since it is possible to mix string and HTML
						// types
						if ( ! detectedType && j !== types.length-1 ) {
							break;
						}
	
						// Only a single match is needed for html type since it is
						// bottom of the pile and very similar to string
						if ( detectedType === 'html' ) {
							break;
						}
					}
	
					// Type is valid for all data points in the column - use this
					// type
					if ( detectedType ) {
						col.sType = detectedType;
						break;
					}
				}
	
				// Fall back - if no type was detected, always use string
				if ( ! col.sType ) {
					col.sType = 'string';
				}
			}
		}
	}
	
	
	/**
	 * Take the column definitions and static columns arrays and calculate how
	 * they relate to column indexes. The callback function will then apply the
	 * definition found for a column to a suitable configuration object.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
	 *  @param {array} aoCols The aoColumns array that defines columns individually
	 *  @param {function} fn Callback function - takes two parameters, the calculated
	 *    column index and the definition for that column.
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )
	{
		var i, iLen, j, jLen, k, kLen, def;
		var columns = oSettings.aoColumns;
	
		// Column definitions with aTargets
		if ( aoColDefs )
		{
			/* Loop over the definitions array - loop in reverse so first instance has priority */
			for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
			{
				def = aoColDefs[i];
	
				/* Each definition can target multiple columns, as it is an array */
				var aTargets = def.targets !== undefined ?
					def.targets :
					def.aTargets;
	
				if ( ! $.isArray( aTargets ) )
				{
					aTargets = [ aTargets ];
				}
	
				for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
				{
					if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )
					{
						/* Add columns that we don't yet know about */
						while( columns.length <= aTargets[j] )
						{
							_fnAddColumn( oSettings );
						}
	
						/* Integer, basic index */
						fn( aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )
					{
						/* Negative integer, right to left column counting */
						fn( columns.length+aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'string' )
					{
						/* Class name matching on TH element */
						for ( k=0, kLen=columns.length ; k<kLen ; k++ )
						{
							if ( aTargets[j] == "_all" ||
							     $(columns[k].nTh).hasClass( aTargets[j] ) )
							{
								fn( k, def );
							}
						}
					}
				}
			}
		}
	
		// Statically defined columns array
		if ( aoCols )
		{
			for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )
			{
				fn( i, aoCols[i] );
			}
		}
	}
	
	/**
	 * Add a data array to the table, creating DOM node etc. This is the parallel to
	 * _fnGatherData, but for adding rows from a Javascript source, rather than a
	 * DOM source.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData data array to be added
	 *  @param {node} [nTr] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
	 *  @memberof DataTable#oApi
	 */
	function _fnAddData ( oSettings, aDataIn, nTr, anTds )
	{
		/* Create the object for storing information about this new row */
		var iRow = oSettings.aoData.length;
		var oData = $.extend( true, {}, DataTable.models.oRow, {
			src: nTr ? 'dom' : 'data',
			idx: iRow
		} );
	
		oData._aData = aDataIn;
		oSettings.aoData.push( oData );
	
		/* Create the cells */
		var nTd, sThisType;
		var columns = oSettings.aoColumns;
	
		// Invalidate the column types as the new data needs to be revalidated
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			columns[i].sType = null;
		}
	
		/* Add to the display array */
		oSettings.aiDisplayMaster.push( iRow );
	
		var id = oSettings.rowIdFn( aDataIn );
		if ( id !== undefined ) {
			oSettings.aIds[ id ] = oData;
		}
	
		/* Create the DOM information, or register it if already present */
		if ( nTr || ! oSettings.oFeatures.bDeferRender )
		{
			_fnCreateTr( oSettings, iRow, nTr, anTds );
		}
	
		return iRow;
	}
	
	
	/**
	 * Add one or more TR elements to the table. Generally we'd expect to
	 * use this for reading data from a DOM sourced table, but it could be
	 * used for an TR element. Note that if a TR is given, it is used (i.e.
	 * it is not cloned).
	 *  @param {object} settings dataTables settings object
	 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
	 *  @returns {array} Array of indexes for the added rows
	 *  @memberof DataTable#oApi
	 */
	function _fnAddTr( settings, trs )
	{
		var row;
	
		// Allow an individual node to be passed in
		if ( ! (trs instanceof $) ) {
			trs = $(trs);
		}
	
		return trs.map( function (i, el) {
			row = _fnGetRowElements( settings, el );
			return _fnAddData( settings, row.data, el, row.cells );
		} );
	}
	
	
	/**
	 * Take a TR element and convert it to an index in aoData
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n the TR element to find
	 *  @returns {int} index if the node is found, null if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToDataIndex( oSettings, n )
	{
		return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;
	}
	
	
	/**
	 * Take a TD element and convert it into a column data index (not the visible index)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow The row number the TD/TH can be found in
	 *  @param {node} n The TD/TH element to find
	 *  @returns {int} index if the node is found, -1 if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToColumnIndex( oSettings, iRow, n )
	{
		return $.inArray( n, oSettings.aoData[ iRow ].anCells );
	}
	
	
	/**
	 * Get the data for a given cell from the internal cache, taking into account data mapping
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {string} type data get type ('display', 'type' 'filter' 'sort')
	 *  @returns {*} Cell data
	 *  @memberof DataTable#oApi
	 */
	function _fnGetCellData( settings, rowIdx, colIdx, type )
	{
		var draw           = settings.iDraw;
		var col            = settings.aoColumns[colIdx];
		var rowData        = settings.aoData[rowIdx]._aData;
		var defaultContent = col.sDefaultContent;
		var cellData       = col.fnGetData( rowData, type, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		} );
	
		if ( cellData === undefined ) {
			if ( settings.iDrawError != draw && defaultContent === null ) {
				_fnLog( settings, 0, "Requested unknown parameter "+
					(typeof col.mData=='function' ? '{function}' : "'"+col.mData+"'")+
					" for row "+rowIdx+", column "+colIdx, 4 );
				settings.iDrawError = draw;
			}
			return defaultContent;
		}
	
		// When the data source is null and a specific data type is requested (i.e.
		// not the original data), we can use default column data
		if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {
			cellData = defaultContent;
		}
		else if ( typeof cellData === 'function' ) {
			// If the data source is a function, then we run it and use the return,
			// executing in the scope of the data object (for instances)
			return cellData.call( rowData );
		}
	
		if ( cellData === null && type == 'display' ) {
			return '';
		}
		return cellData;
	}
	
	
	/**
	 * Set the value for a specific cell, into the internal data cache
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {*} val Value to set
	 *  @memberof DataTable#oApi
	 */
	function _fnSetCellData( settings, rowIdx, colIdx, val )
	{
		var col     = settings.aoColumns[colIdx];
		var rowData = settings.aoData[rowIdx]._aData;
	
		col.fnSetData( rowData, val, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		}  );
	}
	
	
	// Private variable that is used to match action syntax in the data property object
	var __reArray = /\[.*?\]$/;
	var __reFn = /\(\)$/;
	
	/**
	 * Split string on periods, taking into account escaped periods
	 * @param  {string} str String to split
	 * @return {array} Split string
	 */
	function _fnSplitObjNotation( str )
	{
		return $.map( str.match(/(\\.|[^\.])+/g) || [''], function ( s ) {
			return s.replace(/\\./g, '.');
		} );
	}
	
	
	/**
	 * Return a function that can be used to get data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data get function
	 *  @memberof DataTable#oApi
	 */
	function _fnGetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Build an object of get functions, and wrap them in a single call */
			var o = {};
			$.each( mSource, function (key, val) {
				if ( val ) {
					o[key] = _fnGetObjectDataFn( val );
				}
			} );
	
			return function (data, type, row, meta) {
				var t = o[type] || o._;
				return t !== undefined ?
					t(data, type, row, meta) :
					data;
			};
		}
		else if ( mSource === null )
		{
			/* Give an empty string for rendering / sorting etc */
			return function (data) { // type, row and meta also passed, but not used
				return data;
			};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, type, row, meta) {
				return mSource( data, type, row, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* If there is a . in the source string then the data source is in a
			 * nested object so we loop over the data for each level to get the next
			 * level down. On each loop we test for undefined, and if found immediately
			 * return. This allows entire objects to be missing and sDefaultContent to
			 * be used if defined, rather than throwing an error
			 */
			var fetchData = function (data, type, src) {
				var arrayNotation, funcNotation, out, innerSrc;
	
				if ( src !== "" )
				{
					var a = _fnSplitObjNotation( src );
	
					for ( var i=0, iLen=a.length ; i<iLen ; i++ )
					{
						// Check if we are dealing with special notation
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
	
						if ( arrayNotation )
						{
							// Array notation
							a[i] = a[i].replace(__reArray, '');
	
							// Condition allows simply [] to be passed in
							if ( a[i] !== "" ) {
								data = data[ a[i] ];
							}
							out = [];
	
							// Get the remainder of the nested object to get
							a.splice( 0, i+1 );
							innerSrc = a.join('.');
	
							// Traverse each entry in the array getting the properties requested
							if ( $.isArray( data ) ) {
								for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
									out.push( fetchData( data[j], type, innerSrc ) );
								}
							}
	
							// If a string is given in between the array notation indicators, that
							// is used to join the strings together, otherwise an array is returned
							var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
							data = (join==="") ? out : out.join(join);
	
							// The inner call to fetchData has already traversed through the remainder
							// of the source requested, so we exit from the loop
							break;
						}
						else if ( funcNotation )
						{
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]();
							continue;
						}
	
						if ( data === null || data[ a[i] ] === undefined )
						{
							return undefined;
						}
						data = data[ a[i] ];
					}
				}
	
				return data;
			};
	
			return function (data, type) { // row and meta also passed, but not used
				return fetchData( data, type, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, type) { // row and meta also passed, but not used
				return data[mSource];
			};
		}
	}
	
	
	/**
	 * Return a function that can be used to set data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data set function
	 *  @memberof DataTable#oApi
	 */
	function _fnSetObjectDataFn( mSource )
	{
		if ( $.isPlainObject( mSource ) )
		{
			/* Unlike get, only the underscore (global) option is used for for
			 * setting data since we don't know the type here. This is why an object
			 * option is not documented for `mData` (which is read/write), but it is
			 * for `mRender` which is read only.
			 */
			return _fnSetObjectDataFn( mSource._ );
		}
		else if ( mSource === null )
		{
			/* Nothing to do when the data source is null */
			return function () {};
		}
		else if ( typeof mSource === 'function' )
		{
			return function (data, val, meta) {
				mSource( data, 'set', val, meta );
			};
		}
		else if ( typeof mSource === 'string' && (mSource.indexOf('.') !== -1 ||
			      mSource.indexOf('[') !== -1 || mSource.indexOf('(') !== -1) )
		{
			/* Like the get, we need to get data from a nested object */
			var setData = function (data, val, src) {
				var a = _fnSplitObjNotation( src ), b;
				var aLast = a[a.length-1];
				var arrayNotation, funcNotation, o, innerSrc;
	
				for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )
				{
					// Check if we are dealing with an array notation request
					arrayNotation = a[i].match(__reArray);
					funcNotation = a[i].match(__reFn);
	
					if ( arrayNotation )
					{
						a[i] = a[i].replace(__reArray, '');
						data[ a[i] ] = [];
	
						// Get the remainder of the nested object to set so we can recurse
						b = a.slice();
						b.splice( 0, i+1 );
						innerSrc = b.join('.');
	
						// Traverse each entry in the array setting the properties requested
						if ( $.isArray( val ) )
						{
							for ( var j=0, jLen=val.length ; j<jLen ; j++ )
							{
								o = {};
								setData( o, val[j], innerSrc );
								data[ a[i] ].push( o );
							}
						}
						else
						{
							// We've been asked to save data to an array, but it
							// isn't array data to be saved. Best that can be done
							// is to just save the value.
							data[ a[i] ] = val;
						}
	
						// The inner call to setData has already traversed through the remainder
						// of the source and has set the data, thus we can exit here
						return;
					}
					else if ( funcNotation )
					{
						// Function call
						a[i] = a[i].replace(__reFn, '');
						data = data[ a[i] ]( val );
					}
	
					// If the nested object doesn't currently exist - since we are
					// trying to set the value - create it
					if ( data[ a[i] ] === null || data[ a[i] ] === undefined )
					{
						data[ a[i] ] = {};
					}
					data = data[ a[i] ];
				}
	
				// Last item in the input - i.e, the actual set
				if ( aLast.match(__reFn ) )
				{
					// Function call
					data = data[ aLast.replace(__reFn, '') ]( val );
				}
				else
				{
					// If array notation is used, we just want to strip it and use the property name
					// and assign the value. If it isn't used, then we get the result we want anyway
					data[ aLast.replace(__reArray, '') ] = val;
				}
			};
	
			return function (data, val) { // meta is also passed in, but not used
				return setData( data, val, mSource );
			};
		}
		else
		{
			/* Array or flat object mapping */
			return function (data, val) { // meta is also passed in, but not used
				data[mSource] = val;
			};
		}
	}
	
	
	/**
	 * Return an array with the full table data
	 *  @param {object} oSettings dataTables settings object
	 *  @returns array {array} aData Master data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetDataMaster ( settings )
	{
		return _pluck( settings.aoData, '_aData' );
	}
	
	
	/**
	 * Nuke the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnClearTable( settings )
	{
		settings.aoData.length = 0;
		settings.aiDisplayMaster.length = 0;
		settings.aiDisplay.length = 0;
		settings.aIds = {};
	}
	
	
	 /**
	 * Take an array of integers (index array) and remove a target integer (value - not
	 * the key!)
	 *  @param {array} a Index array to target
	 *  @param {int} iTarget value to find
	 *  @memberof DataTable#oApi
	 */
	function _fnDeleteIndex( a, iTarget, splice )
	{
		var iTargetIndex = -1;
	
		for ( var i=0, iLen=a.length ; i<iLen ; i++ )
		{
			if ( a[i] == iTarget )
			{
				iTargetIndex = i;
			}
			else if ( a[i] > iTarget )
			{
				a[i]--;
			}
		}
	
		if ( iTargetIndex != -1 && splice === undefined )
		{
			a.splice( iTargetIndex, 1 );
		}
	}
	
	
	/**
	 * Mark cached data as invalid such that a re-read of the data will occur when
	 * the cached data is next requested. Also update from the data source object.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {int}    rowIdx   Row index to invalidate
	 * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
	 *     or 'data'
	 * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
	 *     row will be invalidated
	 * @memberof DataTable#oApi
	 *
	 * @todo For the modularisation of v1.11 this will need to become a callback, so
	 *   the sort and filter methods can subscribe to it. That will required
	 *   initialisation options for sorting, which is why it is not already baked in
	 */
	function _fnInvalidate( settings, rowIdx, src, colIdx )
	{
		var row = settings.aoData[ rowIdx ];
		var i, ien;
		var cellWrite = function ( cell, col ) {
			// This is very frustrating, but in IE if you just write directly
			// to innerHTML, and elements that are overwritten are GC'ed,
			// even if there is a reference to them elsewhere
			while ( cell.childNodes.length ) {
				cell.removeChild( cell.firstChild );
			}
	
			cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );
		};
	
		// Are we reading last data from DOM or the data object?
		if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {
			// Read the data from the DOM
			row._aData = _fnGetRowElements(
					settings, row, colIdx, colIdx === undefined ? undefined : row._aData
				)
				.data;
		}
		else {
			// Reading from data object, update the DOM
			var cells = row.anCells;
	
			if ( cells ) {
				if ( colIdx !== undefined ) {
					cellWrite( cells[colIdx], colIdx );
				}
				else {
					for ( i=0, ien=cells.length ; i<ien ; i++ ) {
						cellWrite( cells[i], i );
					}
				}
			}
		}
	
		// For both row and cell invalidation, the cached data for sorting and
		// filtering is nulled out
		row._aSortData = null;
		row._aFilterData = null;
	
		// Invalidate the type for a specific column (if given) or all columns since
		// the data might have changed
		var cols = settings.aoColumns;
		if ( colIdx !== undefined ) {
			cols[ colIdx ].sType = null;
		}
		else {
			for ( i=0, ien=cols.length ; i<ien ; i++ ) {
				cols[i].sType = null;
			}
	
			// Update DataTables special `DT_*` attributes for the row
			_fnRowAttributes( settings, row );
		}
	}
	
	
	/**
	 * Build a data source object from an HTML row, reading the contents of the
	 * cells that are in the row.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {node|object} TR element from which to read data or existing row
	 *   object from which to re-read the data from the cells
	 * @param {int} [colIdx] Optional column index
	 * @param {array|object} [d] Data source object. If `colIdx` is given then this
	 *   parameter should also be given and will be used to write the data into.
	 *   Only the column in question will be written
	 * @returns {object} Object with two parameters: `data` the data read, in
	 *   document order, and `cells` and array of nodes (they can be useful to the
	 *   caller, so rather than needing a second traversal to get them, just return
	 *   them from here).
	 * @memberof DataTable#oApi
	 */
	function _fnGetRowElements( settings, row, colIdx, d )
	{
		var
			tds = [],
			td = row.firstChild,
			name, col, o, i=0, contents,
			columns = settings.aoColumns,
			objectRead = settings._rowReadObject;
	
		// Allow the data object to be passed in, or construct
		d = d !== undefined ?
			d :
			objectRead ?
				{} :
				[];
	
		var attr = function ( str, td  ) {
			if ( typeof str === 'string' ) {
				var idx = str.indexOf('@');
	
				if ( idx !== -1 ) {
					var attr = str.substring( idx+1 );
					var setter = _fnSetObjectDataFn( str );
					setter( d, td.getAttribute( attr ) );
				}
			}
		};
	
		// Read data from a cell and store into the data object
		var cellProcess = function ( cell ) {
			if ( colIdx === undefined || colIdx === i ) {
				col = columns[i];
				contents = $.trim(cell.innerHTML);
	
				if ( col && col._bAttrSrc ) {
					var setter = _fnSetObjectDataFn( col.mData._ );
					setter( d, contents );
	
					attr( col.mData.sort, cell );
					attr( col.mData.type, cell );
					attr( col.mData.filter, cell );
				}
				else {
					// Depending on the `data` option for the columns the data can
					// be read to either an object or an array.
					if ( objectRead ) {
						if ( ! col._setter ) {
							// Cache the setter function
							col._setter = _fnSetObjectDataFn( col.mData );
						}
						col._setter( d, contents );
					}
					else {
						d[i] = contents;
					}
				}
			}
	
			i++;
		};
	
		if ( td ) {
			// `tr` element was passed in
			while ( td ) {
				name = td.nodeName.toUpperCase();
	
				if ( name == "TD" || name == "TH" ) {
					cellProcess( td );
					tds.push( td );
				}
	
				td = td.nextSibling;
			}
		}
		else {
			// Existing row object passed in
			tds = row.anCells;
	
			for ( var j=0, jen=tds.length ; j<jen ; j++ ) {
				cellProcess( tds[j] );
			}
		}
	
		// Read the ID from the DOM if present
		var rowNode = row.firstChild ? row : row.nTr;
	
		if ( rowNode ) {
			var id = rowNode.getAttribute( 'id' );
	
			if ( id ) {
				_fnSetObjectDataFn( settings.rowId )( d, id );
			}
		}
	
		return {
			data: d,
			cells: tds
		};
	}
	/**
	 * Create a new TR element (and it's TD children) for a row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow Row to consider
	 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @memberof DataTable#oApi
	 */
	function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
	{
		var
			row = oSettings.aoData[iRow],
			rowData = row._aData,
			cells = [],
			nTr, nTd, oCol,
			i, iLen;
	
		if ( row.nTr === null )
		{
			nTr = nTrIn || document.createElement('tr');
	
			row.nTr = nTr;
			row.anCells = cells;
	
			/* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
			nTr._DT_RowIndex = iRow;
	
			/* Special parameters can be given by the data source to be used on the row */
			_fnRowAttributes( oSettings, row );
	
			/* Process each column */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				oCol = oSettings.aoColumns[i];
	
				nTd = nTrIn ? anTds[i] : document.createElement( oCol.sCellType );
				nTd._DT_CellIndex = {
					row: iRow,
					column: i
				};
				
				cells.push( nTd );
	
				// Need to create the HTML if new, or if a rendering function is defined
				if ( (!nTrIn || oCol.mRender || oCol.mData !== i) &&
					 (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')
				) {
					nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );
				}
	
				/* Add user defined class */
				if ( oCol.sClass )
				{
					nTd.className += ' '+oCol.sClass;
				}
	
				// Visibility - add or remove as required
				if ( oCol.bVisible && ! nTrIn )
				{
					nTr.appendChild( nTd );
				}
				else if ( ! oCol.bVisible && nTrIn )
				{
					nTd.parentNode.removeChild( nTd );
				}
	
				if ( oCol.fnCreatedCell )
				{
					oCol.fnCreatedCell.call( oSettings.oInstance,
						nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i
					);
				}
			}
	
			_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow] );
		}
	
		// Remove once webkit bug 131819 and Chromium bug 365619 have been resolved
		// and deployed
		row.nTr.setAttribute( 'role', 'row' );
	}
	
	
	/**
	 * Add attributes to a row based on the special `DT_*` parameters in a data
	 * source object.
	 *  @param {object} settings DataTables settings object
	 *  @param {object} DataTables row object for the row to be modified
	 *  @memberof DataTable#oApi
	 */
	function _fnRowAttributes( settings, row )
	{
		var tr = row.nTr;
		var data = row._aData;
	
		if ( tr ) {
			var id = settings.rowIdFn( data );
	
			if ( id ) {
				tr.id = id;
			}
	
			if ( data.DT_RowClass ) {
				// Remove any classes added by DT_RowClass before
				var a = data.DT_RowClass.split(' ');
				row.__rowc = row.__rowc ?
					_unique( row.__rowc.concat( a ) ) :
					a;
	
				$(tr)
					.removeClass( row.__rowc.join(' ') )
					.addClass( data.DT_RowClass );
			}
	
			if ( data.DT_RowAttr ) {
				$(tr).attr( data.DT_RowAttr );
			}
	
			if ( data.DT_RowData ) {
				$(tr).data( data.DT_RowData );
			}
		}
	}
	
	
	/**
	 * Create the HTML header for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildHead( oSettings )
	{
		var i, ien, cell, row, column;
		var thead = oSettings.nTHead;
		var tfoot = oSettings.nTFoot;
		var createHeader = $('th, td', thead).length === 0;
		var classes = oSettings.oClasses;
		var columns = oSettings.aoColumns;
	
		if ( createHeader ) {
			row = $('<tr/>').appendTo( thead );
		}
	
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			column = columns[i];
			cell = $( column.nTh ).addClass( column.sClass );
	
			if ( createHeader ) {
				cell.appendTo( row );
			}
	
			// 1.11 move into sorting
			if ( oSettings.oFeatures.bSort ) {
				cell.addClass( column.sSortingClass );
	
				if ( column.bSortable !== false ) {
					cell
						.attr( 'tabindex', oSettings.iTabIndex )
						.attr( 'aria-controls', oSettings.sTableId );
	
					_fnSortAttachListener( oSettings, column.nTh, i );
				}
			}
	
			if ( column.sTitle != cell[0].innerHTML ) {
				cell.html( column.sTitle );
			}
	
			_fnRenderer( oSettings, 'header' )(
				oSettings, cell, column, classes
			);
		}
	
		if ( createHeader ) {
			_fnDetectHeader( oSettings.aoHeader, thead );
		}
		
		/* ARIA role for the rows */
	 	$(thead).find('>tr').attr('role', 'row');
	
		/* Deal with the footer - add classes if required */
		$(thead).find('>tr>th, >tr>td').addClass( classes.sHeaderTH );
		$(tfoot).find('>tr>th, >tr>td').addClass( classes.sFooterTH );
	
		// Cache the footer cells. Note that we only take the cells from the first
		// row in the footer. If there is more than one row the user wants to
		// interact with, they need to use the table().foot() method. Note also this
		// allows cells to be used for multiple columns using colspan
		if ( tfoot !== null ) {
			var cells = oSettings.aoFooter[0];
	
			for ( i=0, ien=cells.length ; i<ien ; i++ ) {
				column = columns[i];
				column.nTf = cells[i].cell;
	
				if ( column.sClass ) {
					$(column.nTf).addClass( column.sClass );
				}
			}
		}
	}
	
	
	/**
	 * Draw the header (or footer) element based on the column visibility states. The
	 * methodology here is to use the layout array from _fnDetectHeader, modified for
	 * the instantaneous column visibility, to construct the new layout. The grid is
	 * traversed over cell at a time in a rows x columns grid fashion, although each
	 * cell insert can cover multiple elements in the grid - which is tracks using the
	 * aApplied array. Cell inserts in the grid will only occur where there isn't
	 * already a cell in that position.
	 *  @param {object} oSettings dataTables settings object
	 *  @param array {objects} aoSource Layout array from _fnDetectHeader
	 *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
	 *  @memberof DataTable#oApi
	 */
	function _fnDrawHead( oSettings, aoSource, bIncludeHidden )
	{
		var i, iLen, j, jLen, k, kLen, n, nLocalTr;
		var aoLocal = [];
		var aApplied = [];
		var iColumns = oSettings.aoColumns.length;
		var iRowspan, iColspan;
	
		if ( ! aoSource )
		{
			return;
		}
	
		if (  bIncludeHidden === undefined )
		{
			bIncludeHidden = false;
		}
	
		/* Make a copy of the master layout array, but without the visible columns in it */
		for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )
		{
			aoLocal[i] = aoSource[i].slice();
			aoLocal[i].nTr = aoSource[i].nTr;
	
			/* Remove any columns which are currently hidden */
			for ( j=iColumns-1 ; j>=0 ; j-- )
			{
				if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )
				{
					aoLocal[i].splice( j, 1 );
				}
			}
	
			/* Prep the applied array - it needs an element for each row */
			aApplied.push( [] );
		}
	
		for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )
		{
			nLocalTr = aoLocal[i].nTr;
	
			/* All cells are going to be replaced, so empty out the row */
			if ( nLocalTr )
			{
				while( (n = nLocalTr.firstChild) )
				{
					nLocalTr.removeChild( n );
				}
			}
	
			for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )
			{
				iRowspan = 1;
				iColspan = 1;
	
				/* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
				if ( aApplied[i][j] === undefined )
				{
					nLocalTr.appendChild( aoLocal[i][j].cell );
					aApplied[i][j] = 1;
	
					/* Expand the cell to cover as many rows as needed */
					while ( aoLocal[i+iRowspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )
					{
						aApplied[i+iRowspan][j] = 1;
						iRowspan++;
					}
	
					/* Expand the cell to cover as many columns as needed */
					while ( aoLocal[i][j+iColspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )
					{
						/* Must update the applied array over the rows for the columns */
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aApplied[i+k][j+iColspan] = 1;
						}
						iColspan++;
					}
	
					/* Do the actual expansion in the DOM */
					$(aoLocal[i][j].cell)
						.attr('rowspan', iRowspan)
						.attr('colspan', iColspan);
				}
			}
		}
	}
	
	
	/**
	 * Insert the required TR nodes into the table for display
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnDraw( oSettings )
	{
		/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
		var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
		if ( $.inArray( false, aPreDraw ) !== -1 )
		{
			_fnProcessingDisplay( oSettings, false );
			return;
		}
	
		var i, iLen, n;
		var anRows = [];
		var iRowCount = 0;
		var asStripeClasses = oSettings.asStripeClasses;
		var iStripes = asStripeClasses.length;
		var iOpenRows = oSettings.aoOpenRows.length;
		var oLang = oSettings.oLanguage;
		var iInitDisplayStart = oSettings.iInitDisplayStart;
		var bServerSide = _fnDataSource( oSettings ) == 'ssp';
		var aiDisplay = oSettings.aiDisplay;
	
		oSettings.bDrawing = true;
	
		/* Check and see if we have an initial draw position from state saving */
		if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )
		{
			oSettings._iDisplayStart = bServerSide ?
				iInitDisplayStart :
				iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
					0 :
					iInitDisplayStart;
	
			oSettings.iInitDisplayStart = -1;
		}
	
		var iDisplayStart = oSettings._iDisplayStart;
		var iDisplayEnd = oSettings.fnDisplayEnd();
	
		/* Server-side processing draw intercept */
		if ( oSettings.bDeferLoading )
		{
			oSettings.bDeferLoading = false;
			oSettings.iDraw++;
			_fnProcessingDisplay( oSettings, false );
		}
		else if ( !bServerSide )
		{
			oSettings.iDraw++;
		}
		else if ( !oSettings.bDestroying && !_fnAjaxUpdate( oSettings ) )
		{
			return;
		}
	
		if ( aiDisplay.length !== 0 )
		{
			var iStart = bServerSide ? 0 : iDisplayStart;
			var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
	
			for ( var j=iStart ; j<iEnd ; j++ )
			{
				var iDataIndex = aiDisplay[j];
				var aoData = oSettings.aoData[ iDataIndex ];
				if ( aoData.nTr === null )
				{
					_fnCreateTr( oSettings, iDataIndex );
				}
	
				var nRow = aoData.nTr;
	
				/* Remove the old striping classes and then add the new one */
				if ( iStripes !== 0 )
				{
					var sStripe = asStripeClasses[ iRowCount % iStripes ];
					if ( aoData._sRowStripe != sStripe )
					{
						$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );
						aoData._sRowStripe = sStripe;
					}
				}
	
				// Row callback functions - might want to manipulate the row
				// iRowCount and j are not currently documented. Are they at all
				// useful?
				_fnCallbackFire( oSettings, 'aoRowCallback', null,
					[nRow, aoData._aData, iRowCount, j] );
	
				anRows.push( nRow );
				iRowCount++;
			}
		}
		else
		{
			/* Table is empty - create a row with an empty message in it */
			var sZero = oLang.sZeroRecords;
			if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )
			{
				sZero = oLang.sLoadingRecords;
			}
			else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )
			{
				sZero = oLang.sEmptyTable;
			}
	
			anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )
				.append( $('<td />', {
					'valign':  'top',
					'colSpan': _fnVisbleColumns( oSettings ),
					'class':   oSettings.oClasses.sRowEmpty
				} ).html( sZero ) )[0];
		}
	
		/* Header and footer callbacks */
		_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		var body = $(oSettings.nTBody);
	
		body.children().detach();
		body.append( $(anRows) );
	
		/* Call all required callback functions for the end of a draw */
		_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );
	
		/* Draw is complete, sorting and filtering must be as well */
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		oSettings.bDrawing = false;
	}
	
	
	/**
	 * Redraw the table - taking account of the various features which are enabled
	 *  @param {object} oSettings dataTables settings object
	 *  @param {boolean} [holdPosition] Keep the current paging position. By default
	 *    the paging is reset to the first page
	 *  @memberof DataTable#oApi
	 */
	function _fnReDraw( settings, holdPosition )
	{
		var
			features = settings.oFeatures,
			sort     = features.bSort,
			filter   = features.bFilter;
	
		if ( sort ) {
			_fnSort( settings );
		}
	
		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	
		if ( holdPosition !== true ) {
			settings._iDisplayStart = 0;
		}
	
		// Let any modules know about the draw hold position state (used by
		// scrolling internally)
		settings._drawHold = holdPosition;
	
		_fnDraw( settings );
	
		settings._drawHold = false;
	}
	
	
	/**
	 * Add the options to the page HTML for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAddOptionsHtml ( oSettings )
	{
		var classes = oSettings.oClasses;
		var table = $(oSettings.nTable);
		var holding = $('<div/>').insertBefore( table ); // Holding element for speed
		var features = oSettings.oFeatures;
	
		// All DataTables are wrapped in a div
		var insert = $('<div/>', {
			id:      oSettings.sTableId+'_wrapper',
			'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)
		} );
	
		oSettings.nHolding = holding[0];
		oSettings.nTableWrapper = insert[0];
		oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
	
		/* Loop over the user set positioning and place the elements as needed */
		var aDom = oSettings.sDom.split('');
		var featureNode, cOption, nNewNode, cNext, sAttr, j;
		for ( var i=0 ; i<aDom.length ; i++ )
		{
			featureNode = null;
			cOption = aDom[i];
	
			if ( cOption == '<' )
			{
				/* New container div */
				nNewNode = $('<div/>')[0];
	
				/* Check to see if we should append an id and/or a class name to the container */
				cNext = aDom[i+1];
				if ( cNext == "'" || cNext == '"' )
				{
					sAttr = "";
					j = 2;
					while ( aDom[i+j] != cNext )
					{
						sAttr += aDom[i+j];
						j++;
					}
	
					/* Replace jQuery UI constants @todo depreciated */
					if ( sAttr == "H" )
					{
						sAttr = classes.sJUIHeader;
					}
					else if ( sAttr == "F" )
					{
						sAttr = classes.sJUIFooter;
					}
	
					/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
					if ( sAttr.indexOf('.') != -1 )
					{
						var aSplit = sAttr.split('.');
						nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);
						nNewNode.className = aSplit[1];
					}
					else if ( sAttr.charAt(0) == "#" )
					{
						nNewNode.id = sAttr.substr(1, sAttr.length-1);
					}
					else
					{
						nNewNode.className = sAttr;
					}
	
					i += j; /* Move along the position array */
				}
	
				insert.append( nNewNode );
				insert = $(nNewNode);
			}
			else if ( cOption == '>' )
			{
				/* End container div */
				insert = insert.parent();
			}
			// @todo Move options into their own plugins?
			else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )
			{
				/* Length */
				featureNode = _fnFeatureHtmlLength( oSettings );
			}
			else if ( cOption == 'f' && features.bFilter )
			{
				/* Filter */
				featureNode = _fnFeatureHtmlFilter( oSettings );
			}
			else if ( cOption == 'r' && features.bProcessing )
			{
				/* pRocessing */
				featureNode = _fnFeatureHtmlProcessing( oSettings );
			}
			else if ( cOption == 't' )
			{
				/* Table */
				featureNode = _fnFeatureHtmlTable( oSettings );
			}
			else if ( cOption ==  'i' && features.bInfo )
			{
				/* Info */
				featureNode = _fnFeatureHtmlInfo( oSettings );
			}
			else if ( cOption == 'p' && features.bPaginate )
			{
				/* Pagination */
				featureNode = _fnFeatureHtmlPaginate( oSettings );
			}
			else if ( DataTable.ext.feature.length !== 0 )
			{
				/* Plug-in features */
				var aoFeatures = DataTable.ext.feature;
				for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )
				{
					if ( cOption == aoFeatures[k].cFeature )
					{
						featureNode = aoFeatures[k].fnInit( oSettings );
						break;
					}
				}
			}
	
			/* Add to the 2D features array */
			if ( featureNode )
			{
				var aanFeatures = oSettings.aanFeatures;
	
				if ( ! aanFeatures[cOption] )
				{
					aanFeatures[cOption] = [];
				}
	
				aanFeatures[cOption].push( featureNode );
				insert.append( featureNode );
			}
		}
	
		/* Built our DOM structure - replace the holding div with what we want */
		holding.replaceWith( insert );
		oSettings.nHolding = null;
	}
	
	
	/**
	 * Use the DOM source to create up an array of header cells. The idea here is to
	 * create a layout grid (array) of rows x columns, which contains a reference
	 * to the cell that that point in the grid (regardless of col/rowspan), such that
	 * any column / row could be removed and the new grid constructed
	 *  @param array {object} aLayout Array to store the calculated layout in
	 *  @param {node} nThead The header/footer element for the table
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectHeader ( aLayout, nThead )
	{
		var nTrs = $(nThead).children('tr');
		var nTr, nCell;
		var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
		var bUnique;
		var fnShiftCol = function ( a, i, j ) {
			var k = a[i];
	                while ( k[j] ) {
				j++;
			}
			return j;
		};
	
		aLayout.splice( 0, aLayout.length );
	
		/* We know how many rows there are in the layout - so prep it */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			aLayout.push( [] );
		}
	
		/* Calculate a layout array */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			nTr = nTrs[i];
			iColumn = 0;
	
			/* For every cell in the row... */
			nCell = nTr.firstChild;
			while ( nCell ) {
				if ( nCell.nodeName.toUpperCase() == "TD" ||
				     nCell.nodeName.toUpperCase() == "TH" )
				{
					/* Get the col and rowspan attributes from the DOM and sanitise them */
					iColspan = nCell.getAttribute('colspan') * 1;
					iRowspan = nCell.getAttribute('rowspan') * 1;
					iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;
					iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;
	
					/* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
					iColShifted = fnShiftCol( aLayout, i, iColumn );
	
					/* Cache calculation for unique columns */
					bUnique = iColspan === 1 ? true : false;
	
					/* If there is col / rowspan, copy the information into the layout grid */
					for ( l=0 ; l<iColspan ; l++ )
					{
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aLayout[i+k][iColShifted+l] = {
								"cell": nCell,
								"unique": bUnique
							};
							aLayout[i+k].nTr = nTr;
						}
					}
				}
				nCell = nCell.nextSibling;
			}
		}
	}
	
	
	/**
	 * Get an array of unique th elements, one for each column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nHeader automatically detect the layout from this node - optional
	 *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
	 *  @returns array {node} aReturn list of unique th's
	 *  @memberof DataTable#oApi
	 */
	function _fnGetUniqueThs ( oSettings, nHeader, aLayout )
	{
		var aReturn = [];
		if ( !aLayout )
		{
			aLayout = oSettings.aoHeader;
			if ( nHeader )
			{
				aLayout = [];
				_fnDetectHeader( aLayout, nHeader );
			}
		}
	
		for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )
		{
			for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )
			{
				if ( aLayout[i][j].unique &&
					 (!aReturn[j] || !oSettings.bSortCellsTop) )
				{
					aReturn[j] = aLayout[i][j].cell;
				}
			}
		}
	
		return aReturn;
	}
	
	/**
	 * Create an Ajax call based on the table's settings, taking into account that
	 * parameters can have multiple forms, and backwards compatibility.
	 *
	 * @param {object} oSettings dataTables settings object
	 * @param {array} data Data to send to the server, required by
	 *     DataTables - may be augmented by developer callbacks
	 * @param {function} fn Callback function to run when data is obtained
	 */
	function _fnBuildAjax( oSettings, data, fn )
	{
		// Compatibility with 1.9-, allow fnServerData and event to manipulate
		_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );
	
		// Convert to object based for 1.10+ if using the old array scheme which can
		// come from server-side processing or serverParams
		if ( data && $.isArray(data) ) {
			var tmp = {};
			var rbracket = /(.*?)\[\]$/;
	
			$.each( data, function (key, val) {
				var match = val.name.match(rbracket);
	
				if ( match ) {
					// Support for arrays
					var name = match[0];
	
					if ( ! tmp[ name ] ) {
						tmp[ name ] = [];
					}
					tmp[ name ].push( val.value );
				}
				else {
					tmp[val.name] = val.value;
				}
			} );
			data = tmp;
		}
	
		var ajaxData;
		var ajax = oSettings.ajax;
		var instance = oSettings.oInstance;
		var callback = function ( json ) {
			_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );
			fn( json );
		};
	
		if ( $.isPlainObject( ajax ) && ajax.data )
		{
			ajaxData = ajax.data;
	
			var newData = $.isFunction( ajaxData ) ?
				ajaxData( data, oSettings ) :  // fn can manipulate data or return
				ajaxData;                      // an object object or array to merge
	
			// If the function returned something, use that alone
			data = $.isFunction( ajaxData ) && newData ?
				newData :
				$.extend( true, data, newData );
	
			// Remove the data property as we've resolved it already and don't want
			// jQuery to do it again (it is restored at the end of the function)
			delete ajax.data;
		}
	
		var baseAjax = {
			"data": data,
			"success": function (json) {
				var error = json.error || json.sError;
				if ( error ) {
					_fnLog( oSettings, 0, error );
				}
	
				oSettings.json = json;
				callback( json );
			},
			"dataType": "json",
			"cache": false,
			"type": oSettings.sServerMethod,
			"error": function (xhr, error, thrown) {
				var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );
	
				if ( $.inArray( true, ret ) === -1 ) {
					if ( error == "parsererror" ) {
						_fnLog( oSettings, 0, 'Invalid JSON response', 1 );
					}
					else if ( xhr.readyState === 4 ) {
						_fnLog( oSettings, 0, 'Ajax error', 7 );
					}
				}
	
				_fnProcessingDisplay( oSettings, false );
			}
		};
	
		// Store the data submitted for the API
		oSettings.oAjaxData = data;
	
		// Allow plug-ins and external processes to modify the data
		_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );
	
		if ( oSettings.fnServerData )
		{
			// DataTables 1.9- compatibility
			oSettings.fnServerData.call( instance,
				oSettings.sAjaxSource,
				$.map( data, function (val, key) { // Need to convert back to 1.9 trad format
					return { name: key, value: val };
				} ),
				callback,
				oSettings
			);
		}
		else if ( oSettings.sAjaxSource || typeof ajax === 'string' )
		{
			// DataTables 1.9- compatibility
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, {
				url: ajax || oSettings.sAjaxSource
			} ) );
		}
		else if ( $.isFunction( ajax ) )
		{
			// Is a function - let the caller define what needs to be done
			oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );
		}
		else
		{
			// Object to extend the base settings
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );
	
			// Restore for next time around
			ajax.data = ajaxData;
		}
	}
	
	
	/**
	 * Update the table using an Ajax call
	 *  @param {object} settings dataTables settings object
	 *  @returns {boolean} Block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdate( settings )
	{
		if ( settings.bAjaxDataGet ) {
			settings.iDraw++;
			_fnProcessingDisplay( settings, true );
	
			_fnBuildAjax(
				settings,
				_fnAjaxParameters( settings ),
				function(json) {
					_fnAjaxUpdateDraw( settings, json );
				}
			);
	
			return false;
		}
		return true;
	}
	
	
	/**
	 * Build up the parameters in an object needed for a server-side processing
	 * request. Note that this is basically done twice, is different ways - a modern
	 * method which is used by default in DataTables 1.10 which uses objects and
	 * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if
	 * the sAjaxSource option is used in the initialisation, or the legacyAjax
	 * option is set.
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {bool} block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxParameters( settings )
	{
		var
			columns = settings.aoColumns,
			columnCount = columns.length,
			features = settings.oFeatures,
			preSearch = settings.oPreviousSearch,
			preColSearch = settings.aoPreSearchCols,
			i, data = [], dataProp, column, columnSearch,
			sort = _fnSortFlatten( settings ),
			displayStart = settings._iDisplayStart,
			displayLength = features.bPaginate !== false ?
				settings._iDisplayLength :
				-1;
	
		var param = function ( name, value ) {
			data.push( { 'name': name, 'value': value } );
		};
	
		// DataTables 1.9- compatible method
		param( 'sEcho',          settings.iDraw );
		param( 'iColumns',       columnCount );
		param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );
		param( 'iDisplayStart',  displayStart );
		param( 'iDisplayLength', displayLength );
	
		// DataTables 1.10+ method
		var d = {
			draw:    settings.iDraw,
			columns: [],
			order:   [],
			start:   displayStart,
			length:  displayLength,
			search:  {
				value: preSearch.sSearch,
				regex: preSearch.bRegex
			}
		};
	
		for ( i=0 ; i<columnCount ; i++ ) {
			column = columns[i];
			columnSearch = preColSearch[i];
			dataProp = typeof column.mData=="function" ? 'function' : column.mData ;
	
			d.columns.push( {
				data:       dataProp,
				name:       column.sName,
				searchable: column.bSearchable,
				orderable:  column.bSortable,
				search:     {
					value: columnSearch.sSearch,
					regex: columnSearch.bRegex
				}
			} );
	
			param( "mDataProp_"+i, dataProp );
	
			if ( features.bFilter ) {
				param( 'sSearch_'+i,     columnSearch.sSearch );
				param( 'bRegex_'+i,      columnSearch.bRegex );
				param( 'bSearchable_'+i, column.bSearchable );
			}
	
			if ( features.bSort ) {
				param( 'bSortable_'+i, column.bSortable );
			}
		}
	
		if ( features.bFilter ) {
			param( 'sSearch', preSearch.sSearch );
			param( 'bRegex', preSearch.bRegex );
		}
	
		if ( features.bSort ) {
			$.each( sort, function ( i, val ) {
				d.order.push( { column: val.col, dir: val.dir } );
	
				param( 'iSortCol_'+i, val.col );
				param( 'sSortDir_'+i, val.dir );
			} );
	
			param( 'iSortingCols', sort.length );
		}
	
		// If the legacy.ajax parameter is null, then we automatically decide which
		// form to use, based on sAjaxSource
		var legacy = DataTable.ext.legacy.ajax;
		if ( legacy === null ) {
			return settings.sAjaxSource ? data : d;
		}
	
		// Otherwise, if legacy has been specified then we use that to decide on the
		// form
		return legacy ? data : d;
	}
	
	
	/**
	 * Data the data from the server (nuking the old) and redraw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} json json data return from the server.
	 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
	 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
	 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
	 *  @param {array} json.aaData The data to display on this page
	 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdateDraw ( settings, json )
	{
		// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.
		// Support both
		var compat = function ( old, modern ) {
			return json[old] !== undefined ? json[old] : json[modern];
		};
	
		var data = _fnAjaxDataSrc( settings, json );
		var draw            = compat( 'sEcho',                'draw' );
		var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );
		var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );
	
		if ( draw ) {
			// Protect against out of sequence returns
			if ( draw*1 < settings.iDraw ) {
				return;
			}
			settings.iDraw = draw * 1;
		}
	
		_fnClearTable( settings );
		settings._iRecordsTotal   = parseInt(recordsTotal, 10);
		settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
	
		for ( var i=0, ien=data.length ; i<ien ; i++ ) {
			_fnAddData( settings, data[i] );
		}
		settings.aiDisplay = settings.aiDisplayMaster.slice();
	
		settings.bAjaxDataGet = false;
		_fnDraw( settings );
	
		if ( ! settings._bInitComplete ) {
			_fnInitComplete( settings, json );
		}
	
		settings.bAjaxDataGet = true;
		_fnProcessingDisplay( settings, false );
	}
	
	
	/**
	 * Get the data from the JSON data source to use for drawing a table. Using
	 * `_fnGetObjectDataFn` allows the data to be sourced from a property of the
	 * source object, or from a processing function.
	 *  @param {object} oSettings dataTables settings object
	 *  @param  {object} json Data source object / array from the server
	 *  @return {array} Array of data to use
	 */
	function _fnAjaxDataSrc ( oSettings, json )
	{
		var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?
			oSettings.ajax.dataSrc :
			oSettings.sAjaxDataProp; // Compatibility with 1.9-.
	
		// Compatibility with 1.9-. In order to read from aaData, check if the
		// default has been changed, if not, check for aaData
		if ( dataSrc === 'data' ) {
			return json.aaData || json[dataSrc];
		}
	
		return dataSrc !== "" ?
			_fnGetObjectDataFn( dataSrc )( json ) :
			json;
	}
	
	/**
	 * Generate the node required for filtering text
	 *  @returns {node} Filter control element
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlFilter ( settings )
	{
		var classes = settings.oClasses;
		var tableId = settings.sTableId;
		var language = settings.oLanguage;
		var previousSearch = settings.oPreviousSearch;
		var features = settings.aanFeatures;
		var input = '<input type="search" class="'+classes.sFilterInput+'"/>';
	
		var str = language.sSearch;
		str = str.match(/_INPUT_/) ?
			str.replace('_INPUT_', input) :
			str+input;
	
		var filter = $('<div/>', {
				'id': ! features.f ? tableId+'_filter' : null,
				'class': classes.sFilter
			} )
			.append( $('<label/>' ).append( str ) );
	
		var searchFn = function() {
			/* Update all other filter input elements for the new display */
			var n = features.f;
			var val = !this.value ? "" : this.value; // mental IE8 fix :-(
	
			/* Now do the filter */
			if ( val != previousSearch.sSearch ) {
				_fnFilterComplete( settings, {
					"sSearch": val,
					"bRegex": previousSearch.bRegex,
					"bSmart": previousSearch.bSmart ,
					"bCaseInsensitive": previousSearch.bCaseInsensitive
				} );
	
				// Need to redraw, without resorting
				settings._iDisplayStart = 0;
				_fnDraw( settings );
			}
		};
	
		var searchDelay = settings.searchDelay !== null ?
			settings.searchDelay :
			_fnDataSource( settings ) === 'ssp' ?
				400 :
				0;
	
		var jqFilter = $('input', filter)
			.val( previousSearch.sSearch )
			.attr( 'placeholder', language.sSearchPlaceholder )
			.bind(
				'keyup.DT search.DT input.DT paste.DT cut.DT',
				searchDelay ?
					_fnThrottle( searchFn, searchDelay ) :
					searchFn
			)
			.bind( 'keypress.DT', function(e) {
				/* Prevent form submission */
				if ( e.keyCode == 13 ) {
					return false;
				}
			} )
			.attr('aria-controls', tableId);
	
		// Update the input elements whenever the table is filtered
		$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {
			if ( settings === s ) {
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame...
				try {
					if ( jqFilter[0] !== document.activeElement ) {
						jqFilter.val( previousSearch.sSearch );
					}
				}
				catch ( e ) {}
			}
		} );
	
		return filter[0];
	}
	
	
	/**
	 * Filter the table using both the global filter and column based filtering
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oSearch search information
	 *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterComplete ( oSettings, oInput, iForce )
	{
		var oPrevSearch = oSettings.oPreviousSearch;
		var aoPrevSearch = oSettings.aoPreSearchCols;
		var fnSaveFilter = function ( oFilter ) {
			/* Save the filtering values */
			oPrevSearch.sSearch = oFilter.sSearch;
			oPrevSearch.bRegex = oFilter.bRegex;
			oPrevSearch.bSmart = oFilter.bSmart;
			oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
		};
		var fnRegex = function ( o ) {
			// Backwards compatibility with the bEscapeRegex option
			return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;
		};
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo As per sort - can this be moved into an event handler?
		_fnColumnTypes( oSettings );
	
		/* In server-side processing all filtering is done by the server, so no point hanging around here */
		if ( _fnDataSource( oSettings ) != 'ssp' )
		{
			/* Global filter */
			_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive );
			fnSaveFilter( oInput );
	
			/* Now do the individual column filter */
			for ( var i=0 ; i<aoPrevSearch.length ; i++ )
			{
				_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),
					aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );
			}
	
			/* Custom filtering */
			_fnFilterCustom( oSettings );
		}
		else
		{
			fnSaveFilter( oInput );
		}
	
		/* Tell the draw function we have been filtering */
		oSettings.bFiltered = true;
		_fnCallbackFire( oSettings, null, 'search', [oSettings] );
	}
	
	
	/**
	 * Apply custom filtering functions
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCustom( settings )
	{
		var filters = DataTable.ext.search;
		var displayRows = settings.aiDisplay;
		var row, rowIdx;
	
		for ( var i=0, ien=filters.length ; i<ien ; i++ ) {
			var rows = [];
	
			// Loop over each row and see if it should be included
			for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {
				rowIdx = displayRows[ j ];
				row = settings.aoData[ rowIdx ];
	
				if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {
					rows.push( rowIdx );
				}
			}
	
			// So the array reference doesn't break set the results into the
			// existing array
			displayRows.length = 0;
			$.merge( displayRows, rows );
		}
	}
	
	
	/**
	 * Filter the table on a per-column basis
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iColumn column to filter
	 *  @param {bool} bRegex treat search string as a regular expression or not
	 *  @param {bool} bSmart use smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )
	{
		if ( searchStr === '' ) {
			return;
		}
	
		var data;
		var display = settings.aiDisplay;
		var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );
	
		for ( var i=display.length-1 ; i>=0 ; i-- ) {
			data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];
	
			if ( ! rpSearch.test( data ) ) {
				display.splice( i, 1 );
			}
		}
	}
	
	
	/**
	 * Filter the data table based on user input and draw the table
	 *  @param {object} settings dataTables settings object
	 *  @param {string} input string to filter on
	 *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)
	 *  @param {bool} regex treat as a regular expression or not
	 *  @param {bool} smart perform smart filtering or not
	 *  @param {bool} caseInsensitive Do case insenstive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilter( settings, input, force, regex, smart, caseInsensitive )
	{
		var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );
		var prevSearch = settings.oPreviousSearch.sSearch;
		var displayMaster = settings.aiDisplayMaster;
		var display, invalidated, i;
	
		// Need to take account of custom filtering functions - always filter
		if ( DataTable.ext.search.length !== 0 ) {
			force = true;
		}
	
		// Check if any of the rows were invalidated
		invalidated = _fnFilterData( settings );
	
		// If the input is blank - we just want the full data set
		if ( input.length <= 0 ) {
			settings.aiDisplay = displayMaster.slice();
		}
		else {
			// New search - start from the master array
			if ( invalidated ||
				 force ||
				 prevSearch.length > input.length ||
				 input.indexOf(prevSearch) !== 0 ||
				 settings.bSorted // On resort, the display master needs to be
				                  // re-filtered since indexes will have changed
			) {
				settings.aiDisplay = displayMaster.slice();
			}
	
			// Search the display array
			display = settings.aiDisplay;
	
			for ( i=display.length-1 ; i>=0 ; i-- ) {
				if ( ! rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {
					display.splice( i, 1 );
				}
			}
		}
	}
	
	
	/**
	 * Build a regular expression object suitable for searching a table
	 *  @param {string} sSearch string to search for
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @returns {RegExp} constructed object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )
	{
		search = regex ?
			search :
			_fnEscapeRegex( search );
		
		if ( smart ) {
			/* For smart filtering we want to allow the search to work regardless of
			 * word order. We also want double quoted text to be preserved, so word
			 * order is important - a la google. So this is what we want to
			 * generate:
			 * 
			 * ^(?=.*?\bone\b)(?=.*?\btwo three\b)(?=.*?\bfour\b).*$
			 */
			var a = $.map( search.match( /"[^"]+"|[^ ]+/g ) || [''], function ( word ) {
				if ( word.charAt(0) === '"' ) {
					var m = word.match( /^"(.*)"$/ );
					word = m ? m[1] : word;
				}
	
				return word.replace('"', '');
			} );
	
			search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';
		}
	
		return new RegExp( search, caseInsensitive ? 'i' : '' );
	}
	
	
	/**
	 * Escape a string such that it can be used in a regular expression
	 *  @param {string} sVal string to escape
	 *  @returns {string} escaped string
	 *  @memberof DataTable#oApi
	 */
	var _fnEscapeRegex = DataTable.util.escapeRegex;
	
	var __filter_div = $('<div>')[0];
	var __filter_div_textContent = __filter_div.textContent !== undefined;
	
	// Update the filtering data for each row if needed (by invalidation or first run)
	function _fnFilterData ( settings )
	{
		var columns = settings.aoColumns;
		var column;
		var i, j, ien, jen, filterData, cellData, row;
		var fomatters = DataTable.ext.type.search;
		var wasInvalidated = false;
	
		for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aFilterData ) {
				filterData = [];
	
				for ( j=0, jen=columns.length ; j<jen ; j++ ) {
					column = columns[j];
	
					if ( column.bSearchable ) {
						cellData = _fnGetCellData( settings, i, j, 'filter' );
	
						if ( fomatters[ column.sType ] ) {
							cellData = fomatters[ column.sType ]( cellData );
						}
	
						// Search in DataTables 1.10 is string based. In 1.11 this
						// should be altered to also allow strict type checking.
						if ( cellData === null ) {
							cellData = '';
						}
	
						if ( typeof cellData !== 'string' && cellData.toString ) {
							cellData = cellData.toString();
						}
					}
					else {
						cellData = '';
					}
	
					// If it looks like there is an HTML entity in the string,
					// attempt to decode it so sorting works as expected. Note that
					// we could use a single line of jQuery to do this, but the DOM
					// method used here is much faster http://jsperf.com/html-decode
					if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {
						__filter_div.innerHTML = cellData;
						cellData = __filter_div_textContent ?
							__filter_div.textContent :
							__filter_div.innerText;
					}
	
					if ( cellData.replace ) {
						cellData = cellData.replace(/[\r\n]/g, '');
					}
	
					filterData.push( cellData );
				}
	
				row._aFilterData = filterData;
				row._sFilterRow = filterData.join('  ');
				wasInvalidated = true;
			}
		}
	
		return wasInvalidated;
	}
	
	
	/**
	 * Convert from the internal Hungarian notation to camelCase for external
	 * interaction
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToCamel ( obj )
	{
		return {
			search:          obj.sSearch,
			smart:           obj.bSmart,
			regex:           obj.bRegex,
			caseInsensitive: obj.bCaseInsensitive
		};
	}
	
	
	
	/**
	 * Convert from camelCase notation to the internal Hungarian. We could use the
	 * Hungarian convert function here, but this is cleaner
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToHung ( obj )
	{
		return {
			sSearch:          obj.search,
			bSmart:           obj.smart,
			bRegex:           obj.regex,
			bCaseInsensitive: obj.caseInsensitive
		};
	}
	
	/**
	 * Generate the node required for the info display
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Information element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlInfo ( settings )
	{
		var
			tid = settings.sTableId,
			nodes = settings.aanFeatures.i,
			n = $('<div/>', {
				'class': settings.oClasses.sInfo,
				'id': ! nodes ? tid+'_info' : null
			} );
	
		if ( ! nodes ) {
			// Update display on each draw
			settings.aoDrawCallback.push( {
				"fn": _fnUpdateInfo,
				"sName": "information"
			} );
	
			n
				.attr( 'role', 'status' )
				.attr( 'aria-live', 'polite' );
	
			// Table is described by our info div
			$(settings.nTable).attr( 'aria-describedby', tid+'_info' );
		}
	
		return n[0];
	}
	
	
	/**
	 * Update the information elements in the display
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnUpdateInfo ( settings )
	{
		/* Show information about the table */
		var nodes = settings.aanFeatures.i;
		if ( nodes.length === 0 ) {
			return;
		}
	
		var
			lang  = settings.oLanguage,
			start = settings._iDisplayStart+1,
			end   = settings.fnDisplayEnd(),
			max   = settings.fnRecordsTotal(),
			total = settings.fnRecordsDisplay(),
			out   = total ?
				lang.sInfo :
				lang.sInfoEmpty;
	
		if ( total !== max ) {
			/* Record set after filtering */
			out += ' ' + lang.sInfoFiltered;
		}
	
		// Convert the macros
		out += lang.sInfoPostFix;
		out = _fnInfoMacros( settings, out );
	
		var callback = lang.fnInfoCallback;
		if ( callback !== null ) {
			out = callback.call( settings.oInstance,
				settings, start, end, max, total, out
			);
		}
	
		$(nodes).html( out );
	}
	
	
	function _fnInfoMacros ( settings, str )
	{
		// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
		// internally
		var
			formatter  = settings.fnFormatNumber,
			start      = settings._iDisplayStart+1,
			len        = settings._iDisplayLength,
			vis        = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return str.
			replace(/_START_/g, formatter.call( settings, start ) ).
			replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).
			replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).
			replace(/_TOTAL_/g, formatter.call( settings, vis ) ).
			replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).
			replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );
	}
	
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnInitialise ( settings )
	{
		var i, iLen, iAjaxStart=settings.iInitDisplayStart;
		var columns = settings.aoColumns, column;
		var features = settings.oFeatures;
		var deferLoading = settings.bDeferLoading; // value modified by the draw
	
		/* Ensure that the table data is fully initialised */
		if ( ! settings.bInitialised ) {
			setTimeout( function(){ _fnInitialise( settings ); }, 200 );
			return;
		}
	
		/* Show the display HTML options */
		_fnAddOptionsHtml( settings );
	
		/* Build and draw the header / footer for the table */
		_fnBuildHead( settings );
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		/* Okay to show that something is going on now */
		_fnProcessingDisplay( settings, true );
	
		/* Calculate sizes for columns */
		if ( features.bAutoWidth ) {
			_fnCalculateColumnWidths( settings );
		}
	
		for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {
			column = columns[i];
	
			if ( column.sWidth ) {
				column.nTh.style.width = _fnStringToCss( column.sWidth );
			}
		}
	
		_fnCallbackFire( settings, null, 'preInit', [settings] );
	
		// If there is default sorting required - let's do it. The sort function
		// will do the drawing for us. Otherwise we draw the table regardless of the
		// Ajax source - this allows the table to look initialised for Ajax sourcing
		// data (show 'loading' message possibly)
		_fnReDraw( settings );
	
		// Server-side processing init complete is done by _fnAjaxUpdateDraw
		var dataSrc = _fnDataSource( settings );
		if ( dataSrc != 'ssp' || deferLoading ) {
			// if there is an ajax source load the data
			if ( dataSrc == 'ajax' ) {
				_fnBuildAjax( settings, [], function(json) {
					var aData = _fnAjaxDataSrc( settings, json );
	
					// Got the data - add it to the table
					for ( i=0 ; i<aData.length ; i++ ) {
						_fnAddData( settings, aData[i] );
					}
	
					// Reset the init display for cookie saving. We've already done
					// a filter, and therefore cleared it before. So we need to make
					// it appear 'fresh'
					settings.iInitDisplayStart = iAjaxStart;
	
					_fnReDraw( settings );
	
					_fnProcessingDisplay( settings, false );
					_fnInitComplete( settings, json );
				}, settings );
			}
			else {
				_fnProcessingDisplay( settings, false );
				_fnInitComplete( settings );
			}
		}
	}
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
	 *    with client-side processing (optional)
	 *  @memberof DataTable#oApi
	 */
	function _fnInitComplete ( settings, json )
	{
		settings._bInitComplete = true;
	
		// When data was added after the initialisation (data or Ajax) we need to
		// calculate the column sizing
		if ( json || settings.oInit.aaData ) {
			_fnAdjustColumnSizing( settings );
		}
	
		_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );
		_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );
	}
	
	
	function _fnLengthChange ( settings, val )
	{
		var len = parseInt( val, 10 );
		settings._iDisplayLength = len;
	
		_fnLengthOverflow( settings );
	
		// Fire length change event
		_fnCallbackFire( settings, null, 'length', [settings, len] );
	}
	
	
	/**
	 * Generate the node required for user display length changing
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Display length feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlLength ( settings )
	{
		var
			classes  = settings.oClasses,
			tableId  = settings.sTableId,
			menu     = settings.aLengthMenu,
			d2       = $.isArray( menu[0] ),
			lengths  = d2 ? menu[0] : menu,
			language = d2 ? menu[1] : menu;
	
		var select = $('<select/>', {
			'name':          tableId+'_length',
			'aria-controls': tableId,
			'class':         classes.sLengthSelect
		} );
	
		for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {
			select[0][ i ] = new Option( language[i], lengths[i] );
		}
	
		var div = $('<div><label/></div>').addClass( classes.sLength );
		if ( ! settings.aanFeatures.l ) {
			div[0].id = tableId+'_length';
		}
	
		div.children().append(
			settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )
		);
	
		// Can't use `select` variable as user might provide their own and the
		// reference is broken by the use of outerHTML
		$('select', div)
			.val( settings._iDisplayLength )
			.bind( 'change.DT', function(e) {
				_fnLengthChange( settings, $(this).val() );
				_fnDraw( settings );
			} );
	
		// Update node value whenever anything changes the table's length
		$(settings.nTable).bind( 'length.dt.DT', function (e, s, len) {
			if ( settings === s ) {
				$('select', div).val( len );
			}
		} );
	
		return div[0];
	}
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.pager
	 */
	
	/**
	 * Generate the node required for default pagination
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Pagination feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlPaginate ( settings )
	{
		var
			type   = settings.sPaginationType,
			plugin = DataTable.ext.pager[ type ],
			modern = typeof plugin === 'function',
			redraw = function( settings ) {
				_fnDraw( settings );
			},
			node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],
			features = settings.aanFeatures;
	
		if ( ! modern ) {
			plugin.fnInit( settings, node, redraw );
		}
	
		/* Add a draw callback for the pagination on first instance, to update the paging display */
		if ( ! features.p )
		{
			node.id = settings.sTableId+'_paginate';
	
			settings.aoDrawCallback.push( {
				"fn": function( settings ) {
					if ( modern ) {
						var
							start      = settings._iDisplayStart,
							len        = settings._iDisplayLength,
							visRecords = settings.fnRecordsDisplay(),
							all        = len === -1,
							page = all ? 0 : Math.ceil( start / len ),
							pages = all ? 1 : Math.ceil( visRecords / len ),
							buttons = plugin(page, pages),
							i, ien;
	
						for ( i=0, ien=features.p.length ; i<ien ; i++ ) {
							_fnRenderer( settings, 'pageButton' )(
								settings, features.p[i], i, buttons, page, pages
							);
						}
					}
					else {
						plugin.fnUpdate( settings, redraw );
					}
				},
				"sName": "pagination"
			} );
		}
	
		return node;
	}
	
	
	/**
	 * Alter the display settings to change the page
	 *  @param {object} settings DataTables settings object
	 *  @param {string|int} action Paging action to take: "first", "previous",
	 *    "next" or "last" or page number to jump to (integer)
	 *  @param [bool] redraw Automatically draw the update or not
	 *  @returns {bool} true page has changed, false - no change
	 *  @memberof DataTable#oApi
	 */
	function _fnPageChange ( settings, action, redraw )
	{
		var
			start     = settings._iDisplayStart,
			len       = settings._iDisplayLength,
			records   = settings.fnRecordsDisplay();
	
		if ( records === 0 || len === -1 )
		{
			start = 0;
		}
		else if ( typeof action === "number" )
		{
			start = action * len;
	
			if ( start > records )
			{
				start = 0;
			}
		}
		else if ( action == "first" )
		{
			start = 0;
		}
		else if ( action == "previous" )
		{
			start = len >= 0 ?
				start - len :
				0;
	
			if ( start < 0 )
			{
			  start = 0;
			}
		}
		else if ( action == "next" )
		{
			if ( start + len < records )
			{
				start += len;
			}
		}
		else if ( action == "last" )
		{
			start = Math.floor( (records-1) / len) * len;
		}
		else
		{
			_fnLog( settings, 0, "Unknown paging action: "+action, 5 );
		}
	
		var changed = settings._iDisplayStart !== start;
		settings._iDisplayStart = start;
	
		if ( changed ) {
			_fnCallbackFire( settings, null, 'page', [settings] );
	
			if ( redraw ) {
				_fnDraw( settings );
			}
		}
	
		return changed;
	}
	
	
	
	/**
	 * Generate the node required for the processing node
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Processing element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlProcessing ( settings )
	{
		return $('<div/>', {
				'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,
				'class': settings.oClasses.sProcessing
			} )
			.html( settings.oLanguage.sProcessing )
			.insertBefore( settings.nTable )[0];
	}
	
	
	/**
	 * Display or hide the processing indicator
	 *  @param {object} settings dataTables settings object
	 *  @param {bool} show Show the processing indicator (true) or not (false)
	 *  @memberof DataTable#oApi
	 */
	function _fnProcessingDisplay ( settings, show )
	{
		if ( settings.oFeatures.bProcessing ) {
			$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );
		}
	
		_fnCallbackFire( settings, null, 'processing', [settings, show] );
	}
	
	/**
	 * Add any control elements for the table - specifically scrolling
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlTable ( settings )
	{
		var table = $(settings.nTable);
	
		// Add the ARIA grid role to the table
		table.attr( 'role', 'grid' );
	
		// Scrolling from here on in
		var scroll = settings.oScroll;
	
		if ( scroll.sX === '' && scroll.sY === '' ) {
			return settings.nTable;
		}
	
		var scrollX = scroll.sX;
		var scrollY = scroll.sY;
		var classes = settings.oClasses;
		var caption = table.children('caption');
		var captionSide = caption.length ? caption[0]._captionSide : null;
		var headerClone = $( table[0].cloneNode(false) );
		var footerClone = $( table[0].cloneNode(false) );
		var footer = table.children('tfoot');
		var _div = '<div/>';
		var size = function ( s ) {
			return !s ? null : _fnStringToCss( s );
		};
	
		if ( ! footer.length ) {
			footer = null;
		}
	
		/*
		 * The HTML structure that we want to generate in this function is:
		 *  div - scroller
		 *    div - scroll head
		 *      div - scroll head inner
		 *        table - scroll head table
		 *          thead - thead
		 *    div - scroll body
		 *      table - table (master table)
		 *        thead - thead clone for sizing
		 *        tbody - tbody
		 *    div - scroll foot
		 *      div - scroll foot inner
		 *        table - scroll foot table
		 *          tfoot - tfoot
		 */
		var scroller = $( _div, { 'class': classes.sScrollWrapper } )
			.append(
				$(_div, { 'class': classes.sScrollHead } )
					.css( {
						overflow: 'hidden',
						position: 'relative',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollHeadInner } )
							.css( {
								'box-sizing': 'content-box',
								width: scroll.sXInner || '100%'
							} )
							.append(
								headerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'top' ? caption : null )
									.append(
										table.children('thead')
									)
							)
					)
			)
			.append(
				$(_div, { 'class': classes.sScrollBody } )
					.css( {
						position: 'relative',
						overflow: 'auto',
						width: size( scrollX )
					} )
					.append( table )
			);
	
		if ( footer ) {
			scroller.append(
				$(_div, { 'class': classes.sScrollFoot } )
					.css( {
						overflow: 'hidden',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollFootInner } )
							.append(
								footerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'bottom' ? caption : null )
									.append(
										table.children('tfoot')
									)
							)
					)
			);
		}
	
		var children = scroller.children();
		var scrollHead = children[0];
		var scrollBody = children[1];
		var scrollFoot = footer ? children[2] : null;
	
		// When the body is scrolled, then we also want to scroll the headers
		if ( scrollX ) {
			$(scrollBody).on( 'scroll.DT', function (e) {
				var scrollLeft = this.scrollLeft;
	
				scrollHead.scrollLeft = scrollLeft;
	
				if ( footer ) {
					scrollFoot.scrollLeft = scrollLeft;
				}
			} );
		}
	
		$(scrollBody).css(
			scrollY && scroll.bCollapse ? 'max-height' : 'height', 
			scrollY
		);
	
		settings.nScrollHead = scrollHead;
		settings.nScrollBody = scrollBody;
		settings.nScrollFoot = scrollFoot;
	
		// On redraw - align columns
		settings.aoDrawCallback.push( {
			"fn": _fnScrollDraw,
			"sName": "scrolling"
		} );
	
		return scroller[0];
	}
	
	
	
	/**
	 * Update the header, footer and body tables for resizing - i.e. column
	 * alignment.
	 *
	 * Welcome to the most horrible function DataTables. The process that this
	 * function follows is basically:
	 *   1. Re-create the table inside the scrolling div
	 *   2. Take live measurements from the DOM
	 *   3. Apply the measurements to align the columns
	 *   4. Clean up
	 *
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollDraw ( settings )
	{
		// Given that this is such a monster function, a lot of variables are use
		// to try and keep the minimised size as small as possible
		var
			scroll         = settings.oScroll,
			scrollX        = scroll.sX,
			scrollXInner   = scroll.sXInner,
			scrollY        = scroll.sY,
			barWidth       = scroll.iBarWidth,
			divHeader      = $(settings.nScrollHead),
			divHeaderStyle = divHeader[0].style,
			divHeaderInner = divHeader.children('div'),
			divHeaderInnerStyle = divHeaderInner[0].style,
			divHeaderTable = divHeaderInner.children('table'),
			divBodyEl      = settings.nScrollBody,
			divBody        = $(divBodyEl),
			divBodyStyle   = divBodyEl.style,
			divFooter      = $(settings.nScrollFoot),
			divFooterInner = divFooter.children('div'),
			divFooterTable = divFooterInner.children('table'),
			header         = $(settings.nTHead),
			table          = $(settings.nTable),
			tableEl        = table[0],
			tableStyle     = tableEl.style,
			footer         = settings.nTFoot ? $(settings.nTFoot) : null,
			browser        = settings.oBrowser,
			ie67           = browser.bScrollOversize,
			dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),
			headerTrgEls, footerTrgEls,
			headerSrcEls, footerSrcEls,
			headerCopy, footerCopy,
			headerWidths=[], footerWidths=[],
			headerContent=[], footerContent=[],
			idx, correction, sanityWidth,
			zeroOut = function(nSizer) {
				var style = nSizer.style;
				style.paddingTop = "0";
				style.paddingBottom = "0";
				style.borderTopWidth = "0";
				style.borderBottomWidth = "0";
				style.height = 0;
			};
	
		// If the scrollbar visibility has changed from the last draw, we need to
		// adjust the column sizes as the table width will have changed to account
		// for the scrollbar
		var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
		
		if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {
			settings.scrollBarVis = scrollBarVis;
			_fnAdjustColumnSizing( settings );
			return; // adjust column sizing will call this function again
		}
		else {
			settings.scrollBarVis = scrollBarVis;
		}
	
		/*
		 * 1. Re-create the table inside the scrolling div
		 */
	
		// Remove the old minimised thead and tfoot elements in the inner table
		table.children('thead, tfoot').remove();
	
		if ( footer ) {
			footerCopy = footer.clone().prependTo( table );
			footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized
			footerSrcEls = footerCopy.find('tr');
		}
	
		// Clone the current header and footer elements and then place it into the inner table
		headerCopy = header.clone().prependTo( table );
		headerTrgEls = header.find('tr'); // original header is in its own table
		headerSrcEls = headerCopy.find('tr');
		headerCopy.find('th, td').removeAttr('tabindex');
	
	
		/*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */
	
		// Remove old sizing and apply the calculated column widths
		// Get the unique column headers in the newly created (cloned) header. We want to apply the
		// calculated sizes to this header
		if ( ! scrollX )
		{
			divBodyStyle.width = '100%';
			divHeader[0].style.width = '100%';
		}
	
		$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {
			idx = _fnVisibleToColumnIndex( settings, i );
			el.style.width = settings.aoColumns[idx].sWidth;
		} );
	
		if ( footer ) {
			_fnApplyToChildren( function(n) {
				n.style.width = "";
			}, footerSrcEls );
		}
	
		// Size the table as a whole
		sanityWidth = table.outerWidth();
		if ( scrollX === "" ) {
			// No x scrolling
			tableStyle.width = "100%";
	
			// IE7 will make the width of the table when 100% include the scrollbar
			// - which is shouldn't. When there is a scrollbar we need to take this
			// into account.
			if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);
			}
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
		else if ( scrollXInner !== "" ) {
			// legacy x scroll inner has been given - use it
			tableStyle.width = _fnStringToCss(scrollXInner);
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
	
		// Hidden header should have zero height, so remove padding and borders. Then
		// set the width based on the real headers
	
		// Apply all styles in one pass
		_fnApplyToChildren( zeroOut, headerSrcEls );
	
		// Read all widths in next pass
		_fnApplyToChildren( function(nSizer) {
			headerContent.push( nSizer.innerHTML );
			headerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
		}, headerSrcEls );
	
		// Apply all widths in final pass
		_fnApplyToChildren( function(nToSize, i) {
			// Only apply widths to the DataTables detected header cells - this
			// prevents complex headers from having contradictory sizes applied
			if ( $.inArray( nToSize, dtHeaderCells ) !== -1 ) {
				nToSize.style.width = headerWidths[i];
			}
		}, headerTrgEls );
	
		$(headerSrcEls).height(0);
	
		/* Same again with the footer if we have one */
		if ( footer )
		{
			_fnApplyToChildren( zeroOut, footerSrcEls );
	
			_fnApplyToChildren( function(nSizer) {
				footerContent.push( nSizer.innerHTML );
				footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
			}, footerSrcEls );
	
			_fnApplyToChildren( function(nToSize, i) {
				nToSize.style.width = footerWidths[i];
			}, footerTrgEls );
	
			$(footerSrcEls).height(0);
		}
	
	
		/*
		 * 3. Apply the measurements
		 */
	
		// "Hide" the header and footer that we used for the sizing. We need to keep
		// the content of the cell so that the width applied to the header and body
		// both match, but we want to hide it completely. We want to also fix their
		// width to what they currently are
		_fnApplyToChildren( function(nSizer, i) {
			nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+headerContent[i]+'</div>';
			nSizer.style.width = headerWidths[i];
		}, headerSrcEls );
	
		if ( footer )
		{
			_fnApplyToChildren( function(nSizer, i) {
				nSizer.innerHTML = '<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+footerContent[i]+'</div>';
				nSizer.style.width = footerWidths[i];
			}, footerSrcEls );
		}
	
		// Sanity check that the table is of a sensible width. If not then we are going to get
		// misalignment - try to prevent this by not allowing the table to shrink below its min width
		if ( table.outerWidth() < sanityWidth )
		{
			// The min width depends upon if we have a vertical scrollbar visible or not */
			correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")) ?
					sanityWidth+barWidth :
					sanityWidth;
	
			// IE6/7 are a law unto themselves...
			if ( ie67 && (divBodyEl.scrollHeight >
				divBodyEl.offsetHeight || divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( correction-barWidth );
			}
	
			// And give the user a warning that we've stopped the table getting too small
			if ( scrollX === "" || scrollXInner !== "" ) {
				_fnLog( settings, 1, 'Possible column misalignment', 6 );
			}
		}
		else
		{
			correction = '100%';
		}
	
		// Apply to the container elements
		divBodyStyle.width = _fnStringToCss( correction );
		divHeaderStyle.width = _fnStringToCss( correction );
	
		if ( footer ) {
			settings.nScrollFoot.style.width = _fnStringToCss( correction );
		}
	
	
		/*
		 * 4. Clean up
		 */
		if ( ! scrollY ) {
			/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
			if ( ie67 ) {
				divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );
			}
		}
	
		/* Finally set the width's of the header and footer tables */
		var iOuterWidth = table.outerWidth();
		divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );
		divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );
	
		// Figure out if there are scrollbar present - if so then we need a the header and footer to
		// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
		var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
		var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );
		divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+"px" : "0px";
	
		if ( footer ) {
			divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style[padding] = bScrolling ? barWidth+"px" : "0px";
		}
	
		// Correct DOM ordering for colgroup - comes before the thead
		table.children('colgroup').insertBefore( table.children('thead') );
	
		/* Adjust the position of the header in case we loose the y-scrollbar */
		divBody.scroll();
	
		// If sorting or filtering has occurred, jump the scrolling back to the top
		// only if we aren't holding the position
		if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {
			divBodyEl.scrollTop = 0;
		}
	}
	
	
	
	/**
	 * Apply a given function to the display child nodes of an element array (typically
	 * TD children of TR rows
	 *  @param {function} fn Method to apply to the objects
	 *  @param array {nodes} an1 List of elements to look through for display children
	 *  @param array {nodes} an2 Another list (identical structure to the first) - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyToChildren( fn, an1, an2 )
	{
		var index=0, i=0, iLen=an1.length;
		var nNode1, nNode2;
	
		while ( i < iLen ) {
			nNode1 = an1[i].firstChild;
			nNode2 = an2 ? an2[i].firstChild : null;
	
			while ( nNode1 ) {
				if ( nNode1.nodeType === 1 ) {
					if ( an2 ) {
						fn( nNode1, nNode2, index );
					}
					else {
						fn( nNode1, index );
					}
	
					index++;
				}
	
				nNode1 = nNode1.nextSibling;
				nNode2 = an2 ? nNode2.nextSibling : null;
			}
	
			i++;
		}
	}
	
	
	
	var __re_html_remove = /<.*?>/g;
	
	
	/**
	 * Calculate the width of columns for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateColumnWidths ( oSettings )
	{
		var
			table = oSettings.nTable,
			columns = oSettings.aoColumns,
			scroll = oSettings.oScroll,
			scrollY = scroll.sY,
			scrollX = scroll.sX,
			scrollXInner = scroll.sXInner,
			columnCount = columns.length,
			visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),
			headerCells = $('th', oSettings.nTHead),
			tableWidthAttr = table.getAttribute('width'), // from DOM element
			tableContainer = table.parentNode,
			userInputs = false,
			i, column, columnIdx, width, outerWidth,
			browser = oSettings.oBrowser,
			ie67 = browser.bScrollOversize;
	
		var styleWidth = table.style.width;
		if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {
			tableWidthAttr = styleWidth;
		}
	
		/* Convert any user input sizes into pixel sizes */
		for ( i=0 ; i<visibleColumns.length ; i++ ) {
			column = columns[ visibleColumns[i] ];
	
			if ( column.sWidth !== null ) {
				column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );
	
				userInputs = true;
			}
		}
	
		/* If the number of columns in the DOM equals the number that we have to
		 * process in DataTables, then we can use the offsets that are created by
		 * the web- browser. No custom sizes can be set in order for this to happen,
		 * nor scrolling used
		 */
		if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&
		     columnCount == _fnVisbleColumns( oSettings ) &&
		     columnCount == headerCells.length
		) {
			for ( i=0 ; i<columnCount ; i++ ) {
				var colIdx = _fnVisibleToColumnIndex( oSettings, i );
	
				if ( colIdx !== null ) {
					columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );
				}
			}
		}
		else
		{
			// Otherwise construct a single row, worst case, table with the widest
			// node in the data, assign any user defined widths, then insert it into
			// the DOM and allow the browser to do all the hard work of calculating
			// table widths
			var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table
				.css( 'visibility', 'hidden' )
				.removeAttr( 'id' );
	
			// Clean up the table body
			tmpTable.find('tbody tr').remove();
			var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );
	
			// Clone the table header and footer - we can't use the header / footer
			// from the cloned table, since if scrolling is active, the table's
			// real header and footer are contained in different table tags
			tmpTable.find('thead, tfoot').remove();
			tmpTable
				.append( $(oSettings.nTHead).clone() )
				.append( $(oSettings.nTFoot).clone() );
	
			// Remove any assigned widths from the footer (from scrolling)
			tmpTable.find('tfoot th, tfoot td').css('width', '');
	
			// Apply custom sizing to the cloned header
			headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );
	
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				column = columns[ visibleColumns[i] ];
	
				headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?
					_fnStringToCss( column.sWidthOrig ) :
					'';
	
				// For scrollX we need to force the column width otherwise the
				// browser will collapse it. If this width is smaller than the
				// width the column requires, then it will have no effect
				if ( column.sWidthOrig && scrollX ) {
					$( headerCells[i] ).append( $('<div/>').css( {
						width: column.sWidthOrig,
						margin: 0,
						padding: 0,
						border: 0,
						height: 1
					} ) );
				}
			}
	
			// Find the widest cell for each column and put it into the table
			if ( oSettings.aoData.length ) {
				for ( i=0 ; i<visibleColumns.length ; i++ ) {
					columnIdx = visibleColumns[i];
					column = columns[ columnIdx ];
	
					$( _fnGetWidestNode( oSettings, columnIdx ) )
						.clone( false )
						.append( column.sContentPadding )
						.appendTo( tr );
				}
			}
	
			// Tidy the temporary table - remove name attributes so there aren't
			// duplicated in the dom (radio elements for example)
			$('[name]', tmpTable).removeAttr('name');
	
			// Table has been built, attach to the document so we can work with it.
			// A holding element is used, positioned at the top of the container
			// with minimal height, so it has no effect on if the container scrolls
			// or not. Otherwise it might trigger scrolling when it actually isn't
			// needed
			var holder = $('<div/>').css( scrollX || scrollY ?
					{
						position: 'absolute',
						top: 0,
						left: 0,
						height: 1,
						right: 0,
						overflow: 'hidden'
					} :
					{}
				)
				.append( tmpTable )
				.appendTo( tableContainer );
	
			// When scrolling (X or Y) we want to set the width of the table as 
			// appropriate. However, when not scrolling leave the table width as it
			// is. This results in slightly different, but I think correct behaviour
			if ( scrollX && scrollXInner ) {
				tmpTable.width( scrollXInner );
			}
			else if ( scrollX ) {
				tmpTable.css( 'width', 'auto' );
				tmpTable.removeAttr('width');
	
				// If there is no width attribute or style, then allow the table to
				// collapse
				if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {
					tmpTable.width( tableContainer.clientWidth );
				}
			}
			else if ( scrollY ) {
				tmpTable.width( tableContainer.clientWidth );
			}
			else if ( tableWidthAttr ) {
				tmpTable.width( tableWidthAttr );
			}
	
			// Get the width of each column in the constructed table - we need to
			// know the inner width (so it can be assigned to the other table's
			// cells) and the outer width so we can calculate the full width of the
			// table. This is safe since DataTables requires a unique cell for each
			// column, but if ever a header can span multiple columns, this will
			// need to be modified.
			var total = 0;
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				var cell = $(headerCells[i]);
				var border = cell.outerWidth() - cell.width();
	
				// Use getBounding... where possible (not IE8-) because it can give
				// sub-pixel accuracy, which we then want to round up!
				var bounding = browser.bBounding ?
					Math.ceil( headerCells[i].getBoundingClientRect().width ) :
					cell.outerWidth();
	
				// Total is tracked to remove any sub-pixel errors as the outerWidth
				// of the table might not equal the total given here (IE!).
				total += bounding;
	
				// Width for each column to use
				columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );
			}
	
			table.style.width = _fnStringToCss( total );
	
			// Finished with the table - ditch it
			holder.remove();
		}
	
		// If there is a width attr, we want to attach an event listener which
		// allows the table sizing to automatically adjust when the window is
		// resized. Use the width attr rather than CSS, since we can't know if the
		// CSS is a relative value or absolute - DOM read is always px.
		if ( tableWidthAttr ) {
			table.style.width = _fnStringToCss( tableWidthAttr );
		}
	
		if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {
			var bindResize = function () {
				$(window).bind('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {
					_fnAdjustColumnSizing( oSettings );
				} ) );
			};
	
			// IE6/7 will crash if we bind a resize event handler on page load.
			// To be removed in 1.11 which drops IE6/7 support
			if ( ie67 ) {
				setTimeout( bindResize, 1000 );
			}
			else {
				bindResize();
			}
	
			oSettings._reszEvt = true;
		}
	}
	
	
	/**
	 * Throttle the calls to a function. Arguments and context are maintained for
	 * the throttled function
	 *  @param {function} fn Function to be called
	 *  @param {int} [freq=200] call frequency in mS
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#oApi
	 */
	var _fnThrottle = DataTable.util.throttle;
	
	
	/**
	 * Convert a CSS unit width to pixels (e.g. 2em)
	 *  @param {string} width width to be converted
	 *  @param {node} parent parent to get the with for (required for relative widths) - optional
	 *  @returns {int} width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnConvertToWidth ( width, parent )
	{
		if ( ! width ) {
			return 0;
		}
	
		var n = $('<div/>')
			.css( 'width', _fnStringToCss( width ) )
			.appendTo( parent || document.body );
	
		var val = n[0].offsetWidth;
		n.remove();
	
		return val;
	}
	
	
	/**
	 * Get the widest node
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {node} widest table node
	 *  @memberof DataTable#oApi
	 */
	function _fnGetWidestNode( settings, colIdx )
	{
		var idx = _fnGetMaxLenString( settings, colIdx );
		if ( idx < 0 ) {
			return null;
		}
	
		var data = settings.aoData[ idx ];
		return ! data.nTr ? // Might not have been created when deferred rendering
			$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :
			data.anCells[ colIdx ];
	}
	
	
	/**
	 * Get the maximum strlen for each data column
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {string} max string length for each column
	 *  @memberof DataTable#oApi
	 */
	function _fnGetMaxLenString( settings, colIdx )
	{
		var s, max=-1, maxIdx = -1;
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			s = _fnGetCellData( settings, i, colIdx, 'display' )+'';
			s = s.replace( __re_html_remove, '' );
			s = s.replace( /&nbsp;/g, ' ' );
	
			if ( s.length > max ) {
				max = s.length;
				maxIdx = i;
			}
		}
	
		return maxIdx;
	}
	
	
	/**
	 * Append a CSS unit (only if required) to a string
	 *  @param {string} value to css-ify
	 *  @returns {string} value with css unit
	 *  @memberof DataTable#oApi
	 */
	function _fnStringToCss( s )
	{
		if ( s === null ) {
			return '0px';
		}
	
		if ( typeof s == 'number' ) {
			return s < 0 ?
				'0px' :
				s+'px';
		}
	
		// Check it has a unit character already
		return s.match(/\d$/) ?
			s+'px' :
			s;
	}
	
	
	
	function _fnSortFlatten ( settings )
	{
		var
			i, iLen, k, kLen,
			aSort = [],
			aiOrig = [],
			aoColumns = settings.aoColumns,
			aDataSort, iCol, sType, srcCol,
			fixed = settings.aaSortingFixed,
			fixedObj = $.isPlainObject( fixed ),
			nestedSort = [],
			add = function ( a ) {
				if ( a.length && ! $.isArray( a[0] ) ) {
					// 1D array
					nestedSort.push( a );
				}
				else {
					// 2D array
					$.merge( nestedSort, a );
				}
			};
	
		// Build the sort array, with pre-fix and post-fix options if they have been
		// specified
		if ( $.isArray( fixed ) ) {
			add( fixed );
		}
	
		if ( fixedObj && fixed.pre ) {
			add( fixed.pre );
		}
	
		add( settings.aaSorting );
	
		if (fixedObj && fixed.post ) {
			add( fixed.post );
		}
	
		for ( i=0 ; i<nestedSort.length ; i++ )
		{
			srcCol = nestedSort[i][0];
			aDataSort = aoColumns[ srcCol ].aDataSort;
	
			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';
	
				if ( nestedSort[i]._idx === undefined ) {
					nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );
				}
	
				aSort.push( {
					src:       srcCol,
					col:       iCol,
					dir:       nestedSort[i][1],
					index:     nestedSort[i]._idx,
					type:      sType,
					formatter: DataTable.ext.type.order[ sType+"-pre" ]
				} );
			}
		}
	
		return aSort;
	}
	
	/**
	 * Change the order of the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 *  @todo This really needs split up!
	 */
	function _fnSort ( oSettings )
	{
		var
			i, ien, iLen, j, jLen, k, kLen,
			sDataType, nTh,
			aiOrig = [],
			oExtSort = DataTable.ext.type.order,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns,
			aDataSort, data, iCol, sType, oSort,
			formatters = 0,
			sortCol,
			displayMaster = oSettings.aiDisplayMaster,
			aSort;
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo Can this be moved into a 'data-ready' handler which is called when
		//   data is going to be used in the table?
		_fnColumnTypes( oSettings );
	
		aSort = _fnSortFlatten( oSettings );
	
		for ( i=0, ien=aSort.length ; i<ien ; i++ ) {
			sortCol = aSort[i];
	
			// Track if we can use the fast sort algorithm
			if ( sortCol.formatter ) {
				formatters++;
			}
	
			// Load the data needed for the sort, for each cell
			_fnSortData( oSettings, sortCol.col );
		}
	
		/* No sorting required if server-side or no sorting array */
		if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )
		{
			// Create a value - key array of the current row positions such that we can use their
			// current position during the sort, if values match, in order to perform stable sorting
			for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {
				aiOrig[ displayMaster[i] ] = i;
			}
	
			/* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
			if ( formatters === aSort.length ) {
				// All sort types have formatting functions
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = x<y ? -1 : x>y ? 1 : 0;
						if ( test !== 0 ) {
							return sort.dir === 'asc' ? test : -test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
			else {
				// Depreciated - remove in 1.11 (providing a plug-in option)
				// Not all sort types have formatting methods, so we have to call their sorting
				// methods.
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, l, test, sort, fn,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						fn = oExtSort[ sort.type+"-"+sort.dir ] || oExtSort[ "string-"+sort.dir ];
						test = fn( x, y );
						if ( test !== 0 ) {
							return test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
		}
	
		/* Tell the draw function that we have sorted the data */
		oSettings.bSorted = true;
	}
	
	
	function _fnSortAria ( settings )
	{
		var label;
		var nextSort;
		var columns = settings.aoColumns;
		var aSort = _fnSortFlatten( settings );
		var oAria = settings.oLanguage.oAria;
	
		// ARIA attributes - need to loop all columns, to update all (removing old
		// attributes as needed)
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			var col = columns[i];
			var asSorting = col.asSorting;
			var sTitle = col.sTitle.replace( /<.*?>/g, "" );
			var th = col.nTh;
	
			// IE7 is throwing an error when setting these properties with jQuery's
			// attr() and removeAttr() methods...
			th.removeAttribute('aria-sort');
	
			/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
			if ( col.bSortable ) {
				if ( aSort.length > 0 && aSort[0].col == i ) {
					th.setAttribute('aria-sort', aSort[0].dir=="asc" ? "ascending" : "descending" );
					nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];
				}
				else {
					nextSort = asSorting[0];
				}
	
				label = sTitle + ( nextSort === "asc" ?
					oAria.sSortAscending :
					oAria.sSortDescending
				);
			}
			else {
				label = sTitle;
			}
	
			th.setAttribute('aria-label', label);
		}
	}
	
	
	/**
	 * Function to run on user sort request
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {boolean} [append=false] Append the requested sort to the existing
	 *    sort if true (i.e. multi-column sort)
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortListener ( settings, colIdx, append, callback )
	{
		var col = settings.aoColumns[ colIdx ];
		var sorting = settings.aaSorting;
		var asSorting = col.asSorting;
		var nextSortIdx;
		var next = function ( a, overflow ) {
			var idx = a._idx;
			if ( idx === undefined ) {
				idx = $.inArray( a[1], asSorting );
			}
	
			return idx+1 < asSorting.length ?
				idx+1 :
				overflow ?
					null :
					0;
		};
	
		// Convert to 2D array if needed
		if ( typeof sorting[0] === 'number' ) {
			sorting = settings.aaSorting = [ sorting ];
		}
	
		// If appending the sort then we are multi-column sorting
		if ( append && settings.oFeatures.bSortMulti ) {
			// Are we already doing some kind of sort on this column?
			var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );
	
			if ( sortIdx !== -1 ) {
				// Yes, modify the sort
				nextSortIdx = next( sorting[sortIdx], true );
	
				if ( nextSortIdx === null && sorting.length === 1 ) {
					nextSortIdx = 0; // can't remove sorting completely
				}
	
				if ( nextSortIdx === null ) {
					sorting.splice( sortIdx, 1 );
				}
				else {
					sorting[sortIdx][1] = asSorting[ nextSortIdx ];
					sorting[sortIdx]._idx = nextSortIdx;
				}
			}
			else {
				// No sort on this column yet
				sorting.push( [ colIdx, asSorting[0], 0 ] );
				sorting[sorting.length-1]._idx = 0;
			}
		}
		else if ( sorting.length && sorting[0][0] == colIdx ) {
			// Single column - already sorting on this column, modify the sort
			nextSortIdx = next( sorting[0] );
	
			sorting.length = 1;
			sorting[0][1] = asSorting[ nextSortIdx ];
			sorting[0]._idx = nextSortIdx;
		}
		else {
			// Single column - sort only on this column
			sorting.length = 0;
			sorting.push( [ colIdx, asSorting[0] ] );
			sorting[0]._idx = 0;
		}
	
		// Run the sort by calling a full redraw
		_fnReDraw( settings );
	
		// callback used for async user interaction
		if ( typeof callback == 'function' ) {
			callback( settings );
		}
	}
	
	
	/**
	 * Attach a sort handler (click) to a node
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortAttachListener ( settings, attachTo, colIdx, callback )
	{
		var col = settings.aoColumns[ colIdx ];
	
		_fnBindAction( attachTo, {}, function (e) {
			/* If the column is not sortable - don't to anything */
			if ( col.bSortable === false ) {
				return;
			}
	
			// If processing is enabled use a timeout to allow the processing
			// display to be shown - otherwise to it synchronously
			if ( settings.oFeatures.bProcessing ) {
				_fnProcessingDisplay( settings, true );
	
				setTimeout( function() {
					_fnSortListener( settings, colIdx, e.shiftKey, callback );
	
					// In server-side processing, the draw callback will remove the
					// processing display
					if ( _fnDataSource( settings ) !== 'ssp' ) {
						_fnProcessingDisplay( settings, false );
					}
				}, 0 );
			}
			else {
				_fnSortListener( settings, colIdx, e.shiftKey, callback );
			}
		} );
	}
	
	
	/**
	 * Set the sorting classes on table's body, Note: it is safe to call this function
	 * when bSort and bSortClasses are false
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSortingClasses( settings )
	{
		var oldSort = settings.aLastSort;
		var sortClass = settings.oClasses.sSortColumn;
		var sort = _fnSortFlatten( settings );
		var features = settings.oFeatures;
		var i, ien, colIdx;
	
		if ( features.bSort && features.bSortClasses ) {
			// Remove old sorting classes
			for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {
				colIdx = oldSort[i].src;
	
				// Remove column sorting
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.removeClass( sortClass + (i<2 ? i+1 : 3) );
			}
	
			// Add new column sorting
			for ( i=0, ien=sort.length ; i<ien ; i++ ) {
				colIdx = sort[i].src;
	
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.addClass( sortClass + (i<2 ? i+1 : 3) );
			}
		}
	
		settings.aLastSort = sort;
	}
	
	
	// Get the data to sort a column, be it from cache, fresh (populating the
	// cache), or from a sort formatter
	function _fnSortData( settings, idx )
	{
		// Custom sorting function - provided by the sort data type
		var column = settings.aoColumns[ idx ];
		var customSort = DataTable.ext.order[ column.sSortDataType ];
		var customData;
	
		if ( customSort ) {
			customData = customSort.call( settings.oInstance, settings, idx,
				_fnColumnIndexToVisible( settings, idx )
			);
		}
	
		// Use / populate cache
		var row, cellData;
		var formatter = DataTable.ext.type.order[ column.sType+"-pre" ];
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aSortData ) {
				row._aSortData = [];
			}
	
			if ( ! row._aSortData[idx] || customSort ) {
				cellData = customSort ?
					customData[i] : // If there was a custom sort function, use data from there
					_fnGetCellData( settings, i, idx, 'sort' );
	
				row._aSortData[ idx ] = formatter ?
					formatter( cellData ) :
					cellData;
			}
		}
	}
	
	
	
	/**
	 * Save the state of a table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSaveState ( settings )
	{
		if ( !settings.oFeatures.bStateSave || settings.bDestroying )
		{
			return;
		}
	
		/* Store the interesting variables */
		var state = {
			time:    +new Date(),
			start:   settings._iDisplayStart,
			length:  settings._iDisplayLength,
			order:   $.extend( true, [], settings.aaSorting ),
			search:  _fnSearchToCamel( settings.oPreviousSearch ),
			columns: $.map( settings.aoColumns, function ( col, i ) {
				return {
					visible: col.bVisible,
					search: _fnSearchToCamel( settings.aoPreSearchCols[i] )
				};
			} )
		};
	
		_fnCallbackFire( settings, "aoStateSaveParams", 'stateSaveParams', [settings, state] );
	
		settings.oSavedState = state;
		settings.fnStateSaveCallback.call( settings.oInstance, settings, state );
	}
	
	
	/**
	 * Attempt to load a saved table state
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oInit DataTables init object so we can override settings
	 *  @memberof DataTable#oApi
	 */
	function _fnLoadState ( settings, oInit )
	{
		var i, ien;
		var columns = settings.aoColumns;
	
		if ( ! settings.oFeatures.bStateSave ) {
			return;
		}
	
		var state = settings.fnStateLoadCallback.call( settings.oInstance, settings );
		if ( ! state || ! state.time ) {
			return;
		}
	
		/* Allow custom and plug-in manipulation functions to alter the saved data set and
		 * cancelling of loading by returning false
		 */
		var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, state] );
		if ( $.inArray( false, abStateLoad ) !== -1 ) {
			return;
		}
	
		/* Reject old data */
		var duration = settings.iStateDuration;
		if ( duration > 0 && state.time < +new Date() - (duration*1000) ) {
			return;
		}
	
		// Number of columns have changed - all bets are off, no restore of settings
		if ( columns.length !== state.columns.length ) {
			return;
		}
	
		// Store the saved state so it might be accessed at any time
		settings.oLoadedState = $.extend( true, {}, state );
	
		// Restore key features - todo - for 1.11 this needs to be done by
		// subscribed events
		if ( state.start !== undefined ) {
			settings._iDisplayStart    = state.start;
			settings.iInitDisplayStart = state.start;
		}
		if ( state.length !== undefined ) {
			settings._iDisplayLength   = state.length;
		}
	
		// Order
		if ( state.order !== undefined ) {
			settings.aaSorting = [];
			$.each( state.order, function ( i, col ) {
				settings.aaSorting.push( col[0] >= columns.length ?
					[ 0, col[1] ] :
					col
				);
			} );
		}
	
		// Search
		if ( state.search !== undefined ) {
			$.extend( settings.oPreviousSearch, _fnSearchToHung( state.search ) );
		}
	
		// Columns
		for ( i=0, ien=state.columns.length ; i<ien ; i++ ) {
			var col = state.columns[i];
	
			// Visibility
			if ( col.visible !== undefined ) {
				columns[i].bVisible = col.visible;
			}
	
			// Search
			if ( col.search !== undefined ) {
				$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );
			}
		}
	
		_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, state] );
	}
	
	
	/**
	 * Return the settings object for a particular table
	 *  @param {node} table table we are using as a dataTable
	 *  @returns {object} Settings object - or null if not found
	 *  @memberof DataTable#oApi
	 */
	function _fnSettingsFromNode ( table )
	{
		var settings = DataTable.settings;
		var idx = $.inArray( table, _pluck( settings, 'nTable' ) );
	
		return idx !== -1 ?
			settings[ idx ] :
			null;
	}
	
	
	/**
	 * Log an error message
	 *  @param {object} settings dataTables settings object
	 *  @param {int} level log error messages, or display them to the user
	 *  @param {string} msg error message
	 *  @param {int} tn Technical note id to get more information about the error.
	 *  @memberof DataTable#oApi
	 */
	function _fnLog( settings, level, msg, tn )
	{
		msg = 'DataTables warning: '+
			(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;
	
		if ( tn ) {
			msg += '. For more information about this error, please see '+
			'http://datatables.net/tn/'+tn;
		}
	
		if ( ! level  ) {
			// Backwards compatibility pre 1.10
			var ext = DataTable.ext;
			var type = ext.sErrMode || ext.errMode;
	
			if ( settings ) {
				_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );
			}
	
			if ( type == 'alert' ) {
				alert( msg );
			}
			else if ( type == 'throw' ) {
				throw new Error(msg);
			}
			else if ( typeof type == 'function' ) {
				type( settings, tn, msg );
			}
		}
		else if ( window.console && console.log ) {
			console.log( msg );
		}
	}
	
	
	/**
	 * See if a property is defined on one object, if so assign it to the other object
	 *  @param {object} ret target object
	 *  @param {object} src source object
	 *  @param {string} name property
	 *  @param {string} [mappedName] name to map too - optional, name used if not given
	 *  @memberof DataTable#oApi
	 */
	function _fnMap( ret, src, name, mappedName )
	{
		if ( $.isArray( name ) ) {
			$.each( name, function (i, val) {
				if ( $.isArray( val ) ) {
					_fnMap( ret, src, val[0], val[1] );
				}
				else {
					_fnMap( ret, src, val );
				}
			} );
	
			return;
		}
	
		if ( mappedName === undefined ) {
			mappedName = name;
		}
	
		if ( src[name] !== undefined ) {
			ret[mappedName] = src[name];
		}
	}
	
	
	/**
	 * Extend objects - very similar to jQuery.extend, but deep copy objects, and
	 * shallow copy arrays. The reason we need to do this, is that we don't want to
	 * deep copy array init values (such as aaSorting) since the dev wouldn't be
	 * able to override them, but we do want to deep copy arrays.
	 *  @param {object} out Object to extend
	 *  @param {object} extender Object from which the properties will be applied to
	 *      out
	 *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
	 *      independent copy with the exception of the `data` or `aaData` parameters
	 *      if they are present. This is so you can pass in a collection to
	 *      DataTables and have that used as your data source without breaking the
	 *      references
	 *  @returns {object} out Reference, just for convenience - out === the return.
	 *  @memberof DataTable#oApi
	 *  @todo This doesn't take account of arrays inside the deep copied objects.
	 */
	function _fnExtend( out, extender, breakRefs )
	{
		var val;
	
		for ( var prop in extender ) {
			if ( extender.hasOwnProperty(prop) ) {
				val = extender[prop];
	
				if ( $.isPlainObject( val ) ) {
					if ( ! $.isPlainObject( out[prop] ) ) {
						out[prop] = {};
					}
					$.extend( true, out[prop], val );
				}
				else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && $.isArray(val) ) {
					out[prop] = val.slice();
				}
				else {
					out[prop] = val;
				}
			}
		}
	
		return out;
	}
	
	
	/**
	 * Bind an event handers to allow a click or return key to activate the callback.
	 * This is good for accessibility since a return on the keyboard will have the
	 * same effect as a click, if the element has focus.
	 *  @param {element} n Element to bind the action to
	 *  @param {object} oData Data object to pass to the triggered function
	 *  @param {function} fn Callback function for when the event is triggered
	 *  @memberof DataTable#oApi
	 */
	function _fnBindAction( n, oData, fn )
	{
		$(n)
			.bind( 'click.DT', oData, function (e) {
					n.blur(); // Remove focus outline for mouse users
					fn(e);
				} )
			.bind( 'keypress.DT', oData, function (e){
					if ( e.which === 13 ) {
						e.preventDefault();
						fn(e);
					}
				} )
			.bind( 'selectstart.DT', function () {
					/* Take the brutal approach to cancelling text selection */
					return false;
				} );
	}
	
	
	/**
	 * Register a callback function. Easily allows a callback function to be added to
	 * an array store of callback functions that can then all be called together.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {function} fn Function to be called back
	 *  @param {string} sName Identifying name for the callback (i.e. a label)
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackReg( oSettings, sStore, fn, sName )
	{
		if ( fn )
		{
			oSettings[sStore].push( {
				"fn": fn,
				"sName": sName
			} );
		}
	}
	
	
	/**
	 * Fire callback functions and trigger events. Note that the loop over the
	 * callback array store is done backwards! Further note that you do not want to
	 * fire off triggers in time sensitive applications (for example cell creation)
	 * as its slow.
	 *  @param {object} settings dataTables settings object
	 *  @param {string} callbackArr Name of the array storage for the callbacks in
	 *      oSettings
	 *  @param {string} eventName Name of the jQuery custom event to trigger. If
	 *      null no trigger is fired
	 *  @param {array} args Array of arguments to pass to the callback function /
	 *      trigger
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackFire( settings, callbackArr, eventName, args )
	{
		var ret = [];
	
		if ( callbackArr ) {
			ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {
				return val.fn.apply( settings.oInstance, args );
			} );
		}
	
		if ( eventName !== null ) {
			var e = $.Event( eventName+'.dt' );
	
			$(settings.nTable).trigger( e, args );
	
			ret.push( e.result );
		}
	
		return ret;
	}
	
	
	function _fnLengthOverflow ( settings )
	{
		var
			start = settings._iDisplayStart,
			end = settings.fnDisplayEnd(),
			len = settings._iDisplayLength;
	
		/* If we have space to show extra rows (backing up from the end point - then do so */
		if ( start >= end )
		{
			start = end - len;
		}
	
		// Keep the start record on the current page
		start -= (start % len);
	
		if ( len === -1 || start < 0 )
		{
			start = 0;
		}
	
		settings._iDisplayStart = start;
	}
	
	
	function _fnRenderer( settings, type )
	{
		var renderer = settings.renderer;
		var host = DataTable.ext.renderer[type];
	
		if ( $.isPlainObject( renderer ) && renderer[type] ) {
			// Specific renderer for this type. If available use it, otherwise use
			// the default.
			return host[renderer[type]] || host._;
		}
		else if ( typeof renderer === 'string' ) {
			// Common renderer - if there is one available for this type use it,
			// otherwise use the default
			return host[renderer] || host._;
		}
	
		// Use the default
		return host._;
	}
	
	
	/**
	 * Detect the data source being used for the table. Used to simplify the code
	 * a little (ajax) and to make it compress a little smaller.
	 *
	 *  @param {object} settings dataTables settings object
	 *  @returns {string} Data source
	 *  @memberof DataTable#oApi
	 */
	function _fnDataSource ( settings )
	{
		if ( settings.oFeatures.bServerSide ) {
			return 'ssp';
		}
		else if ( settings.ajax || settings.sAjaxSource ) {
			return 'ajax';
		}
		return 'dom';
	}
	

	
	
	/**
	 * Computed structure of the DataTables API, defined by the options passed to
	 * `DataTable.Api.register()` when building the API.
	 *
	 * The structure is built in order to speed creation and extension of the Api
	 * objects since the extensions are effectively pre-parsed.
	 *
	 * The array is an array of objects with the following structure, where this
	 * base array represents the Api prototype base:
	 *
	 *     [
	 *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
	 *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
	 *     ]
	 *
	 * @type {Array}
	 * @ignore
	 */
	var __apiStruct = [];
	
	
	/**
	 * `Array.prototype` reference.
	 *
	 * @type object
	 * @ignore
	 */
	var __arrayProto = Array.prototype;
	
	
	/**
	 * Abstraction for `context` parameter of the `Api` constructor to allow it to
	 * take several different forms for ease of use.
	 *
	 * Each of the input parameter types will be converted to a DataTables settings
	 * object where possible.
	 *
	 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
	 *   of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 *   * `DataTables.Api` - API instance
	 * @return {array|null} Matching DataTables settings objects. `null` or
	 *   `undefined` is returned if no matching DataTable is found.
	 * @ignore
	 */
	var _toSettings = function ( mixed )
	{
		var idx, jq;
		var settings = DataTable.settings;
		var tables = $.map( settings, function (el, i) {
			return el.nTable;
		} );
	
		if ( ! mixed ) {
			return [];
		}
		else if ( mixed.nTable && mixed.oApi ) {
			// DataTables settings object
			return [ mixed ];
		}
		else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
			// Table node
			idx = $.inArray( mixed, tables );
			return idx !== -1 ? [ settings[idx] ] : null;
		}
		else if ( mixed && typeof mixed.settings === 'function' ) {
			return mixed.settings().toArray();
		}
		else if ( typeof mixed === 'string' ) {
			// jQuery selector
			jq = $(mixed);
		}
		else if ( mixed instanceof $ ) {
			// jQuery object (also DataTables instance)
			jq = mixed;
		}
	
		if ( jq ) {
			return jq.map( function(i) {
				idx = $.inArray( this, tables );
				return idx !== -1 ? settings[idx] : null;
			} ).toArray();
		}
	};
	
	
	/**
	 * DataTables API class - used to control and interface with  one or more
	 * DataTables enhanced tables.
	 *
	 * The API class is heavily based on jQuery, presenting a chainable interface
	 * that you can use to interact with tables. Each instance of the API class has
	 * a "context" - i.e. the tables that it will operate on. This could be a single
	 * table, all tables on a page or a sub-set thereof.
	 *
	 * Additionally the API is designed to allow you to easily work with the data in
	 * the tables, retrieving and manipulating it as required. This is done by
	 * presenting the API class as an array like interface. The contents of the
	 * array depend upon the actions requested by each method (for example
	 * `rows().nodes()` will return an array of nodes, while `rows().data()` will
	 * return an array of objects or arrays depending upon your table's
	 * configuration). The API object has a number of array like methods (`push`,
	 * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,
	 * `unique` etc) to assist your working with the data held in a table.
	 *
	 * Most methods (those which return an Api instance) are chainable, which means
	 * the return from a method call also has all of the methods available that the
	 * top level object had. For example, these two calls are equivalent:
	 *
	 *     // Not chained
	 *     api.row.add( {...} );
	 *     api.draw();
	 *
	 *     // Chained
	 *     api.row.add( {...} ).draw();
	 *
	 * @class DataTable.Api
	 * @param {array|object|string|jQuery} context DataTable identifier. This is
	 *   used to define which DataTables enhanced tables this API will operate on.
	 *   Can be one of:
	 *
	 *   * `string` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * `node` - `TABLE` node which has already been formed into a DataTable.
	 *   * `jQuery` - A jQuery object of `TABLE` nodes.
	 *   * `object` - DataTables settings object
	 * @param {array} [data] Data to initialise the Api instance with.
	 *
	 * @example
	 *   // Direct initialisation during DataTables construction
	 *   var api = $('#example').DataTable();
	 *
	 * @example
	 *   // Initialisation using a DataTables jQuery object
	 *   var api = $('#example').dataTable().api();
	 *
	 * @example
	 *   // Initialisation as a constructor
	 *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
	 */
	_Api = function ( context, data )
	{
		if ( ! (this instanceof _Api) ) {
			return new _Api( context, data );
		}
	
		var settings = [];
		var ctxSettings = function ( o ) {
			var a = _toSettings( o );
			if ( a ) {
				settings = settings.concat( a );
			}
		};
	
		if ( $.isArray( context ) ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				ctxSettings( context[i] );
			}
		}
		else {
			ctxSettings( context );
		}
	
		// Remove duplicates
		this.context = _unique( settings );
	
		// Initial data
		if ( data ) {
			$.merge( this, data );
		}
	
		// selector
		this.selector = {
			rows: null,
			cols: null,
			opts: null
		};
	
		_Api.extend( this, this, __apiStruct );
	};
	
	DataTable.Api = _Api;
	
	// Don't destroy the existing prototype, just extend it. Required for jQuery 2's
	// isPlainObject.
	$.extend( _Api.prototype, {
		any: function ()
		{
			return this.count() !== 0;
		},
	
	
		concat:  __arrayProto.concat,
	
	
		context: [], // array of table settings objects
	
	
		count: function ()
		{
			return this.flatten().length;
		},
	
	
		each: function ( fn )
		{
			for ( var i=0, ien=this.length ; i<ien; i++ ) {
				fn.call( this, this[i], i, this );
			}
	
			return this;
		},
	
	
		eq: function ( idx )
		{
			var ctx = this.context;
	
			return ctx.length > idx ?
				new _Api( ctx[idx], this[idx] ) :
				null;
		},
	
	
		filter: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.filter ) {
				a = __arrayProto.filter.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					if ( fn.call( this, this[i], i, this ) ) {
						a.push( this[i] );
					}
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		flatten: function ()
		{
			var a = [];
			return new _Api( this.context, a.concat.apply( a, this.toArray() ) );
		},
	
	
		join:    __arrayProto.join,
	
	
		indexOf: __arrayProto.indexOf || function (obj, start)
		{
			for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {
				if ( this[i] === obj ) {
					return i;
				}
			}
			return -1;
		},
	
		iterator: function ( flatten, type, fn, alwaysNew ) {
			var
				a = [], ret,
				i, ien, j, jen,
				context = this.context,
				rows, items, item,
				selector = this.selector;
	
			// Argument shifting
			if ( typeof flatten === 'string' ) {
				alwaysNew = fn;
				fn = type;
				type = flatten;
				flatten = false;
			}
	
			for ( i=0, ien=context.length ; i<ien ; i++ ) {
				var apiInst = new _Api( context[i] );
	
				if ( type === 'table' ) {
					ret = fn.call( apiInst, context[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'columns' || type === 'rows' ) {
					// this has same length as context - one entry for each table
					ret = fn.call( apiInst, context[i], this[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {
					// columns and rows share the same structure.
					// 'this' is an array of column indexes for each context
					items = this[i];
	
					if ( type === 'column-rows' ) {
						rows = _selector_row_indexes( context[i], selector.opts );
					}
	
					for ( j=0, jen=items.length ; j<jen ; j++ ) {
						item = items[j];
	
						if ( type === 'cell' ) {
							ret = fn.call( apiInst, context[i], item.row, item.column, i, j );
						}
						else {
							ret = fn.call( apiInst, context[i], item, i, j, rows );
						}
	
						if ( ret !== undefined ) {
							a.push( ret );
						}
					}
				}
			}
	
			if ( a.length || alwaysNew ) {
				var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );
				var apiSelector = api.selector;
				apiSelector.rows = selector.rows;
				apiSelector.cols = selector.cols;
				apiSelector.opts = selector.opts;
				return api;
			}
			return this;
		},
	
	
		lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)
		{
			// Bit cheeky...
			return this.indexOf.apply( this.toArray.reverse(), arguments );
		},
	
	
		length:  0,
	
	
		map: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.map ) {
				a = __arrayProto.map.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					a.push( fn.call( this, this[i], i ) );
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		pluck: function ( prop )
		{
			return this.map( function ( el ) {
				return el[ prop ];
			} );
		},
	
		pop:     __arrayProto.pop,
	
	
		push:    __arrayProto.push,
	
	
		// Does not return an API instance
		reduce: __arrayProto.reduce || function ( fn, init )
		{
			return _fnReduce( this, fn, init, 0, this.length, 1 );
		},
	
	
		reduceRight: __arrayProto.reduceRight || function ( fn, init )
		{
			return _fnReduce( this, fn, init, this.length-1, -1, -1 );
		},
	
	
		reverse: __arrayProto.reverse,
	
	
		// Object with rows, columns and opts
		selector: null,
	
	
		shift:   __arrayProto.shift,
	
	
		sort:    __arrayProto.sort, // ? name - order?
	
	
		splice:  __arrayProto.splice,
	
	
		toArray: function ()
		{
			return __arrayProto.slice.call( this );
		},
	
	
		to$: function ()
		{
			return $( this );
		},
	
	
		toJQuery: function ()
		{
			return $( this );
		},
	
	
		unique: function ()
		{
			return new _Api( this.context, _unique(this) );
		},
	
	
		unshift: __arrayProto.unshift
	} );
	
	
	_Api.extend = function ( scope, obj, ext )
	{
		// Only extend API instances and static properties of the API
		if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {
			return;
		}
	
		var
			i, ien,
			j, jen,
			struct, inner,
			methodScoping = function ( scope, fn, struc ) {
				return function () {
					var ret = fn.apply( scope, arguments );
	
					// Method extension
					_Api.extend( ret, ret, struc.methodExt );
					return ret;
				};
			};
	
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			struct = ext[i];
	
			// Value
			obj[ struct.name ] = typeof struct.val === 'function' ?
				methodScoping( scope, struct.val, struct ) :
				$.isPlainObject( struct.val ) ?
					{} :
					struct.val;
	
			obj[ struct.name ].__dt_wrapper = true;
	
			// Property extension
			_Api.extend( scope, obj[ struct.name ], struct.propExt );
		}
	};
	
	
	// @todo - Is there need for an augment function?
	// _Api.augment = function ( inst, name )
	// {
	// 	// Find src object in the structure from the name
	// 	var parts = name.split('.');
	
	// 	_Api.extend( inst, obj );
	// };
	
	
	//     [
	//       {
	//         name:      'data'                -- string   - Property name
	//         val:       function () {},       -- function - Api method (or undefined if just an object
	//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	//       },
	//       {
	//         name:     'row'
	//         val:       {},
	//         methodExt: [ ... ],
	//         propExt:   [
	//           {
	//             name:      'data'
	//             val:       function () {},
	//             methodExt: [ ... ],
	//             propExt:   [ ... ]
	//           },
	//           ...
	//         ]
	//       }
	//     ]
	
	_Api.register = _api_register = function ( name, val )
	{
		if ( $.isArray( name ) ) {
			for ( var j=0, jen=name.length ; j<jen ; j++ ) {
				_Api.register( name[j], val );
			}
			return;
		}
	
		var
			i, ien,
			heir = name.split('.'),
			struct = __apiStruct,
			key, method;
	
		var find = function ( src, name ) {
			for ( var i=0, ien=src.length ; i<ien ; i++ ) {
				if ( src[i].name === name ) {
					return src[i];
				}
			}
			return null;
		};
	
		for ( i=0, ien=heir.length ; i<ien ; i++ ) {
			method = heir[i].indexOf('()') !== -1;
			key = method ?
				heir[i].replace('()', '') :
				heir[i];
	
			var src = find( struct, key );
			if ( ! src ) {
				src = {
					name:      key,
					val:       {},
					methodExt: [],
					propExt:   []
				};
				struct.push( src );
			}
	
			if ( i === ien-1 ) {
				src.val = val;
			}
			else {
				struct = method ?
					src.methodExt :
					src.propExt;
			}
		}
	};
	
	
	_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {
		_Api.register( pluralName, val );
	
		_Api.register( singularName, function () {
			var ret = val.apply( this, arguments );
	
			if ( ret === this ) {
				// Returned item is the API instance that was passed in, return it
				return this;
			}
			else if ( ret instanceof _Api ) {
				// New API instance returned, want the value from the first item
				// in the returned array for the singular result.
				return ret.length ?
					$.isArray( ret[0] ) ?
						new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'
						ret[0] :
					undefined;
			}
	
			// Non-API return - just fire it back
			return ret;
		} );
	};
	
	
	/**
	 * Selector for HTML tables. Apply the given selector to the give array of
	 * DataTables settings objects.
	 *
	 * @param {string|integer} [selector] jQuery selector string or integer
	 * @param  {array} Array of DataTables settings objects to be filtered
	 * @return {array}
	 * @ignore
	 */
	var __table_selector = function ( selector, a )
	{
		// Integer is used to pick out a table by index
		if ( typeof selector === 'number' ) {
			return [ a[ selector ] ];
		}
	
		// Perform a jQuery selector on the table nodes
		var nodes = $.map( a, function (el, i) {
			return el.nTable;
		} );
	
		return $(nodes)
			.filter( selector )
			.map( function (i) {
				// Need to translate back from the table node to the settings
				var idx = $.inArray( this, nodes );
				return a[ idx ];
			} )
			.toArray();
	};
	
	
	
	/**
	 * Context selector for the API's context (i.e. the tables the API instance
	 * refers to.
	 *
	 * @name    DataTable.Api#tables
	 * @param {string|integer} [selector] Selector to pick which tables the iterator
	 *   should operate on. If not given, all tables in the current context are
	 *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to
	 *   select multiple tables or as an integer to select a single table.
	 * @returns {DataTable.Api} Returns a new API instance if a selector is given.
	 */
	_api_register( 'tables()', function ( selector ) {
		// A new instance is created if there was a selector specified
		return selector ?
			new _Api( __table_selector( selector, this.context ) ) :
			this;
	} );
	
	
	_api_register( 'table()', function ( selector ) {
		var tables = this.tables( selector );
		var ctx = tables.context;
	
		// Truncate to the first matched table
		return ctx.length ?
			new _Api( ctx[0] ) :
			tables;
	} );
	
	
	_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTable;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().body()', 'table().body()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTBody;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().header()', 'table().header()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTHead;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTFoot;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().containers()', 'table().container()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTableWrapper;
		}, 1 );
	} );
	
	
	
	/**
	 * Redraw the tables in the current context.
	 */
	_api_register( 'draw()', function ( paging ) {
		return this.iterator( 'table', function ( settings ) {
			if ( paging === 'page' ) {
				_fnDraw( settings );
			}
			else {
				if ( typeof paging === 'string' ) {
					paging = paging === 'full-hold' ?
						false :
						true;
				}
	
				_fnReDraw( settings, paging===false );
			}
		} );
	} );
	
	
	
	/**
	 * Get the current page index.
	 *
	 * @return {integer} Current page index (zero based)
	 *//**
	 * Set the current page.
	 *
	 * Note that if you attempt to show a page which does not exist, DataTables will
	 * not throw an error, but rather reset the paging.
	 *
	 * @param {integer|string} action The paging action to take. This can be one of:
	 *  * `integer` - The page index to jump to
	 *  * `string` - An action to take:
	 *    * `first` - Jump to first page.
	 *    * `next` - Jump to the next page
	 *    * `previous` - Jump to previous page
	 *    * `last` - Jump to the last page.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page()', function ( action ) {
		if ( action === undefined ) {
			return this.page.info().page; // not an expensive call
		}
	
		// else, have an action to take on all tables
		return this.iterator( 'table', function ( settings ) {
			_fnPageChange( settings, action );
		} );
	} );
	
	
	/**
	 * Paging information for the first table in the current context.
	 *
	 * If you require paging information for another table, use the `table()` method
	 * with a suitable selector.
	 *
	 * @return {object} Object with the following properties set:
	 *  * `page` - Current page index (zero based - i.e. the first page is `0`)
	 *  * `pages` - Total number of pages
	 *  * `start` - Display index for the first record shown on the current page
	 *  * `end` - Display index for the last record shown on the current page
	 *  * `length` - Display length (number of records). Note that generally `start
	 *    + length = end`, but this is not always true, for example if there are
	 *    only 2 records to show on the final page, with a length of 10.
	 *  * `recordsTotal` - Full data set length
	 *  * `recordsDisplay` - Data set length once the current filtering criterion
	 *    are applied.
	 */
	_api_register( 'page.info()', function ( action ) {
		if ( this.context.length === 0 ) {
			return undefined;
		}
	
		var
			settings   = this.context[0],
			start      = settings._iDisplayStart,
			len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
			visRecords = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return {
			"page":           all ? 0 : Math.floor( start / len ),
			"pages":          all ? 1 : Math.ceil( visRecords / len ),
			"start":          start,
			"end":            settings.fnDisplayEnd(),
			"length":         len,
			"recordsTotal":   settings.fnRecordsTotal(),
			"recordsDisplay": visRecords,
			"serverSide":     _fnDataSource( settings ) === 'ssp'
		};
	} );
	
	
	/**
	 * Get the current page length.
	 *
	 * @return {integer} Current page length. Note `-1` indicates that all records
	 *   are to be shown.
	 *//**
	 * Set the current page length.
	 *
	 * @param {integer} Page length to set. Use `-1` to show all records.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page.len()', function ( len ) {
		// Note that we can't call this function 'length()' because `length`
		// is a Javascript property of functions which defines how many arguments
		// the function expects.
		if ( len === undefined ) {
			return this.context.length !== 0 ?
				this.context[0]._iDisplayLength :
				undefined;
		}
	
		// else, set the page length
		return this.iterator( 'table', function ( settings ) {
			_fnLengthChange( settings, len );
		} );
	} );
	
	
	
	var __reload = function ( settings, holdPosition, callback ) {
		// Use the draw event to trigger a callback
		if ( callback ) {
			var api = new _Api( settings );
	
			api.one( 'draw', function () {
				callback( api.ajax.json() );
			} );
		}
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			_fnReDraw( settings, holdPosition );
		}
		else {
			_fnProcessingDisplay( settings, true );
	
			// Cancel an existing request
			var xhr = settings.jqXHR;
			if ( xhr && xhr.readyState !== 4 ) {
				xhr.abort();
			}
	
			// Trigger xhr
			_fnBuildAjax( settings, [], function( json ) {
				_fnClearTable( settings );
	
				var data = _fnAjaxDataSrc( settings, json );
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					_fnAddData( settings, data[i] );
				}
	
				_fnReDraw( settings, holdPosition );
				_fnProcessingDisplay( settings, false );
			} );
		}
	};
	
	
	/**
	 * Get the JSON response from the last Ajax request that DataTables made to the
	 * server. Note that this returns the JSON from the first table in the current
	 * context.
	 *
	 * @return {object} JSON received from the server.
	 */
	_api_register( 'ajax.json()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].json;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Get the data submitted in the last Ajax request
	 */
	_api_register( 'ajax.params()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].oAjaxData;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Reload tables from the Ajax data source. Note that this function will
	 * automatically re-draw the table when the remote data has been loaded.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.reload()', function ( callback, resetPaging ) {
		return this.iterator( 'table', function (settings) {
			__reload( settings, resetPaging===false, callback );
		} );
	} );
	
	
	/**
	 * Get the current Ajax URL. Note that this returns the URL from the first
	 * table in the current context.
	 *
	 * @return {string} Current Ajax source URL
	 *//**
	 * Set the Ajax URL. Note that this will set the URL for all tables in the
	 * current context.
	 *
	 * @param {string} url URL to set.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url()', function ( url ) {
		var ctx = this.context;
	
		if ( url === undefined ) {
			// get
			if ( ctx.length === 0 ) {
				return undefined;
			}
			ctx = ctx[0];
	
			return ctx.ajax ?
				$.isPlainObject( ctx.ajax ) ?
					ctx.ajax.url :
					ctx.ajax :
				ctx.sAjaxSource;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( $.isPlainObject( settings.ajax ) ) {
				settings.ajax.url = url;
			}
			else {
				settings.ajax = url;
			}
			// No need to consider sAjaxSource here since DataTables gives priority
			// to `ajax` over `sAjaxSource`. So setting `ajax` here, renders any
			// value of `sAjaxSource` redundant.
		} );
	} );
	
	
	/**
	 * Load data from the newly set Ajax URL. Note that this method is only
	 * available when `ajax.url()` is used to set a URL. Additionally, this method
	 * has the same effect as calling `ajax.reload()` but is provided for
	 * convenience when setting a new URL. Like `ajax.reload()` it will
	 * automatically redraw the table once the remote data has been loaded.
	 *
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {
		// Same as a reload, but makes sense to present it for easy access after a
		// url change
		return this.iterator( 'table', function ( ctx ) {
			__reload( ctx, resetPaging===false, callback );
		} );
	} );
	
	
	
	
	var _selector_run = function ( type, selector, selectFn, settings, opts )
	{
		var
			out = [], res,
			a, i, ien, j, jen,
			selectorType = typeof selector;
	
		// Can't just check for isArray here, as an API or jQuery instance might be
		// given with their array like look
		if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {
			selector = [ selector ];
		}
	
		for ( i=0, ien=selector.length ; i<ien ; i++ ) {
			a = selector[i] && selector[i].split ?
				selector[i].split(',') :
				[ selector[i] ];
	
			for ( j=0, jen=a.length ; j<jen ; j++ ) {
				res = selectFn( typeof a[j] === 'string' ? $.trim(a[j]) : a[j] );
	
				if ( res && res.length ) {
					out = out.concat( res );
				}
			}
		}
	
		// selector extensions
		var ext = _ext.selector[ type ];
		if ( ext.length ) {
			for ( i=0, ien=ext.length ; i<ien ; i++ ) {
				out = ext[i]( settings, opts, out );
			}
		}
	
		return _unique( out );
	};
	
	
	var _selector_opts = function ( opts )
	{
		if ( ! opts ) {
			opts = {};
		}
	
		// Backwards compatibility for 1.9- which used the terminology filter rather
		// than search
		if ( opts.filter && opts.search === undefined ) {
			opts.search = opts.filter;
		}
	
		return $.extend( {
			search: 'none',
			order: 'current',
			page: 'all'
		}, opts );
	};
	
	
	var _selector_first = function ( inst )
	{
		// Reduce the API instance to the first item found
		for ( var i=0, ien=inst.length ; i<ien ; i++ ) {
			if ( inst[i].length > 0 ) {
				// Assign the first element to the first item in the instance
				// and truncate the instance and context
				inst[0] = inst[i];
				inst[0].length = 1;
				inst.length = 1;
				inst.context = [ inst.context[i] ];
	
				return inst;
			}
		}
	
		// Not found - return an empty instance
		inst.length = 0;
		return inst;
	};
	
	
	var _selector_row_indexes = function ( settings, opts )
	{
		var
			i, ien, tmp, a=[],
			displayFiltered = settings.aiDisplay,
			displayMaster = settings.aiDisplayMaster;
	
		var
			search = opts.search,  // none, applied, removed
			order  = opts.order,   // applied, current, index (original - compatibility with 1.9)
			page   = opts.page;    // all, current
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			// In server-side processing mode, most options are irrelevant since
			// rows not shown don't exist and the index order is the applied order
			// Removed is a special case - for consistency just return an empty
			// array
			return search === 'removed' ?
				[] :
				_range( 0, displayMaster.length );
		}
		else if ( page == 'current' ) {
			// Current page implies that order=current and fitler=applied, since it is
			// fairly senseless otherwise, regardless of what order and search actually
			// are
			for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {
				a.push( displayFiltered[i] );
			}
		}
		else if ( order == 'current' || order == 'applied' ) {
			a = search == 'none' ?
				displayMaster.slice() :                      // no search
				search == 'applied' ?
					displayFiltered.slice() :                // applied search
					$.map( displayMaster, function (el, i) { // removed search
						return $.inArray( el, displayFiltered ) === -1 ? el : null;
					} );
		}
		else if ( order == 'index' || order == 'original' ) {
			for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				if ( search == 'none' ) {
					a.push( i );
				}
				else { // applied | removed
					tmp = $.inArray( i, displayFiltered );
	
					if ((tmp === -1 && search == 'removed') ||
						(tmp >= 0   && search == 'applied') )
					{
						a.push( i );
					}
				}
			}
		}
	
		return a;
	};
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Rows
	 *
	 * {}          - no selector - use all available rows
	 * {integer}   - row aoData index
	 * {node}      - TR node
	 * {string}    - jQuery selector to apply to the TR elements
	 * {array}     - jQuery array of nodes, or simply an array of TR nodes
	 *
	 */
	
	
	var __row_selector = function ( settings, selector, opts )
	{
		var run = function ( sel ) {
			var selInt = _intVal( sel );
			var i, ien;
	
			// Short cut - selector is a number and no options provided (default is
			// all records, so no need to check if the index is in there, since it
			// must be - dev error if the index doesn't exist).
			if ( selInt !== null && ! opts ) {
				return [ selInt ];
			}
	
			var rows = _selector_row_indexes( settings, opts );
	
			if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {
				// Selector - integer
				return [ selInt ];
			}
			else if ( ! sel ) {
				// Selector - none
				return rows;
			}
	
			// Selector - function
			if ( typeof sel === 'function' ) {
				return $.map( rows, function (idx) {
					var row = settings.aoData[ idx ];
					return sel( idx, row._aData, row.nTr ) ? idx : null;
				} );
			}
	
			// Get nodes in the order from the `rows` array with null values removed
			var nodes = _removeEmpty(
				_pluck_order( settings.aoData, rows, 'nTr' )
			);
	
			// Selector - node
			if ( sel.nodeName ) {
				if ( sel._DT_RowIndex !== undefined ) {
					return [ sel._DT_RowIndex ]; // Property added by DT for fast lookup
				}
				else if ( sel._DT_CellIndex ) {
					return [ sel._DT_CellIndex.row ];
				}
				else {
					var host = $(sel).closest('*[data-dt-row]');
					return host.length ?
						[ host.data('dt-row') ] :
						[];
				}
			}
	
			// ID selector. Want to always be able to select rows by id, regardless
			// of if the tr element has been created or not, so can't rely upon
			// jQuery here - hence a custom implementation. This does not match
			// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
			// but to select it using a CSS selector engine (like Sizzle or
			// querySelect) it would need to need to be escaped for some characters.
			// DataTables simplifies this for row selectors since you can select
			// only a row. A # indicates an id any anything that follows is the id -
			// unescaped.
			if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {
				// get row index from id
				var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];
				if ( rowObj !== undefined ) {
					return [ rowObj.idx ];
				}
	
				// need to fall through to jQuery in case there is DOM id that
				// matches
			}
	
			// Selector - jQuery selector string, array of nodes or jQuery object/
			// As jQuery's .filter() allows jQuery objects to be passed in filter,
			// it also allows arrays, so this will cope with all three options
			return $(nodes)
				.filter( sel )
				.map( function () {
					return this._DT_RowIndex;
				} )
				.toArray();
		};
	
		return _selector_run( 'row', selector, run, settings, opts );
	};
	
	
	_api_register( 'rows()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __row_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in __row_selector?
		inst.selector.rows = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_register( 'rows().nodes()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return settings.aoData[ row ].nTr || undefined;
		}, 1 );
	} );
	
	_api_register( 'rows().data()', function () {
		return this.iterator( true, 'rows', function ( settings, rows ) {
			return _pluck_order( settings.aoData, rows, '_aData' );
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {
		return this.iterator( 'row', function ( settings, row ) {
			var r = settings.aoData[ row ];
			return type === 'search' ? r._aFilterData : r._aSortData;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {
		return this.iterator( 'row', function ( settings, row ) {
			_fnInvalidate( settings, row, src );
		} );
	} );
	
	_api_registerPlural( 'rows().indexes()', 'row().index()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return row;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {
		var a = [];
		var context = this.context;
	
		// `iterator` will drop undefined values, but in this case we want them
		for ( var i=0, ien=context.length ; i<ien ; i++ ) {
			for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {
				var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );
				a.push( (hash === true ? '#' : '' )+ id );
			}
		}
	
		return new _Api( context, a );
	} );
	
	_api_registerPlural( 'rows().remove()', 'row().remove()', function () {
		var that = this;
	
		this.iterator( 'row', function ( settings, row, thatIdx ) {
			var data = settings.aoData;
			var rowData = data[ row ];
			var i, ien, j, jen;
			var loopRow, loopCells;
	
			data.splice( row, 1 );
	
			// Update the cached indexes
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				loopRow = data[i];
				loopCells = loopRow.anCells;
	
				// Rows
				if ( loopRow.nTr !== null ) {
					loopRow.nTr._DT_RowIndex = i;
				}
	
				// Cells
				if ( loopCells !== null ) {
					for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {
						loopCells[j]._DT_CellIndex.row = i;
					}
				}
			}
	
			// Delete from the display arrays
			_fnDeleteIndex( settings.aiDisplayMaster, row );
			_fnDeleteIndex( settings.aiDisplay, row );
			_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes
	
			// Check for an 'overflow' they case for displaying the table
			_fnLengthOverflow( settings );
	
			// Remove the row's ID reference if there is one
			var id = settings.rowIdFn( rowData._aData );
			if ( id !== undefined ) {
				delete settings.aIds[ id ];
			}
		} );
	
		this.iterator( 'table', function ( settings ) {
			for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				settings.aoData[i].idx = i;
			}
		} );
	
		return this;
	} );
	
	
	_api_register( 'rows.add()', function ( rows ) {
		var newRows = this.iterator( 'table', function ( settings ) {
				var row, i, ien;
				var out = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
						out.push( _fnAddTr( settings, row )[0] );
					}
					else {
						out.push( _fnAddData( settings, row ) );
					}
				}
	
				return out;
			}, 1 );
	
		// Return an Api.rows() extended instance, so rows().nodes() etc can be used
		var modRows = this.rows( -1 );
		modRows.pop();
		$.merge( modRows, newRows );
	
		return modRows;
	} );
	
	
	
	
	
	/**
	 *
	 */
	_api_register( 'row()', function ( selector, opts ) {
		return _selector_first( this.rows( selector, opts ) );
	} );
	
	
	_api_register( 'row().data()', function ( data ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// Get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._aData :
				undefined;
		}
	
		// Set
		ctx[0].aoData[ this[0] ]._aData = data;
	
		// Automatically invalidate
		_fnInvalidate( ctx[0], this[0], 'data' );
	
		return this;
	} );
	
	
	_api_register( 'row().node()', function () {
		var ctx = this.context;
	
		return ctx.length && this.length ?
			ctx[0].aoData[ this[0] ].nTr || null :
			null;
	} );
	
	
	_api_register( 'row.add()', function ( row ) {
		// Allow a jQuery object to be passed in - only a single row is added from
		// it though - the first element in the set
		if ( row instanceof $ && row.length ) {
			row = row[0];
		}
	
		var rows = this.iterator( 'table', function ( settings ) {
			if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
				return _fnAddTr( settings, row )[0];
			}
			return _fnAddData( settings, row );
		} );
	
		// Return an Api.rows() extended instance, with the newly added row selected
		return this.row( rows[0] );
	} );
	
	
	
	var __details_add = function ( ctx, row, data, klass )
	{
		// Convert to array of TR elements
		var rows = [];
		var addRow = function ( r, k ) {
			// Recursion to allow for arrays of jQuery objects
			if ( $.isArray( r ) || r instanceof $ ) {
				for ( var i=0, ien=r.length ; i<ien ; i++ ) {
					addRow( r[i], k );
				}
				return;
			}
	
			// If we get a TR element, then just add it directly - up to the dev
			// to add the correct number of columns etc
			if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {
				rows.push( r );
			}
			else {
				// Otherwise create a row with a wrapper
				var created = $('<tr><td/></tr>').addClass( k );
				$('td', created)
					.addClass( k )
					.html( r )
					[0].colSpan = _fnVisbleColumns( ctx );
	
				rows.push( created[0] );
			}
		};
	
		addRow( data, klass );
	
		if ( row._details ) {
			row._details.remove();
		}
	
		row._details = $(rows);
	
		// If the children were already shown, that state should be retained
		if ( row._detailsShow ) {
			row._details.insertAfter( row.nTr );
		}
	};
	
	
	var __details_remove = function ( api, idx )
	{
		var ctx = api.context;
	
		if ( ctx.length ) {
			var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];
	
			if ( row && row._details ) {
				row._details.remove();
	
				row._detailsShow = undefined;
				row._details = undefined;
			}
		}
	};
	
	
	var __details_display = function ( api, show ) {
		var ctx = api.context;
	
		if ( ctx.length && api.length ) {
			var row = ctx[0].aoData[ api[0] ];
	
			if ( row._details ) {
				row._detailsShow = show;
	
				if ( show ) {
					row._details.insertAfter( row.nTr );
				}
				else {
					row._details.detach();
				}
	
				__details_events( ctx[0] );
			}
		}
	};
	
	
	var __details_events = function ( settings )
	{
		var api = new _Api( settings );
		var namespace = '.dt.DT_details';
		var drawEvent = 'draw'+namespace;
		var colvisEvent = 'column-visibility'+namespace;
		var destroyEvent = 'destroy'+namespace;
		var data = settings.aoData;
	
		api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );
	
		if ( _pluck( data, '_details' ).length > 0 ) {
			// On each draw, insert the required elements into the document
			api.on( drawEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				api.rows( {page:'current'} ).eq(0).each( function (idx) {
					// Internal data grab
					var row = data[ idx ];
	
					if ( row._detailsShow ) {
						row._details.insertAfter( row.nTr );
					}
				} );
			} );
	
			// Column visibility change - update the colspan
			api.on( colvisEvent, function ( e, ctx, idx, vis ) {
				if ( settings !== ctx ) {
					return;
				}
	
				// Update the colspan for the details rows (note, only if it already has
				// a colspan)
				var row, visible = _fnVisbleColumns( ctx );
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					row = data[i];
	
					if ( row._details ) {
						row._details.children('td[colspan]').attr('colspan', visible );
					}
				}
			} );
	
			// Table destroyed - nuke any child rows
			api.on( destroyEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					if ( data[i]._details ) {
						__details_remove( api, i );
					}
				}
			} );
		}
	};
	
	// Strings for the method names to help minification
	var _emp = '';
	var _child_obj = _emp+'row().child';
	var _child_mth = _child_obj+'()';
	
	// data can be:
	//  tr
	//  string
	//  jQuery or array of any of the above
	_api_register( _child_mth, function ( data, klass ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._details :
				undefined;
		}
		else if ( data === true ) {
			// show
			this.child.show();
		}
		else if ( data === false ) {
			// remove
			__details_remove( this );
		}
		else if ( ctx.length && this.length ) {
			// set
			__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );
		}
	
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.show()',
		_child_mth+'.show()' // only when `child()` was called with parameters (without
	], function ( show ) {   // it returns an object and this method is not executed)
		__details_display( this, true );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.hide()',
		_child_mth+'.hide()' // only when `child()` was called with parameters (without
	], function () {         // it returns an object and this method is not executed)
		__details_display( this, false );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.remove()',
		_child_mth+'.remove()' // only when `child()` was called with parameters (without
	], function () {           // it returns an object and this method is not executed)
		__details_remove( this );
		return this;
	} );
	
	
	_api_register( _child_obj+'.isShown()', function () {
		var ctx = this.context;
	
		if ( ctx.length && this.length ) {
			// _detailsShown as false or undefined will fall through to return false
			return ctx[0].aoData[ this[0] ]._detailsShow || false;
		}
		return false;
	} );
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Columns
	 *
	 * {integer}           - column index (>=0 count from left, <0 count from right)
	 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
	 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
	 * "{string}:name"     - column name
	 * "{string}"          - jQuery selector on column header nodes
	 *
	 */
	
	// can be an array of these items, comma separated list, or an array of comma
	// separated lists
	
	var __re_column_selector = /^(.+):(name|visIdx|visible)$/;
	
	
	// r1 and r2 are redundant - but it means that the parameters match for the
	// iterator callback in columns().data()
	var __columnData = function ( settings, column, r1, r2, rows ) {
		var a = [];
		for ( var row=0, ien=rows.length ; row<ien ; row++ ) {
			a.push( _fnGetCellData( settings, rows[row], column ) );
		}
		return a;
	};
	
	
	var __column_selector = function ( settings, selector, opts )
	{
		var
			columns = settings.aoColumns,
			names = _pluck( columns, 'sName' ),
			nodes = _pluck( columns, 'nTh' );
	
		var run = function ( s ) {
			var selInt = _intVal( s );
	
			// Selector - all
			if ( s === '' ) {
				return _range( columns.length );
			}
	
			// Selector - index
			if ( selInt !== null ) {
				return [ selInt >= 0 ?
					selInt : // Count from left
					columns.length + selInt // Count from right (+ because its a negative value)
				];
			}
	
			// Selector = function
			if ( typeof s === 'function' ) {
				var rows = _selector_row_indexes( settings, opts );
	
				return $.map( columns, function (col, idx) {
					return s(
							idx,
							__columnData( settings, idx, 0, 0, rows ),
							nodes[ idx ]
						) ? idx : null;
				} );
			}
	
			// jQuery or string selector
			var match = typeof s === 'string' ?
				s.match( __re_column_selector ) :
				'';
	
			if ( match ) {
				switch( match[2] ) {
					case 'visIdx':
					case 'visible':
						var idx = parseInt( match[1], 10 );
						// Visible index given, convert to column index
						if ( idx < 0 ) {
							// Counting from the right
							var visColumns = $.map( columns, function (col,i) {
								return col.bVisible ? i : null;
							} );
							return [ visColumns[ visColumns.length + idx ] ];
						}
						// Counting from the left
						return [ _fnVisibleToColumnIndex( settings, idx ) ];
	
					case 'name':
						// match by name. `names` is column index complete and in order
						return $.map( names, function (name, i) {
							return name === match[1] ? i : null;
						} );
	
					default:
						return [];
				}
			}
	
			// Cell in the table body
			if ( s.nodeName && s._DT_CellIndex ) {
				return [ s._DT_CellIndex.column ];
			}
	
			// jQuery selector on the TH elements for the columns
			var jqResult = $( nodes )
				.filter( s )
				.map( function () {
					return $.inArray( this, nodes ); // `nodes` is column index complete and in order
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise a node which might have a `dt-column` data attribute, or be
			// a child or such an element
			var host = $(s).closest('*[data-dt-column]');
			return host.length ?
				[ host.data('dt-column') ] :
				[];
		};
	
		return _selector_run( 'column', selector, run, settings, opts );
	};
	
	
	var __setColumnVis = function ( settings, column, vis ) {
		var
			cols = settings.aoColumns,
			col  = cols[ column ],
			data = settings.aoData,
			row, cells, i, ien, tr;
	
		// Get
		if ( vis === undefined ) {
			return col.bVisible;
		}
	
		// Set
		// No change
		if ( col.bVisible === vis ) {
			return;
		}
	
		if ( vis ) {
			// Insert column
			// Need to decide if we should use appendChild or insertBefore
			var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );
	
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				tr = data[i].nTr;
				cells = data[i].anCells;
	
				if ( tr ) {
					// insertBefore can act like appendChild if 2nd arg is null
					tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );
				}
			}
		}
		else {
			// Remove column
			$( _pluck( settings.aoData, 'anCells', column ) ).detach();
		}
	
		// Common actions
		col.bVisible = vis;
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		_fnSaveState( settings );
	};
	
	
	_api_register( 'columns()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __column_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in _row_selector?
		inst.selector.cols = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTh;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTf;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().data()', 'column().data()', function () {
		return this.iterator( 'column-rows', __columnData, 1 );
	} );
	
	_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].mData;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows,
				type === 'search' ? '_aFilterData' : '_aSortData', column
			);
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows, 'anCells', column ) ;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {
		var ret = this.iterator( 'column', function ( settings, column ) {
			if ( vis === undefined ) {
				return settings.aoColumns[ column ].bVisible;
			} // else
			__setColumnVis( settings, column, vis );
		} );
	
		// Group the column visibility changes
		if ( vis !== undefined ) {
			// Second loop once the first is done for events
			this.iterator( 'column', function ( settings, column ) {
				_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );
			} );
	
			if ( calc === undefined || calc ) {
				this.columns.adjust();
			}
		}
	
		return ret;
	} );
	
	_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {
		return this.iterator( 'column', function ( settings, column ) {
			return type === 'visible' ?
				_fnColumnIndexToVisible( settings, column ) :
				column;
		}, 1 );
	} );
	
	_api_register( 'columns.adjust()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnAdjustColumnSizing( settings );
		}, 1 );
	} );
	
	_api_register( 'column.index()', function ( type, idx ) {
		if ( this.context.length !== 0 ) {
			var ctx = this.context[0];
	
			if ( type === 'fromVisible' || type === 'toData' ) {
				return _fnVisibleToColumnIndex( ctx, idx );
			}
			else if ( type === 'fromData' || type === 'toVisible' ) {
				return _fnColumnIndexToVisible( ctx, idx );
			}
		}
	} );
	
	_api_register( 'column()', function ( selector, opts ) {
		return _selector_first( this.columns( selector, opts ) );
	} );
	
	
	
	var __cell_selector = function ( settings, selector, opts )
	{
		var data = settings.aoData;
		var rows = _selector_row_indexes( settings, opts );
		var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );
		var allCells = $( [].concat.apply([], cells) );
		var row;
		var columns = settings.aoColumns.length;
		var a, i, ien, j, o, host;
	
		var run = function ( s ) {
			var fnSelector = typeof s === 'function';
	
			if ( s === null || s === undefined || fnSelector ) {
				// All cells and function selectors
				a = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					for ( j=0 ; j<columns ; j++ ) {
						o = {
							row: row,
							column: j
						};
	
						if ( fnSelector ) {
							// Selector - function
							host = data[ row ];
	
							if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {
								a.push( o );
							}
						}
						else {
							// Selector - all
							a.push( o );
						}
					}
				}
	
				return a;
			}
			
			// Selector - index
			if ( $.isPlainObject( s ) ) {
				return [s];
			}
	
			// Selector - jQuery filtered cells
			var jqResult = allCells
				.filter( s )
				.map( function (i, el) {
					return { // use a new object, in case someone changes the values
						row:    el._DT_CellIndex.row,
						column: el._DT_CellIndex.column
	 				};
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise the selector is a node, and there is one last option - the
			// element might be a child of an element which has dt-row and dt-column
			// data attributes
			host = $(s).closest('*[data-dt-row]');
			return host.length ?
				[ {
					row: host.data('dt-row'),
					column: host.data('dt-column')
				} ] :
				[];
		};
	
		return _selector_run( 'cell', selector, run, settings, opts );
	};
	
	
	
	
	_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {
		// Argument shifting
		if ( $.isPlainObject( rowSelector ) ) {
			// Indexes
			if ( rowSelector.row === undefined ) {
				// Selector options in first parameter
				opts = rowSelector;
				rowSelector = null;
			}
			else {
				// Cell index objects in first parameter
				opts = columnSelector;
				columnSelector = null;
			}
		}
		if ( $.isPlainObject( columnSelector ) ) {
			opts = columnSelector;
			columnSelector = null;
		}
	
		// Cell selector
		if ( columnSelector === null || columnSelector === undefined ) {
			return this.iterator( 'table', function ( settings ) {
				return __cell_selector( settings, rowSelector, _selector_opts( opts ) );
			} );
		}
	
		// Row + column selector
		var columns = this.columns( columnSelector, opts );
		var rows = this.rows( rowSelector, opts );
		var a, i, ien, j, jen;
	
		var cells = this.iterator( 'table', function ( settings, idx ) {
			a = [];
	
			for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {
				for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {
					a.push( {
						row:    rows[idx][i],
						column: columns[idx][j]
					} );
				}
			}
	
			return a;
		}, 1 );
	
		$.extend( cells.selector, {
			cols: columnSelector,
			rows: rowSelector,
			opts: opts
		} );
	
		return cells;
	} );
	
	
	_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			var data = settings.aoData[ row ];
	
			return data && data.anCells ?
				data.anCells[ column ] :
				undefined;
		}, 1 );
	} );
	
	
	_api_register( 'cells().data()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {
		type = type === 'search' ? '_aFilterData' : '_aSortData';
	
		return this.iterator( 'cell', function ( settings, row, column ) {
			return settings.aoData[ row ][ type ][ column ];
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column, type );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return {
				row: row,
				column: column,
				columnVisible: _fnColumnIndexToVisible( settings, column )
			};
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			_fnInvalidate( settings, row, src, column );
		} );
	} );
	
	
	
	_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {
		return _selector_first( this.cells( rowSelector, columnSelector, opts ) );
	} );
	
	
	_api_register( 'cell().data()', function ( data ) {
		var ctx = this.context;
		var cell = this[0];
	
		if ( data === undefined ) {
			// Get
			return ctx.length && cell.length ?
				_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :
				undefined;
		}
	
		// Set
		_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );
		_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );
	
		return this;
	} );
	
	
	
	/**
	 * Get current ordering (sorting) that has been applied to the table.
	 *
	 * @returns {array} 2D array containing the sorting information for the first
	 *   table in the current context. Each element in the parent array represents
	 *   a column being sorted upon (i.e. multi-sorting with two columns would have
	 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
	 *   the column index that the sorting condition applies to, the second is the
	 *   direction of the sort (`desc` or `asc`) and, optionally, the third is the
	 *   index of the sorting order from the `column.sorting` initialisation array.
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {integer} order Column index to sort upon.
	 * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 1D array of sorting information to be applied.
	 * @param {array} [...] Optional additional sorting conditions
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 2D array of sorting information to be applied.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order()', function ( order, dir ) {
		var ctx = this.context;
	
		if ( order === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].aaSorting :
				undefined;
		}
	
		// set
		if ( typeof order === 'number' ) {
			// Simple column / direction passed in
			order = [ [ order, dir ] ];
		}
		else if ( order.length && ! $.isArray( order[0] ) ) {
			// Arguments passed in (list of 1D arrays)
			order = Array.prototype.slice.call( arguments );
		}
		// otherwise a 2D array was passed in
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSorting = order.slice();
		} );
	} );
	
	
	/**
	 * Attach a sort listener to an element for a given column
	 *
	 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
	 *   listener to. This can take the form of a single DOM node, a jQuery
	 *   collection of nodes or a jQuery selector which will identify the node(s).
	 * @param {integer} column the column that a click on this node will sort on
	 * @param {function} [callback] callback function when sort is run
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order.listener()', function ( node, column, callback ) {
		return this.iterator( 'table', function ( settings ) {
			_fnSortAttachListener( settings, node, column, callback );
		} );
	} );
	
	
	_api_register( 'order.fixed()', function ( set ) {
		if ( ! set ) {
			var ctx = this.context;
			var fixed = ctx.length ?
				ctx[0].aaSortingFixed :
				undefined;
	
			return $.isArray( fixed ) ?
				{ pre: fixed } :
				fixed;
		}
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSortingFixed = $.extend( true, {}, set );
		} );
	} );
	
	
	// Order by the selected column(s)
	_api_register( [
		'columns().order()',
		'column().order()'
	], function ( dir ) {
		var that = this;
	
		return this.iterator( 'table', function ( settings, i ) {
			var sort = [];
	
			$.each( that[i], function (j, col) {
				sort.push( [ col, dir ] );
			} );
	
			settings.aaSorting = sort;
		} );
	} );
	
	
	
	_api_register( 'search()', function ( input, regex, smart, caseInsen ) {
		var ctx = this.context;
	
		if ( input === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].oPreviousSearch.sSearch :
				undefined;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( ! settings.oFeatures.bFilter ) {
				return;
			}
	
			_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {
				"sSearch": input+"",
				"bRegex":  regex === null ? false : regex,
				"bSmart":  smart === null ? true  : smart,
				"bCaseInsensitive": caseInsen === null ? true : caseInsen
			} ), 1 );
		} );
	} );
	
	
	_api_registerPlural(
		'columns().search()',
		'column().search()',
		function ( input, regex, smart, caseInsen ) {
			return this.iterator( 'column', function ( settings, column ) {
				var preSearch = settings.aoPreSearchCols;
	
				if ( input === undefined ) {
					// get
					return preSearch[ column ].sSearch;
				}
	
				// set
				if ( ! settings.oFeatures.bFilter ) {
					return;
				}
	
				$.extend( preSearch[ column ], {
					"sSearch": input+"",
					"bRegex":  regex === null ? false : regex,
					"bSmart":  smart === null ? true  : smart,
					"bCaseInsensitive": caseInsen === null ? true : caseInsen
				} );
	
				_fnFilterComplete( settings, settings.oPreviousSearch, 1 );
			} );
		}
	);
	
	/*
	 * State API methods
	 */
	
	_api_register( 'state()', function () {
		return this.context.length ?
			this.context[0].oSavedState :
			null;
	} );
	
	
	_api_register( 'state.clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			// Save an empty object
			settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );
		} );
	} );
	
	
	_api_register( 'state.loaded()', function () {
		return this.context.length ?
			this.context[0].oLoadedState :
			null;
	} );
	
	
	_api_register( 'state.save()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnSaveState( settings );
		} );
	} );
	
	
	
	/**
	 * Provide a common method for plug-ins to check the version of DataTables being
	 * used, in order to ensure compatibility.
	 *
	 *  @param {string} version Version string to check for, in the format "X.Y.Z".
	 *    Note that the formats "X" and "X.Y" are also acceptable.
	 *  @returns {boolean} true if this version of DataTables is greater or equal to
	 *    the required version, or false if this version of DataTales is not
	 *    suitable
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
	 */
	DataTable.versionCheck = DataTable.fnVersionCheck = function( version )
	{
		var aThis = DataTable.version.split('.');
		var aThat = version.split('.');
		var iThis, iThat;
	
		for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {
			iThis = parseInt( aThis[i], 10 ) || 0;
			iThat = parseInt( aThat[i], 10 ) || 0;
	
			// Parts are the same, keep comparing
			if (iThis === iThat) {
				continue;
			}
	
			// Parts are different, return immediately
			return iThis > iThat;
		}
	
		return true;
	};
	
	
	/**
	 * Check if a `<table>` node is a DataTable table already or not.
	 *
	 *  @param {node|jquery|string} table Table node, jQuery object or jQuery
	 *      selector for the table to test. Note that if more than more than one
	 *      table is passed on, only the first will be checked
	 *  @returns {boolean} true the table given is a DataTable, or false otherwise
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
	 *      $('#example').dataTable();
	 *    }
	 */
	DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )
	{
		var t = $(table).get(0);
		var is = false;
	
		$.each( DataTable.settings, function (i, o) {
			var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;
			var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;
	
			if ( o.nTable === t || head === t || foot === t ) {
				is = true;
			}
		} );
	
		return is;
	};
	
	
	/**
	 * Get all DataTable tables that have been initialised - optionally you can
	 * select to get only currently visible tables.
	 *
	 *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
	 *    or visible tables only.
	 *  @returns {array} Array of `table` nodes (not DataTable instances) which are
	 *    DataTables
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    $.each( $.fn.dataTable.tables(true), function () {
	 *      $(table).DataTable().columns.adjust();
	 *    } );
	 */
	DataTable.tables = DataTable.fnTables = function ( visible )
	{
		var api = false;
	
		if ( $.isPlainObject( visible ) ) {
			api = visible.api;
			visible = visible.visible;
		}
	
		var a = $.map( DataTable.settings, function (o) {
			if ( !visible || (visible && $(o.nTable).is(':visible')) ) {
				return o.nTable;
			}
		} );
	
		return api ?
			new _Api( a ) :
			a;
	};
	
	
	/**
	 * Convert from camel case parameters to Hungarian notation. This is made public
	 * for the extensions to provide the same ability as DataTables core to accept
	 * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
	 * parameters.
	 *
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to `true`, properties which already have a
	 *    Hungarian value in the `user` object will be overwritten. Otherwise they
	 *    won't be.
	 */
	DataTable.camelToHungarian = _fnCamelToHungarian;
	
	
	
	/**
	 *
	 */
	_api_register( '$()', function ( selector, opts ) {
		var
			rows   = this.rows( opts ).nodes(), // Get all rows
			jqRows = $(rows);
	
		return $( [].concat(
			jqRows.filter( selector ).toArray(),
			jqRows.find( selector ).toArray()
		) );
	} );
	
	
	// jQuery functions to operate on the tables
	$.each( [ 'on', 'one', 'off' ], function (i, key) {
		_api_register( key+'()', function ( /* event, handler */ ) {
			var args = Array.prototype.slice.call(arguments);
	
			// Add the `dt` namespace automatically if it isn't already present
			if ( ! args[0].match(/\.dt\b/) ) {
				args[0] += '.dt';
			}
	
			var inst = $( this.tables().nodes() );
			inst[key].apply( inst, args );
			return this;
		} );
	} );
	
	
	_api_register( 'clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnClearTable( settings );
		} );
	} );
	
	
	_api_register( 'settings()', function () {
		return new _Api( this.context, this.context );
	} );
	
	
	_api_register( 'init()', function () {
		var ctx = this.context;
		return ctx.length ? ctx[0].oInit : null;
	} );
	
	
	_api_register( 'data()', function () {
		return this.iterator( 'table', function ( settings ) {
			return _pluck( settings.aoData, '_aData' );
		} ).flatten();
	} );
	
	
	_api_register( 'destroy()', function ( remove ) {
		remove = remove || false;
	
		return this.iterator( 'table', function ( settings ) {
			var orig      = settings.nTableWrapper.parentNode;
			var classes   = settings.oClasses;
			var table     = settings.nTable;
			var tbody     = settings.nTBody;
			var thead     = settings.nTHead;
			var tfoot     = settings.nTFoot;
			var jqTable   = $(table);
			var jqTbody   = $(tbody);
			var jqWrapper = $(settings.nTableWrapper);
			var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );
			var i, ien;
	
			// Flag to note that the table is currently being destroyed - no action
			// should be taken
			settings.bDestroying = true;
	
			// Fire off the destroy callbacks for plug-ins etc
			_fnCallbackFire( settings, "aoDestroyCallback", "destroy", [settings] );
	
			// If not being removed from the document, make all columns visible
			if ( ! remove ) {
				new _Api( settings ).columns().visible( true );
			}
	
			// Blitz all `DT` namespaced events (these are internal events, the
			// lowercase, `dt` events are user subscribed and they are responsible
			// for removing them
			jqWrapper.unbind('.DT').find(':not(tbody *)').unbind('.DT');
			$(window).unbind('.DT-'+settings.sInstance);
	
			// When scrolling we had to break the table up - restore it
			if ( table != thead.parentNode ) {
				jqTable.children('thead').detach();
				jqTable.append( thead );
			}
	
			if ( tfoot && table != tfoot.parentNode ) {
				jqTable.children('tfoot').detach();
				jqTable.append( tfoot );
			}
	
			settings.aaSorting = [];
			settings.aaSortingFixed = [];
			_fnSortingClasses( settings );
	
			$( rows ).removeClass( settings.asStripeClasses.join(' ') );
	
			$('th, td', thead).removeClass( classes.sSortable+' '+
				classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone
			);
	
			if ( settings.bJUI ) {
				$('th span.'+classes.sSortIcon+ ', td span.'+classes.sSortIcon, thead).detach();
				$('th, td', thead).each( function () {
					var wrapper = $('div.'+classes.sSortJUIWrapper, this);
					$(this).append( wrapper.contents() );
					wrapper.detach();
				} );
			}
	
			// Add the TR elements back into the table in their original order
			jqTbody.children().detach();
			jqTbody.append( rows );
	
			// Remove the DataTables generated nodes, events and classes
			var removedMethod = remove ? 'remove' : 'detach';
			jqTable[ removedMethod ]();
			jqWrapper[ removedMethod ]();
	
			// If we need to reattach the table to the document
			if ( ! remove && orig ) {
				// insertBefore acts like appendChild if !arg[1]
				orig.insertBefore( table, settings.nTableReinsertBefore );
	
				// Restore the width of the original table - was read from the style property,
				// so we can restore directly to that
				jqTable
					.css( 'width', settings.sDestroyWidth )
					.removeClass( classes.sTable );
	
				// If the were originally stripe classes - then we add them back here.
				// Note this is not fool proof (for example if not all rows had stripe
				// classes - but it's a good effort without getting carried away
				ien = settings.asDestroyStripes.length;
	
				if ( ien ) {
					jqTbody.children().each( function (i) {
						$(this).addClass( settings.asDestroyStripes[i % ien] );
					} );
				}
			}
	
			/* Remove the settings object from the settings array */
			var idx = $.inArray( settings, DataTable.settings );
			if ( idx !== -1 ) {
				DataTable.settings.splice( idx, 1 );
			}
		} );
	} );
	
	
	// Add the `every()` method for rows, columns and cells in a compact form
	$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {
		_api_register( type+'s().every()', function ( fn ) {
			var opts = this.selector.opts;
			var api = this;
	
			return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {
				// Rows and columns:
				//  arg1 - index
				//  arg2 - table counter
				//  arg3 - loop counter
				//  arg4 - undefined
				// Cells:
				//  arg1 - row index
				//  arg2 - column index
				//  arg3 - table counter
				//  arg4 - loop counter
				fn.call(
					api[ type ](
						arg1,
						type==='cell' ? arg2 : opts,
						type==='cell' ? opts : undefined
					),
					arg1, arg2, arg3, arg4
				);
			} );
		} );
	} );
	
	
	// i18n method for extensions to be able to use the language object from the
	// DataTable
	_api_register( 'i18n()', function ( token, def, plural ) {
		var ctx = this.context[0];
		var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );
	
		if ( resolved === undefined ) {
			resolved = def;
		}
	
		if ( plural !== undefined && $.isPlainObject( resolved ) ) {
			resolved = resolved[ plural ] !== undefined ?
				resolved[ plural ] :
				resolved._;
		}
	
		return resolved.replace( '%d', plural ); // nb: plural might be undefined,
	} );

	/**
	 * Version string for plug-ins to check compatibility. Allowed format is
	 * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used
	 * only for non-release builds. See http://semver.org/ for more information.
	 *  @member
	 *  @type string
	 *  @default Version number
	 */
	DataTable.version = "1.10.12";

	/**
	 * Private data store, containing all of the settings objects that are
	 * created for the tables on a given page.
	 *
	 * Note that the `DataTable.settings` object is aliased to
	 * `jQuery.fn.dataTableExt` through which it may be accessed and
	 * manipulated, or `jQuery.fn.dataTable.settings`.
	 *  @member
	 *  @type array
	 *  @default []
	 *  @private
	 */
	DataTable.settings = [];

	/**
	 * Object models container, for the various models that DataTables has
	 * available to it. These models define the objects that are used to hold
	 * the active state and configuration of the table.
	 *  @namespace
	 */
	DataTable.models = {};
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * search information for the global filter and individual column filters.
	 *  @namespace
	 */
	DataTable.models.oSearch = {
		/**
		 * Flag to indicate if the filtering should be case insensitive or not
		 *  @type boolean
		 *  @default true
		 */
		"bCaseInsensitive": true,
	
		/**
		 * Applied search term
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sSearch": "",
	
		/**
		 * Flag to indicate if the search term should be interpreted as a
		 * regular expression (true) or not (false) and therefore and special
		 * regex characters escaped.
		 *  @type boolean
		 *  @default false
		 */
		"bRegex": false,
	
		/**
		 * Flag to indicate if DataTables is to use its smart filtering or not.
		 *  @type boolean
		 *  @default true
		 */
		"bSmart": true
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * each individual row. This is the object format used for the settings
	 * aoData array.
	 *  @namespace
	 */
	DataTable.models.oRow = {
		/**
		 * TR element for the row
		 *  @type node
		 *  @default null
		 */
		"nTr": null,
	
		/**
		 * Array of TD elements for each row. This is null until the row has been
		 * created.
		 *  @type array nodes
		 *  @default []
		 */
		"anCells": null,
	
		/**
		 * Data object from the original data source for the row. This is either
		 * an array if using the traditional form of DataTables, or an object if
		 * using mData options. The exact type will depend on the passed in
		 * data from the data source, or will be an array if using DOM a data
		 * source.
		 *  @type array|object
		 *  @default []
		 */
		"_aData": [],
	
		/**
		 * Sorting data cache - this array is ostensibly the same length as the
		 * number of columns (although each index is generated only as it is
		 * needed), and holds the data that is used for sorting each column in the
		 * row. We do this cache generation at the start of the sort in order that
		 * the formatting of the sort data need be done only once for each cell
		 * per sort. This array should not be read from or written to by anything
		 * other than the master sorting methods.
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aSortData": null,
	
		/**
		 * Per cell filtering data cache. As per the sort data cache, used to
		 * increase the performance of the filtering in DataTables
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aFilterData": null,
	
		/**
		 * Filtering data cache. This is the same as the cell filtering cache, but
		 * in this case a string rather than an array. This is easily computed with
		 * a join on `_aFilterData`, but is provided as a cache so the join isn't
		 * needed on every search (memory traded for performance)
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_sFilterRow": null,
	
		/**
		 * Cache of the class name that DataTables has applied to the row, so we
		 * can quickly look at this variable rather than needing to do a DOM check
		 * on className for the nTr property.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *  @private
		 */
		"_sRowStripe": "",
	
		/**
		 * Denote if the original data source was from the DOM, or the data source
		 * object. This is used for invalidating data, so DataTables can
		 * automatically read data from the original source, unless uninstructed
		 * otherwise.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"src": null,
	
		/**
		 * Index in the aoData array. This saves an indexOf lookup when we have the
		 * object, but want to know the index
		 *  @type integer
		 *  @default -1
		 *  @private
		 */
		"idx": -1
	};
	
	
	/**
	 * Template object for the column information object in DataTables. This object
	 * is held in the settings aoColumns array and contains all the information that
	 * DataTables needs about each individual column.
	 *
	 * Note that this object is related to {@link DataTable.defaults.column}
	 * but this one is the internal data store for DataTables's cache of columns.
	 * It should NOT be manipulated outside of DataTables. Any configuration should
	 * be done through the initialisation options.
	 *  @namespace
	 */
	DataTable.models.oColumn = {
		/**
		 * Column index. This could be worked out on-the-fly with $.inArray, but it
		 * is faster to just hold it as a variable
		 *  @type integer
		 *  @default null
		 */
		"idx": null,
	
		/**
		 * A list of the columns that sorting should occur on when this column
		 * is sorted. That this property is an array allows multi-column sorting
		 * to be defined for a column (for example first name / last name columns
		 * would benefit from this). The values are integers pointing to the
		 * columns to be sorted on (typically it will be a single integer pointing
		 * at itself, but that doesn't need to be the case).
		 *  @type array
		 */
		"aDataSort": null,
	
		/**
		 * Define the sorting directions that are applied to the column, in sequence
		 * as the column is repeatedly sorted upon - i.e. the first value is used
		 * as the sorting direction when the column if first sorted (clicked on).
		 * Sort it again (click again) and it will move on to the next index.
		 * Repeat until loop.
		 *  @type array
		 */
		"asSorting": null,
	
		/**
		 * Flag to indicate if the column is searchable, and thus should be included
		 * in the filtering or not.
		 *  @type boolean
		 */
		"bSearchable": null,
	
		/**
		 * Flag to indicate if the column is sortable or not.
		 *  @type boolean
		 */
		"bSortable": null,
	
		/**
		 * Flag to indicate if the column is currently visible in the table or not
		 *  @type boolean
		 */
		"bVisible": null,
	
		/**
		 * Store for manual type assignment using the `column.type` option. This
		 * is held in store so we can manipulate the column's `sType` property.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"_sManualType": null,
	
		/**
		 * Flag to indicate if HTML5 data attributes should be used as the data
		 * source for filtering or sorting. True is either are.
		 *  @type boolean
		 *  @default false
		 *  @private
		 */
		"_bAttrSrc": false,
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} nTd The TD node that has been created
		 *  @param {*} sData The Data for the cell
		 *  @param {array|object} oData The data for the whole row
		 *  @param {int} iRow The row index for the aoData data store
		 *  @default null
		 */
		"fnCreatedCell": null,
	
		/**
		 * Function to get data from a cell in a column. You should <b>never</b>
		 * access data directly through _aData internally in DataTables - always use
		 * the method attached to this property. It allows mData to function as
		 * required. This function is automatically assigned by the column
		 * initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {string} sSpecific The specific data type you want to get -
		 *    'display', 'type' 'filter' 'sort'
		 *  @returns {*} The data for the cell from the given row's data
		 *  @default null
		 */
		"fnGetData": null,
	
		/**
		 * Function to set data for a cell in the column. You should <b>never</b>
		 * set the data directly to _aData internally in DataTables - always use
		 * this method. It allows mData to function as required. This function
		 * is automatically assigned by the column initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {*} sValue Value to set
		 *  @default null
		 */
		"fnSetData": null,
	
		/**
		 * Property to read the value for the cells in the column from the data
		 * source array / object. If null, then the default content is used, if a
		 * function is given then the return from the function is used.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mData": null,
	
		/**
		 * Partner property to mData which is used (only when defined) to get
		 * the data - i.e. it is basically the same as mData, but without the
		 * 'set' option, and also the data fed to it is the result from mData.
		 * This is the rendering method to match the data method of mData.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mRender": null,
	
		/**
		 * Unique header TH/TD element for this column - this is what the sorting
		 * listener is attached to (if sorting is enabled.)
		 *  @type node
		 *  @default null
		 */
		"nTh": null,
	
		/**
		 * Unique footer TH/TD element for this column (if there is one). Not used
		 * in DataTables as such, but can be used for plug-ins to reference the
		 * footer for each column.
		 *  @type node
		 *  @default null
		 */
		"nTf": null,
	
		/**
		 * The class to apply to all TD elements in the table's TBODY for the column
		 *  @type string
		 *  @default null
		 */
		"sClass": null,
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 *  @type string
		 */
		"sContentPadding": null,
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because mData
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 */
		"sDefaultContent": null,
	
		/**
		 * Name for the column, allowing reference to the column by name as well as
		 * by index (needs a lookup to work by name).
		 *  @type string
		 */
		"sName": null,
	
		/**
		 * Custom sorting data type - defines which of the available plug-ins in
		 * afnSortData the custom sorting will use - if any is defined.
		 *  @type string
		 *  @default std
		 */
		"sSortDataType": 'std',
	
		/**
		 * Class to be applied to the header element when sorting on this column
		 *  @type string
		 *  @default null
		 */
		"sSortingClass": null,
	
		/**
		 * Class to be applied to the header element when sorting on this column -
		 * when jQuery UI theming is used.
		 *  @type string
		 *  @default null
		 */
		"sSortingClassJUI": null,
	
		/**
		 * Title of the column - what is seen in the TH element (nTh).
		 *  @type string
		 */
		"sTitle": null,
	
		/**
		 * Column sorting and filtering type
		 *  @type string
		 *  @default null
		 */
		"sType": null,
	
		/**
		 * Width of the column
		 *  @type string
		 *  @default null
		 */
		"sWidth": null,
	
		/**
		 * Width of the column when it was first "encountered"
		 *  @type string
		 *  @default null
		 */
		"sWidthOrig": null
	};
	
	
	/*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would at around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit.
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */
	
	/**
	 * Initialisation options that can be given to DataTables at initialisation
	 * time.
	 *  @namespace
	 */
	DataTable.defaults = {
		/**
		 * An array of data to use for the table, passed in at initialisation which
		 * will be used in preference to any data which is already in the DOM. This is
		 * particularly useful for constructing tables purely in Javascript, for
		 * example with a custom Ajax call.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.data
		 *
		 *  @example
		 *    // Using a 2D array data source
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using an array of objects as a data source (`data`)
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"aaData": null,
	
	
		/**
		 * If ordering is enabled, then DataTables will perform a first pass sort on
		 * initialisation. You can define which column(s) the sort is performed
		 * upon, and the sorting direction, with this variable. The `sorting` array
		 * should contain an array for each column to be sorted initially containing
		 * the column's index and a direction string ('asc' or 'desc').
		 *  @type array
		 *  @default [[0,'asc']]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.order
		 *
		 *  @example
		 *    // Sort by 3rd column first, and then 4th column
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
		 *
		 *    // No initial sorting
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": []
		 *      } );
		 *    } );
		 */
		"aaSorting": [[0,'asc']],
	
	
		/**
		 * This parameter is basically identical to the `sorting` parameter, but
		 * cannot be overridden by user interaction with the table. What this means
		 * is that you could have a column (visible or hidden) which the sorting
		 * will always be forced on first - any sorting after that (from the user)
		 * will then be performed as required. This can be useful for grouping rows
		 * together.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.orderFixed
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderFixed": [[0,'asc']]
		 *      } );
		 *    } )
		 */
		"aaSortingFixed": [],
	
	
		/**
		 * DataTables can be instructed to load data to display in the table from a
		 * Ajax source. This option defines how that Ajax call is made and where to.
		 *
		 * The `ajax` property has three different modes of operation, depending on
		 * how it is defined. These are:
		 *
		 * * `string` - Set the URL from where the data should be loaded from.
		 * * `object` - Define properties for `jQuery.ajax`.
		 * * `function` - Custom data get function
		 *
		 * `string`
		 * --------
		 *
		 * As a string, the `ajax` property simply defines the URL from which
		 * DataTables will load data.
		 *
		 * `object`
		 * --------
		 *
		 * As an object, the parameters in the object are passed to
		 * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
		 * of the Ajax request. DataTables has a number of default parameters which
		 * you can override using this option. Please refer to the jQuery
		 * documentation for a full description of the options available, although
		 * the following parameters provide additional options in DataTables or
		 * require special consideration:
		 *
		 * * `data` - As with jQuery, `data` can be provided as an object, but it
		 *   can also be used as a function to manipulate the data DataTables sends
		 *   to the server. The function takes a single parameter, an object of
		 *   parameters with the values that DataTables has readied for sending. An
		 *   object may be returned which will be merged into the DataTables
		 *   defaults, or you can add the items to the object that was passed in and
		 *   not return anything from the function. This supersedes `fnServerParams`
		 *   from DataTables 1.9-.
		 *
		 * * `dataSrc` - By default DataTables will look for the property `data` (or
		 *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
		 *   from an Ajax source or for server-side processing - this parameter
		 *   allows that property to be changed. You can use Javascript dotted
		 *   object notation to get a data source for multiple levels of nesting, or
		 *   it my be used as a function. As a function it takes a single parameter,
		 *   the JSON returned from the server, which can be manipulated as
		 *   required, with the returned value being that used by DataTables as the
		 *   data source for the table. This supersedes `sAjaxDataProp` from
		 *   DataTables 1.9-.
		 *
		 * * `success` - Should not be overridden it is used internally in
		 *   DataTables. To manipulate / transform the data returned by the server
		 *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
		 *
		 * `function`
		 * ----------
		 *
		 * As a function, making the Ajax call is left up to yourself allowing
		 * complete control of the Ajax request. Indeed, if desired, a method other
		 * than Ajax could be used to obtain the required data, such as Web storage
		 * or an AIR database.
		 *
		 * The function is given four parameters and no return is required. The
		 * parameters are:
		 *
		 * 1. _object_ - Data to send to the server
		 * 2. _function_ - Callback function that must be executed when the required
		 *    data has been obtained. That data should be passed into the callback
		 *    as the only parameter
		 * 3. _object_ - DataTables settings object for the table
		 *
		 * Note that this supersedes `fnServerData` from DataTables 1.9-.
		 *
		 *  @type string|object|function
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.ajax
		 *  @since 1.10.0
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax.
		 *   // Note DataTables expects data in the form `{ data: [ ...data... ] }` by default).
		 *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to change
		 *   // `data` to `tableData` (i.e. `{ tableData: [ ...data... ] }`)
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using `dataSrc` to read data
		 *   // from a plain array rather than an array in an object
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Manipulate the data returned from the server - add a link to data
		 *   // (note this can, should, be done using `render` for the column - this
		 *   // is just a simple example of how the data can be manipulated).
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Add data to the request
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Send request as POST
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get the data from localStorage (could interface with a form for
		 *   // adding, editing and removing rows).
		 *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
		 */
		"ajax": null,
	
	
		/**
		 * This parameter allows you to readily specify the entries in the length drop
		 * down menu that DataTables shows when pagination is enabled. It can be
		 * either a 1D array of options which will be used for both the displayed
		 * option and the value, or a 2D array which will use the array in the first
		 * position as the value, and the array in the second position as the
		 * displayed options (useful for language strings such as 'All').
		 *
		 * Note that the `pageLength` property will be automatically set to the
		 * first value given in this array, unless `pageLength` is also provided.
		 *  @type array
		 *  @default [ 10, 25, 50, 100 ]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.lengthMenu
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
		 */
		"aLengthMenu": [ 10, 25, 50, 100 ],
	
	
		/**
		 * The `columns` option in the initialisation parameter allows you to define
		 * details about the way individual columns behave. For a full list of
		 * column options that can be set, please see
		 * {@link DataTable.defaults.column}. Note that if you use `columns` to
		 * define your columns, you must have an entry in the array for every single
		 * column that you have in your table (these can be null if you don't which
		 * to specify any options).
		 *  @member
		 *
		 *  @name DataTable.defaults.column
		 */
		"aoColumns": null,
	
		/**
		 * Very similar to `columns`, `columnDefs` allows you to target a specific
		 * column, multiple columns, or all columns, using the `targets` property of
		 * each object in the array. This allows great flexibility when creating
		 * tables, as the `columnDefs` arrays can be of any length, targeting the
		 * columns you specifically want. `columnDefs` may use any of the column
		 * options available: {@link DataTable.defaults.column}, but it _must_
		 * have `targets` defined in each object in the array. Values in the `targets`
		 * array may be:
		 *   <ul>
		 *     <li>a string - class name will be matched on the TH for the column</li>
		 *     <li>0 or a positive integer - column index counting from the left</li>
		 *     <li>a negative integer - column index counting from the right</li>
		 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
		 *   </ul>
		 *  @member
		 *
		 *  @name DataTable.defaults.columnDefs
		 */
		"aoColumnDefs": null,
	
	
		/**
		 * Basically the same as `search`, this parameter defines the individual column
		 * filtering state at initialisation time. The array must be of the same size
		 * as the number of columns, and each element be an object with the parameters
		 * `search` and `escapeRegex` (the latter is optional). 'null' is also
		 * accepted and the default will be used.
		 *  @type array
		 *  @default []
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.searchCols
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
		 */
		"aoSearchCols": [],
	
	
		/**
		 * An array of CSS classes that should be applied to displayed rows. This
		 * array may be of any length, and DataTables will apply each class
		 * sequentially, looping when required.
		 *  @type array
		 *  @default null <i>Will take the values determined by the `oClasses.stripe*`
		 *    options</i>
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.stripeClasses
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
		 */
		"asStripeClasses": null,
	
	
		/**
		 * Enable or disable automatic column width calculation. This can be disabled
		 * as an optimisation (it takes some time to calculate the widths) if the
		 * tables widths are passed in using `columns`.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.autoWidth
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
		 */
		"bAutoWidth": true,
	
	
		/**
		 * Deferred rendering can provide DataTables with a huge speed boost when you
		 * are using an Ajax or JS data source for the table. This option, when set to
		 * true, will cause DataTables to defer the creation of the table elements for
		 * each row until they are needed for a draw - saving a significant amount of
		 * time.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.deferRender
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajax": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
		 */
		"bDeferRender": false,
	
	
		/**
		 * Replace a DataTable which matches the given selector and replace it with
		 * one which has the properties of the new initialisation object passed. If no
		 * table matches the selector, then the new DataTable will be constructed as
		 * per normal.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.destroy
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
		 */
		"bDestroy": false,
	
	
		/**
		 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
		 * that it allows the end user to input multiple words (space separated) and
		 * will match a row containing those words, even if not in the order that was
		 * specified (this allow matching across multiple columns). Note that if you
		 * wish to use filtering in DataTables this must remain 'true' - to remove the
		 * default filtering input box and retain filtering abilities, please use
		 * {@link DataTable.defaults.dom}.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.searching
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "searching": false
		 *      } );
		 *    } );
		 */
		"bFilter": true,
	
	
		/**
		 * Enable or disable the table information display. This shows information
		 * about the data that is currently visible on the page, including information
		 * about filtered data if that action is being performed.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.info
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
		 */
		"bInfo": true,
	
	
		/**
		 * Enable jQuery UI ThemeRoller support (required as ThemeRoller requires some
		 * slightly different and additional mark-up from what DataTables has
		 * traditionally used).
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.jQueryUI
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "jQueryUI": true
		 *      } );
		 *    } );
		 */
		"bJQueryUI": false,
	
	
		/**
		 * Allows the end user to select the size of a formatted page from a select
		 * menu (sizes are 10, 25, 50 and 100). Requires pagination (`paginate`).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.lengthChange
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
		 */
		"bLengthChange": true,
	
	
		/**
		 * Enable or disable pagination.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.paging
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paging": false
		 *      } );
		 *    } );
		 */
		"bPaginate": true,
	
	
		/**
		 * Enable or disable the display of a 'processing' indicator when the table is
		 * being processed (e.g. a sort). This is particularly useful for tables with
		 * large amounts of data where it can take a noticeable amount of time to sort
		 * the entries.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.processing
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
		 */
		"bProcessing": false,
	
	
		/**
		 * Retrieve the DataTables object for the given selector. Note that if the
		 * table has already been initialised, this parameter will cause DataTables
		 * to simply return the object that has already been set up - it will not take
		 * account of any changes you might have made to the initialisation object
		 * passed to DataTables (setting this parameter to true is an acknowledgement
		 * that you understand this). `destroy` can be used to reinitialise a table if
		 * you need.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.retrieve
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
		 *
		 *    function initTable ()
		 *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
		 *
		 *    function tableActions ()
		 *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
		 */
		"bRetrieve": false,
	
	
		/**
		 * When vertical (y) scrolling is enabled, DataTables will force the height of
		 * the table's viewport to the given height at all times (useful for layout).
		 * However, this can look odd when filtering data down to a small data set,
		 * and the footer is left "floating" further down. This parameter (when
		 * enabled) will cause DataTables to collapse the table's viewport down when
		 * the result set will fit within the given Y height.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollCollapse
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"bScrollCollapse": false,
	
	
		/**
		 * Configure DataTables to use server-side processing. Note that the
		 * `ajax` parameter must also be given in order to give DataTables a
		 * source to obtain the required data for each draw.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverSide
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
		 */
		"bServerSide": false,
	
	
		/**
		 * Enable or disable sorting of columns. Sorting of individual columns can be
		 * disabled by the `sortable` option for each column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.ordering
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "ordering": false
		 *      } );
		 *    } );
		 */
		"bSort": true,
	
	
		/**
		 * Enable or display DataTables' ability to sort multiple columns at the
		 * same time (activated by shift-click by the user).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderMulti
		 *
		 *  @example
		 *    // Disable multiple column sorting ability
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderMulti": false
		 *      } );
		 *    } );
		 */
		"bSortMulti": true,
	
	
		/**
		 * Allows control over whether DataTables should use the top (true) unique
		 * cell that is found for a single column, or the bottom (false - default).
		 * This is useful when using complex headers.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderCellsTop
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderCellsTop": true
		 *      } );
		 *    } );
		 */
		"bSortCellsTop": false,
	
	
		/**
		 * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
		 * `sorting\_3` to the columns which are currently being sorted on. This is
		 * presented as a feature switch as it can increase processing time (while
		 * classes are removed and added) so for large data sets you might want to
		 * turn this off.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.orderClasses
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderClasses": false
		 *      } );
		 *    } );
		 */
		"bSortClasses": true,
	
	
		/**
		 * Enable or disable state saving. When enabled HTML5 `localStorage` will be
		 * used to save table display information such as pagination information,
		 * display length, filtering and sorting. As such when the end user reloads
		 * the page the display display will match what thy had previously set up.
		 *
		 * Due to the use of `localStorage` the default state saving is not supported
		 * in IE6 or 7. If state saving is required in those browsers, use
		 * `stateSaveCallback` to provide a storage solution such as cookies.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.stateSave
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
		 */
		"bStateSave": false,
	
	
		/**
		 * This function is called when a TR element is created (and all TD child
		 * elements have been inserted), or registered if using a DOM source, allowing
		 * manipulation of the TR element (adding classes etc).
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} dataIndex The index of this row in the internal aoData array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.createdRow
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnCreatedRow": null,
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify any aspect you want about the created DOM.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.drawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "drawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnDrawCallback": null,
	
	
		/**
		 * Identical to fnHeaderCallback() but for the table footer this function
		 * allows you to modify the table footer on every 'draw' event.
		 *  @type function
		 *  @param {node} foot "TR" element for the footer
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.footerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( tfoot, data, start, end, display ) {
		 *          tfoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
		 */
		"fnFooterCallback": null,
	
	
		/**
		 * When rendering large numbers in the information element for the table
		 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
		 * to have a comma separator for the 'thousands' units (e.g. 1 million is
		 * rendered as "1,000,000") to help readability for the end user. This
		 * function will override the default method DataTables uses.
		 *  @type function
		 *  @member
		 *  @param {int} toFormat number to be formatted
		 *  @returns {string} formatted string for DataTables to show the number
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.formatNumber
		 *
		 *  @example
		 *    // Format a number using a single quote for the separator (note that
		 *    // this can also be done with the language.thousands option)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          return toFormat.toString().replace(
		 *            /\B(?=(\d{3})+(?!\d))/g, "'"
		 *          );
		 *        };
		 *      } );
		 *    } );
		 */
		"fnFormatNumber": function ( toFormat ) {
			return toFormat.toString().replace(
				/\B(?=(\d{3})+(?!\d))/g,
				this.oLanguage.sThousands
			);
		},
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify the header row. This can be used to calculate and
		 * display useful information about the table.
		 *  @type function
		 *  @param {node} head "TR" element for the header
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.headerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
		 */
		"fnHeaderCallback": null,
	
	
		/**
		 * The information element can be used to convey information about the current
		 * state of the table. Although the internationalisation options presented by
		 * DataTables are quite capable of dealing with most customisations, there may
		 * be times where you wish to customise the string further. This callback
		 * allows you to do exactly that.
		 *  @type function
		 *  @param {object} oSettings DataTables settings object
		 *  @param {int} start Starting position in data for the draw
		 *  @param {int} end End position in data for the draw
		 *  @param {int} max Total number of rows in the table (regardless of
		 *    filtering)
		 *  @param {int} total Total number of rows in the data set, after filtering
		 *  @param {string} pre The string that DataTables has formatted using it's
		 *    own rules
		 *  @returns {string} The string to be displayed in the information element.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.infoCallback
		 *
		 *  @example
		 *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, max, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
		 */
		"fnInfoCallback": null,
	
	
		/**
		 * Called when the table has been initialised. Normally DataTables will
		 * initialise sequentially and there will be no need for this function,
		 * however, this does not hold true when using external language information
		 * since that is obtained using an async XHR call.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} json The JSON object request from the server - only
		 *    present if client-side Ajax sourced data is used
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.initComplete
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
		 */
		"fnInitComplete": null,
	
	
		/**
		 * Called at the very start of each table draw and can be used to cancel the
		 * draw by returning false, any other return (including undefined) results in
		 * the full draw occurring).
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @returns {boolean} False will cancel the draw, anything else (including no
		 *    return) will allow it to complete.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.preDrawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnPreDrawCallback": null,
	
	
		/**
		 * This function allows you to 'post process' each row after it have been
		 * generated for each table draw, but before it is rendered on screen. This
		 * function might be used for setting the row class name etc.
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} displayIndex The display index for the current table draw
		 *  @param {int} displayIndexFull The index of the data in the full list of
		 *    rows (after filtering)
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.rowCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnRowCallback": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * This parameter allows you to override the default function which obtains
		 * the data from the server so something more suitable for your application.
		 * For example you could use POST data, or pull information from a Gears or
		 * AIR database.
		 *  @type function
		 *  @member
		 *  @param {string} source HTTP source to obtain the data from (`ajax`)
		 *  @param {array} data A key/value pair object containing the data to send
		 *    to the server
		 *  @param {function} callback to be called on completion of the data get
		 *    process that will draw the data on the page.
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverData
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerData": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 *  It is often useful to send extra data to the server when making an Ajax
		 * request - for example custom filtering information, and this callback
		 * function makes it trivial to send extra information to the server. The
		 * passed in parameter is the data set that has been constructed by
		 * DataTables, and you can add to this or modify it as you require.
		 *  @type function
		 *  @param {array} data Data array (array of objects which are name/value
		 *    pairs) that has been constructed by DataTables and will be sent to the
		 *    server. In the case of Ajax sourced data with server-side processing
		 *    this will be an empty array, for server-side processing there will be a
		 *    significant number of parameters!
		 *  @returns {undefined} Ensure that you modify the data array passed in,
		 *    as this is passed by reference.
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverParams
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"fnServerParams": null,
	
	
		/**
		 * Load the table state. With this function you can define from where, and how, the
		 * state of a table is loaded. By default DataTables will load from `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @return {object} The DataTables state object to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings) {
		 *          var o;
		 *
		 *          // Send an Ajax request to the server to get the data. Note that
		 *          // this is a synchronous request.
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "async": false,
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              o = json;
		 *            }
		 *          } );
		 *
		 *          return o;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadCallback": function ( settings ) {
			try {
				return JSON.parse(
					(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
						'DataTables_'+settings.sInstance+'_'+location.pathname
					)
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the saved state prior to loading that state.
		 * This callback is called when the table is loading state from the stored data, but
		 * prior to the settings object being modified by the saved state. Note that for
		 * plug-in authors, you should use the `stateLoadParams` event to load parameters for
		 * a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that is to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never loaded
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Disallow state loading by returning false
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadParams": null,
	
	
		/**
		 * Callback that is called when the state has been loaded from the state saving method
		 * and the DataTables settings object has been modified as a result of the loaded state.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that was loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoaded
		 *
		 *  @example
		 *    // Show an alert with the filtering value that was saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoaded": null,
	
	
		/**
		 * Save the table state. This function allows you to define where and how the state
		 * information for the table is stored By default DataTables will use `localStorage`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveCallback": function ( settings, data ) {
			try {
				(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
					'DataTables_'+settings.sInstance+'_'+location.pathname,
					JSON.stringify( data )
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the state to be saved. Called when the table
		 * has changed state a new state save is required. This method allows modification of
		 * the state saving object prior to actually doing the save, including addition or
		 * other state properties or modification. Note that for plug-in authors, you should
		 * use the `stateSaveParams` event to save parameters for a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveParams": null,
	
	
		/**
		 * Duration for which the saved state information is considered valid. After this period
		 * has elapsed the state will be returned to the default.
		 * Value is given in seconds.
		 *  @type int
		 *  @default 7200 <i>(2 hours)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.stateDuration
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
		 */
		"iStateDuration": 7200,
	
	
		/**
		 * When enabled DataTables will not make a request to the server for the first
		 * page draw - rather it will use the data already on the page (no sorting etc
		 * will be applied to it), thus saving on an XHR at load time. `deferLoading`
		 * is used to indicate that deferred loading is required, but it is also used
		 * to tell DataTables how many records there are in the full table (allowing
		 * the information element and pagination to be displayed correctly). In the case
		 * where a filtering is applied to the table on initial load, this can be
		 * indicated by giving the parameter as an array, where the first element is
		 * the number of records available after filtering and the second element is the
		 * number of records without filtering (allowing the table information element
		 * to be shown correctly).
		 *  @type int | array
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.deferLoading
		 *
		 *  @example
		 *    // 57 records available in the table, no filtering applied
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // 57 records after filtering, 100 without filtering (an initial filter applied)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
		 */
		"iDeferLoading": null,
	
	
		/**
		 * Number of rows to display on a single page when using pagination. If
		 * feature enabled (`lengthChange`) then the end user will be able to override
		 * this to a custom setting using a pop-up menu.
		 *  @type int
		 *  @default 10
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pageLength
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pageLength": 50
		 *      } );
		 *    } )
		 */
		"iDisplayLength": 10,
	
	
		/**
		 * Define the starting point for data display when using DataTables with
		 * pagination. Note that this parameter is the number of records, rather than
		 * the page number, so if you have 10 records per page and want to start on
		 * the third page, it should be "20".
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayStart
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
		 */
		"iDisplayStart": 0,
	
	
		/**
		 * By default DataTables allows keyboard navigation of the table (sorting, paging,
		 * and filtering) by adding a `tabindex` attribute to the required elements. This
		 * allows you to tab through the controls and press the enter key to activate them.
		 * The tabindex is default 0, meaning that the tab follows the flow of the document.
		 * You can overrule this using this parameter if you wish. Use a value of -1 to
		 * disable built-in keyboard navigation.
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.tabIndex
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
		 */
		"iTabIndex": 0,
	
	
		/**
		 * Classes that DataTables assigns to the various components and features
		 * that it adds to the HTML table. This allows classes to be configured
		 * during initialisation in addition to through the static
		 * {@link DataTable.ext.oStdClasses} object).
		 *  @namespace
		 *  @name DataTable.defaults.classes
		 */
		"oClasses": {},
	
	
		/**
		 * All strings that DataTables uses in the user interface that it creates
		 * are defined in this object, allowing you to modified them individually or
		 * completely replace them all as required.
		 *  @namespace
		 *  @name DataTable.defaults.language
		 */
		"oLanguage": {
			/**
			 * Strings that are used for WAI-ARIA labels and controls only (these are not
			 * actually visible on the page, but will be read by screenreaders, and thus
			 * must be internationalised as well).
			 *  @namespace
			 *  @name DataTable.defaults.language.aria
			 */
			"oAria": {
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted ascending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortAscending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortAscending": ": activate to sort column ascending",
	
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted descending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortDescending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortDescending": ": activate to sort column descending"
			},
	
			/**
			 * Pagination string used by DataTables for the built-in pagination
			 * control types.
			 *  @namespace
			 *  @name DataTable.defaults.language.paginate
			 */
			"oPaginate": {
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the first page.
				 *  @type string
				 *  @default First
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.first
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sFirst": "First",
	
	
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the last page.
				 *  @type string
				 *  @default Last
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.last
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sLast": "Last",
	
	
				/**
				 * Text to use for the 'next' pagination button (to take the user to the
				 * next page).
				 *  @type string
				 *  @default Next
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.next
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sNext": "Next",
	
	
				/**
				 * Text to use for the 'previous' pagination button (to take the user to
				 * the previous page).
				 *  @type string
				 *  @default Previous
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.previous
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sPrevious": "Previous"
			},
	
			/**
			 * This string is shown in preference to `zeroRecords` when the table is
			 * empty of data (regardless of filtering). Note that this is an optional
			 * parameter - if it is not given, the value of `zeroRecords` will be used
			 * instead (either the default or given value).
			 *  @type string
			 *  @default No data available in table
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.emptyTable
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sEmptyTable": "No data available in table",
	
	
			/**
			 * This string gives information to the end user about the information
			 * that is current on display on the page. The following tokens can be
			 * used in the string and will be dynamically replaced as the table
			 * display updates. This tokens can be placed anywhere in the string, or
			 * removed as needed by the language requires:
			 *
			 * * `\_START\_` - Display index of the first record on the current page
			 * * `\_END\_` - Display index of the last record on the current page
			 * * `\_TOTAL\_` - Number of records in the table after filtering
			 * * `\_MAX\_` - Number of records in the table without filtering
			 * * `\_PAGE\_` - Current page number
			 * * `\_PAGES\_` - Total number of pages of data in the table
			 *
			 *  @type string
			 *  @default Showing _START_ to _END_ of _TOTAL_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.info
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Showing page _PAGE_ of _PAGES_"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
	
	
			/**
			 * Display information string for when the table is empty. Typically the
			 * format of this string should match `info`.
			 *  @type string
			 *  @default Showing 0 to 0 of 0 entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoEmpty
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoEmpty": "Showing 0 to 0 of 0 entries",
	
	
			/**
			 * When a user filters the information in a table, this string is appended
			 * to the information (`info`) to give an idea of how strong the filtering
			 * is. The variable _MAX_ is dynamically updated.
			 *  @type string
			 *  @default (filtered from _MAX_ total entries)
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoFiltered
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoFiltered": "(filtered from _MAX_ total entries)",
	
	
			/**
			 * If can be useful to append extra information to the info string at times,
			 * and this variable does exactly that. This information will be appended to
			 * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
			 * being used) at all times.
			 *  @type string
			 *  @default <i>Empty string</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoPostFix
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoPostFix": "",
	
	
			/**
			 * This decimal place operator is a little different from the other
			 * language options since DataTables doesn't output floating point
			 * numbers, so it won't ever use this for display of a number. Rather,
			 * what this parameter does is modify the sort methods of the table so
			 * that numbers which are in a format which has a character other than
			 * a period (`.`) as a decimal place will be sorted numerically.
			 *
			 * Note that numbers with different decimal places cannot be shown in
			 * the same table and still be sortable, the table must be consistent.
			 * However, multiple different tables on the page can use different
			 * decimal place characters.
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.decimal
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "decimal": ","
			 *          "thousands": "."
			 *        }
			 *      } );
			 *    } );
			 */
			"sDecimal": "",
	
	
			/**
			 * DataTables has a build in number formatter (`formatNumber`) which is
			 * used to format large numbers that are used in the table information.
			 * By default a comma is used, but this can be trivially changed to any
			 * character you wish with this parameter.
			 *  @type string
			 *  @default ,
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.thousands
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "thousands": "'"
			 *        }
			 *      } );
			 *    } );
			 */
			"sThousands": ",",
	
	
			/**
			 * Detail the action that will be taken when the drop down menu for the
			 * pagination length option is changed. The '_MENU_' variable is replaced
			 * with a default select list of 10, 25, 50 and 100, and can be replaced
			 * with a custom select box if required.
			 *  @type string
			 *  @default Show _MENU_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.lengthMenu
			 *
			 *  @example
			 *    // Language change only
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Language and options change
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
			 */
			"sLengthMenu": "Show _MENU_ entries",
	
	
			/**
			 * When using Ajax sourced data and during the first draw when DataTables is
			 * gathering the data, this message is shown in an empty row in the table to
			 * indicate to the end user the the data is being loaded. Note that this
			 * parameter is not used when loading data by server-side processing, just
			 * Ajax sourced data with client-side processing.
			 *  @type string
			 *  @default Loading...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.loadingRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
			 */
			"sLoadingRecords": "Loading...",
	
	
			/**
			 * Text which is displayed when the table is processing a user action
			 * (usually a sort command or similar).
			 *  @type string
			 *  @default Processing...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.processing
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
			 */
			"sProcessing": "Processing...",
	
	
			/**
			 * Details the actions that will be taken when the user types into the
			 * filtering input text box. The variable "_INPUT_", if used in the string,
			 * is replaced with the HTML text box for the filtering input allowing
			 * control over where it appears in the string. If "_INPUT_" is not given
			 * then the input box is appended to the string automatically.
			 *  @type string
			 *  @default Search:
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.search
			 *
			 *  @example
			 *    // Input text box will be appended at the end automatically
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Specify where the filter should appear
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sSearch": "Search:",
	
	
			/**
			 * Assign a `placeholder` attribute to the search `input` element
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.searchPlaceholder
			 */
			"sSearchPlaceholder": "",
	
	
			/**
			 * All of the language information can be stored in a file on the
			 * server-side, which DataTables will look up if this parameter is passed.
			 * It must store the URL of the language file, which is in a JSON format,
			 * and the object has the same properties as the oLanguage object in the
			 * initialiser object (i.e. the above parameters). Please refer to one of
			 * the example language files to see how this works in action.
			 *  @type string
			 *  @default <i>Empty string - i.e. disabled</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.url
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
			 */
			"sUrl": "",
	
	
			/**
			 * Text shown inside the table records when the is no information to be
			 * displayed after filtering. `emptyTable` is shown when there is simply no
			 * information in the table at all (regardless of filtering).
			 *  @type string
			 *  @default No matching records found
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.zeroRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
			 */
			"sZeroRecords": "No matching records found"
		},
	
	
		/**
		 * This parameter allows you to have define the global filtering state at
		 * initialisation time. As an object the `search` parameter must be
		 * defined, but all other parameters are optional. When `regex` is true,
		 * the search string will be treated as a regular expression, when false
		 * (default) it will be treated as a straight string. When `smart`
		 * DataTables will use it's smart filtering methods (to word match at
		 * any point in the data), when false this will not be done.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.search
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
		 */
		"oSearch": $.extend( {}, DataTable.models.oSearch ),
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * By default DataTables will look for the property `data` (or `aaData` for
		 * compatibility with DataTables 1.9-) when obtaining data from an Ajax
		 * source or for server-side processing - this parameter allows that
		 * property to be changed. You can use Javascript dotted object notation to
		 * get a data source for multiple levels of nesting.
		 *  @type string
		 *  @default data
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxDataProp
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxDataProp": "data",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * You can instruct DataTables to load data from an external
		 * source using this parameter (use aData if you want to pass data in you
		 * already have). Simply provide a url a JSON object can be obtained from.
		 *  @type string
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxSource
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sAjaxSource": null,
	
	
		/**
		 * This initialisation variable allows you to specify exactly where in the
		 * DOM you want DataTables to inject the various controls it adds to the page
		 * (for example you might want the pagination controls at the top of the
		 * table). DIV elements (with or without a custom class) can also be added to
		 * aid styling. The follow syntax is used:
		 *   <ul>
		 *     <li>The following options are allowed:
		 *       <ul>
		 *         <li>'l' - Length changing</li>
		 *         <li>'f' - Filtering input</li>
		 *         <li>'t' - The table!</li>
		 *         <li>'i' - Information</li>
		 *         <li>'p' - Pagination</li>
		 *         <li>'r' - pRocessing</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following constants are allowed:
		 *       <ul>
		 *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
		 *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following syntax is expected:
		 *       <ul>
		 *         <li>'&lt;' and '&gt;' - div elements</li>
		 *         <li>'&lt;"class" and '&gt;' - div with a class</li>
		 *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
		 *       </ul>
		 *     </li>
		 *     <li>Examples:
		 *       <ul>
		 *         <li>'&lt;"wrapper"flipt&gt;'</li>
		 *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
		 *       </ul>
		 *     </li>
		 *   </ul>
		 *  @type string
		 *  @default lfrtip <i>(when `jQueryUI` is false)</i> <b>or</b>
		 *    <"H"lfr>t<"F"ip> <i>(when `jQueryUI` is true)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.dom
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
		 */
		"sDom": "lfrtip",
	
	
		/**
		 * Search delay option. This will throttle full table searches that use the
		 * DataTables provided search input element (it does not effect calls to
		 * `dt-api search()`, providing a delay before the search is made.
		 *  @type integer
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.searchDelay
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchDelay": 200
		 *      } );
		 *    } )
		 */
		"searchDelay": null,
	
	
		/**
		 * DataTables features four different built-in options for the buttons to
		 * display for pagination control:
		 *
		 * * `simple` - 'Previous' and 'Next' buttons only
		 * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
		 * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
		 * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus
		 *   page numbers
		 *  
		 * Further methods can be added using {@link DataTable.ext.oPagination}.
		 *  @type string
		 *  @default simple_numbers
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pagingType
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pagingType": "full_numbers"
		 *      } );
		 *    } )
		 */
		"sPaginationType": "simple_numbers",
	
	
		/**
		 * Enable horizontal scrolling. When a table is too wide to fit into a
		 * certain layout, or you have a large number of columns in the table, you
		 * can enable x-scrolling to show the table in a viewport, which can be
		 * scrolled. This property can be `true` which will allow the table to
		 * scroll horizontally when needed, or any CSS unit, or a number (in which
		 * case it will be treated as a pixel measurement). Setting as simply `true`
		 * is recommended.
		 *  @type boolean|string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollX
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": true,
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"sScrollX": "",
	
	
		/**
		 * This property can be used to force a DataTable to use more width than it
		 * might otherwise do when x-scrolling is enabled. For example if you have a
		 * table which requires to be well spaced, this parameter is useful for
		 * "over-sizing" the table, and thus forcing scrolling. This property can by
		 * any CSS unit, or a number (in which case it will be treated as a pixel
		 * measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollXInner
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
		 */
		"sScrollXInner": "",
	
	
		/**
		 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
		 * to the given height, and enable scrolling for any data which overflows the
		 * current viewport. This can be used as an alternative to paging to display
		 * a lot of data in a small area (although paging and scrolling can both be
		 * enabled at the same time). This property can be any CSS unit, or a number
		 * (in which case it will be treated as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollY
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"sScrollY": "",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through `ajax`, which should be used instead.
		 *
		 * Set the HTTP method that is used to make the Ajax call for server-side
		 * processing or Ajax sourced data.
		 *  @type string
		 *  @default GET
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverMethod
		 *
		 *  @deprecated 1.10. Please use `ajax` for this functionality now.
		 */
		"sServerMethod": "GET",
	
	
		/**
		 * DataTables makes use of renderers when displaying HTML elements for
		 * a table. These renderers can be added or modified by plug-ins to
		 * generate suitable mark-up for a site. For example the Bootstrap
		 * integration plug-in for DataTables uses a paging button renderer to
		 * display pagination buttons in the mark-up required by Bootstrap.
		 *
		 * For further information about the renderers available see
		 * DataTable.ext.renderer
		 *  @type string|object
		 *  @default null
		 *
		 *  @name DataTable.defaults.renderer
		 *
		 */
		"renderer": null,
	
	
		/**
		 * Set the data property name that DataTables should use to get a row's id
		 * to set as the `id` property in the node.
		 *  @type string
		 *  @default DT_RowId
		 *
		 *  @name DataTable.defaults.rowId
		 */
		"rowId": "DT_RowId"
	};
	
	_fnHungarianMap( DataTable.defaults );
	
	
	
	/*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */
	
	/**
	 * Column options that can be given to DataTables at initialisation time.
	 *  @namespace
	 */
	DataTable.defaults.column = {
		/**
		 * Define which column(s) an order will occur on for this column. This
		 * allows a column's ordering to take multiple columns into account when
		 * doing a sort or use the data from a different column. For example first
		 * name / last name columns make sense to do a multi-column sort over the
		 * two columns.
		 *  @type array|int
		 *  @default null <i>Takes the value of the column index automatically</i>
		 *
		 *  @name DataTable.defaults.column.orderData
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderData": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "orderData": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "orderData": 2, "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderData": [ 0, 1 ] },
		 *          { "orderData": [ 1, 0 ] },
		 *          { "orderData": 2 },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"aDataSort": null,
		"iDataSort": -1,
	
	
		/**
		 * You can control the default ordering direction, and even alter the
		 * behaviour of the sort handler (i.e. only allow ascending ordering etc)
		 * using this parameter.
		 *  @type array
		 *  @default [ 'asc', 'desc' ]
		 *
		 *  @name DataTable.defaults.column.orderSequence
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderSequence": [ "asc" ], "targets": [ 1 ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "orderSequence": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "orderSequence": [ "asc" ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ] },
		 *          { "orderSequence": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"asSorting": [ 'asc', 'desc' ],
	
	
		/**
		 * Enable or disable filtering on the data in this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.searchable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSearchable": true,
	
	
		/**
		 * Enable or disable ordering on this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.orderable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSortable": true,
	
	
		/**
		 * Enable or disable the display of this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.visible
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bVisible": true,
	
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} td The TD node that has been created
		 *  @param {*} cellData The Data for the cell
		 *  @param {array|object} rowData The data for the whole row
		 *  @param {int} row The row index for the aoData data store
		 *  @param {int} col The column index for aoColumns
		 *
		 *  @name DataTable.defaults.column.createdCell
		 *  @dtopt Columns
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
		 */
		"fnCreatedCell": null,
	
	
		/**
		 * This parameter has been replaced by `data` in DataTables to ensure naming
		 * consistency. `dataProp` can still be used, as there is backwards
		 * compatibility in DataTables for this option, but it is strongly
		 * recommended that you use `data` in preference to `dataProp`.
		 *  @name DataTable.defaults.column.dataProp
		 */
	
	
		/**
		 * This property can be used to read data from any data source property,
		 * including deeply nested objects / properties. `data` can be given in a
		 * number of different ways which effect its behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object. Note that
		 *      function notation is recommended for use in `render` rather than
		 *      `data` as it is much simpler to use as a renderer.
		 * * `null` - use the original data source for the row rather than plucking
		 *   data directly from it. This action has effects on two other
		 *   initialisation options:
		 *    * `defaultContent` - When null is given as the `data` option and
		 *      `defaultContent` is specified for the column, the value defined by
		 *      `defaultContent` will be used for the cell.
		 *    * `render` - When null is used for the `data` option and the `render`
		 *      option is specified for the column, the whole data source for the
		 *      row is used for the renderer.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * `{array|object}` The data source for the row
		 *      * `{string}` The type call data requested - this will be 'set' when
		 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
		 *        when gathering data. Note that when `undefined` is given for the
		 *        type DataTables expects to get the raw data for the object back<
		 *      * `{*}` Data to set when the second parameter is 'set'.
		 *    * Return:
		 *      * The return value from the function is not required when 'set' is
		 *        the type of call, but otherwise the return is what will be used
		 *        for the data requested.
		 *
		 * Note that `data` is a getter and setter option. If you just require
		 * formatting of data for output, you will likely want to use `render` which
		 * is simply a getter and thus simpler to use.
		 *
		 * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
		 * name change reflects the flexibility of this property and is consistent
		 * with the naming of mRender. If 'mDataProp' is given, then it will still
		 * be used by DataTables, as it automatically maps the old name to the new
		 * if required.
		 *
		 *  @type string|int|function|null
		 *  @default null <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.data
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Read table data from objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Read information from deeply nested objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "platform.details.0" },
		 *          { "data": "platform.details.1" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `data` as a function to provide different information for
		 *    // sorting, filtering and display. In this case, currency (price)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed dislay and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using default content
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using array notation - outputting a list from an array
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 */
		"mData": null,
	
	
		/**
		 * This property is the rendering partner to `data` and it is suggested that
		 * when you want to manipulate data for display (including filtering,
		 * sorting etc) without altering the underlying data for the table, use this
		 * property. `render` can be considered to be the the read only companion to
		 * `data` which is read / write (then as such more complex). Like `data`
		 * this option can be given in a number of different ways to effect its
		 * behaviour:
		 *
		 * * `integer` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * `string` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * `.` - Dotted Javascript notation. Just as you use a `.` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in `data`. For example: `browser.version` or
		 *      `browser.name`. If your object parameter name contains a period, use
		 *      `\\` to escape it - i.e. `first\\.name`.
		 *    * `[]` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: `name[, ]` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * `()` - Function notation. Adding `()` to the end of a parameter will
		 *      execute a function of the name given. For example: `browser()` for a
		 *      simple function on the data source, `browser.version()` for a
		 *      function in a nested property or even `browser().version` to get an
		 *      object property if the function called returns an object.
		 * * `object` - use different data for the different data types requested by
		 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
		 *   of the object is the data type the property refers to and the value can
		 *   defined using an integer, string or function using the same rules as
		 *   `render` normally does. Note that an `_` option _must_ be specified.
		 *   This is the default value to use if you haven't specified a value for
		 *   the data type requested by DataTables.
		 * * `function` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * {array|object} The data source for the row (based on `data`)
		 *      * {string} The type call data requested - this will be 'filter',
		 *        'display', 'type' or 'sort'.
		 *      * {array|object} The full data source for the row (not based on
		 *        `data`)
		 *    * Return:
		 *      * The return value from the function is what will be used for the
		 *        data requested.
		 *
		 *  @type string|int|function|object|null
		 *  @default null Use the data source value.
		 *
		 *  @name DataTable.defaults.column.render
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Create a comma separated list from an array of objects
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Execute a function to obtain data
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // As an object, extracting different data for the different types
		 *    // This would be used with a data source such as:
		 *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
		 *    // Here the `phone` integer is used for sorting and type detection, while `phone_filter`
		 *    // (which has both forms) is used for filtering for if a user inputs either format, while
		 *    // the formatted phone number is the one that is shown in the table.
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Use as a function to create a link from the data source
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 */
		"mRender": null,
	
	
		/**
		 * Change the cell type created for the column - either TD cells or TH cells. This
		 * can be useful as TH cells have semantic meaning in the table body, allowing them
		 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
		 *  @type string
		 *  @default td
		 *
		 *  @name DataTable.defaults.column.cellType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Make the first column use TH cells
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
		 */
		"sCellType": "td",
	
	
		/**
		 * Class to give to each cell in this column.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.class
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sClass": "",
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 * Generally you shouldn't need this!
		 *  @type string
		 *  @default <i>Empty string<i>
		 *
		 *  @name DataTable.defaults.column.contentPadding
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sContentPadding": "",
	
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because `data`
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 *
		 *  @name DataTable.defaults.column.defaultContent
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sDefaultContent": null,
	
	
		/**
		 * This parameter is only used in DataTables' server-side processing. It can
		 * be exceptionally useful to know what columns are being displayed on the
		 * client side, and to map these to database fields. When defined, the names
		 * also allow DataTables to reorder information from the server if it comes
		 * back in an unexpected order (i.e. if you switch your columns around on the
		 * client-side, your server-side code does not also need updating).
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.name
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sName": "",
	
	
		/**
		 * Defines a data source type for the ordering which can be used to read
		 * real-time information from the table (updating the internally cached
		 * version) prior to ordering. This allows ordering to occur on user
		 * editable elements such as form inputs.
		 *  @type string
		 *  @default std
		 *
		 *  @name DataTable.defaults.column.orderDataType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "orderDataType": "dom-select", "targets": [ 4 ] },
		 *          { "orderDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "orderDataType": "dom-text" },
		 *          { "orderDataType": "dom-text", "type": "numeric" },
		 *          { "orderDataType": "dom-select" },
		 *          { "orderDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sSortDataType": "std",
	
	
		/**
		 * The title of this column.
		 *  @type string
		 *  @default null <i>Derived from the 'TH' value for this column in the
		 *    original HTML table.</i>
		 *
		 *  @name DataTable.defaults.column.title
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sTitle": null,
	
	
		/**
		 * The type allows you to specify how the data for this column will be
		 * ordered. Four types (string, numeric, date and html (which will strip
		 * HTML tags before ordering)) are currently available. Note that only date
		 * formats understood by Javascript's Date() object will be accepted as type
		 * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
		 * 'numeric', 'date' or 'html' (by default). Further types can be adding
		 * through plug-ins.
		 *  @type string
		 *  @default null <i>Auto-detected from raw data</i>
		 *
		 *  @name DataTable.defaults.column.type
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sType": null,
	
	
		/**
		 * Defining the width of the column, this parameter may take any CSS value
		 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
		 * been given a specific width through this interface ensuring that the table
		 * remains readable.
		 *  @type string
		 *  @default null <i>Automatic</i>
		 *
		 *  @name DataTable.defaults.column.width
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using `columnDefs`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using `columns`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sWidth": null
	};
	
	_fnHungarianMap( DataTable.defaults.column );
	
	
	
	/**
	 * DataTables settings object - this holds all the information needed for a
	 * given table, including configuration, data and current application of the
	 * table options. DataTables does not have a single instance for each DataTable
	 * with the settings attached to that instance, but rather instances of the
	 * DataTable "class" are created on-the-fly as needed (typically by a
	 * $().dataTable() call) and the settings object is then applied to that
	 * instance.
	 *
	 * Note that this object is related to {@link DataTable.defaults} but this
	 * one is the internal data store for DataTables's cache of columns. It should
	 * NOT be manipulated outside of DataTables. Any configuration should be done
	 * through the initialisation options.
	 *  @namespace
	 *  @todo Really should attach the settings object to individual instances so we
	 *    don't need to create new instances on each $().dataTable() call (if the
	 *    table already exists). It would also save passing oSettings around and
	 *    into every single function. However, this is a very significant
	 *    architecture change for DataTables and will almost certainly break
	 *    backwards compatibility with older installations. This is something that
	 *    will be done in 2.0.
	 */
	DataTable.models.oSettings = {
		/**
		 * Primary features of DataTables and their enablement state.
		 *  @namespace
		 */
		"oFeatures": {
	
			/**
			 * Flag to say if DataTables should automatically try to calculate the
			 * optimum table and columns widths (true) or not (false).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoWidth": null,
	
			/**
			 * Delay the creation of TR and TD elements until they are actually
			 * needed by a driven page draw. This can give a significant speed
			 * increase for Ajax source and Javascript source data, but makes no
			 * difference at all fro DOM and server-side processing tables.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bDeferRender": null,
	
			/**
			 * Enable filtering on the table or not. Note that if this is disabled
			 * then there is no filtering at all on the table, including fnFilter.
			 * To just remove the filtering input use sDom and remove the 'f' option.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bFilter": null,
	
			/**
			 * Table information element (the 'Showing x of y records' div) enable
			 * flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfo": null,
	
			/**
			 * Present a user control allowing the end user to change the page size
			 * when pagination is enabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bLengthChange": null,
	
			/**
			 * Pagination enabled or not. Note that if this is disabled then length
			 * changing must also be disabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bPaginate": null,
	
			/**
			 * Processing indicator enable flag whenever DataTables is enacting a
			 * user request - typically an Ajax request for server-side processing.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bProcessing": null,
	
			/**
			 * Server-side processing enabled flag - when enabled DataTables will
			 * get all data from the server for every draw - there is no filtering,
			 * sorting or paging done on the client-side.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bServerSide": null,
	
			/**
			 * Sorting enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSort": null,
	
			/**
			 * Multi-column sorting
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortMulti": null,
	
			/**
			 * Apply a class to the columns which are being sorted to provide a
			 * visual highlight or not. This can slow things down when enabled since
			 * there is a lot of DOM interaction.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortClasses": null,
	
			/**
			 * State saving enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bStateSave": null
		},
	
	
		/**
		 * Scrolling settings for a table.
		 *  @namespace
		 */
		"oScroll": {
			/**
			 * When the table is shorter in height than sScrollY, collapse the
			 * table container down to the height of the table (when true).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bCollapse": null,
	
			/**
			 * Width of the scrollbar for the web-browser's platform. Calculated
			 * during table initialisation.
			 *  @type int
			 *  @default 0
			 */
			"iBarWidth": 0,
	
			/**
			 * Viewport width for horizontal scrolling. Horizontal scrolling is
			 * disabled if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sX": null,
	
			/**
			 * Width to expand the table to when using x-scrolling. Typically you
			 * should not need to use this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 *  @deprecated
			 */
			"sXInner": null,
	
			/**
			 * Viewport height for vertical scrolling. Vertical scrolling is disabled
			 * if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sY": null
		},
	
		/**
		 * Language information for the table.
		 *  @namespace
		 *  @extends DataTable.defaults.oLanguage
		 */
		"oLanguage": {
			/**
			 * Information callback function. See
			 * {@link DataTable.defaults.fnInfoCallback}
			 *  @type function
			 *  @default null
			 */
			"fnInfoCallback": null
		},
	
		/**
		 * Browser support parameters
		 *  @namespace
		 */
		"oBrowser": {
			/**
			 * Indicate if the browser incorrectly calculates width:100% inside a
			 * scrolling element (IE6/7)
			 *  @type boolean
			 *  @default false
			 */
			"bScrollOversize": false,
	
			/**
			 * Determine if the vertical scrollbar is on the right or left of the
			 * scrolling container - needed for rtl language layout, although not
			 * all browsers move the scrollbar (Safari).
			 *  @type boolean
			 *  @default false
			 */
			"bScrollbarLeft": false,
	
			/**
			 * Flag for if `getBoundingClientRect` is fully supported or not
			 *  @type boolean
			 *  @default false
			 */
			"bBounding": false,
	
			/**
			 * Browser scrollbar width
			 *  @type integer
			 *  @default 0
			 */
			"barWidth": 0
		},
	
	
		"ajax": null,
	
	
		/**
		 * Array referencing the nodes which are used for the features. The
		 * parameters of this object match what is allowed by sDom - i.e.
		 *   <ul>
		 *     <li>'l' - Length changing</li>
		 *     <li>'f' - Filtering input</li>
		 *     <li>'t' - The table!</li>
		 *     <li>'i' - Information</li>
		 *     <li>'p' - Pagination</li>
		 *     <li>'r' - pRocessing</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aanFeatures": [],
	
		/**
		 * Store data information - see {@link DataTable.models.oRow} for detailed
		 * information.
		 *  @type array
		 *  @default []
		 */
		"aoData": [],
	
		/**
		 * Array of indexes which are in the current display (after filtering etc)
		 *  @type array
		 *  @default []
		 */
		"aiDisplay": [],
	
		/**
		 * Array of indexes for display - no filtering
		 *  @type array
		 *  @default []
		 */
		"aiDisplayMaster": [],
	
		/**
		 * Map of row ids to data indexes
		 *  @type object
		 *  @default {}
		 */
		"aIds": {},
	
		/**
		 * Store information about each column that is in use
		 *  @type array
		 *  @default []
		 */
		"aoColumns": [],
	
		/**
		 * Store information about the table's header
		 *  @type array
		 *  @default []
		 */
		"aoHeader": [],
	
		/**
		 * Store information about the table's footer
		 *  @type array
		 *  @default []
		 */
		"aoFooter": [],
	
		/**
		 * Store the applied global search information in case we want to force a
		 * research or compare the old search to a new one.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 */
		"oPreviousSearch": {},
	
		/**
		 * Store the applied search for each column - see
		 * {@link DataTable.models.oSearch} for the format that is used for the
		 * filtering information for each column.
		 *  @type array
		 *  @default []
		 */
		"aoPreSearchCols": [],
	
		/**
		 * Sorting that is applied to the table. Note that the inner arrays are
		 * used in the following manner:
		 * <ul>
		 *   <li>Index 0 - column number</li>
		 *   <li>Index 1 - current sorting direction</li>
		 * </ul>
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @todo These inner arrays should really be objects
		 */
		"aaSorting": null,
	
		/**
		 * Sorting that is always applied to the table (i.e. prefixed in front of
		 * aaSorting).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aaSortingFixed": [],
	
		/**
		 * Classes to use for the striping of a table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"asStripeClasses": null,
	
		/**
		 * If restoring a table - we should restore its striping classes as well
		 *  @type array
		 *  @default []
		 */
		"asDestroyStripes": [],
	
		/**
		 * If restoring a table - we should restore its width
		 *  @type int
		 *  @default 0
		 */
		"sDestroyWidth": 0,
	
		/**
		 * Callback functions array for every time a row is inserted (i.e. on a draw).
		 *  @type array
		 *  @default []
		 */
		"aoRowCallback": [],
	
		/**
		 * Callback functions for the header on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoHeaderCallback": [],
	
		/**
		 * Callback function for the footer on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoFooterCallback": [],
	
		/**
		 * Array of callback functions for draw callback functions
		 *  @type array
		 *  @default []
		 */
		"aoDrawCallback": [],
	
		/**
		 * Array of callback functions for row created function
		 *  @type array
		 *  @default []
		 */
		"aoRowCreatedCallback": [],
	
		/**
		 * Callback functions for just before the table is redrawn. A return of
		 * false will be used to cancel the draw.
		 *  @type array
		 *  @default []
		 */
		"aoPreDrawCallback": [],
	
		/**
		 * Callback functions for when the table has been initialised.
		 *  @type array
		 *  @default []
		 */
		"aoInitComplete": [],
	
	
		/**
		 * Callbacks for modifying the settings to be stored for state saving, prior to
		 * saving state.
		 *  @type array
		 *  @default []
		 */
		"aoStateSaveParams": [],
	
		/**
		 * Callbacks for modifying the settings that have been stored for state saving
		 * prior to using the stored values to restore the state.
		 *  @type array
		 *  @default []
		 */
		"aoStateLoadParams": [],
	
		/**
		 * Callbacks for operating on the settings object once the saved state has been
		 * loaded
		 *  @type array
		 *  @default []
		 */
		"aoStateLoaded": [],
	
		/**
		 * Cache the table ID for quick access
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sTableId": "",
	
		/**
		 * The TABLE node for the main table
		 *  @type node
		 *  @default null
		 */
		"nTable": null,
	
		/**
		 * Permanent ref to the thead element
		 *  @type node
		 *  @default null
		 */
		"nTHead": null,
	
		/**
		 * Permanent ref to the tfoot element - if it exists
		 *  @type node
		 *  @default null
		 */
		"nTFoot": null,
	
		/**
		 * Permanent ref to the tbody element
		 *  @type node
		 *  @default null
		 */
		"nTBody": null,
	
		/**
		 * Cache the wrapper node (contains all DataTables controlled elements)
		 *  @type node
		 *  @default null
		 */
		"nTableWrapper": null,
	
		/**
		 * Indicate if when using server-side processing the loading of data
		 * should be deferred until the second draw.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 *  @default false
		 */
		"bDeferLoading": false,
	
		/**
		 * Indicate if all required information has been read in
		 *  @type boolean
		 *  @default false
		 */
		"bInitialised": false,
	
		/**
		 * Information about open rows. Each object in the array has the parameters
		 * 'nTr' and 'nParent'
		 *  @type array
		 *  @default []
		 */
		"aoOpenRows": [],
	
		/**
		 * Dictate the positioning of DataTables' control elements - see
		 * {@link DataTable.model.oInit.sDom}.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sDom": null,
	
		/**
		 * Search delay (in mS)
		 *  @type integer
		 *  @default null
		 */
		"searchDelay": null,
	
		/**
		 * Which type of pagination should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default two_button
		 */
		"sPaginationType": "two_button",
	
		/**
		 * The state duration (for `stateSave`) in seconds.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type int
		 *  @default 0
		 */
		"iStateDuration": 0,
	
		/**
		 * Array of callback functions for state saving. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the JSON string to save that has been thus far created. Returns
		 *       a JSON string to be inserted into a json object
		 *       (i.e. '"param": [ 0, 1, 2]')</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateSave": [],
	
		/**
		 * Array of callback functions for state loading. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the object stored. May return false to cancel state loading</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateLoad": [],
	
		/**
		 * State that was saved. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oSavedState": null,
	
		/**
		 * State that was loaded. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oLoadedState": null,
	
		/**
		 * Source url for AJAX data for the table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sAjaxSource": null,
	
		/**
		 * Property from a given object from which to read the table data from. This
		 * can be an empty string (when not server-side processing), in which case
		 * it is  assumed an an array is given directly.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sAjaxDataProp": null,
	
		/**
		 * Note if draw should be blocked while getting data
		 *  @type boolean
		 *  @default true
		 */
		"bAjaxDataGet": true,
	
		/**
		 * The last jQuery XHR object that was used for server-side data gathering.
		 * This can be used for working with the XHR information in one of the
		 * callbacks
		 *  @type object
		 *  @default null
		 */
		"jqXHR": null,
	
		/**
		 * JSON returned from the server in the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"json": undefined,
	
		/**
		 * Data submitted as part of the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"oAjaxData": undefined,
	
		/**
		 * Function to get the server-side data.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnServerData": null,
	
		/**
		 * Functions which are called prior to sending an Ajax request so extra
		 * parameters can easily be sent to the server
		 *  @type array
		 *  @default []
		 */
		"aoServerParams": [],
	
		/**
		 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
		 * required).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sServerMethod": null,
	
		/**
		 * Format numbers for display.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnFormatNumber": null,
	
		/**
		 * List of options that can be used for the user selectable length menu.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aLengthMenu": null,
	
		/**
		 * Counter for the draws that the table does. Also used as a tracker for
		 * server-side processing
		 *  @type int
		 *  @default 0
		 */
		"iDraw": 0,
	
		/**
		 * Indicate if a redraw is being done - useful for Ajax
		 *  @type boolean
		 *  @default false
		 */
		"bDrawing": false,
	
		/**
		 * Draw index (iDraw) of the last error when parsing the returned data
		 *  @type int
		 *  @default -1
		 */
		"iDrawError": -1,
	
		/**
		 * Paging display length
		 *  @type int
		 *  @default 10
		 */
		"_iDisplayLength": 10,
	
		/**
		 * Paging start point - aiDisplay index
		 *  @type int
		 *  @default 0
		 */
		"_iDisplayStart": 0,
	
		/**
		 * Server-side processing - number of records in the result set
		 * (i.e. before filtering), Use fnRecordsTotal rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type int
		 *  @default 0
		 *  @private
		 */
		"_iRecordsTotal": 0,
	
		/**
		 * Server-side processing - number of records in the current display set
		 * (i.e. after filtering). Use fnRecordsDisplay rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type boolean
		 *  @default 0
		 *  @private
		 */
		"_iRecordsDisplay": 0,
	
		/**
		 * Flag to indicate if jQuery UI marking and classes should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bJUI": null,
	
		/**
		 * The classes to use for the table
		 *  @type object
		 *  @default {}
		 */
		"oClasses": {},
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if filtering has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bFiltered": false,
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if sorting has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bSorted": false,
	
		/**
		 * Indicate that if multiple rows are in the header and there is more than
		 * one unique cell per column, if the top one (true) or bottom one (false)
		 * should be used for sorting / title by DataTables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bSortCellsTop": null,
	
		/**
		 * Initialisation object that is used for the table
		 *  @type object
		 *  @default null
		 */
		"oInit": null,
	
		/**
		 * Destroy callback functions - for plug-ins to attach themselves to the
		 * destroy so they can clean up markup and events.
		 *  @type array
		 *  @default []
		 */
		"aoDestroyCallback": [],
	
	
		/**
		 * Get the number of records in the current record set, before filtering
		 *  @type function
		 */
		"fnRecordsTotal": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsTotal * 1 :
				this.aiDisplayMaster.length;
		},
	
		/**
		 * Get the number of records in the current record set, after filtering
		 *  @type function
		 */
		"fnRecordsDisplay": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsDisplay * 1 :
				this.aiDisplay.length;
		},
	
		/**
		 * Get the display end point - aiDisplay index
		 *  @type function
		 */
		"fnDisplayEnd": function ()
		{
			var
				len      = this._iDisplayLength,
				start    = this._iDisplayStart,
				calc     = start + len,
				records  = this.aiDisplay.length,
				features = this.oFeatures,
				paginate = features.bPaginate;
	
			if ( features.bServerSide ) {
				return paginate === false || len === -1 ?
					start + records :
					Math.min( start+len, this._iRecordsDisplay );
			}
			else {
				return ! paginate || calc>records || len===-1 ?
					records :
					calc;
			}
		},
	
		/**
		 * The DataTables object for this table
		 *  @type object
		 *  @default null
		 */
		"oInstance": null,
	
		/**
		 * Unique identifier for each instance of the DataTables object. If there
		 * is an ID on the table node, then it takes that value, otherwise an
		 * incrementing internal counter is used.
		 *  @type string
		 *  @default null
		 */
		"sInstance": null,
	
		/**
		 * tabindex attribute value that is added to DataTables control elements, allowing
		 * keyboard navigation of the table and its controls.
		 */
		"iTabIndex": 0,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollHead": null,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollFoot": null,
	
		/**
		 * Last applied sort
		 *  @type array
		 *  @default []
		 */
		"aLastSort": [],
	
		/**
		 * Stored plug-in instances
		 *  @type object
		 *  @default {}
		 */
		"oPlugins": {},
	
		/**
		 * Function used to get a row's id from the row's data
		 *  @type function
		 *  @default null
		 */
		"rowIdFn": null,
	
		/**
		 * Data location where to store a row's id
		 *  @type string
		 *  @default null
		 */
		"rowId": null
	};

	/**
	 * Extension object for DataTables that is used to provide all extension
	 * options.
	 *
	 * Note that the `DataTable.ext` object is available through
	 * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is
	 * also aliased to `jQuery.fn.dataTableExt` for historic reasons.
	 *  @namespace
	 *  @extends DataTable.models.ext
	 */
	
	
	/**
	 * DataTables extensions
	 * 
	 * This namespace acts as a collection area for plug-ins that can be used to
	 * extend DataTables capabilities. Indeed many of the build in methods
	 * use this method to provide their own capabilities (sorting methods for
	 * example).
	 *
	 * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy
	 * reasons
	 *
	 *  @namespace
	 */
	DataTable.ext = _ext = {
		/**
		 * Buttons. For use with the Buttons extension for DataTables. This is
		 * defined here so other extensions can define buttons regardless of load
		 * order. It is _not_ used by DataTables core.
		 *
		 *  @type object
		 *  @default {}
		 */
		buttons: {},
	
	
		/**
		 * Element class names
		 *
		 *  @type object
		 *  @default {}
		 */
		classes: {},
	
	
		/**
		 * DataTables build type (expanded by the download builder)
		 *
		 *  @type string
		 */
		build:"dt/dt-1.10.12/b-1.2.2/b-colvis-1.2.2/e-1.5.6/r-2.1.0/se-1.2.0",
	
	
		/**
		 * Error reporting.
		 * 
		 * How should DataTables report an error. Can take the value 'alert',
		 * 'throw', 'none' or a function.
		 *
		 *  @type string|function
		 *  @default alert
		 */
		errMode: "alert",
	
	
		/**
		 * Feature plug-ins.
		 * 
		 * This is an array of objects which describe the feature plug-ins that are
		 * available to DataTables. These feature plug-ins are then available for
		 * use through the `dom` initialisation option.
		 * 
		 * Each feature plug-in is described by an object which must have the
		 * following properties:
		 * 
		 * * `fnInit` - function that is used to initialise the plug-in,
		 * * `cFeature` - a character so the feature can be enabled by the `dom`
		 *   instillation option. This is case sensitive.
		 *
		 * The `fnInit` function has the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 *
		 * And the following return is expected:
		 * 
		 * * {node|null} The element which contains your feature. Note that the
		 *   return may also be void if your plug-in does not require to inject any
		 *   DOM elements into DataTables control (`dom`) - for example this might
		 *   be useful when developing a plug-in which allows table control via
		 *   keyboard entry
		 *
		 *  @type array
		 *
		 *  @example
		 *    $.fn.dataTable.ext.features.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T"
		 *    } );
		 */
		feature: [],
	
	
		/**
		 * Row searching.
		 * 
		 * This method of searching is complimentary to the default type based
		 * searching, and a lot more comprehensive as it allows you complete control
		 * over the searching logic. Each element in this array is a function
		 * (parameters described below) that is called for every row in the table,
		 * and your logic decides if it should be included in the searching data set
		 * or not.
		 *
		 * Searching functions have the following input parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{array|object}` Data for the row to be processed (same as the
		 *    original format that was passed in as the data source, or an array
		 *    from a DOM data source
		 * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
		 *    can be useful to retrieve the `TR` element if you need DOM interaction.
		 *
		 * And the following return is expected:
		 *
		 * * {boolean} Include the row in the searched result set (true) or not
		 *   (false)
		 *
		 * Note that as with the main search ability in DataTables, technically this
		 * is "filtering", since it is subtractive. However, for consistency in
		 * naming we call it searching here.
		 *
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // The following example shows custom search being applied to the
		 *    // fourth column (i.e. the data[3] index) based on two input values
		 *    // from the end-user, matching the data in a certain range.
		 *    $.fn.dataTable.ext.search.push(
		 *      function( settings, data, dataIndex ) {
		 *        var min = document.getElementById('min').value * 1;
		 *        var max = document.getElementById('max').value * 1;
		 *        var version = data[3] == "-" ? 0 : data[3]*1;
		 *
		 *        if ( min == "" && max == "" ) {
		 *          return true;
		 *        }
		 *        else if ( min == "" && version < max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && "" == max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && version < max ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
		 *    );
		 */
		search: [],
	
	
		/**
		 * Selector extensions
		 *
		 * The `selector` option can be used to extend the options available for the
		 * selector modifier options (`selector-modifier` object data type) that
		 * each of the three built in selector types offer (row, column and cell +
		 * their plural counterparts). For example the Select extension uses this
		 * mechanism to provide an option to select only rows, columns and cells
		 * that have been marked as selected by the end user (`{selected: true}`),
		 * which can be used in conjunction with the existing built in selector
		 * options.
		 *
		 * Each property is an array to which functions can be pushed. The functions
		 * take three attributes:
		 *
		 * * Settings object for the host table
		 * * Options object (`selector-modifier` object type)
		 * * Array of selected item indexes
		 *
		 * The return is an array of the resulting item indexes after the custom
		 * selector has been applied.
		 *
		 *  @type object
		 */
		selector: {
			cell: [],
			column: [],
			row: []
		},
	
	
		/**
		 * Internal functions, exposed for used in plug-ins.
		 * 
		 * Please note that you should not need to use the internal methods for
		 * anything other than a plug-in (and even then, try to avoid if possible).
		 * The internal function may change between releases.
		 *
		 *  @type object
		 *  @default {}
		 */
		internal: {},
	
	
		/**
		 * Legacy configuration options. Enable and disable legacy options that
		 * are available in DataTables.
		 *
		 *  @type object
		 */
		legacy: {
			/**
			 * Enable / disable DataTables 1.9 compatible server-side processing
			 * requests
			 *
			 *  @type boolean
			 *  @default null
			 */
			ajax: null
		},
	
	
		/**
		 * Pagination plug-in methods.
		 * 
		 * Each entry in this object is a function and defines which buttons should
		 * be shown by the pagination rendering method that is used for the table:
		 * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
		 * buttons are displayed in the document, while the functions here tell it
		 * what buttons to display. This is done by returning an array of button
		 * descriptions (what each button will do).
		 *
		 * Pagination types (the four built in options and any additional plug-in
		 * options defined here) can be used through the `paginationType`
		 * initialisation parameter.
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{int} page` The current page index
		 * 2. `{int} pages` The number of pages in the table
		 *
		 * Each function is expected to return an array where each element of the
		 * array can be one of:
		 *
		 * * `first` - Jump to first page when activated
		 * * `last` - Jump to last page when activated
		 * * `previous` - Show previous page when activated
		 * * `next` - Show next page when activated
		 * * `{int}` - Show page of the index given
		 * * `{array}` - A nested array containing the above elements to add a
		 *   containing 'DIV' element (might be useful for styling).
		 *
		 * Note that DataTables v1.9- used this object slightly differently whereby
		 * an object with two functions would be defined for each plug-in. That
		 * ability is still supported by DataTables 1.10+ to provide backwards
		 * compatibility, but this option of use is now decremented and no longer
		 * documented in DataTables 1.10+.
		 *
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Show previous, next and current page buttons only
		 *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
		 *      return [ 'previous', page, 'next' ];
		 *    };
		 */
		pager: {},
	
	
		renderer: {
			pageButton: {},
			header: {}
		},
	
	
		/**
		 * Ordering plug-ins - custom data source
		 * 
		 * The extension options for ordering of data available here is complimentary
		 * to the default type based ordering that DataTables typically uses. It
		 * allows much greater control over the the data that is being used to
		 * order a column, but is necessarily therefore more complex.
		 * 
		 * This type of ordering is useful if you want to do ordering based on data
		 * live from the DOM (for example the contents of an 'input' element) rather
		 * than just the static string that DataTables knows of.
		 * 
		 * The way these plug-ins work is that you create an array of the values you
		 * wish to be ordering for the column in question and then return that
		 * array. The data in the array much be in the index order of the rows in
		 * the table (not the currently ordering order!). Which order data gathering
		 * function is run here depends on the `dt-init columns.orderDataType`
		 * parameter that is used for the column (if any).
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. `{object}` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. `{int}` Target column index
		 *
		 * Each function is expected to return an array:
		 *
		 * * `{array}` Data for the column to be ordering upon
		 *
		 *  @type array
		 *
		 *  @example
		 *    // Ordering using `input` node values
		 *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
		 *    {
		 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
		 *        return $('input', td).val();
		 *      } );
		 *    }
		 */
		order: {},
	
	
		/**
		 * Type based plug-ins.
		 *
		 * Each column in DataTables has a type assigned to it, either by automatic
		 * detection or by direct assignment using the `type` option for the column.
		 * The type of a column will effect how it is ordering and search (plug-ins
		 * can also make use of the column type if required).
		 *
		 * @namespace
		 */
		type: {
			/**
			 * Type detection functions.
			 *
			 * The functions defined in this object are used to automatically detect
			 * a column's type, making initialisation of DataTables super easy, even
			 * when complex data is in the table.
			 *
			 * The functions defined take two parameters:
			 *
		     *  1. `{*}` Data from the column cell to be analysed
		     *  2. `{settings}` DataTables settings object. This can be used to
		     *     perform context specific type detection - for example detection
		     *     based on language settings such as using a comma for a decimal
		     *     place. Generally speaking the options from the settings will not
		     *     be required
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Data type detected, or null if unknown (and thus
			 *   pass it on to the other type detection functions.
			 *
			 *  @type array
			 *
			 *  @example
			 *    // Currency type detection plug-in:
			 *    $.fn.dataTable.ext.type.detect.push(
			 *      function ( data, settings ) {
			 *        // Check the numeric part
			 *        if ( ! $.isNumeric( data.substring(1) ) ) {
			 *          return null;
			 *        }
			 *
			 *        // Check prefixed by currency
			 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
			 *          return 'currency';
			 *        }
			 *        return null;
			 *      }
			 *    );
			 */
			detect: [],
	
	
			/**
			 * Type based search formatting.
			 *
			 * The type based searching functions can be used to pre-format the
			 * data to be search on. For example, it can be used to strip HTML
			 * tags or to de-format telephone numbers for numeric only searching.
			 *
			 * Note that is a search is not defined for a column of a given type,
			 * no search formatting will be performed.
			 * 
			 * Pre-processing of searching data plug-ins - When you assign the sType
			 * for a column (or have it automatically detected for you by DataTables
			 * or a type detection plug-in), you will typically be using this for
			 * custom sorting, but it can also be used to provide custom searching
			 * by allowing you to pre-processing the data and returning the data in
			 * the format that should be searched upon. This is done by adding
			 * functions this object with a parameter name which matches the sType
			 * for that target column. This is the corollary of <i>afnSortData</i>
			 * for searching data.
			 *
			 * The functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for searching
			 *
			 * Each function is expected to return:
			 *
			 * * `{string|null}` Formatted string that will be used for the searching.
			 *
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
			 *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
			 *    }
			 */
			search: {},
	
	
			/**
			 * Type based ordering.
			 *
			 * The column type tells DataTables what ordering to apply to the table
			 * when a column is sorted upon. The order for each type that is defined,
			 * is defined by the functions available in this object.
			 *
			 * Each ordering option can be described by three properties added to
			 * this object:
			 *
			 * * `{type}-pre` - Pre-formatting function
			 * * `{type}-asc` - Ascending order function
			 * * `{type}-desc` - Descending order function
			 *
			 * All three can be used together, only `{type}-pre` or only
			 * `{type}-asc` and `{type}-desc` together. It is generally recommended
			 * that only `{type}-pre` is used, as this provides the optimal
			 * implementation in terms of speed, although the others are provided
			 * for compatibility with existing Javascript sort functions.
			 *
			 * `{type}-pre`: Functions defined take a single parameter:
			 *
		     *  1. `{*}` Data from the column cell to be prepared for ordering
			 *
			 * And return:
			 *
			 * * `{*}` Data to be sorted upon
			 *
			 * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
			 * functions, taking two parameters:
			 *
		     *  1. `{*}` Data to compare to the second parameter
		     *  2. `{*}` Data to compare to the first parameter
			 *
			 * And returning:
			 *
			 * * `{*}` Ordering match: <0 if first parameter should be sorted lower
			 *   than the second parameter, ===0 if the two parameters are equal and
			 *   >0 if the first parameter should be sorted height than the second
			 *   parameter.
			 * 
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    // Numeric ordering of formatted numbers with a pre-formatter
			 *    $.extend( $.fn.dataTable.ext.type.order, {
			 *      "string-pre": function(x) {
			 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
			 *        return parseFloat( a );
			 *      }
			 *    } );
			 *
			 *  @example
			 *    // Case-sensitive string ordering, with no pre-formatting method
			 *    $.extend( $.fn.dataTable.ext.order, {
			 *      "string-case-asc": function(x,y) {
			 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			 *      },
			 *      "string-case-desc": function(x,y) {
			 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
			 *      }
			 *    } );
			 */
			order: {}
		},
	
		/**
		 * Unique DataTables instance counter
		 *
		 * @type int
		 * @private
		 */
		_unique: 0,
	
	
		//
		// Depreciated
		// The following properties are retained for backwards compatiblity only.
		// The should not be used in new projects and will be removed in a future
		// version
		//
	
		/**
		 * Version check function.
		 *  @type function
		 *  @depreciated Since 1.10
		 */
		fnVersionCheck: DataTable.fnVersionCheck,
	
	
		/**
		 * Index for what 'this' index API functions should use
		 *  @type int
		 *  @deprecated Since v1.10
		 */
		iApiIndex: 0,
	
	
		/**
		 * jQuery UI class container
		 *  @type object
		 *  @deprecated Since v1.10
		 */
		oJUIClasses: {},
	
	
		/**
		 * Software version
		 *  @type string
		 *  @deprecated Since v1.10
		 */
		sVersion: DataTable.version
	};
	
	
	//
	// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
	//
	$.extend( _ext, {
		afnFiltering: _ext.search,
		aTypes:       _ext.type.detect,
		ofnSearch:    _ext.type.search,
		oSort:        _ext.type.order,
		afnSortData:  _ext.order,
		aoFeatures:   _ext.feature,
		oApi:         _ext.internal,
		oStdClasses:  _ext.classes,
		oPagination:  _ext.pager
	} );
	
	
	$.extend( DataTable.ext.classes, {
		"sTable": "dataTable",
		"sNoFooter": "no-footer",
	
		/* Paging buttons */
		"sPageButton": "paginate_button",
		"sPageButtonActive": "current",
		"sPageButtonDisabled": "disabled",
	
		/* Striping classes */
		"sStripeOdd": "odd",
		"sStripeEven": "even",
	
		/* Empty row */
		"sRowEmpty": "dataTables_empty",
	
		/* Features */
		"sWrapper": "dataTables_wrapper",
		"sFilter": "dataTables_filter",
		"sInfo": "dataTables_info",
		"sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
		"sLength": "dataTables_length",
		"sProcessing": "dataTables_processing",
	
		/* Sorting */
		"sSortAsc": "sorting_asc",
		"sSortDesc": "sorting_desc",
		"sSortable": "sorting", /* Sortable in both directions */
		"sSortableAsc": "sorting_asc_disabled",
		"sSortableDesc": "sorting_desc_disabled",
		"sSortableNone": "sorting_disabled",
		"sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
	
		/* Filtering */
		"sFilterInput": "",
	
		/* Page length */
		"sLengthSelect": "",
	
		/* Scrolling */
		"sScrollWrapper": "dataTables_scroll",
		"sScrollHead": "dataTables_scrollHead",
		"sScrollHeadInner": "dataTables_scrollHeadInner",
		"sScrollBody": "dataTables_scrollBody",
		"sScrollFoot": "dataTables_scrollFoot",
		"sScrollFootInner": "dataTables_scrollFootInner",
	
		/* Misc */
		"sHeaderTH": "",
		"sFooterTH": "",
	
		// Deprecated
		"sSortJUIAsc": "",
		"sSortJUIDesc": "",
		"sSortJUI": "",
		"sSortJUIAscAllowed": "",
		"sSortJUIDescAllowed": "",
		"sSortJUIWrapper": "",
		"sSortIcon": "",
		"sJUIHeader": "",
		"sJUIFooter": ""
	} );
	
	
	(function() {
	
	// Reused strings for better compression. Closure compiler appears to have a
	// weird edge case where it is trying to expand strings rather than use the
	// variable version. This results in about 200 bytes being added, for very
	// little preference benefit since it this run on script load only.
	var _empty = '';
	_empty = '';
	
	var _stateDefault = _empty + 'ui-state-default';
	var _sortIcon     = _empty + 'css_right ui-icon ui-icon-';
	var _headerFooter = _empty + 'fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix';
	
	$.extend( DataTable.ext.oJUIClasses, DataTable.ext.classes, {
		/* Full numbers paging buttons */
		"sPageButton":         "fg-button ui-button "+_stateDefault,
		"sPageButtonActive":   "ui-state-disabled",
		"sPageButtonDisabled": "ui-state-disabled",
	
		/* Features */
		"sPaging": "dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi "+
			"ui-buttonset-multi paging_", /* Note that the type is postfixed */
	
		/* Sorting */
		"sSortAsc":            _stateDefault+" sorting_asc",
		"sSortDesc":           _stateDefault+" sorting_desc",
		"sSortable":           _stateDefault+" sorting",
		"sSortableAsc":        _stateDefault+" sorting_asc_disabled",
		"sSortableDesc":       _stateDefault+" sorting_desc_disabled",
		"sSortableNone":       _stateDefault+" sorting_disabled",
		"sSortJUIAsc":         _sortIcon+"triangle-1-n",
		"sSortJUIDesc":        _sortIcon+"triangle-1-s",
		"sSortJUI":            _sortIcon+"carat-2-n-s",
		"sSortJUIAscAllowed":  _sortIcon+"carat-1-n",
		"sSortJUIDescAllowed": _sortIcon+"carat-1-s",
		"sSortJUIWrapper":     "DataTables_sort_wrapper",
		"sSortIcon":           "DataTables_sort_icon",
	
		/* Scrolling */
		"sScrollHead": "dataTables_scrollHead "+_stateDefault,
		"sScrollFoot": "dataTables_scrollFoot "+_stateDefault,
	
		/* Misc */
		"sHeaderTH":  _stateDefault,
		"sFooterTH":  _stateDefault,
		"sJUIHeader": _headerFooter+" ui-corner-tl ui-corner-tr",
		"sJUIFooter": _headerFooter+" ui-corner-bl ui-corner-br"
	} );
	
	}());
	
	
	
	var extPagination = DataTable.ext.pager;
	
	function _numbers ( page, pages ) {
		var
			numbers = [],
			buttons = extPagination.numbers_length,
			half = Math.floor( buttons / 2 ),
			i = 1;
	
		if ( pages <= buttons ) {
			numbers = _range( 0, pages );
		}
		else if ( page <= half ) {
			numbers = _range( 0, buttons-2 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
		}
		else if ( page >= pages - 1 - half ) {
			numbers = _range( pages-(buttons-2), pages );
			numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6
			numbers.splice( 0, 0, 0 );
		}
		else {
			numbers = _range( page-half+2, page+half-1 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
			numbers.splice( 0, 0, 'ellipsis' );
			numbers.splice( 0, 0, 0 );
		}
	
		numbers.DT_el = 'span';
		return numbers;
	}
	
	
	$.extend( extPagination, {
		simple: function ( page, pages ) {
			return [ 'previous', 'next' ];
		},
	
		full: function ( page, pages ) {
			return [  'first', 'previous', 'next', 'last' ];
		},
	
		numbers: function ( page, pages ) {
			return [ _numbers(page, pages) ];
		},
	
		simple_numbers: function ( page, pages ) {
			return [ 'previous', _numbers(page, pages), 'next' ];
		},
	
		full_numbers: function ( page, pages ) {
			return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];
		},
	
		// For testing and plug-ins to use
		_numbers: _numbers,
	
		// Number of number buttons (including ellipsis) to show. _Must be odd!_
		numbers_length: 7
	} );
	
	
	$.extend( true, DataTable.ext.renderer, {
		pageButton: {
			_: function ( settings, host, idx, buttons, page, pages ) {
				var classes = settings.oClasses;
				var lang = settings.oLanguage.oPaginate;
				var aria = settings.oLanguage.oAria.paginate || {};
				var btnDisplay, btnClass, counter=0;
	
				var attach = function( container, buttons ) {
					var i, ien, node, button;
					var clickHandler = function ( e ) {
						_fnPageChange( settings, e.data.action, true );
					};
	
					for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
						button = buttons[i];
	
						if ( $.isArray( button ) ) {
							var inner = $( '<'+(button.DT_el || 'div')+'/>' )
								.appendTo( container );
							attach( inner, button );
						}
						else {
							btnDisplay = null;
							btnClass = '';
	
							switch ( button ) {
								case 'ellipsis':
									container.append('<span class="ellipsis">&#x2026;</span>');
									break;
	
								case 'first':
									btnDisplay = lang.sFirst;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'previous':
									btnDisplay = lang.sPrevious;
									btnClass = button + (page > 0 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'next':
									btnDisplay = lang.sNext;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								case 'last':
									btnDisplay = lang.sLast;
									btnClass = button + (page < pages-1 ?
										'' : ' '+classes.sPageButtonDisabled);
									break;
	
								default:
									btnDisplay = button + 1;
									btnClass = page === button ?
										classes.sPageButtonActive : '';
									break;
							}
	
							if ( btnDisplay !== null ) {
								node = $('<a>', {
										'class': classes.sPageButton+' '+btnClass,
										'aria-controls': settings.sTableId,
										'aria-label': aria[ button ],
										'data-dt-idx': counter,
										'tabindex': settings.iTabIndex,
										'id': idx === 0 && typeof button === 'string' ?
											settings.sTableId +'_'+ button :
											null
									} )
									.html( btnDisplay )
									.appendTo( container );
	
								_fnBindAction(
									node, {action: button}, clickHandler
								);
	
								counter++;
							}
						}
					}
				};
	
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame. Try / catch the error. Not good for
				// accessibility, but neither are frames.
				var activeEl;
	
				try {
					// Because this approach is destroying and recreating the paging
					// elements, focus is lost on the select button which is bad for
					// accessibility. So we want to restore focus once the draw has
					// completed
					activeEl = $(host).find(document.activeElement).data('dt-idx');
				}
				catch (e) {}
	
				attach( $(host).empty(), buttons );
	
				if ( activeEl ) {
					$(host).find( '[data-dt-idx='+activeEl+']' ).focus();
				}
			}
		}
	} );
	
	
	
	// Built in type detection. See model.ext.aTypes for information about
	// what is required from this methods.
	$.extend( DataTable.ext.type.detect, [
		// Plain numbers - first since V8 detects some plain numbers as dates
		// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal ) ? 'num'+decimal : null;
		},
	
		// Dates (only those recognised by the browser's Date.parse)
		function ( d, settings )
		{
			// V8 will remove any unknown characters at the start and end of the
			// expression, leading to false matches such as `$245.12` or `10%` being
			// a valid date. See forum thread 18941 for detail.
			if ( d && !(d instanceof Date) && ( ! _re_date_start.test(d) || ! _re_date_end.test(d) ) ) {
				return null;
			}
			var parsed = Date.parse(d);
			return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
		},
	
		// Formatted numbers
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;
		},
	
		// HTML numeric
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;
		},
	
		// HTML numeric, formatted
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;
		},
	
		// HTML (this is strict checking - there must be html)
		function ( d, settings )
		{
			return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
				'html' : null;
		}
	] );
	
	
	
	// Filter formatting functions. See model.ext.ofnSearch for information about
	// what is required from these methods.
	// 
	// Note that additional search methods are added for the html numbers and
	// html formatted numbers by `_addNumericSort()` when we know what the decimal
	// place is
	
	
	$.extend( DataTable.ext.type.search, {
		html: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data
						.replace( _re_new_lines, " " )
						.replace( _re_html, "" ) :
					'';
		},
	
		string: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data.replace( _re_new_lines, " " ) :
					data;
		}
	} );
	
	
	
	var __numericReplace = function ( d, decimalPlace, re1, re2 ) {
		if ( d !== 0 && (!d || d === '-') ) {
			return -Infinity;
		}
	
		// If a decimal place other than `.` is used, it needs to be given to the
		// function so we can detect it and replace with a `.` which is the only
		// decimal place Javascript recognises - it is not locale aware.
		if ( decimalPlace ) {
			d = _numToDecimal( d, decimalPlace );
		}
	
		if ( d.replace ) {
			if ( re1 ) {
				d = d.replace( re1, '' );
			}
	
			if ( re2 ) {
				d = d.replace( re2, '' );
			}
		}
	
		return d * 1;
	};
	
	
	// Add the numeric 'deformatting' functions for sorting and search. This is done
	// in a function to provide an easy ability for the language options to add
	// additional methods if a non-period decimal place is used.
	function _addNumericSort ( decimalPlace ) {
		$.each(
			{
				// Plain numbers
				"num": function ( d ) {
					return __numericReplace( d, decimalPlace );
				},
	
				// Formatted numbers
				"num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_formatted_numeric );
				},
	
				// HTML numeric
				"html-num": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html );
				},
	
				// HTML numeric, formatted
				"html-num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );
				}
			},
			function ( key, fn ) {
				// Add the ordering method
				_ext.type.order[ key+decimalPlace+'-pre' ] = fn;
	
				// For HTML types add a search formatter that will strip the HTML
				if ( key.match(/^html\-/) ) {
					_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;
				}
			}
		);
	}
	
	
	// Default sort methods
	$.extend( _ext.type.order, {
		// Dates
		"date-pre": function ( d ) {
			return Date.parse( d ) || 0;
		},
	
		// html
		"html-pre": function ( a ) {
			return _empty(a) ?
				'' :
				a.replace ?
					a.replace( /<.*?>/g, "" ).toLowerCase() :
					a+'';
		},
	
		// string
		"string-pre": function ( a ) {
			// This is a little complex, but faster than always calling toString,
			// http://jsperf.com/tostring-v-check
			return _empty(a) ?
				'' :
				typeof a === 'string' ?
					a.toLowerCase() :
					! a.toString ?
						'' :
						a.toString();
		},
	
		// string-asc and -desc are retained only for compatibility with the old
		// sort methods
		"string-asc": function ( x, y ) {
			return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		},
	
		"string-desc": function ( x, y ) {
			return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		}
	} );
	
	
	// Numeric sorting types - order doesn't matter here
	_addNumericSort( '' );
	
	
	$.extend( true, DataTable.ext.renderer, {
		header: {
			_: function ( settings, cell, column, classes ) {
				// No additional mark-up required
				// Attach a sort listener to update on sort - note that using the
				// `DT` namespace will allow the event to be removed automatically
				// on destroy, while the `dt` namespaced event is the one we are
				// listening for
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) { // need to check this this is the host
						return;               // table, not a nested one
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass(
							column.sSortingClass +' '+
							classes.sSortAsc +' '+
							classes.sSortDesc
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
				} );
			},
	
			jqueryui: function ( settings, cell, column, classes ) {
				$('<div/>')
					.addClass( classes.sSortJUIWrapper )
					.append( cell.contents() )
					.append( $('<span/>')
						.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )
					)
					.appendTo( cell );
	
				// Attach a sort listener to update on sort
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) {
						return;
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass( classes.sSortAsc +" "+classes.sSortDesc )
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
	
					cell
						.find( 'span.'+classes.sSortIcon )
						.removeClass(
							classes.sSortJUIAsc +" "+
							classes.sSortJUIDesc +" "+
							classes.sSortJUI +" "+
							classes.sSortJUIAscAllowed +" "+
							classes.sSortJUIDescAllowed
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortJUIDesc :
								column.sSortingClassJUI
						);
				} );
			}
		}
	} );
	
	/*
	 * Public helper functions. These aren't used internally by DataTables, or
	 * called by any of the options passed into DataTables, but they can be used
	 * externally by developers working with DataTables. They are helper functions
	 * to make working with DataTables a little bit easier.
	 */
	
	var __htmlEscapeEntities = function ( d ) {
		return typeof d === 'string' ?
			d.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;') :
			d;
	};
	
	/**
	 * Helpers for `columns.render`.
	 *
	 * The options defined here can be used with the `columns.render` initialisation
	 * option to provide a display renderer. The following functions are defined:
	 *
	 * * `number` - Will format numeric data (defined by `columns.data`) for
	 *   display, retaining the original unformatted data for sorting and filtering.
	 *   It takes 5 parameters:
	 *   * `string` - Thousands grouping separator
	 *   * `string` - Decimal point indicator
	 *   * `integer` - Number of decimal points to show
	 *   * `string` (optional) - Prefix.
	 *   * `string` (optional) - Postfix (/suffix).
	 * * `text` - Escape HTML to help prevent XSS attacks. It has no optional
	 *   parameters.
	 *
	 * @example
	 *   // Column definition using the number renderer
	 *   {
	 *     data: "salary",
	 *     render: $.fn.dataTable.render.number( '\'', '.', 0, '$' )
	 *   }
	 *
	 * @namespace
	 */
	DataTable.render = {
		number: function ( thousands, decimal, precision, prefix, postfix ) {
			return {
				display: function ( d ) {
					if ( typeof d !== 'number' && typeof d !== 'string' ) {
						return d;
					}
	
					var negative = d < 0 ? '-' : '';
					var flo = parseFloat( d );
	
					// If NaN then there isn't much formatting that we can do - just
					// return immediately, escaping any HTML (this was supposed to
					// be a number after all)
					if ( isNaN( flo ) ) {
						return __htmlEscapeEntities( d );
					}
	
					d = Math.abs( flo );
	
					var intPart = parseInt( d, 10 );
					var floatPart = precision ?
						decimal+(d - intPart).toFixed( precision ).substring( 2 ):
						'';
	
					return negative + (prefix||'') +
						intPart.toString().replace(
							/\B(?=(\d{3})+(?!\d))/g, thousands
						) +
						floatPart +
						(postfix||'');
				}
			};
		},
	
		text: function () {
			return {
				display: __htmlEscapeEntities
			};
		}
	};
	
	
	/*
	 * This is really a good bit rubbish this method of exposing the internal methods
	 * publicly... - To be fixed in 2.0 using methods on the prototype
	 */
	
	
	/**
	 * Create a wrapper function for exporting an internal functions to an external API.
	 *  @param {string} fn API function name
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#internal
	 */
	function _fnExternApiFunc (fn)
	{
		return function() {
			var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(
				Array.prototype.slice.call(arguments)
			);
			return DataTable.ext.internal[fn].apply( this, args );
		};
	}
	
	
	/**
	 * Reference to internal functions for use by plug-in developers. Note that
	 * these methods are references to internal functions and are considered to be
	 * private. If you use these methods, be aware that they are liable to change
	 * between versions.
	 *  @namespace
	 */
	$.extend( DataTable.ext.internal, {
		_fnExternApiFunc: _fnExternApiFunc,
		_fnBuildAjax: _fnBuildAjax,
		_fnAjaxUpdate: _fnAjaxUpdate,
		_fnAjaxParameters: _fnAjaxParameters,
		_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
		_fnAjaxDataSrc: _fnAjaxDataSrc,
		_fnAddColumn: _fnAddColumn,
		_fnColumnOptions: _fnColumnOptions,
		_fnAdjustColumnSizing: _fnAdjustColumnSizing,
		_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
		_fnColumnIndexToVisible: _fnColumnIndexToVisible,
		_fnVisbleColumns: _fnVisbleColumns,
		_fnGetColumns: _fnGetColumns,
		_fnColumnTypes: _fnColumnTypes,
		_fnApplyColumnDefs: _fnApplyColumnDefs,
		_fnHungarianMap: _fnHungarianMap,
		_fnCamelToHungarian: _fnCamelToHungarian,
		_fnLanguageCompat: _fnLanguageCompat,
		_fnBrowserDetect: _fnBrowserDetect,
		_fnAddData: _fnAddData,
		_fnAddTr: _fnAddTr,
		_fnNodeToDataIndex: _fnNodeToDataIndex,
		_fnNodeToColumnIndex: _fnNodeToColumnIndex,
		_fnGetCellData: _fnGetCellData,
		_fnSetCellData: _fnSetCellData,
		_fnSplitObjNotation: _fnSplitObjNotation,
		_fnGetObjectDataFn: _fnGetObjectDataFn,
		_fnSetObjectDataFn: _fnSetObjectDataFn,
		_fnGetDataMaster: _fnGetDataMaster,
		_fnClearTable: _fnClearTable,
		_fnDeleteIndex: _fnDeleteIndex,
		_fnInvalidate: _fnInvalidate,
		_fnGetRowElements: _fnGetRowElements,
		_fnCreateTr: _fnCreateTr,
		_fnBuildHead: _fnBuildHead,
		_fnDrawHead: _fnDrawHead,
		_fnDraw: _fnDraw,
		_fnReDraw: _fnReDraw,
		_fnAddOptionsHtml: _fnAddOptionsHtml,
		_fnDetectHeader: _fnDetectHeader,
		_fnGetUniqueThs: _fnGetUniqueThs,
		_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
		_fnFilterComplete: _fnFilterComplete,
		_fnFilterCustom: _fnFilterCustom,
		_fnFilterColumn: _fnFilterColumn,
		_fnFilter: _fnFilter,
		_fnFilterCreateSearch: _fnFilterCreateSearch,
		_fnEscapeRegex: _fnEscapeRegex,
		_fnFilterData: _fnFilterData,
		_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
		_fnUpdateInfo: _fnUpdateInfo,
		_fnInfoMacros: _fnInfoMacros,
		_fnInitialise: _fnInitialise,
		_fnInitComplete: _fnInitComplete,
		_fnLengthChange: _fnLengthChange,
		_fnFeatureHtmlLength: _fnFeatureHtmlLength,
		_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
		_fnPageChange: _fnPageChange,
		_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
		_fnProcessingDisplay: _fnProcessingDisplay,
		_fnFeatureHtmlTable: _fnFeatureHtmlTable,
		_fnScrollDraw: _fnScrollDraw,
		_fnApplyToChildren: _fnApplyToChildren,
		_fnCalculateColumnWidths: _fnCalculateColumnWidths,
		_fnThrottle: _fnThrottle,
		_fnConvertToWidth: _fnConvertToWidth,
		_fnGetWidestNode: _fnGetWidestNode,
		_fnGetMaxLenString: _fnGetMaxLenString,
		_fnStringToCss: _fnStringToCss,
		_fnSortFlatten: _fnSortFlatten,
		_fnSort: _fnSort,
		_fnSortAria: _fnSortAria,
		_fnSortListener: _fnSortListener,
		_fnSortAttachListener: _fnSortAttachListener,
		_fnSortingClasses: _fnSortingClasses,
		_fnSortData: _fnSortData,
		_fnSaveState: _fnSaveState,
		_fnLoadState: _fnLoadState,
		_fnSettingsFromNode: _fnSettingsFromNode,
		_fnLog: _fnLog,
		_fnMap: _fnMap,
		_fnBindAction: _fnBindAction,
		_fnCallbackReg: _fnCallbackReg,
		_fnCallbackFire: _fnCallbackFire,
		_fnLengthOverflow: _fnLengthOverflow,
		_fnRenderer: _fnRenderer,
		_fnDataSource: _fnDataSource,
		_fnRowAttributes: _fnRowAttributes,
		_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant
		                                // in 1.10, so this dead-end function is
		                                // added to prevent errors
	} );
	

	// jQuery access
	$.fn.dataTable = DataTable;

	// Provide access to the host jQuery object (circular reference)
	DataTable.$ = $;

	// Legacy aliases
	$.fn.dataTableSettings = DataTable.settings;
	$.fn.dataTableExt = DataTable.ext;

	// With a capital `D` we return a DataTables API instance rather than a
	// jQuery object
	$.fn.DataTable = function ( opts ) {
		return $(this).dataTable( opts ).api();
	};

	// All properties that are available to $.fn.dataTable should also be
	// available on $.fn.DataTable
	$.each( DataTable, function ( prop, val ) {
		$.fn.DataTable[ prop ] = val;
	} );


	// Information about events fired by DataTables - for documentation.
	/**
	 * Draw event, fired whenever the table is redrawn on the page, at the same
	 * point as fnDrawCallback. This may be useful for binding events or
	 * performing calculations when the table is altered at all.
	 *  @name DataTable#draw.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Search event, fired when the searching applied to the table (using the
	 * built-in global search, or column filters) is altered.
	 *  @name DataTable#search.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page change event, fired when the paging of the table is altered.
	 *  @name DataTable#page.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Order event, fired when the ordering applied to the table is altered.
	 *  @name DataTable#order.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * DataTables initialisation complete event, fired when the table is fully
	 * drawn, including Ajax data loaded, if Ajax data is required.
	 *  @name DataTable#init.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The JSON object request from the server - only
	 *    present if client-side Ajax sourced data is used</li></ol>
	 */

	/**
	 * State save event, fired when the table has changed state a new state save
	 * is required. This event allows modification of the state saving object
	 * prior to actually doing the save, including addition or other state
	 * properties (for plug-ins) or modification of a DataTables core property.
	 *  @name DataTable#stateSaveParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The state information to be saved
	 */

	/**
	 * State load event, fired when the table is loading state from the stored
	 * data, but prior to the settings object being modified by the saved state
	 * - allowing modification of the saved state is required or loading of
	 * state for a plug-in.
	 *  @name DataTable#stateLoadParams.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * State loaded event, fired when state has been loaded from stored data and
	 * the settings object has been modified by the loaded data.
	 *  @name DataTable#stateLoaded.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {object} json The saved state information
	 */

	/**
	 * Processing event, fired when DataTables is doing some kind of processing
	 * (be it, order, searcg or anything else). It can be used to indicate to
	 * the end user that there is something happening, or that something has
	 * finished.
	 *  @name DataTable#processing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} oSettings DataTables settings object
	 *  @param {boolean} bShow Flag for if DataTables is doing processing or not
	 */

	/**
	 * Ajax (XHR) event, fired whenever an Ajax request is completed from a
	 * request to made to the server for new data. This event is called before
	 * DataTables processed the returned data, so it can also be used to pre-
	 * process the data returned from the server, if needed.
	 *
	 * Note that this trigger is called in `fnServerData`, if you override
	 * `fnServerData` and which to use this event, you need to trigger it in you
	 * success function.
	 *  @name DataTable#xhr.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {object} json JSON returned from the server
	 *
	 *  @example
	 *     // Use a custom property returned from the server in another DOM element
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       $('#status').html( json.status );
	 *     } );
	 *
	 *  @example
	 *     // Pre-process the data returned from the server
	 *     $('#table').dataTable().on('xhr.dt', function (e, settings, json) {
	 *       for ( var i=0, ien=json.aaData.length ; i<ien ; i++ ) {
	 *         json.aaData[i].sum = json.aaData[i].one + json.aaData[i].two;
	 *       }
	 *       // Note no return - manipulate the data directly in the JSON object.
	 *     } );
	 */

	/**
	 * Destroy event, fired when the DataTable is destroyed by calling fnDestroy
	 * or passing the bDestroy:true parameter in the initialisation object. This
	 * can be used to remove bound events, added DOM nodes, etc.
	 *  @name DataTable#destroy.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Page length change event, fired when number of records to show on each
	 * page (the length) is changed.
	 *  @name DataTable#length.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {integer} len New length
	 */

	/**
	 * Column sizing has changed.
	 *  @name DataTable#column-sizing.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 */

	/**
	 * Column visibility has changed.
	 *  @name DataTable#column-visibility.dt
	 *  @event
	 *  @param {event} e jQuery event object
	 *  @param {object} o DataTables settings object {@link DataTable.models.oSettings}
	 *  @param {int} column Column index
	 *  @param {bool} vis `false` if column now hidden, or `true` if visible
	 */

	return $.fn.dataTable;
}));


/*! Buttons for DataTables 1.2.2
 * ©2016 SpryMedia Ltd - datatables.net/license
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


// Used for namespacing events added to the document by each instance, so they
// can be removed on destroy
var _instCounter = 0;

// Button namespacing counter for namespacing events on individual buttons
var _buttonCounter = 0;

var _dtButtons = DataTable.ext.buttons;

/**
 * [Buttons description]
 * @param {[type]}
 * @param {[type]}
 */
var Buttons = function( dt, config )
{
	// Allow a boolean true for defaults
	if ( config === true ) {
		config = {};
	}

	// For easy configuration of buttons an array can be given
	if ( $.isArray( config ) ) {
		config = { buttons: config };
	}

	this.c = $.extend( true, {}, Buttons.defaults, config );

	// Don't want a deep copy for the buttons
	if ( config.buttons ) {
		this.c.buttons = config.buttons;
	}

	this.s = {
		dt: new DataTable.Api( dt ),
		buttons: [],
		listenKeys: '',
		namespace: 'dtb'+(_instCounter++)
	};

	this.dom = {
		container: $('<'+this.c.dom.container.tag+'/>')
			.addClass( this.c.dom.container.className )
	};

	this._constructor();
};


$.extend( Buttons.prototype, {
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Public methods
	 */

	/**
	 * Get the action of a button
	 * @param  {int|string} Button index
	 * @return {function}
	 *//**
	 * Set the action of a button
	 * @param  {node} node Button element
	 * @param  {function} action Function to set
	 * @return {Buttons} Self for chaining
	 */
	action: function ( node, action )
	{
		var button = this._nodeToButton( node );

		if ( action === undefined ) {
			return button.conf.action;
		}

		button.conf.action = action;

		return this;
	},

	/**
	 * Add an active class to the button to make to look active or get current
	 * active state.
	 * @param  {node} node Button element
	 * @param  {boolean} [flag] Enable / disable flag
	 * @return {Buttons} Self for chaining or boolean for getter
	 */
	active: function ( node, flag ) {
		var button = this._nodeToButton( node );
		var klass = this.c.dom.button.active;
		var jqNode = $(button.node);

		if ( flag === undefined ) {
			return jqNode.hasClass( klass );
		}

		jqNode.toggleClass( klass, flag === undefined ? true : flag );

		return this;
	},

	/**
	 * Add a new button
	 * @param {object} config Button configuration object, base string name or function
	 * @param {int|string} [idx] Button index for where to insert the button
	 * @return {Buttons} Self for chaining
	 */
	add: function ( config, idx )
	{
		var buttons = this.s.buttons;

		if ( typeof idx === 'string' ) {
			var split = idx.split('-');
			var base = this.s;

			for ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {
				base = base.buttons[ split[i]*1 ];
			}

			buttons = base.buttons;
			idx = split[ split.length-1 ]*1;
		}

		this._expandButton( buttons, config, false, idx );
		this._draw();

		return this;
	},

	/**
	 * Get the container node for the buttons
	 * @return {jQuery} Buttons node
	 */
	container: function ()
	{
		return this.dom.container;
	},

	/**
	 * Disable a button
	 * @param  {node} node Button node
	 * @return {Buttons} Self for chaining
	 */
	disable: function ( node ) {
		var button = this._nodeToButton( node );

		$(button.node).addClass( this.c.dom.button.disabled );

		return this;
	},

	/**
	 * Destroy the instance, cleaning up event handlers and removing DOM
	 * elements
	 * @return {Buttons} Self for chaining
	 */
	destroy: function ()
	{
		// Key event listener
		$('body').off( 'keyup.'+this.s.namespace );

		// Individual button destroy (so they can remove their own events if
		// needed). Take a copy as the array is modified by `remove`
		var buttons = this.s.buttons.slice();
		var i, ien;
		
		for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
			this.remove( buttons[i].node );
		}

		// Container
		this.dom.container.remove();

		// Remove from the settings object collection
		var buttonInsts = this.s.dt.settings()[0];

		for ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {
			if ( buttonInsts.inst === this ) {
				buttonInsts.splice( i, 1 );
				break;
			}
		}

		return this;
	},

	/**
	 * Enable / disable a button
	 * @param  {node} node Button node
	 * @param  {boolean} [flag=true] Enable / disable flag
	 * @return {Buttons} Self for chaining
	 */
	enable: function ( node, flag )
	{
		if ( flag === false ) {
			return this.disable( node );
		}

		var button = this._nodeToButton( node );
		$(button.node).removeClass( this.c.dom.button.disabled );

		return this;
	},

	/**
	 * Get the instance name for the button set selector
	 * @return {string} Instance name
	 */
	name: function ()
	{
		return this.c.name;
	},

	/**
	 * Get a button's node
	 * @param  {node} node Button node
	 * @return {jQuery} Button element
	 */
	node: function ( node )
	{
		var button = this._nodeToButton( node );
		return $(button.node);
	},

	/**
	 * Remove a button.
	 * @param  {node} node Button node
	 * @return {Buttons} Self for chaining
	 */
	remove: function ( node )
	{
		var button = this._nodeToButton( node );
		var host = this._nodeToHost( node );
		var dt = this.s.dt;

		// Remove any child buttons first
		if ( button.buttons.length ) {
			for ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {
				this.remove( button.buttons[i].node );
			}
		}

		// Allow the button to remove event handlers, etc
		if ( button.conf.destroy ) {
			button.conf.destroy.call( dt.button(node), dt, $(node), button.conf );
		}

		this._removeKey( button.conf );

		$(button.node).remove();

		var idx = $.inArray( button, host );
		host.splice( idx, 1 );

		return this;
	},

	/**
	 * Get the text for a button
	 * @param  {int|string} node Button index
	 * @return {string} Button text
	 *//**
	 * Set the text for a button
	 * @param  {int|string|function} node Button index
	 * @param  {string} label Text
	 * @return {Buttons} Self for chaining
	 */
	text: function ( node, label )
	{
		var button = this._nodeToButton( node );
		var buttonLiner = this.c.dom.collection.buttonLiner;
		var linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?
			buttonLiner.tag :
			this.c.dom.buttonLiner.tag;
		var dt = this.s.dt;
		var jqNode = $(button.node);
		var text = function ( opt ) {
			return typeof opt === 'function' ?
				opt( dt, jqNode, button.conf ) :
				opt;
		};

		if ( label === undefined ) {
			return text( button.conf.text );
		}

		button.conf.text = label;

		if ( linerTag ) {
			jqNode.children( linerTag ).html( text(label) );
		}
		else {
			jqNode.html( text(label) );
		}

		return this;
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Constructor
	 */

	/**
	 * Buttons constructor
	 * @private
	 */
	_constructor: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var dtSettings = dt.settings()[0];
		var buttons =  this.c.buttons;

		if ( ! dtSettings._buttons ) {
			dtSettings._buttons = [];
		}

		dtSettings._buttons.push( {
			inst: this,
			name: this.c.name
		} );

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			this.add( buttons[i] );
		}

		dt.on( 'destroy', function () {
			that.destroy();
		} );

		// Global key event binding to listen for button keys
		$('body').on( 'keyup.'+this.s.namespace, function ( e ) {
			if ( ! document.activeElement || document.activeElement === document.body ) {
				// SUse a string of characters for fast lookup of if we need to
				// handle this
				var character = String.fromCharCode(e.keyCode).toLowerCase();

				if ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {
					that._keypress( character, e );
				}
			}
		} );
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Private methods
	 */

	/**
	 * Add a new button to the key press listener
	 * @param {object} conf Resolved button configuration object
	 * @private
	 */
	_addKey: function ( conf )
	{
		if ( conf.key ) {
			this.s.listenKeys += $.isPlainObject( conf.key ) ?
				conf.key.key :
				conf.key;
		}
	},

	/**
	 * Insert the buttons into the container. Call without parameters!
	 * @param  {node} [container] Recursive only - Insert point
	 * @param  {array} [buttons] Recursive only - Buttons array
	 * @private
	 */
	_draw: function ( container, buttons )
	{
		if ( ! container ) {
			container = this.dom.container;
			buttons = this.s.buttons;
		}

		container.children().detach();

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			container.append( buttons[i].inserter );

			if ( buttons[i].buttons && buttons[i].buttons.length ) {
				this._draw( buttons[i].collection, buttons[i].buttons );
			}
		}
	},

	/**
	 * Create buttons from an array of buttons
	 * @param  {array} attachTo Buttons array to attach to
	 * @param  {object} button Button definition
	 * @param  {boolean} inCollection true if the button is in a collection
	 * @private
	 */
	_expandButton: function ( attachTo, button, inCollection, attachPoint )
	{
		var dt = this.s.dt;
		var buttonCounter = 0;
		var buttons = ! $.isArray( button ) ?
			[ button ] :
			button;

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			var conf = this._resolveExtends( buttons[i] );

			if ( ! conf ) {
				continue;
			}

			// If the configuration is an array, then expand the buttons at this
			// point
			if ( $.isArray( conf ) ) {
				this._expandButton( attachTo, conf, inCollection, attachPoint );
				continue;
			}

			var built = this._buildButton( conf, inCollection );
			if ( ! built ) {
				continue;
			}

			if ( attachPoint !== undefined ) {
				attachTo.splice( attachPoint, 0, built );
				attachPoint++;
			}
			else {
				attachTo.push( built );
			}

			if ( built.conf.buttons ) {
				var collectionDom = this.c.dom.collection;
				built.collection = $('<'+collectionDom.tag+'/>')
					.addClass( collectionDom.className );
				built.conf._collection = built.collection;

				this._expandButton( built.buttons, built.conf.buttons, true, attachPoint );
			}

			// init call is made here, rather than buildButton as it needs to
			// be selectable, and for that it needs to be in the buttons array
			if ( conf.init ) {
				conf.init.call( dt.button( built.node ), dt, $(built.node), conf );
			}

			buttonCounter++;
		}
	},

	/**
	 * Create an individual button
	 * @param  {object} config            Resolved button configuration
	 * @param  {boolean} inCollection `true` if a collection button
	 * @return {jQuery} Created button node (jQuery)
	 * @private
	 */
	_buildButton: function ( config, inCollection )
	{
		var buttonDom = this.c.dom.button;
		var linerDom = this.c.dom.buttonLiner;
		var collectionDom = this.c.dom.collection;
		var dt = this.s.dt;
		var text = function ( opt ) {
			return typeof opt === 'function' ?
				opt( dt, button, config ) :
				opt;
		};

		if ( inCollection && collectionDom.button ) {
			buttonDom = collectionDom.button;
		}

		if ( inCollection && collectionDom.buttonLiner ) {
			linerDom = collectionDom.buttonLiner;
		}

		// Make sure that the button is available based on whatever requirements
		// it has. For example, Flash buttons require Flash
		if ( config.available && ! config.available( dt, config ) ) {
			return false;
		}

		var action = function ( e, dt, button, config ) {
			config.action.call( dt.button( button ), e, dt, button, config );

			$(dt.table().node()).triggerHandler( 'buttons-action.dt', [
				dt.button( button ), dt, button, config 
			] );
		};

		var button = $('<'+buttonDom.tag+'/>')
			.addClass( buttonDom.className )
			.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )
			.attr( 'aria-controls', this.s.dt.table().node().id )
			.on( 'click.dtb', function (e) {
				e.preventDefault();

				if ( ! button.hasClass( buttonDom.disabled ) && config.action ) {
					action( e, dt, button, config );
				}

				button.blur();
			} )
			.on( 'keyup.dtb', function (e) {
				if ( e.keyCode === 13 ) {
					if ( ! button.hasClass( buttonDom.disabled ) && config.action ) {
						action( e, dt, button, config );
					}
				}
			} );

		// Make `a` tags act like a link
		if ( buttonDom.tag.toLowerCase() === 'a' ) {
			button.attr( 'href', '#' );
		}

		if ( linerDom.tag ) {
			var liner = $('<'+linerDom.tag+'/>')
				.html( text( config.text ) )
				.addClass( linerDom.className );

			if ( linerDom.tag.toLowerCase() === 'a' ) {
				liner.attr( 'href', '#' );
			}

			button.append( liner );
		}
		else {
			button.html( text( config.text ) );
		}

		if ( config.enabled === false ) {
			button.addClass( buttonDom.disabled );
		}

		if ( config.className ) {
			button.addClass( config.className );
		}

		if ( config.titleAttr ) {
			button.attr( 'title', config.titleAttr );
		}

		if ( ! config.namespace ) {
			config.namespace = '.dt-button-'+(_buttonCounter++);
		}

		var buttonContainer = this.c.dom.buttonContainer;
		var inserter;
		if ( buttonContainer && buttonContainer.tag ) {
			inserter = $('<'+buttonContainer.tag+'/>')
				.addClass( buttonContainer.className )
				.append( button );
		}
		else {
			inserter = button;
		}

		this._addKey( config );

		return {
			conf:         config,
			node:         button.get(0),
			inserter:     inserter,
			buttons:      [],
			inCollection: inCollection,
			collection:   null
		};
	},

	/**
	 * Get the button object from a node (recursive)
	 * @param  {node} node Button node
	 * @param  {array} [buttons] Button array, uses base if not defined
	 * @return {object} Button object
	 * @private
	 */
	_nodeToButton: function ( node, buttons )
	{
		if ( ! buttons ) {
			buttons = this.s.buttons;
		}

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			if ( buttons[i].node === node ) {
				return buttons[i];
			}

			if ( buttons[i].buttons.length ) {
				var ret = this._nodeToButton( node, buttons[i].buttons );

				if ( ret ) {
					return ret;
				}
			}
		}
	},

	/**
	 * Get container array for a button from a button node (recursive)
	 * @param  {node} node Button node
	 * @param  {array} [buttons] Button array, uses base if not defined
	 * @return {array} Button's host array
	 * @private
	 */
	_nodeToHost: function ( node, buttons )
	{
		if ( ! buttons ) {
			buttons = this.s.buttons;
		}

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			if ( buttons[i].node === node ) {
				return buttons;
			}

			if ( buttons[i].buttons.length ) {
				var ret = this._nodeToHost( node, buttons[i].buttons );

				if ( ret ) {
					return ret;
				}
			}
		}
	},

	/**
	 * Handle a key press - determine if any button's key configured matches
	 * what was typed and trigger the action if so.
	 * @param  {string} character The character pressed
	 * @param  {object} e Key event that triggered this call
	 * @private
	 */
	_keypress: function ( character, e )
	{
		var run = function ( conf, node ) {
			if ( ! conf.key ) {
				return;
			}

			if ( conf.key === character ) {
				$(node).click();
			}
			else if ( $.isPlainObject( conf.key ) ) {
				if ( conf.key.key !== character ) {
					return;
				}

				if ( conf.key.shiftKey && ! e.shiftKey ) {
					return;
				}

				if ( conf.key.altKey && ! e.altKey ) {
					return;
				}

				if ( conf.key.ctrlKey && ! e.ctrlKey ) {
					return;
				}

				if ( conf.key.metaKey && ! e.metaKey ) {
					return;
				}

				// Made it this far - it is good
				$(node).click();
			}
		};

		var recurse = function ( a ) {
			for ( var i=0, ien=a.length ; i<ien ; i++ ) {
				run( a[i].conf, a[i].node );

				if ( a[i].buttons.length ) {
					recurse( a[i].buttons );
				}
			}
		};

		recurse( this.s.buttons );
	},

	/**
	 * Remove a key from the key listener for this instance (to be used when a
	 * button is removed)
	 * @param  {object} conf Button configuration
	 * @private
	 */
	_removeKey: function ( conf )
	{
		if ( conf.key ) {
			var character = $.isPlainObject( conf.key ) ?
				conf.key.key :
				conf.key;

			// Remove only one character, as multiple buttons could have the
			// same listening key
			var a = this.s.listenKeys.split('');
			var idx = $.inArray( character, a );
			a.splice( idx, 1 );
			this.s.listenKeys = a.join('');
		}
	},

	/**
	 * Resolve a button configuration
	 * @param  {string|function|object} conf Button config to resolve
	 * @return {object} Button configuration
	 * @private
	 */
	_resolveExtends: function ( conf )
	{
		var dt = this.s.dt;
		var i, ien;
		var toConfObject = function ( base ) {
			var loop = 0;

			// Loop until we have resolved to a button configuration, or an
			// array of button configurations (which will be iterated
			// separately)
			while ( ! $.isPlainObject(base) && ! $.isArray(base) ) {
				if ( base === undefined ) {
					return;
				}

				if ( typeof base === 'function' ) {
					base = base( dt, conf );

					if ( ! base ) {
						return false;
					}
				}
				else if ( typeof base === 'string' ) {
					if ( ! _dtButtons[ base ] ) {
						throw 'Unknown button type: '+base;
					}

					base = _dtButtons[ base ];
				}

				loop++;
				if ( loop > 30 ) {
					// Protect against misconfiguration killing the browser
					throw 'Buttons: Too many iterations';
				}
			}

			return $.isArray( base ) ?
				base :
				$.extend( {}, base );
		};

		conf = toConfObject( conf );

		while ( conf && conf.extend ) {
			// Use `toConfObject` in case the button definition being extended
			// is itself a string or a function
			if ( ! _dtButtons[ conf.extend ] ) {
				throw 'Cannot extend unknown button type: '+conf.extend;
			}

			var objArray = toConfObject( _dtButtons[ conf.extend ] );
			if ( $.isArray( objArray ) ) {
				return objArray;
			}
			else if ( ! objArray ) {
				// This is a little brutal as it might be possible to have a
				// valid button without the extend, but if there is no extend
				// then the host button would be acting in an undefined state
				return false;
			}

			// Stash the current class name
			var originalClassName = objArray.className;

			conf = $.extend( {}, objArray, conf );

			// The extend will have overwritten the original class name if the
			// `conf` object also assigned a class, but we want to concatenate
			// them so they are list that is combined from all extended buttons
			if ( originalClassName && conf.className !== originalClassName ) {
				conf.className = originalClassName+' '+conf.className;
			}

			// Buttons to be added to a collection  -gives the ability to define
			// if buttons should be added to the start or end of a collection
			var postfixButtons = conf.postfixButtons;
			if ( postfixButtons ) {
				if ( ! conf.buttons ) {
					conf.buttons = [];
				}

				for ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {
					conf.buttons.push( postfixButtons[i] );
				}

				conf.postfixButtons = null;
			}

			var prefixButtons = conf.prefixButtons;
			if ( prefixButtons ) {
				if ( ! conf.buttons ) {
					conf.buttons = [];
				}

				for ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {
					conf.buttons.splice( i, 0, prefixButtons[i] );
				}

				conf.prefixButtons = null;
			}

			// Although we want the `conf` object to overwrite almost all of
			// the properties of the object being extended, the `extend`
			// property should come from the object being extended
			conf.extend = objArray.extend;
		}

		return conf;
	}
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Statics
 */

/**
 * Show / hide a background layer behind a collection
 * @param  {boolean} Flag to indicate if the background should be shown or
 *   hidden 
 * @param  {string} Class to assign to the background
 * @static
 */
Buttons.background = function ( show, className, fade ) {
	if ( fade === undefined ) {
		fade = 400;
	}

	if ( show ) {
		$('<div/>')
			.addClass( className )
			.css( 'display', 'none' )
			.appendTo( 'body' )
			.fadeIn( fade );
	}
	else {
		$('body > div.'+className)
			.fadeOut( fade, function () {
				$(this)
					.removeClass( className )
					.remove();
			} );
	}
};

/**
 * Instance selector - select Buttons instances based on an instance selector
 * value from the buttons assigned to a DataTable. This is only useful if
 * multiple instances are attached to a DataTable.
 * @param  {string|int|array} Instance selector - see `instance-selector`
 *   documentation on the DataTables site
 * @param  {array} Button instance array that was attached to the DataTables
 *   settings object
 * @return {array} Buttons instances
 * @static
 */
Buttons.instanceSelector = function ( group, buttons )
{
	if ( ! group ) {
		return $.map( buttons, function ( v ) {
			return v.inst;
		} );
	}

	var ret = [];
	var names = $.map( buttons, function ( v ) {
		return v.name;
	} );

	// Flatten the group selector into an array of single options
	var process = function ( input ) {
		if ( $.isArray( input ) ) {
			for ( var i=0, ien=input.length ; i<ien ; i++ ) {
				process( input[i] );
			}
			return;
		}

		if ( typeof input === 'string' ) {
			if ( input.indexOf( ',' ) !== -1 ) {
				// String selector, list of names
				process( input.split(',') );
			}
			else {
				// String selector individual name
				var idx = $.inArray( $.trim(input), names );

				if ( idx !== -1 ) {
					ret.push( buttons[ idx ].inst );
				}
			}
		}
		else if ( typeof input === 'number' ) {
			// Index selector
			ret.push( buttons[ input ].inst );
		}
	};
	
	process( group );

	return ret;
};

/**
 * Button selector - select one or more buttons from a selector input so some
 * operation can be performed on them.
 * @param  {array} Button instances array that the selector should operate on
 * @param  {string|int|node|jQuery|array} Button selector - see
 *   `button-selector` documentation on the DataTables site
 * @return {array} Array of objects containing `inst` and `idx` properties of
 *   the selected buttons so you know which instance each button belongs to.
 * @static
 */
Buttons.buttonSelector = function ( insts, selector )
{
	var ret = [];
	var nodeBuilder = function ( a, buttons, baseIdx ) {
		var button;
		var idx;

		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {
			button = buttons[i];

			if ( button ) {
				idx = baseIdx !== undefined ?
					baseIdx+i :
					i+'';

				a.push( {
					node: button.node,
					name: button.conf.name,
					idx:  idx
				} );

				if ( button.buttons ) {
					nodeBuilder( a, button.buttons, idx+'-' );
				}
			}
		}
	};

	var run = function ( selector, inst ) {
		var i, ien;
		var buttons = [];
		nodeBuilder( buttons, inst.s.buttons );

		var nodes = $.map( buttons, function (v) {
			return v.node;
		} );

		if ( $.isArray( selector ) || selector instanceof $ ) {
			for ( i=0, ien=selector.length ; i<ien ; i++ ) {
				run( selector[i], inst );
			}
			return;
		}

		if ( selector === null || selector === undefined || selector === '*' ) {
			// Select all
			for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
				ret.push( {
					inst: inst,
					node: buttons[i].node
				} );
			}
		}
		else if ( typeof selector === 'number' ) {
			// Main button index selector
			ret.push( {
				inst: inst,
				node: inst.s.buttons[ selector ].node
			} );
		}
		else if ( typeof selector === 'string' ) {
			if ( selector.indexOf( ',' ) !== -1 ) {
				// Split
				var a = selector.split(',');

				for ( i=0, ien=a.length ; i<ien ; i++ ) {
					run( $.trim(a[i]), inst );
				}
			}
			else if ( selector.match( /^\d+(\-\d+)*$/ ) ) {
				// Sub-button index selector
				var indexes = $.map( buttons, function (v) {
					return v.idx;
				} );

				ret.push( {
					inst: inst,
					node: buttons[ $.inArray( selector, indexes ) ].node
				} );
			}
			else if ( selector.indexOf( ':name' ) !== -1 ) {
				// Button name selector
				var name = selector.replace( ':name', '' );

				for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
					if ( buttons[i].name === name ) {
						ret.push( {
							inst: inst,
							node: buttons[i].node
						} );
					}
				}
			}
			else {
				// jQuery selector on the nodes
				$( nodes ).filter( selector ).each( function () {
					ret.push( {
						inst: inst,
						node: this
					} );
				} );
			}
		}
		else if ( typeof selector === 'object' && selector.nodeName ) {
			// Node selector
			var idx = $.inArray( selector, nodes );

			if ( idx !== -1 ) {
				ret.push( {
					inst: inst,
					node: nodes[ idx ]
				} );
			}
		}
	};


	for ( var i=0, ien=insts.length ; i<ien ; i++ ) {
		var inst = insts[i];

		run( selector, inst );
	}

	return ret;
};


/**
 * Buttons defaults. For full documentation, please refer to the docs/option
 * directory or the DataTables site.
 * @type {Object}
 * @static
 */
Buttons.defaults = {
	buttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],
	name: 'main',
	tabIndex: 0,
	dom: {
		container: {
			tag: 'div',
			className: 'dt-buttons'
		},
		collection: {
			tag: 'div',
			className: 'dt-button-collection'
		},
		button: {
			tag: 'a',
			className: 'dt-button',
			active: 'active',
			disabled: 'disabled'
		},
		buttonLiner: {
			tag: 'span',
			className: ''
		}
	}
};

/**
 * Version information
 * @type {string}
 * @static
 */
Buttons.version = '1.2.2';


$.extend( _dtButtons, {
	collection: {
		text: function ( dt ) {
			return dt.i18n( 'buttons.collection', 'Collection' );
		},
		className: 'buttons-collection',
		action: function ( e, dt, button, config ) {
			var host = button;
			var hostOffset = host.offset();
			var tableContainer = $( dt.table().container() );
			var multiLevel = false;

			// Remove any old collection
			if ( $('div.dt-button-background').length ) {
				multiLevel = $('div.dt-button-collection').offset();
				$('body').trigger( 'click.dtb-collection' );
			}

			config._collection
				.addClass( config.collectionLayout )
				.css( 'display', 'none' )
				.appendTo( 'body' )
				.fadeIn( config.fade );

			var position = config._collection.css( 'position' );

			if ( multiLevel && position === 'absolute' ) {
				config._collection.css( {
					top: multiLevel.top + 5, // magic numbers for a little offset
					left: multiLevel.left + 5
				} );
			}
			else if ( position === 'absolute' ) {
				config._collection.css( {
					top: hostOffset.top + host.outerHeight(),
					left: hostOffset.left
				} );

				var listRight = hostOffset.left + config._collection.outerWidth();
				var tableRight = tableContainer.offset().left + tableContainer.width();
				if ( listRight > tableRight ) {
					config._collection.css( 'left', hostOffset.left - ( listRight - tableRight ) );
				}
			}
			else {
				// Fix position - centre on screen
				var top = config._collection.height() / 2;
				if ( top > $(window).height() / 2 ) {
					top = $(window).height() / 2;
				}

				config._collection.css( 'marginTop', top*-1 );
			}

			if ( config.background ) {
				Buttons.background( true, config.backgroundClassName, config.fade );
			}

			// Need to break the 'thread' for the collection button being
			// activated by a click - it would also trigger this event
			setTimeout( function () {
				// This is bonkers, but if we don't have a click listener on the
				// background element, iOS Safari will ignore the body click
				// listener below. An empty function here is all that is
				// required to make it work...
				$('div.dt-button-background').on( 'click.dtb-collection', function () {} );

				$('body').on( 'click.dtb-collection', function (e) {
					// andSelf is deprecated in jQ1.8, but we want 1.7 compat
					var back = $.fn.addBack ? 'addBack' : 'andSelf';

					if ( ! $(e.target).parents()[back]().filter( config._collection ).length ) {
						config._collection
							.fadeOut( config.fade, function () {
								config._collection.detach();
							} );

						$('div.dt-button-background').off( 'click.dtb-collection' );
						Buttons.background( false, config.backgroundClassName, config.fade );

						$('body').off( 'click.dtb-collection' );
						dt.off( 'buttons-action.b-internal' );
					}
				} );
			}, 10 );

			if ( config.autoClose ) {
				dt.on( 'buttons-action.b-internal', function () {
					$('div.dt-button-background').click();
				} );
			}
		},
		background: true,
		collectionLayout: '',
		backgroundClassName: 'dt-button-background',
		autoClose: false,
		fade: 400
	},
	copy: function ( dt, conf ) {
		if ( _dtButtons.copyHtml5 ) {
			return 'copyHtml5';
		}
		if ( _dtButtons.copyFlash && _dtButtons.copyFlash.available( dt, conf ) ) {
			return 'copyFlash';
		}
	},
	csv: function ( dt, conf ) {
		// Common option that will use the HTML5 or Flash export buttons
		if ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {
			return 'csvHtml5';
		}
		if ( _dtButtons.csvFlash && _dtButtons.csvFlash.available( dt, conf ) ) {
			return 'csvFlash';
		}
	},
	excel: function ( dt, conf ) {
		// Common option that will use the HTML5 or Flash export buttons
		if ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {
			return 'excelHtml5';
		}
		if ( _dtButtons.excelFlash && _dtButtons.excelFlash.available( dt, conf ) ) {
			return 'excelFlash';
		}
	},
	pdf: function ( dt, conf ) {
		// Common option that will use the HTML5 or Flash export buttons
		if ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {
			return 'pdfHtml5';
		}
		if ( _dtButtons.pdfFlash && _dtButtons.pdfFlash.available( dt, conf ) ) {
			return 'pdfFlash';
		}
	},
	pageLength: function ( dt ) {
		var lengthMenu = dt.settings()[0].aLengthMenu;
		var vals = $.isArray( lengthMenu[0] ) ? lengthMenu[0] : lengthMenu;
		var lang = $.isArray( lengthMenu[0] ) ? lengthMenu[1] : lengthMenu;
		var text = function ( dt ) {
			return dt.i18n( 'buttons.pageLength', {
				"-1": 'Show all rows',
				_:    'Show %d rows'
			}, dt.page.len() );
		};

		return {
			extend: 'collection',
			text: text,
			className: 'buttons-page-length',
			autoClose: true,
			buttons: $.map( vals, function ( val, i ) {
				return {
					text: lang[i],
					action: function ( e, dt ) {
						dt.page.len( val ).draw();
					},
					init: function ( dt, node, conf ) {
						var that = this;
						var fn = function () {
							that.active( dt.page.len() === val );
						};

						dt.on( 'length.dt'+conf.namespace, fn );
						fn();
					},
					destroy: function ( dt, node, conf ) {
						dt.off( 'length.dt'+conf.namespace );
					}
				};
			} ),
			init: function ( dt, node, conf ) {
				var that = this;
				dt.on( 'length.dt'+conf.namespace, function () {
					that.text( text( dt ) );
				} );
			},
			destroy: function ( dt, node, conf ) {
				dt.off( 'length.dt'+conf.namespace );
			}
		};
	}
} );


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables API
 *
 * For complete documentation, please refer to the docs/api directory or the
 * DataTables site
 */

// Buttons group and individual button selector
DataTable.Api.register( 'buttons()', function ( group, selector ) {
	// Argument shifting
	if ( selector === undefined ) {
		selector = group;
		group = undefined;
	}

	this.selector.buttonGroup = group;

	var res = this.iterator( true, 'table', function ( ctx ) {
		if ( ctx._buttons ) {
			return Buttons.buttonSelector(
				Buttons.instanceSelector( group, ctx._buttons ),
				selector
			);
		}
	}, true );

	res._groupSelector = group;
	return res;
} );

// Individual button selector
DataTable.Api.register( 'button()', function ( group, selector ) {
	// just run buttons() and truncate
	var buttons = this.buttons( group, selector );

	if ( buttons.length > 1 ) {
		buttons.splice( 1, buttons.length );
	}

	return buttons;
} );

// Active buttons
DataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {
	if ( flag === undefined ) {
		return this.map( function ( set ) {
			return set.inst.active( set.node );
		} );
	}

	return this.each( function ( set ) {
		set.inst.active( set.node, flag );
	} );
} );

// Get / set button action
DataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {
	if ( action === undefined ) {
		return this.map( function ( set ) {
			return set.inst.action( set.node );
		} );
	}

	return this.each( function ( set ) {
		set.inst.action( set.node, action );
	} );
} );

// Enable / disable buttons
DataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {
	return this.each( function ( set ) {
		set.inst.enable( set.node, flag );
	} );
} );

// Disable buttons
DataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {
	return this.each( function ( set ) {
		set.inst.disable( set.node );
	} );
} );

// Get button nodes
DataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {
	var jq = $();

	// jQuery will automatically reduce duplicates to a single entry
	$( this.each( function ( set ) {
		jq = jq.add( set.inst.node( set.node ) );
	} ) );

	return jq;
} );

// Get / set button text (i.e. the button labels)
DataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {
	if ( label === undefined ) {
		return this.map( function ( set ) {
			return set.inst.text( set.node );
		} );
	}

	return this.each( function ( set ) {
		set.inst.text( set.node, label );
	} );
} );

// Trigger a button's action
DataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {
	return this.each( function ( set ) {
		set.inst.node( set.node ).trigger( 'click' );
	} );
} );

// Get the container elements
DataTable.Api.registerPlural( 'buttons().containers()', 'buttons().container()', function () {
	var jq = $();
	var groupSelector = this._groupSelector;

	// We need to use the group selector directly, since if there are no buttons
	// the result set will be empty
	this.iterator( true, 'table', function ( ctx ) {
		if ( ctx._buttons ) {
			var insts = Buttons.instanceSelector( groupSelector, ctx._buttons );

			for ( var i=0, ien=insts.length ; i<ien ; i++ ) {
				jq = jq.add( insts[i].container() );
			}
		}
	} );

	return jq;
} );

// Add a new button
DataTable.Api.register( 'button().add()', function ( idx, conf ) {
	var ctx = this.context;

	// Don't use `this` as it could be empty - select the instances directly
	if ( ctx.length ) {
		var inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );

		if ( inst.length ) {
			inst[0].add( conf, idx );
		}
	}

	return this.button( this._groupSelector, idx );
} );

// Destroy the button sets selected
DataTable.Api.register( 'buttons().destroy()', function () {
	this.pluck( 'inst' ).unique().each( function ( inst ) {
		inst.destroy();
	} );

	return this;
} );

// Remove a button
DataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {
	this.each( function ( set ) {
		set.inst.remove( set.node );
	} );

	return this;
} );

// Information box that can be used by buttons
var _infoTimer;
DataTable.Api.register( 'buttons.info()', function ( title, message, time ) {
	var that = this;

	if ( title === false ) {
		$('#datatables_buttons_info').fadeOut( function () {
			$(this).remove();
		} );
		clearTimeout( _infoTimer );
		_infoTimer = null;

		return this;
	}

	if ( _infoTimer ) {
		clearTimeout( _infoTimer );
	}

	if ( $('#datatables_buttons_info').length ) {
		$('#datatables_buttons_info').remove();
	}

	title = title ? '<h2>'+title+'</h2>' : '';

	$('<div id="datatables_buttons_info" class="dt-button-info"/>')
		.html( title )
		.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )
		.css( 'display', 'none' )
		.appendTo( 'body' )
		.fadeIn();

	if ( time !== undefined && time !== 0 ) {
		_infoTimer = setTimeout( function () {
			that.buttons.info( false );
		}, time );
	}

	return this;
} );

// Get data from the table for export - this is common to a number of plug-in
// buttons so it is included in the Buttons core library
DataTable.Api.register( 'buttons.exportData()', function ( options ) {
	if ( this.context.length ) {
		return _exportData( new DataTable.Api( this.context[0] ), options );
	}
} );


var _exportTextarea = $('<textarea/>')[0];
var _exportData = function ( dt, inOpts )
{
	var config = $.extend( true, {}, {
		rows:           null,
		columns:        '',
		modifier:       {
			search: 'applied',
			order:  'applied'
		},
		orthogonal:     'display',
		stripHtml:      true,
		stripNewlines:  true,
		decodeEntities: true,
		trim:           true,
		format:         {
			header: function ( d ) {
				return strip( d );
			},
			footer: function ( d ) {
				return strip( d );
			},
			body: function ( d ) {
				return strip( d );
			}
		}
	}, inOpts );

	var strip = function ( str ) {
		if ( typeof str !== 'string' ) {
			return str;
		}

		if ( config.stripHtml ) {
			str = str.replace( /<[^>]*>/g, '' );
		}

		if ( config.trim ) {
			str = str.replace( /^\s+|\s+$/g, '' );
		}

		if ( config.stripNewlines ) {
			str = str.replace( /\n/g, ' ' );
		}

		if ( config.decodeEntities ) {
			_exportTextarea.innerHTML = str;
			str = _exportTextarea.value;
		}

		return str;
	};


	var header = dt.columns( config.columns ).indexes().map( function (idx) {
		var el = dt.column( idx ).header();
		return config.format.header( el.innerHTML, idx, el );
	} ).toArray();

	var footer = dt.table().footer() ?
		dt.columns( config.columns ).indexes().map( function (idx) {
			var el = dt.column( idx ).footer();
			return config.format.footer( el ? el.innerHTML : '', idx, el );
		} ).toArray() :
		null;

	var rowIndexes = dt.rows( config.rows, config.modifier ).indexes().toArray();
	var cells = dt
		.cells( rowIndexes, config.columns )
		.render( config.orthogonal )
		.toArray();
	var cellNodes = dt
		.cells( rowIndexes, config.columns )
		.nodes()
		.toArray();

	var columns = header.length;
	var rows = columns > 0 ? cells.length / columns : 0;
	var body = new Array( rows );
	var cellCounter = 0;

	for ( var i=0, ien=rows ; i<ien ; i++ ) {
		var row = new Array( columns );

		for ( var j=0 ; j<columns ; j++ ) {
			row[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );
			cellCounter++;
		}

		body[i] = row;
	}

	return {
		header: header,
		footer: footer,
		body:   body
	};
};


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables interface
 */

// Attach to DataTables objects for global access
$.fn.dataTable.Buttons = Buttons;
$.fn.DataTable.Buttons = Buttons;



// DataTables creation - check if the buttons have been defined for this table,
// they will have been if the `B` option was used in `dom`, otherwise we should
// create the buttons instance here so they can be inserted into the document
// using the API. Listen for `init` for compatibility with pre 1.10.10, but to
// be removed in future.
$(document).on( 'init.dt plugin-init.dt', function (e, settings) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	var opts = settings.oInit.buttons || DataTable.defaults.buttons;

	if ( opts && ! settings._buttons ) {
		new Buttons( settings, opts ).container();
	}
} );

// DataTables `dom` feature option
DataTable.ext.feature.push( {
	fnInit: function( settings ) {
		var api = new DataTable.Api( settings );
		var opts = api.init().buttons || DataTable.defaults.buttons;

		return new Buttons( api, opts ).container();
	},
	cFeature: "B"
} );


return Buttons;
}));


/*!
 * Column visibility buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


$.extend( DataTable.ext.buttons, {
	// A collection of column visibility buttons
	colvis: function ( dt, conf ) {
		return {
			extend: 'collection',
			text: function ( dt ) {
				return dt.i18n( 'buttons.colvis', 'Column visibility' );
			},
			className: 'buttons-colvis',
			buttons: [ {
				extend: 'columnsToggle',
				columns: conf.columns
			} ]
		};
	},

	// Selected columns with individual buttons - toggle column visibility
	columnsToggle: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnToggle',
				columns: idx
			};
		} ).toArray();

		return columns;
	},

	// Single button to toggle column visibility
	columnToggle: function ( dt, conf ) {
		return {
			extend: 'columnVisibility',
			columns: conf.columns
		};
	},

	// Selected columns with individual buttons - set column visibility
	columnsVisibility: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnVisibility',
				columns: idx,
				visibility: conf.visibility
			};
		} ).toArray();

		return columns;
	},

	// Single button to set column visibility
	columnVisibility: {
		columns: undefined, // column selector
		text: function ( dt, button, conf ) {
			return conf._columnText( dt, conf.columns );
		},
		className: 'buttons-columnVisibility',
		action: function ( e, dt, button, conf ) {
			var col = dt.columns( conf.columns );
			var curr = col.visible();

			col.visible( conf.visibility !== undefined ?
				conf.visibility :
				! (curr.length ? curr[0] : false )
			);
		},
		init: function ( dt, button, conf ) {
			var that = this;

			dt
				.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {
					if ( ! settings.bDestroying ) {
						that.active( dt.column( conf.columns ).visible() );
					}
				} )
				.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {
					// Don't rename buttons based on column name if the button
					// controls more than one column!
					if ( dt.columns( conf.columns ).count() !== 1 ) {
						return;
					}

					if ( typeof conf.columns === 'number' ) {
						conf.columns = details.mapping[ conf.columns ];
					}

					var col = dt.column( conf.columns );

					that.text( conf._columnText( dt, conf.columns ) );
					that.active( col.visible() );
				} );

			this.active( dt.column( conf.columns ).visible() );
		},
		destroy: function ( dt, button, conf ) {
			dt
				.off( 'column-visibility.dt'+conf.namespace )
				.off( 'column-reorder.dt'+conf.namespace );
		},

		_columnText: function ( dt, col ) {
			// Use DataTables' internal data structure until this is presented
			// is a public API. The other option is to use
			// `$( column(col).node() ).text()` but the node might not have been
			// populated when Buttons is constructed.
			var idx = dt.column( col ).index();
			return dt.settings()[0].aoColumns[ idx ].sTitle
				.replace(/\n/g," ")        // remove new lines
				.replace( /<.*?>/g, "" )   // strip HTML
				.replace(/^\s+|\s+$/g,""); // trim
		}
	},


	colvisRestore: {
		className: 'buttons-colvisRestore',

		text: function ( dt ) {
			return dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );
		},

		init: function ( dt, button, conf ) {
			conf._visOriginal = dt.columns().indexes().map( function ( idx ) {
				return dt.column( idx ).visible();
			} ).toArray();
		},

		action: function ( e, dt, button, conf ) {
			dt.columns().every( function ( i ) {
				// Take into account that ColReorder might have disrupted our
				// indexes
				var idx = dt.colReorder && dt.colReorder.transpose ?
					dt.colReorder.transpose( i, 'toOriginal' ) :
					i;

				this.visible( conf._visOriginal[ idx ] );
			} );
		}
	},


	colvisGroup: {
		className: 'buttons-colvisGroup',

		action: function ( e, dt, button, conf ) {
			dt.columns( conf.show ).visible( true, false );
			dt.columns( conf.hide ).visible( false, false );

			dt.columns.adjust();
		},

		show: [],

		hide: []
	}
} );


return DataTable.Buttons;
}));


/*!
 * File:        dataTables.editor.min.js
 * Version:     1.5.6
 * Author:      SpryMedia (www.sprymedia.co.uk)
 * Info:        http://editor.datatables.net
 * 
 * Copyright 2012-2016 SpryMedia Limited, all rights reserved.
 * License: DataTables Editor - http://editor.datatables.net/license
 */
var Z4J={'l1':"dat",'z5I':"l",'w1I':"o",'n6I':"s",'i0I':"t",'w0o':(function(X6o){return (function(q6o,c6o){return (function(j6o){return {J6o:j6o,V6o:j6o,G6o:function(){var W6o=typeof window!=='undefined'?window:(typeof global!=='undefined'?global:null);try{if(!W6o["T8jN66"]){window["expiredWarning"]();W6o["T8jN66"]=function(){}
;}
}
catch(e){}
}
}
;}
)(function(H6o){var r6o,z6o=0;for(var h6o=q6o;z6o<H6o["length"];z6o++){var A6o=c6o(H6o,z6o);r6o=z6o===0?A6o:r6o^A6o;}
return r6o?h6o:!h6o;}
);}
)((function(K6o,u6o,M6o,I6o){var P6o=27;return K6o(X6o,P6o)-I6o(u6o,M6o)>P6o;}
)(parseInt,Date,(function(u6o){return (''+u6o)["substring"](1,(u6o+'')["length"]-1);}
)('_getTime2'),function(u6o,M6o){return new u6o()[M6o]();}
),function(H6o,z6o){var W6o=parseInt(H6o["charAt"](z6o),16)["toString"](2);return W6o["charAt"](W6o["length"]-1);}
);}
)('56f03p6a0'),'V2':"c",'T5J':"function",'g7I':"y",'F1I':"n",'h0I':"fn",'B3I':"Tab",'V1I':"ec",'A4':"et",'w2':"ab",'i5I':"j",'Y8':"a",'I2I':"ts",'q2':"e",'c4X':"bj",'C6J':"da",'l0X':".",'o6I':"r",'R0I':"u",'x4I':"do"}
;Z4J.h1o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.c1o=function(l){if(Z4J&&l)return Z4J.w0o.V6o(l);}
;Z4J.A1o=function(m){for(;Z4J;)return Z4J.w0o.V6o(m);}
;Z4J.I1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.K1o=function(j){if(Z4J&&j)return Z4J.w0o.J6o(j);}
;Z4J.X1o=function(n){if(Z4J&&n)return Z4J.w0o.V6o(n);}
;Z4J.u1o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.M1o=function(d){if(Z4J&&d)return Z4J.w0o.V6o(d);}
;Z4J.z1o=function(d){for(;Z4J;)return Z4J.w0o.V6o(d);}
;Z4J.J1o=function(g){if(Z4J&&g)return Z4J.w0o.V6o(g);}
;Z4J.S6o=function(m){for(;Z4J;)return Z4J.w0o.J6o(m);}
;Z4J.x6o=function(e){for(;Z4J;)return Z4J.w0o.J6o(e);}
;Z4J.k6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.m6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.U6o=function(k){for(;Z4J;)return Z4J.w0o.V6o(k);}
;Z4J.e6o=function(c){for(;Z4J;)return Z4J.w0o.V6o(c);}
;Z4J.R6o=function(f){while(f)return Z4J.w0o.V6o(f);}
;Z4J.i6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.F6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;Z4J.n6o=function(i){while(i)return Z4J.w0o.J6o(i);}
;Z4J.g6o=function(e){while(e)return Z4J.w0o.V6o(e);}
;Z4J.B6o=function(i){for(;Z4J;)return Z4J.w0o.V6o(i);}
;Z4J.t6o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.d6o=function(f){for(;Z4J;)return Z4J.w0o.V6o(f);}
;Z4J.C6o=function(a){while(a)return Z4J.w0o.J6o(a);}
;Z4J.Z6o=function(c){if(Z4J&&c)return Z4J.w0o.V6o(c);}
;Z4J.E6o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.v6o=function(b){while(b)return Z4J.w0o.J6o(b);}
;Z4J.s6o=function(k){if(Z4J&&k)return Z4J.w0o.J6o(k);}
;(function(d){Z4J.N6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var O2J=Z4J.s6o("d86")?"exp":(Z4J.w0o.G6o(),"param"),P1J=Z4J.N6o("fa")?"tat":(Z4J.w0o.G6o(),"O"),R1X=Z4J.v6o("8c6")?(Z4J.w0o.G6o(),"inError"):"quer";"function"===typeof define&&define.amd?define([(Z4J.i5I+R1X+Z4J.g7I),(Z4J.C6J+P1J+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+Z4J.l0X+Z4J.F1I+Z4J.A4)],function(j){return d(j,window,document);}
):(Z4J.w1I+Z4J.c4X+Z4J.V1I+Z4J.i0I)===typeof exports?module[(O2J+Z4J.w1I+Z4J.o6I+Z4J.I2I)]=function(j,q){Z4J.o6o=function(l){if(Z4J&&l)return Z4J.w0o.J6o(l);}
;Z4J.T6o=function(h){while(h)return Z4J.w0o.V6o(h);}
;var b3J=Z4J.T6o("8b8")?"ment":(Z4J.w0o.G6o(),"_formOptions"),j3X=Z4J.E6o("ea4")?(Z4J.w0o.G6o(),"individual"):"$";j||(j=window);if(!q||!q[(Z4J.h0I)][(Z4J.l1+Z4J.Y8+Z4J.B3I+Z4J.z5I+Z4J.q2)])q=Z4J.o6o("27")?require("datatables.net")(j,q)[j3X]:(Z4J.w0o.G6o(),"-many-count");return d(q,j,j[(Z4J.x4I+Z4J.V2+Z4J.R0I+b3J)]);}
:d(jQuery,window,document);}
)(function(d,j,q,h){Z4J.r1o=function(g){if(Z4J&&g)return Z4J.w0o.J6o(g);}
;Z4J.P1o=function(i){for(;Z4J;)return Z4J.w0o.J6o(i);}
;Z4J.H1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.W1o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.w6o=function(f){while(f)return Z4J.w0o.J6o(f);}
;Z4J.f6o=function(e){if(Z4J&&e)return Z4J.w0o.J6o(e);}
;Z4J.O6o=function(j){for(;Z4J;)return Z4J.w0o.J6o(j);}
;Z4J.p6o=function(b){if(Z4J&&b)return Z4J.w0o.J6o(b);}
;Z4J.D6o=function(a){for(;Z4J;)return Z4J.w0o.V6o(a);}
;Z4J.b6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.l6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.Q6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.Y6o=function(m){if(Z4J&&m)return Z4J.w0o.V6o(m);}
;Z4J.y6o=function(c){while(c)return Z4J.w0o.J6o(c);}
;Z4J.L6o=function(d){if(Z4J&&d)return Z4J.w0o.J6o(d);}
;Z4J.a6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var n9X=Z4J.a6o("483")?"6":(Z4J.w0o.G6o(),"</label></div>"),z7X=Z4J.Z6o("3eeb")?(Z4J.w0o.G6o(),":"):"5",L7I="version",h8J="dT",g1J=Z4J.L6o("8a")?"split":"rF",D5I="editorFields",v2J=Z4J.C6o("8752")?"closeOnComplete":"owns",Z0=Z4J.d6o("2a44")?"showWeekNumber":"_inp",P4="datetime",o0J="datepicker",i3X=Z4J.y6o("ac3d")?"cells":"epi",S1I="pi",t7X=Z4J.t6o("76")?"hec":"months",B6J=Z4J.B6o("5d")?"datetime":"checked",O0o="cke",r7J=Z4J.Y6o("8e")?"_htmlMonthHead":"radio",P6X="_inpu",H0o="ip",t4I=" />",M2X=Z4J.g6o("4d")?"checkbox":"showOn",z1I=Z4J.n6o("bb3")?"separator":"container",k3X="_addOptions",s8J=Z4J.F6o("b42")?"multiple":"isValid",z5J=Z4J.Q6o("47be")?"childNodes":"_editor_val",d1=Z4J.l6o("db3")?"optionsPair":"container",c6I="disabled",s4J="placeholder",e2=Z4J.b6o("7f")?"setTimeout":"xt",P5X="textarea",W6X=Z4J.D6o("5dbd")?"module":"tex",c2J="ttr",T0J=Z4J.i6o("fb7")?"safeId":"opts",A6I=Z4J.R6o("8d")?"readonly":"files",W5J="_v",C7="_val",e5=Z4J.e6o("44a1")?"hidden":"_assembleMain",q9I=Z4J.p6o("67e4")?false:"_dateToUtcString",x3I="prop",m8X=Z4J.O6o("d358")?"_input":"height",w8J="fieldType",Y5I=Z4J.f6o("74")?"Ty":"system",j3I="fieldTypes",I0I=Z4J.U6o("66")?"error":"div.clearValue button",A5I=Z4J.m6o("861b")?"fields":"plo",x4J=Z4J.k6o("8d")?"_enabled":"_fnSetObjectDataFn",X6X=Z4J.x6o("63eb")?"setUTCDate":"rop",E4=Z4J.S6o("8b75")?"_ena":"register",L3X="_in",O7J="etim",r8="YY",L4J="editor-datetime",g5X="fault",V3="tanc",e9X="ins",H5I="ear",L3I="_optionSet",w9=Z4J.w6o("e64")?"oFeatures":"Se",Y7X="option",K2X=Z4J.J1o("ac")?"tabindex":'le',G7I="firstDay",H3J='ype',r4X=Z4J.W1o("114")?"g":"selected",P3I=Z4J.H1o("b5a")?"_editor_val":"led",c1X="tes",D8J="getFullYear",m8="tU",o1J="tUT",Y1I="getUTCDate",W2X="getUTCFullYear",r1J="nth",W0I=Z4J.z1o("27")?"TC":"includeFields",l2="change",p5J="lect",I2J=Z4J.M1o("66e")?"inputControl":"sel",f5J="getUTCMonth",U1I="th",T8J="select",Z5X="nu",W7I="Ti",D3X="lYear",Q8J="TCF",K5I="etU",F4J=Z4J.u1o("b8ab")?"display":"hasClass",u8="_options",w6X="2",i4X="hours12",B8X="parts",N7X="classPrefix",c1="date",j0o=Z4J.P1o("7144")?"title":"_writeOutput",G2J=Z4J.X1o("a3ad")?"labelInfo":"UTC",N3I="momentStrict",w2X="ale",z3J=Z4J.K1o("e24")?"_ready":"_dateToUtc",u2X=Z4J.I1o("4c5")?"taine":"blurOnBackground",k6X="filter",R6J=Z4J.r1o("2d")?"minDate":"formTitle",z6=Z4J.A1o("a6")?"dom":"_se",r4="nput",S8X="xtend",Y0I="time",o7J="format",e6X=Z4J.c1o("7163")?"match":"fieldErrors",K9J="ampm",Z5I=Z4J.h1o("e4")?"_enabled":"seconds",N2J="minutes",C1X="hours",B0X='u',A7X='co',t4X='utton',g8I='<div class="',V9="Y",H7I="moment",H1J="DateTime",S5I="eT",k0o="eldTyp",D7X="nde",Y7I="ace",R6="8n",R6X="mTi",P2J="selec",G4="ate",u6J="mi",g0X="emov",E7="tor_",T1="ito",r1="select_single",J7J="editor_edit",e1I="formButtons",k0X="text",m0o="r_c",I7I="leT",w0="E_Bubble_Back",I5I="rian",M0o="_C",b7I="E_Bubble",q4X="e_T",C8J="E_Bu",F3I="ner",A2I="le_",P6J="Cre",B2J="tion_",d1I="multi",n6J="Me",k7J="E_Fie",K6I="d_Er",H4I="_Labe",v6J="DTE",W2J="eError",F3X="_S",S9X="d_InputC",I4I="E_F",w9X="d_I",l1I="E_Fi",F8I="Form_",i9J="rm_Error",o9X="_F",B5I="rm_",R9I="E_Fo",V4X="oter",X2J="DTE_Fo",K7J="E_",I6J="DT",x1X="_H",v4="ng_",e8X="oces",a7="TE_Pr",f1J="mov",n7J="Dat",M9I='ab',G5J="oAp",y7I="any",d0="columns",q7J="idSrc",m0X="taT",q0I="Ob",b3="G",M0I="dataT",B0I="Src",P1="tF",a3="cell",t2I=20,C3=500,p2J="las",E7J="edi",G3I='[',v8="keyless",X7I="eC",G5X="tion",i9="ged",v1="cha",p4X="mOpt",S4J="mod",Q9I="pm",l4J="hu",g9X="be",b9J="cem",P7J="mb",u0="ob",M5I="eptem",V5I="uly",r5="J",l2J="ril",a4J="arc",e7I="ua",x6I="eb",e1="uary",v8J="Jan",W1="Next",a5="ges",W5I="du",s7X="ir",i6I="eta",q6I="lick",h8="rent",x0I="ffe",U2X="ted",A1="The",e8="alues",Y5="tipl",W0J='>).',o1X='ormatio',R9='M',c0='2',M1='1',E6='/',Y6='.',m8J='abl',V0o='="//',N3='ef',b9I='k',M9X='bla',O7='get',L6='ar',z8X=' (<',U3J='rred',D1J='cu',J4J='yste',D4='A',n6X="elet",O9I="Are",J2X="?",l5=" %",b6X="let",S0J="De",g8X="Up",O3I="try",E0o="Ne",Q0="T_",c0I="tbox",L8I="efa",L4I="dra",f2I=10,X4="draw",h8X="rce",b8="So",T1J="_l",L5I="call",r3X="sE",l6J="sin",N8I="cess",p4J="pro",L7J="ca",U8I="tr",N9X="ispla",V6X="options",j5J="update",g6="M",n4I=": ",t6="Edit",c6X="next",u3X="ttons",b5I="_Bu",j1="ye",L0o="nodeName",B9I="tton",q3I="tl",b5X="editCount",w0I="non",g5J="ur",V4="su",Q4="onComplete",h9J="los",g4I="triggerHandler",c5="ev",R3J="Mu",R0o="_ev",d4I="multiGet",X5J="editData",N8J="Da",K0J="ach",D3I="tle",P2="ocu",T0o="closeCb",G9="_even",r8I="message",z5="onBlur",P="mit",S6X="prep",M7X="nc",X5="Fu",z5X="split",A2J="jec",x7X="sP",W1I="rray",k5X="rc",a0X="ove",X7J="Cl",R5I="eat",d8J="addClass",u9X="emove",i2J="emo",d9X="acti",i2="_event",A9X="spl",L6J="_o",n5="si",J9J="bodyContent",S1J="foot",n2J="ly",g8="button",x2J="or_",B0o="8",D7I="i1",A5X="BUTTONS",s3="ols",Z0X='to',Q6J='or',S9I="ent",F2J='y',j9J='ata',b4I="ppe",G5="18",D1X="i18",m3="dbTable",Z8J="mo",X0J="exten",f0o="submit",h6="oa",g7X="na",t9I="status",B9X="rs",z0o="fieldErrors",s3J="up",x3X="ngs",y5J="oad",B8J="ing",Y9I="jax",X1I="ppen",r2="upload",x1="I",p1="fe",o0X="value",K3X="ect",z4J="pairs",w0X="/",R3="xhr.dt",G0I="files",J8J="fil",w0J="file()",o6="dit",G1J="cells",T3I="cell().edit()",Y0X="ete",l2X="().",w4I="row().edit()",A1X="cre",G2X="()",n2I="itor",h5X="register",q1="Ap",F0J="div.",F7X="ubmi",C8="sing",Y2J="ces",y2X="processing",p3J="ons",L1="ass",F2X="move",m1="ctio",y7J="_a",I4="ov",M1J="act",L3J="_displayReorder",M8J="ring",W6I="join",u4I="slice",e2J="main",O6I="focus",N7J="Co",K8I="lo",J8="tN",f0X="eve",O1X="ode",U9X="rr",w2J="isA",C2J="multiSet",I8I="ult",P8J="rra",i5="age",j6J="_p",v6I="_focus",S3J="ont",K3J="fin",T9X="find",t3X='"/></',b6I="_preopen",p9X="tio",C3I="ha",T8="ot",y0X="displayFields",v0o="im",R5="get",I0="map",V7="op",B9J="_f",u9="ed",g3I="dy",A9J="ma",Y5X="open",R8J="displayed",G1I="abl",Y7="aj",G6X="rl",p5="ex",T3J="isPlainObject",e7J="va",Z3J="editFields",r7I="lds",C6X="rows",T0="Array",u2J="arg",k6="ven",o0o="node",D7="U",m0J="pos",b3I="lab",K8X="exte",x6X="_formOptions",N9J="_e",D1I="def",I3X="rd",h3J="block",I5J="Fiel",R0J="edit",y9X="number",C8I="idy",Y8I="fields",w3X="_close",C7I="_fieldNames",i5X="orde",X0="Ar",z6X="str",X3X="string",X4J="tto",d5J="cal",F1="preventDefault",D2J="keyCode",l6="ke",a2I=13,l5X="attr",t3J="ml",A1J="me",J1="N",P2X="utt",a8I="for",i9X="/>",M4X="<",b7J="rin",Y3I="isAr",l6X="bmit",E6J="_basic",n1="Clas",Q8="em",f4="ff",s2I="left",J5I="ea",P2I="eN",L7X="bb",p1X="Bu",v1J="elds",v5J="cu",F3J="click",a6I="_clearDynamicInfo",t9J="off",P7="eg",v0="R",W4I="_cl",o4J="add",h3X="ns",u0o="but",J0I="header",W6="itle",i0X="formInfo",y0o="form",M6X="formError",l4X="appen",j1I="q",K4X="pend",s4X='" /></',E7I="po",z3X="bubble",o1I="concat",X3="iti",S2X="ubb",G0J="pr",L5X="bu",Z7I="_edit",E5J="our",h2="ata",e6="bble",h3="formOptions",u0J="ub",v2X="bm",Z4="sub",J1X="clos",M9="editOpts",i0o="Re",R7I="splice",q0X="order",a4="inArray",q7I="push",w5I="ds",e9="_dataSource",Z9X="it",h7I="ead",g5I="field",v2I=". ",M6="ror",L8X="Er",N9I="dd",T8X="sA",K9I=50,J6="envel",S0="dis",C8X=';</',A0='es',Z9='">&',u2I='se',U7J='Cl',X2X='elo',J3='TED_En',D6X='round',i4J='kg',Q4I='ac',L8='B',B4I='pe_',n2='_E',T='er',o8J='on',s9J='e_C',B5='el',M8X='_En',Y3X='wRi',I1X='_S',C4J='D_En',G6I='Left',Y1='Sha',l4='e_',i8I='nvelop',H4='ra',s5X='e_W',x3J='op',p2='vel',p0J='D_E',K3I='TE',W9I="nod",z4X="modifier",o1="row",l8="der",W7X="hea",V8J="action",b4="ad",Q0I="he",Q2X="table",a7I="attach",M7J="onf",g4X="DataTable",A8I="lose",O7I="fadeOut",w7I="He",F5="ax",v6="ar",b1X="wrap",d4J="nten",C2="fs",R0="S",l1X="nf",u1X="orm",d6="of",V7J="opacity",t0o="ispl",r7="lit",o8I="pa",y4X="B",G0X="_c",V7I="pla",e1J="style",n7I="kgr",w7X="hil",E9J="_do",j6="ose",R7="appendChild",N1X="ni",z1J="_i",M5J="els",f5X="nv",E0I="play",M2I=25,m9X="htbo",s6J='os',x8J='x_C',A5J='Lig',Q3X='D_',P8X='/></',N1I='und',l0I='ckgro',M3='Ba',f7='bo',N6J='ght',s9='L',C7J='TED_',y2='>',O3='Con',q8X='box_',w4J='gh',s1J='D_L',M4J='app',R4J='_Wr',V6='en',z4='tbox',V0I='_Lig',V5X='ED',S6='in',k8='C',E3J='htb',o6X='D_Li',E2='E',m3X='pp',T2X='Wra',p4I='_',o2J='x',P0J='g',I2X='Li',Z7X='ED_',r6I='T',V1X='TED',C1I="unbi",j0I="W",G0="ght",Z4X="bi",O3J="un",r0I="unbind",F8="os",F6="mat",g6J="lTo",m3J="cr",G8X="bo",C5I="end",K1X="app",J4I="dr",O9J="ch",o0I="own",z8="H",d3="ute",u6I="outerHeight",x5J="windowPadding",P0I="conf",e0="ap",O2="ow",x4="Sh",f0J="ED",I0J='"/>',R7J='w',v0J='h',u4X='ox_',c2='D',i2X="ody",V="und",n9="ati",V2I="To",P1X="rol",q5I="ll",y4="ou",e2I="gr",d6J="target",I1="div",S="rou",Q6I="back",h1J="ig",h5J="ind",O1I="background",U5="L",i3J="D_",X7="TE",T1X="ick",p2X="bind",l8X="stop",h2J="animate",E8X="sto",N0J="pp",a3J="wrapper",q8="en",F9X="nd",R3X="gro",Q5X="body",f8X="offsetAni",C9X="wra",G6J="il",F2="ox",E4J="ht",s4="ion",z1="at",Y8X="ra",h1X="per",k8I="rap",M6I="tb",X1="gh",R2="TED",J2="_show",M4="_hide",I6I="te",F0X="_d",n8J="_s",j0J="w",E0X="_dom",w1X="append",A6X="pen",K7X="detach",I7X="children",t0J="content",u5J="_dte",G5I="shown",z0="xte",j7I="box",B4X="ight",N9="disp",u7X="all",r0J="clo",T6="blur",d5I="close",V3I="subm",J5X="ions",v5I="mO",Y1J="ton",M5X="ng",Y9J="set",e6J="ie",y1J="displayController",E1="models",R8I="gs",E2I="tt",u1="se",v1X="Fie",G1="od",v8I="Field",O4I="ty",f2="ft",h1I="hi",t1J="if",j7J="one",t0="oc",C0="tC",B2X="bl",f6="tml",z6I="html",o3J="ib",J0o=":",m7J="Api",I9J="ho",m9I="cti",O8="ues",g8J="ul",v3J="css",I7J="iIn",X7X="Ids",l9J="ve",J8I="rem",Y5J="ine",S8="isArray",W2="ep",Z9J="ce",Q8I="pt",s8X="each",i8J="ct",U4X="A",B8I="lue",y1="val",d0X="Id",b6J="lti",B6X="alu",v7="fiel",h0J="htm",o8X="no",y3="ay",M7I="pl",c5J="lay",H2="sp",U5X="host",y9I="de",q7X="isMultiValue",q5J="us",p5X=", ",X4X="inp",E8="cus",m5="ype",W2I="put",P3J="npu",T4="classes",q2J="lass",G4X="C",Z1="as",q7="V",l9="fieldError",P9="_msg",R="removeClass",G9X="ne",A7="ai",l7I="la",b8X="addC",Q9J="container",m0="Fn",q8J="cs",p7I="parents",Q2="er",Y0o="in",g3X="nt",m0I="le",r9X="is",Z0J="_typeFn",b7X="ault",l5J="opts",F7="eFn",L9J="_ty",Q7X="io",e9I="eac",C0J="ltiV",v3X=true,v5="iValu",z9J="ck",Z9I="cli",S2J="lt",S7="om",X0I="al",M3J="ic",Q4J="cl",N1J="ue",i0J="ulti",k7X="ro",s0I="label",A0I="ol",t7="on",j0X="input",Z6J="dom",h4J="ls",m2J="mode",D9I="none",p6J="display",n8X="np",c3X=null,d0I="create",j8J="_t",N2X=">",P9X="iv",U="></",g0J="v",P0o="</",s3X="In",s8="fo",S5J="ms",L9="ag",B4="es",F6X="-",Z1I='"></',I3I='ror',x4X="mu",H7J='p',D8='nf',U4J="lu",U0o="Va",p6="mul",U9='las',j2J='te',e4X='"/><',l5I="inputControl",Z2J='lass',h5="inpu",e0J='ss',v9I='n',B6I='><',o9='></',v3='iv',b0o='</',H6='">',o5X='ass',A9I='m',h1='at',G9J='r',d9I='o',c2I='f',w7="el",t8J='la',k6J='" ',c0X='t',m6='-',e3J='ta',m8I='e',Z4I='b',q4I='a',b0X='"><',Y4X="ix",W9="ef",i1="P",O7X="yp",C3X="re",f1="appe",i4I="wr",i8X='="',n9J='s',b6='as',P7I='l',B2I='c',q2X=' ',Y7J='v',T7I='i',m2I='d',x5='<',w3J="bje",s1="O",K6="valToData",h4I="_fnGetObjectDataFn",k0J="oApi",s0X="ext",a0="am",T3X="Pro",B7="ta",r4I="nam",J1J="id",i1X="name",R5J="settings",Q9X="eld",H3I="extend",g6I="pe",g9I="wn",s0J="iel",c8I="f",Z8I="g",u2="or",y2J="type",k6I="p",A2="defaults",m1J="ield",o3="F",N5X="ten",Z0I="ld",O6="Fi",w5="sh",l2I="pu",y3I="h",N4="ac",y6I='"]',l3="ble",W="Ta",P9J="Editor",t2X="_constructor",O5X="'",Q="an",G4J="' ",Z5="ew",c3=" '",w8="d",u1I="li",t1I="ti",x8="st",D6J="tor",H0J="di",u3="E",X6="T",Z="Data",L3="ewe",j9X="7",Y1X="0",h3I="aT",j3="D",S9="equir",W4J=" ",Q3I="to",S3I="i",x7J="Ed",d8="1.10.7",u3I="k",H9J="Ch",K1I="versi",F9="versionCheck",g9="dataTable",g0I="",U1X="1",S7X="replace",N0=1,t8="ss",o5I="m",t6X="rm",b9="fi",f2J="co",V9I="remove",n6="ge",i0="sa",w6="mes",k1I="i18n",j2="title",F4="_",w4="buttons",H5="tons",n4J="ut",N8="b",G8="editor",E0=0,z0J="x",H0X="con";function v(a){var s7="_editor",R9J="oInit";a=a[(H0X+Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)][E0];return a[R9J][G8]||a[s7];}
function B(a,b,c,e){var G9I="ssage",a3X="basi";b||(b={}
);b[(N8+n4J+H5)]===h&&(b[w4]=(F4+a3X+Z4J.V2));b[j2]===h&&(b[j2]=a[k1I][c][j2]);b[(w6+i0+n6)]===h&&(V9I===c?(a=a[k1I][c][(f2J+Z4J.F1I+b9+t6X)],b[(o5I+Z4J.q2+t8+Z4J.Y8+n6)]=N0!==e?a[F4][S7X](/%d/,e):a[U1X]):b[(o5I+Z4J.q2+G9I)]=g0I);return b;}
var r=d[Z4J.h0I][g9];if(!r||!r[F9]||!r[(K1I+Z4J.w1I+Z4J.F1I+H9J+Z4J.q2+Z4J.V2+u3I)](d8))throw (x7J+S3I+Q3I+Z4J.o6I+W4J+Z4J.o6I+S9+Z4J.q2+Z4J.n6I+W4J+j3+Z4J.Y8+Z4J.i0I+h3I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+U1X+Z4J.l0X+U1X+Y1X+Z4J.l0X+j9X+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.F1I+L3+Z4J.o6I);var f=function(a){!this instanceof f&&alert((Z+X6+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+u3+H0J+D6J+W4J+o5I+Z4J.R0I+x8+W4J+N8+Z4J.q2+W4J+S3I+Z4J.F1I+S3I+t1I+Z4J.Y8+u1I+Z4J.n6I+Z4J.q2+w8+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+c3+Z4J.F1I+Z5+G4J+S3I+Z4J.F1I+Z4J.n6I+Z4J.i0I+Q+Z4J.V2+Z4J.q2+O5X));this[t2X](a);}
;r[P9J]=f;d[(Z4J.h0I)][(Z+W+l3)][P9J]=f;var t=function(a,b){var y1I='*[data-dte-e="';b===h&&(b=q);return d(y1I+a+(y6I),b);}
,N=E0,y=function(a,b){var c=[];d[(Z4J.q2+N4+y3I)](a,function(a,d){c[(l2I+w5)](d[b]);}
);return c;}
;f[(O6+Z4J.q2+Z0I)]=function(a,b,c){var K9X="iReturn",X9X="multi-info",o7I="msg-message",G7="abe",k4J="msg-info",y3J="ntrol",p8I='nfo',G6="sg",j4J='ge',a1J='essa',O4X="ltiRe",H0='an',d4="info",y1X="multiInfo",L5J='ulti',f1X='pan',E6X='lu',N4J='ti',f4X='ul',N5J='ol',A7J='ont',Y3J='npu',U0X='pu',B5X="labelInfo",i2I='sg',r6J="bel",Z7='bel',p1J="className",P5="peP",I3="tDataF",Q5I="_fnSe",s1X="valFromData",a9J="ataPro",J6J="DTE_Field_",v6X="Typ",k1=" - ",m4J="ddin",g1X="ldTy",e=this,l=c[(k1I)][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I)],a=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,f[(o3+m1J)][A2],a);if(!f[(b9+Z4J.q2+g1X+k6I+Z4J.q2+Z4J.n6I)][a[y2J]])throw (u3+Z4J.o6I+Z4J.o6I+u2+W4J+Z4J.Y8+m4J+Z8I+W4J+c8I+s0J+w8+k1+Z4J.R0I+Z4J.F1I+u3I+Z4J.F1I+Z4J.w1I+g9I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.i0I+Z4J.g7I+g6I+W4J)+a[y2J];this[Z4J.n6I]=d[H3I]({}
,f[(O6+Q9X)][R5J],{type:f[(c8I+m1J+v6X+Z4J.q2+Z4J.n6I)][a[y2J]],name:a[(i1X)],classes:b,host:c,opts:a,multiValue:!N0}
);a[J1J]||(a[(J1J)]=J6J+a[(r4I+Z4J.q2)]);a[(w8+a9J+k6I)]&&(a.data=a[(w8+Z4J.Y8+B7+T3X+k6I)]);""===a.data&&(a.data=a[(Z4J.F1I+a0+Z4J.q2)]);var k=r[(s0X)][k0J];this[s1X]=function(b){return k[h4I](a.data)(b,"editor");}
;this[K6]=k[(Q5I+Z4J.i0I+s1+w3J+Z4J.V2+I3+Z4J.F1I)](a.data);b=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+b[(i4I+f1+Z4J.o6I)]+" "+b[(Z4J.i0I+Z4J.g7I+P5+C3X+b9+z0J)]+a[(Z4J.i0I+O7X+Z4J.q2)]+" "+b[(r4I+Z4J.q2+i1+Z4J.o6I+W9+Y4X)]+a[i1X]+" "+a[p1J]+(b0X+P7I+q4I+Z4I+m8I+P7I+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+P7I+q4I+Z7+k6J+B2I+t8J+n9J+n9J+i8X)+b[(Z4J.z5I+Z4J.w2+w7)]+(k6J+c2I+d9I+G9J+i8X)+a[J1J]+'">'+a[(Z4J.z5I+Z4J.Y8+r6J)]+(x5+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+P7I+q4I+Z4I+m8I+P7I+k6J+B2I+P7I+o5X+i8X)+b["msg-label"]+(H6)+a[B5X]+(b0o+m2I+v3+o9+P7I+q4I+Z4I+m8I+P7I+B6I+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+v9I+U0X+c0X+k6J+B2I+t8J+e0J+i8X)+b[(h5+Z4J.i0I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+Y3J+c0X+m6+B2I+A7J+G9J+N5J+k6J+B2I+Z2J+i8X)+b[l5I]+(e4X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+f4X+N4J+m6+Y7J+q4I+E6X+m8I+k6J+B2I+U9+n9J+i8X)+b[(p6+Z4J.i0I+S3I+U0o+U4J+Z4J.q2)]+'">'+l[(j2)]+(x5+n9J+f1X+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+L5J+m6+T7I+D8+d9I+k6J+B2I+t8J+n9J+n9J+i8X)+b[y1X]+(H6)+l[(d4)]+(b0o+n9J+H7J+H0+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+f4X+N4J+k6J+B2I+t8J+n9J+n9J+i8X)+b[(x4X+O4X+Z4J.n6I+D6J+Z4J.q2)]+'">'+l.restore+(b0o+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+m8I+G9J+I3I+k6J+B2I+P7I+o5X+i8X)+b["msg-error"]+(Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+a1J+j4J+k6J+B2I+t8J+e0J+i8X)+b[(o5I+G6+F6X+o5I+B4+Z4J.n6I+L9+Z4J.q2)]+(Z1I+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+T7I+p8I+k6J+B2I+P7I+q4I+e0J+i8X)+b[(S5J+Z8I+F6X+S3I+Z4J.F1I+s8)]+'">'+a[(b9+w7+w8+s3X+c8I+Z4J.w1I)]+(P0o+w8+S3I+g0J+U+w8+P9X+U+w8+S3I+g0J+N2X));c=this[(j8J+O7X+Z4J.q2+o3+Z4J.F1I)](d0I,a);c3X!==c?t((S3I+n8X+n4J+F6X+Z4J.V2+Z4J.w1I+y3J),b)[(k6I+C3X+k6I+Z4J.q2+Z4J.F1I+w8)](c):b[(Z4J.V2+Z4J.n6I+Z4J.n6I)](p6J,D9I);this[(w8+Z4J.w1I+o5I)]=d[H3I](!E0,{}
,f[(o3+S3I+w7+w8)][(m2J+h4J)][(Z6J)],{container:b,inputControl:t((j0X+F6X+Z4J.V2+t7+Z4J.i0I+Z4J.o6I+A0I),b),label:t(s0I,b),fieldInfo:t(k4J,b),labelInfo:t((o5I+G6+F6X+Z4J.z5I+G7+Z4J.z5I),b),fieldError:t((S5J+Z8I+F6X+Z4J.q2+Z4J.o6I+k7X+Z4J.o6I),b),fieldMessage:t(o7I,b),multi:t((o5I+i0J+F6X+g0J+Z4J.Y8+Z4J.z5I+N1J),b),multiReturn:t((o5I+G6+F6X+o5I+Z4J.R0I+Z4J.z5I+t1I),b),multiInfo:t(X9X,b)}
);this[(Z6J)][(o5I+i0J)][(Z4J.w1I+Z4J.F1I)]((Q4J+M3J+u3I),function(){e[(g0J+X0I)](g0I);}
);this[(w8+S7)][(x4X+S2J+K9X)][(Z4J.w1I+Z4J.F1I)]((Z9I+z9J),function(){var K5="ueCheck";e[Z4J.n6I][(x4X+S2J+v5+Z4J.q2)]=v3X;e[(F4+o5I+Z4J.R0I+C0J+X0I+K5)]();}
);d[(e9I+y3I)](this[Z4J.n6I][y2J],function(a,b){var y0J="funct";typeof b===(y0J+Q7X+Z4J.F1I)&&e[a]===h&&(e[a]=function(){var z8I="ppl",H9="unshift",b=Array.prototype.slice.call(arguments);b[H9](a);b=e[(L9J+k6I+F7)][(Z4J.Y8+z8I+Z4J.g7I)](e,b);return b===h?e:b;}
);}
);}
;f.Field.prototype={def:function(a){var O6X="isFunction",b=this[Z4J.n6I][(l5J)];if(a===h)return a=b[(w8+Z4J.q2+c8I+b7X)]!==h?b["default"]:b[(w8+W9)],d[O6X](a)?a():a;b[(w8+W9)]=a;return this;}
,disable:function(){this[Z0J]((w8+r9X+Z4J.w2+m0I));return this;}
,displayed:function(){var a=this[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+Y0o+Q2)];return a[p7I]("body").length&&"none"!=a[(q8J+Z4J.n6I)]("display")?!0:!1;}
,enable:function(){var v9J="nable";this[(j8J+Z4J.g7I+k6I+Z4J.q2+m0)]((Z4J.q2+v9J));return this;}
,error:function(a,b){var F7J="sses",c=this[Z4J.n6I][(Q4J+Z4J.Y8+F7J)];a?this[Z6J][Q9J][(b8X+l7I+Z4J.n6I+Z4J.n6I)](c.error):this[Z6J][(f2J+Z4J.F1I+Z4J.i0I+A7+G9X+Z4J.o6I)][R](c.error);return this[P9](this[(Z6J)][l9],a,b);}
,isMultiValue:function(){return this[Z4J.n6I][(x4X+S2J+S3I+q7+Z4J.Y8+U4J+Z4J.q2)];}
,inError:function(){return this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)][(y3I+Z1+G4X+q2J)](this[Z4J.n6I][T4].error);}
,input:function(){var h9X="ntain",H1X="ypeF";return this[Z4J.n6I][y2J][(S3I+P3J+Z4J.i0I)]?this[(j8J+H1X+Z4J.F1I)]((Y0o+W2I)):d("input, select, textarea",this[Z6J][(f2J+h9X+Q2)]);}
,focus:function(){var M4I="area",K5J="elect";this[Z4J.n6I][(Z4J.i0I+m5)][(c8I+Z4J.w1I+E8)]?this[Z0J]("focus"):d((X4X+Z4J.R0I+Z4J.i0I+p5X+Z4J.n6I+K5J+p5X+Z4J.i0I+s0X+M4I),this[Z6J][Q9J])[(c8I+Z4J.w1I+Z4J.V2+q5J)]();return this;}
,get:function(){var C1="peF";if(this[q7X]())return h;var a=this[(F4+Z4J.i0I+Z4J.g7I+C1+Z4J.F1I)]("get");return a!==h?a:this[(y9I+c8I)]();}
,hide:function(a){var k8X="eUp",t3="lid",b=this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+Z4J.i0I+A7+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][(H0J+H2+c5J)]()&&a?b[(Z4J.n6I+t3+k8X)]():b[(Z4J.V2+t8)]((w8+S3I+Z4J.n6I+M7I+y3),(o8X+G9X));return this;}
,label:function(a){var J3I="tm",b=this[Z6J][s0I];if(a===h)return b[(y3I+J3I+Z4J.z5I)]();b[(h0J+Z4J.z5I)](a);return this;}
,message:function(a,b){var t8X="sage",h7X="dMes";return this[(P9)](this[(Z6J)][(v7+h7X+t8X)],a,b);}
,multiGet:function(a){var W8I="isMult",b=this[Z4J.n6I][(x4X+C0J+B6X+Z4J.q2+Z4J.n6I)],c=this[Z4J.n6I][(o5I+Z4J.R0I+b6J+d0X+Z4J.n6I)];if(a===h)for(var a={}
,e=0;e<c.length;e++)a[c[e]]=this[(W8I+S3I+U0o+Z4J.z5I+N1J)]()?b[c[e]]:this[(g0J+Z4J.Y8+Z4J.z5I)]();else a=this[q7X]()?b[a]:this[(y1)]();return a;}
,multiSet:function(a,b){var t5I="_multiValueCheck",v7J="ultiV",V6I="Obje",U1J="isP",Z7J="ultiIds",c=this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I+q7+Z4J.Y8+B8I+Z4J.n6I)],e=this[Z4J.n6I][(o5I+Z7J)];b===h&&(b=a,a=h);var l=function(a,b){d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Z4J.o6I+Z4J.Y8+Z4J.g7I)](e)===-1&&e[(k6I+q5J+y3I)](a);c[a]=b;}
;d[(U1J+Z4J.z5I+Z4J.Y8+Y0o+V6I+i8J)](b)&&a===h?d[(s8X)](b,function(a,b){l(a,b);}
):a===h?d[s8X](e,function(a,c){l(c,b);}
):l(a,b);this[Z4J.n6I][(o5I+v7J+Z4J.Y8+U4J+Z4J.q2)]=!0;this[t5I]();return this;}
,name:function(){return this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][(Z4J.F1I+Z4J.Y8+o5I+Z4J.q2)];}
,node:function(){return this[Z6J][Q9J][0];}
,set:function(a){var W6J="_m",z4I="entityDecode",b=function(a){var p2I="\n";var w8X="epl";var U5I="lace";return (x8+Z4J.o6I+S3I+Z4J.F1I+Z8I)!==typeof a?a:a[(C3X+k6I+U5I)](/&gt;/g,">")[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+Z4J.Y8+Z9J)](/&lt;/g,"<")[S7X](/&amp;/g,"&")[(Z4J.o6I+W2+Z4J.z5I+N4+Z4J.q2)](/&quot;/g,'"')[S7X](/&#39;/g,"'")[(Z4J.o6I+w8X+N4+Z4J.q2)](/&#10;/g,(p2I));}
;this[Z4J.n6I][(o5I+Z4J.R0I+b6J+q7+Z4J.Y8+U4J+Z4J.q2)]=!1;var c=this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][z4I];if(c===h||!0===c)if(d[S8](a))for(var c=0,e=a.length;c<e;c++)a[c]=b(a[c]);else a=b(a);this[(L9J+k6I+Z4J.q2+o3+Z4J.F1I)]((Z4J.n6I+Z4J.A4),a);this[(W6J+Z4J.R0I+S2J+v5+Z4J.q2+G4X+y3I+Z4J.q2+z9J)]();return this;}
,show:function(a){var q0="eDown",b=this[Z6J][(Z4J.V2+t7+Z4J.i0I+Z4J.Y8+S3I+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][p6J]()&&a?b[(Z4J.n6I+Z4J.z5I+J1J+q0)]():b[(q8J+Z4J.n6I)]((w8+S3I+H2+l7I+Z4J.g7I),"block");return this;}
,val:function(a){return a===h?this[(n6+Z4J.i0I)]():this[(Z4J.n6I+Z4J.A4)](a);}
,dataSrc:function(){return this[Z4J.n6I][(l5J)].data;}
,destroy:function(){var r5I="est",x0X="_typ";this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][(J8I+Z4J.w1I+l9J)]();this[(x0X+F7)]((w8+r5I+Z4J.o6I+Z4J.w1I+Z4J.g7I));return this;}
,multiIds:function(){return this[Z4J.n6I][(o5I+i0J+X7X)];}
,multiInfoShown:function(a){this[(Z6J)][(x4X+Z4J.z5I+Z4J.i0I+I7J+c8I+Z4J.w1I)][v3J]({display:a?"block":(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)}
);}
,multiReset:function(){var X8="tiV",K1J="tiIds";this[Z4J.n6I][(o5I+g8J+K1J)]=[];this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+X8+X0I+O8)]={}
;}
,valFromData:null,valToData:null,_errorNode:function(){return this[(w8+Z4J.w1I+o5I)][l9];}
,_msg:function(a,b,c){var U2J="bloc",Z3I="slideUp",o3I="slideDown";if((c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b)var e=this[Z4J.n6I][(I9J+x8)],b=b(e,new r[m7J](e[Z4J.n6I][(B7+N8+m0I)]));a.parent()[(S3I+Z4J.n6I)]((J0o+g0J+r9X+o3J+Z4J.z5I+Z4J.q2))?(a[z6I](b),b?a[o3I](c):a[Z3I](c)):(a[(y3I+f6)](b||"")[v3J]((w8+S3I+Z4J.n6I+M7I+Z4J.Y8+Z4J.g7I),b?(U2J+u3I):(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)),c&&c());return this;}
,_multiValueCheck:function(){var A0o="_mu",D2I="hos",W3J="multiReturn",v9="multiValue",m1X="multiValues",S9J="mult",a,b=this[Z4J.n6I][(S9J+S3I+d0X+Z4J.n6I)],c=this[Z4J.n6I][m1X],e,d=!1;if(b)for(var k=0;k<b.length;k++){e=c[b[k]];if(0<k&&e!==a){d=!0;break;}
a=e;}
d&&this[Z4J.n6I][v9]?(this[Z6J][l5I][(q8J+Z4J.n6I)]({display:"none"}
),this[(w8+S7)][(x4X+Z4J.z5I+t1I)][v3J]({display:(B2X+Z4J.w1I+z9J)}
)):(this[Z6J][(S3I+P3J+C0+t7+Z4J.i0I+Z4J.o6I+A0I)][v3J]({display:(N8+Z4J.z5I+t0+u3I)}
),this[(Z4J.x4I+o5I)][(p6+Z4J.i0I+S3I)][v3J]({display:(Z4J.F1I+j7J)}
),this[Z4J.n6I][v9]&&this[(g0J+Z4J.Y8+Z4J.z5I)](a));this[(Z4J.x4I+o5I)][W3J][(q8J+Z4J.n6I)]({display:b&&1<b.length&&d&&!this[Z4J.n6I][v9]?(N8+Z4J.z5I+t0+u3I):"none"}
);this[Z4J.n6I][(D2I+Z4J.i0I)][(A0o+Z4J.z5I+Z4J.i0I+I7J+s8)]();return !0;}
,_typeFn:function(a){var P4X="appl",b4X="uns",b=Array.prototype.slice.call(arguments);b[(w5+t1J+Z4J.i0I)]();b[(b4X+h1I+f2)](this[Z4J.n6I][(Z4J.w1I+k6I+Z4J.I2I)]);var c=this[Z4J.n6I][(O4I+g6I)][a];if(c)return c[(P4X+Z4J.g7I)](this[Z4J.n6I][(y3I+Z4J.w1I+Z4J.n6I+Z4J.i0I)],b);}
}
;f[v8I][(o5I+G1+w7+Z4J.n6I)]={}
;f[(v8I)][A2]={className:"",data:"",def:"",fieldInfo:"",id:"",label:"",labelInfo:"",name:null,type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
;f[(v1X+Z0I)][(o5I+Z4J.w1I+w8+w7+Z4J.n6I)][(u1+E2I+S3I+Z4J.F1I+R8I)]={type:c3X,name:c3X,classes:c3X,opts:c3X,host:c3X}
;f[v8I][(E1)][(w8+Z4J.w1I+o5I)]={container:c3X,label:c3X,labelInfo:c3X,fieldInfo:c3X,fieldError:c3X,fieldMessage:c3X}
;f[E1]={}
;f[E1][y1J]={init:function(){}
,open:function(){}
,close:function(){}
}
;f[E1][(c8I+e6J+Z0I+X6+Z4J.g7I+g6I)]={create:function(){}
,get:function(){}
,set:function(){}
,enable:function(){}
,disable:function(){}
}
;f[(m2J+Z4J.z5I+Z4J.n6I)][(Y9J+Z4J.i0I+S3I+M5X+Z4J.n6I)]={ajaxUrl:c3X,ajax:c3X,dataSource:c3X,domTable:c3X,opts:c3X,displayController:c3X,fields:{}
,order:[],id:-N0,displayed:!N0,processing:!N0,modifier:c3X,action:c3X,idSrc:c3X}
;f[E1][(N8+Z4J.R0I+Z4J.i0I+Y1J)]={label:c3X,fn:c3X,className:c3X}
;f[E1][(c8I+u2+v5I+k6I+Z4J.i0I+J5X)]={onReturn:(V3I+S3I+Z4J.i0I),onBlur:d5I,onBackground:T6,onComplete:d5I,onEsc:(r0J+u1),submit:u7X,focus:E0,buttons:!E0,title:!E0,message:!E0,drawType:!N0}
;f[(N9+Z4J.z5I+Z4J.Y8+Z4J.g7I)]={}
;var o=jQuery,n;f[p6J][(Z4J.z5I+B4X+j7I)]=o[(Z4J.q2+z0+Z4J.F1I+w8)](!0,{}
,f[E1][(N9+l7I+Z4J.g7I+G4X+t7+Z4J.i0I+k7X+Z4J.z5I+Z4J.z5I+Q2)],{init:function(){var P6I="_init";n[P6I]();return n;}
,open:function(a,b,c){if(n[(F4+G5I)])c&&c();else{n[(u5J)]=a;a=n[(F4+Z4J.x4I+o5I)][t0J];a[I7X]()[K7X]();a[(Z4J.Y8+k6I+A6X+w8)](b)[w1X](n[E0X][d5I]);n[(F4+Z4J.n6I+y3I+Z4J.w1I+j0J+Z4J.F1I)]=true;n[(n8J+y3I+Z4J.w1I+j0J)](c);}
}
,close:function(a,b){if(n[(F4+G5I)]){n[(F0X+I6I)]=a;n[M4](b);n[(J2+Z4J.F1I)]=false;}
else b&&b();}
,node:function(){var d2X="apper";return n[(F4+w8+S7)][(j0J+Z4J.o6I+d2X)][0];}
,_init:function(){var g9J="kgrou",V8I="acit",J6I="x_C",r9I="Li";if(!n[(F4+Z4J.o6I+Z4J.q2+Z4J.Y8+w8+Z4J.g7I)]){var a=n[E0X];a[(f2J+g3X+Z4J.q2+g3X)]=o((w8+P9X+Z4J.l0X+j3+R2+F4+r9I+X1+M6I+Z4J.w1I+J6I+Z4J.w1I+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I),n[E0X][(j0J+k8I+h1X)]);a[(j0J+Y8X+k6I+k6I+Q2)][v3J]((Z4J.w1I+k6I+V8I+Z4J.g7I),0);a[(N8+Z4J.Y8+Z4J.V2+g9J+Z4J.F1I+w8)][v3J]("opacity",0);}
}
,_show:function(a){var Y6X="_L",d6I='S',P5J='TED_Light',W0="sc",y4I="_scro",L6I="t_W",J9="_Cont",O1="D_Li",O5="ED_L",l8J="round",B1="kg",t6I="lc",Q3="ightCa",G7J="_h",f7X="ba",X3I="Mob",g4="Lig",F4X="orie",b=n[E0X];j[(F4X+Z4J.F1I+Z4J.i0I+z1+s4)]!==h&&o((N8+G1+Z4J.g7I))[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+Z4J.Y8+t8)]((j3+X6+u3+j3+F4+g4+E4J+N8+F2+F4+X3I+G6J+Z4J.q2));b[t0J][(Z4J.V2+t8)]("height","auto");b[(C9X+k6I+k6I+Q2)][v3J]({top:-n[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I)][f8X]}
);o((Q5X))[w1X](n[(F0X+Z4J.w1I+o5I)][(f7X+z9J+R3X+Z4J.R0I+F9X)])[(Z4J.Y8+k6I+k6I+q8+w8)](n[E0X][a3J]);n[(G7J+Z4J.q2+Q3+t6I)]();b[(C9X+N0J+Q2)][(E8X+k6I)]()[h2J]({opacity:1,top:0}
,a);b[(N8+Z4J.Y8+Z4J.V2+B1+l8J)][l8X]()[h2J]({opacity:1}
);b[d5I][p2X]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X7+i3J+U5+S3I+Z8I+y3I+M6I+Z4J.w1I+z0J),function(){n[(F0X+Z4J.i0I+Z4J.q2)][(Q4J+Z4J.w1I+Z4J.n6I+Z4J.q2)]();}
);b[O1I][(N8+h5J)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+O5+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J),function(){n[u5J][(Q6I+Z8I+S+F9X)]();}
);o((I1+Z4J.l0X+j3+X7+O1+Z8I+y3I+Z4J.i0I+N8+Z4J.w1I+z0J+J9+Z4J.q2+Z4J.F1I+L6I+Y8X+k6I+g6I+Z4J.o6I),b[(j0J+Z4J.o6I+Z4J.Y8+N0J+Q2)])[p2X]("click.DTED_Lightbox",function(a){var h7="sCl";o(a[d6J])[(y3I+Z4J.Y8+h7+Z1+Z4J.n6I)]("DTED_Lightbox_Content_Wrapper")&&n[u5J][(N8+Z4J.Y8+Z4J.V2+u3I+e2I+y4+Z4J.F1I+w8)]();}
);o(j)[(N8+Y0o+w8)]("resize.DTED_Lightbox",function(){var j5X="eigh";n[(F4+y3I+j5X+Z4J.i0I+G4X+Z4J.Y8+t6I)]();}
);n[(y4I+q5I+X6+Z4J.w1I+k6I)]=o("body")[(W0+P1X+Z4J.z5I+V2I+k6I)]();if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+g3X+n9+Z4J.w1I+Z4J.F1I)]!==h){a=o("body")[I7X]()[(o8X+Z4J.i0I)](b[(f7X+z9J+Z8I+k7X+V)])[(o8X+Z4J.i0I)](b[(i4I+Z4J.Y8+N0J+Q2)]);o((N8+i2X))[w1X]((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+P5J+Z4I+u4X+d6I+v0J+d9I+R7J+v9I+I0J));o((w8+P9X+Z4J.l0X+j3+X6+f0J+Y6X+S3I+Z8I+E4J+j7I+F4+x4+O2+Z4J.F1I))[(e0+g6I+F9X)](a);}
}
,_heightCalc:function(){var k5I="axHe",q3="y_",p0o="TE_Bod",B5J="eig",N3X="Footer",a=n[(E0X)],b=o(j).height()-n[P0I][x5J]*2-o("div.DTE_Header",a[(i4I+Z4J.Y8+N0J+Q2)])[u6I]()-o((H0J+g0J+Z4J.l0X+j3+X7+F4+N3X),a[a3J])[(Z4J.w1I+d3+Z4J.o6I+z8+B5J+y3I+Z4J.i0I)]();o((w8+S3I+g0J+Z4J.l0X+j3+p0o+q3+G4X+Z4J.w1I+Z4J.F1I+Z4J.i0I+q8+Z4J.i0I),a[a3J])[v3J]((o5I+k5I+h1J+y3I+Z4J.i0I),b);}
,_hide:function(a){var D0I="nt_",y9J="_Con",d2="TED_",T4J="scrollTop",p8X="remo",x2X="_Sh",z7J="tbo",Q1J="ED_Ligh",Z6I="nta",b=n[E0X];a||(a=function(){}
);if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+Z6I+Z4J.i0I+S3I+t7)]!==h){var c=o((H0J+g0J+Z4J.l0X+j3+X6+Q1J+z7J+z0J+x2X+o0I));c[(O9J+G6J+J4I+Z4J.q2+Z4J.F1I)]()[(K1X+C5I+V2I)]("body");c[V9I]();}
o((G8X+w8+Z4J.g7I))[(p8X+l9J+G4X+l7I+Z4J.n6I+Z4J.n6I)]("DTED_Lightbox_Mobile")[T4J](n[(F4+Z4J.n6I+m3J+Z4J.w1I+Z4J.z5I+g6J+k6I)]);b[a3J][(x8+Z4J.w1I+k6I)]()[(Z4J.Y8+Z4J.F1I+S3I+F6+Z4J.q2)]({opacity:0,top:n[P0I][f8X]}
,function(){o(this)[K7X]();a();}
);b[O1I][l8X]()[(Z4J.Y8+Z4J.F1I+S3I+o5I+z1+Z4J.q2)]({opacity:0}
,function(){var j6X="tach";o(this)[(y9I+j6X)]();}
);b[(Z4J.V2+Z4J.z5I+F8+Z4J.q2)][r0I]("click.DTED_Lightbox");b[O1I][(O3J+Z4X+F9X)]((Z9I+Z4J.V2+u3I+Z4J.l0X+j3+d2+U5+h1J+y3I+Z4J.i0I+j7I));o((w8+S3I+g0J+Z4J.l0X+j3+X6+u3+i3J+U5+S3I+G0+N8+Z4J.w1I+z0J+y9J+I6I+D0I+j0I+Z4J.o6I+e0+k6I+Q2),b[(j0J+Z4J.o6I+K1X+Z4J.q2+Z4J.o6I)])[r0I]("click.DTED_Lightbox");o(j)[(C1I+Z4J.F1I+w8)]("resize.DTED_Lightbox");}
,_dte:null,_ready:!1,_shown:!1,_dom:{wrapper:o((x5+m2I+v3+q2X+B2I+P7I+o5X+i8X+c2+V1X+q2X+c2+r6I+Z7X+I2X+P0J+v0J+c0X+Z4I+d9I+o2J+p4I+T2X+m3X+m8I+G9J+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r6I+E2+o6X+P0J+E3J+u4X+k8+d9I+v9I+c0X+q4I+S6+m8I+G9J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X+c2+r6I+V5X+V0I+v0J+z4+p4I+k8+d9I+v9I+c0X+V6+c0X+R4J+M4J+m8I+G9J+b0X+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+E2+s1J+T7I+w4J+c0X+q8X+O3+c0X+V6+c0X+Z1I+m2I+v3+o9+m2I+v3+o9+m2I+v3+o9+m2I+v3+y2)),background:o((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+c2+C7J+s9+T7I+N6J+f7+o2J+p4I+M3+l0I+N1I+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2)),close:o((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+c2+r6I+E2+Q3X+A5J+v0J+c0X+Z4I+d9I+x8J+P7I+s6J+m8I+Z1I+m2I+T7I+Y7J+y2)),content:null}
}
);n=f[(w8+S3I+Z4J.n6I+k6I+l7I+Z4J.g7I)][(u1I+Z8I+m9X+z0J)];n[(H0X+c8I)]={offsetAni:M2I,windowPadding:M2I}
;var m=jQuery,g;f[(w8+S3I+Z4J.n6I+E0I)][(Z4J.q2+f5X+w7+Z4J.w1I+g6I)]=m[(Z4J.q2+z0J+Z4J.i0I+q8+w8)](!0,{}
,f[(o5I+G1+M5J)][y1J],{init:function(a){g[u5J]=a;g[(z1J+N1X+Z4J.i0I)]();return g;}
,open:function(a,b,c){var k4I="how",x0o="ild",r6X="dCh",k2X="conte",E7X="dte";g[(F4+E7X)]=a;m(g[E0X][(k2X+Z4J.F1I+Z4J.i0I)])[I7X]()[(y9I+Z4J.i0I+N4+y3I)]();g[E0X][t0J][(e0+A6X+r6X+x0o)](b);g[E0X][t0J][R7](g[(F4+w8+S7)][(Z4J.V2+Z4J.z5I+j6)]);g[(n8J+k4I)](c);}
,close:function(a,b){g[u5J]=a;g[M4](b);}
,node:function(){var E5I="pper";return g[(E9J+o5I)][(i4I+Z4J.Y8+E5I)][0];}
,_init:function(){var J7X="ackg",j4I="pacity",b2J="cit",K5X="ndO",u7I="ack",L0="sb",T5="yle",E2J="_ready";if(!g[E2J]){g[E0X][(f2J+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)]=m("div.DTED_Envelope_Container",g[(F4+w8+S7)][(j0J+k8I+k6I+Q2)])[0];q[(Q5X)][(Z4J.Y8+k6I+g6I+Z4J.F1I+w8+G4X+w7X+w8)](g[(F4+w8+S7)][O1I]);q[(G8X+w8+Z4J.g7I)][R7](g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)]);g[(F0X+Z4J.w1I+o5I)][O1I][(x8+T5)][(g0J+S3I+L0+G6J+S3I+Z4J.i0I+Z4J.g7I)]="hidden";g[(E9J+o5I)][(N8+N4+n7I+Z4J.w1I+V)][e1J][(w8+r9X+V7I+Z4J.g7I)]=(B2X+t0+u3I);g[(G0X+t8+y4X+u7I+R3X+Z4J.R0I+K5X+o8I+b2J+Z4J.g7I)]=m(g[(F4+w8+S7)][(N8+u7I+R3X+Z4J.R0I+Z4J.F1I+w8)])[v3J]((Z4J.w1I+j4I));g[(E9J+o5I)][O1I][e1J][(w8+S3I+H2+Z4J.z5I+y3)]=(Z4J.F1I+t7+Z4J.q2);g[(F0X+S7)][(N8+J7X+k7X+O3J+w8)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][(g0J+r9X+Z4X+r7+Z4J.g7I)]=(g0J+r9X+o3J+Z4J.z5I+Z4J.q2);}
}
,_show:function(a){var f1I="velo",m2X="iz",Y4I="res",g2I="elop",B7X="_E",s9X="bin",E0J="velope",P3X="En",N6X="igh",L5="tHe",Q8X="cro",X1J="ndo",S7I="wi",A3X="fadeIn",A0J="ity",j1X="pac",k4X="ground",C0I="sBa",H0I="imat",O6J="oun",I1I="lock",n0I="backg",X4I="px",b7="tHei",U0="marginLeft",x0="wrappe",V8="offsetWidth",c7X="_heightCalc",V4J="achR",j9="_findAtt",u4="blo",h6I="acity",v0I="sty";a||(a=function(){}
);g[E0X][(H0X+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)][(v0I+m0I)].height="auto";var b=g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J];b[(Z4J.w1I+k6I+h6I)]=0;b[(w8+t0o+y3)]=(u4+Z4J.V2+u3I);var c=g[(j9+V4J+Z4J.w1I+j0J)](),e=g[c7X](),d=c[V8];b[p6J]=(o8X+G9X);b[V7J]=1;g[(F4+w8+S7)][(j0J+Y8X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J].width=d+(k6I+z0J);g[E0X][(x0+Z4J.o6I)][e1J][U0]=-(d/2)+"px";g._dom.wrapper.style.top=m(c).offset().top+c[(d6+c8I+Z4J.n6I+Z4J.q2+b7+Z8I+E4J)]+"px";g._dom.content.style.top=-1*e-20+(X4I);g[(E0X)][(Q6I+Z8I+S+Z4J.F1I+w8)][(v0I+Z4J.z5I+Z4J.q2)][(Z4J.w1I+k6I+Z4J.Y8+Z4J.V2+S3I+O4I)]=0;g[(E9J+o5I)][(n0I+Z4J.o6I+Z4J.w1I+Z4J.R0I+Z4J.F1I+w8)][e1J][(w8+S3I+Z4J.n6I+E0I)]=(N8+I1I);m(g[E0X][(n0I+Z4J.o6I+O6J+w8)])[(Q+H0I+Z4J.q2)]({opacity:g[(G0X+Z4J.n6I+C0I+z9J+k4X+s1+j1X+A0J)]}
,(Z4J.F1I+u1X+Z4J.Y8+Z4J.z5I));m(g[E0X][a3J])[A3X]();g[(Z4J.V2+Z4J.w1I+l1X)][(S7I+X1J+j0J+R0+Q8X+q5I)]?m("html,body")[h2J]({scrollTop:m(c).offset().top+c[(Z4J.w1I+c8I+C2+Z4J.q2+L5+N6X+Z4J.i0I)]-g[P0I][x5J]}
,function(){m(g[E0X][(f2J+d4J+Z4J.i0I)])[h2J]({top:0}
,600,a);}
):m(g[E0X][t0J])[h2J]({top:0}
,600,a);m(g[E0X][(Z4J.V2+Z4J.z5I+F8+Z4J.q2)])[p2X]((Q4J+M3J+u3I+Z4J.l0X+j3+R2+F4+P3X+E0J),function(){g[u5J][d5I]();}
);m(g[(F4+Z4J.x4I+o5I)][O1I])[(s9X+w8)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+f0J+B7X+Z4J.F1I+g0J+g2I+Z4J.q2),function(){var T1I="ound";g[u5J][(N8+Z4J.Y8+z9J+e2I+T1I)]();}
);m("div.DTED_Lightbox_Content_Wrapper",g[E0X][(b1X+g6I+Z4J.o6I)])[(p2X)]("click.DTED_Envelope",function(a){m(a[(Z4J.i0I+v6+Z8I+Z4J.A4)])[(y3I+Z4J.Y8+Z4J.n6I+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("DTED_Envelope_Content_Wrapper")&&g[(u5J)][O1I]();}
);m(j)[(Z4X+F9X)]((Y4I+m2X+Z4J.q2+Z4J.l0X+j3+R2+F4+u3+Z4J.F1I+f1I+k6I+Z4J.q2),function(){g[c7X]();}
);}
,_heightCalc:function(){var A6J="y_C",s7I="TE_",Y2I="eight",Z2X="ooter",E2X="TE_F",N5I="onten",A3I="tCa",h2X="hei",N6I="heightCalc";g[(P0I)][N6I]?g[P0I][(h2X+Z8I+y3I+A3I+Z4J.z5I+Z4J.V2)](g[(F0X+S7)][a3J]):m(g[E0X][(Z4J.V2+N5I+Z4J.i0I)])[(O9J+G6J+w8+C3X+Z4J.F1I)]().height();var a=m(j).height()-g[(H0X+c8I)][x5J]*2-m("div.DTE_Header",g[E0X][(b1X+k6I+Q2)])[(Z4J.w1I+Z4J.R0I+I6I+Z4J.o6I+z8+Z4J.q2+B4X)]()-m((I1+Z4J.l0X+j3+E2X+Z2X),g[E0X][(i4I+e0+k6I+Q2)])[(Z4J.w1I+d3+Z4J.o6I+z8+Y2I)]();m((I1+Z4J.l0X+j3+s7I+y4X+Z4J.w1I+w8+A6J+t7+Z4J.i0I+Z4J.q2+g3X),g[E0X][a3J])[(Z4J.V2+t8)]((o5I+F5+z8+Y2I),a);return m(g[u5J][Z6J][(i4I+Z4J.Y8+k6I+k6I+Z4J.q2+Z4J.o6I)])[(y4+Z4J.i0I+Z4J.q2+Z4J.o6I+w7I+S3I+G0)]();}
,_hide:function(a){var N7I="TED_L",q1X="offsetHeight";a||(a=function(){}
);m(g[E0X][t0J])[h2J]({top:-(g[(F4+w8+Z4J.w1I+o5I)][t0J][q1X]+50)}
,600,function(){m([g[E0X][a3J],g[E0X][O1I]])[O7I]("normal",a);}
);m(g[E0X][(Z4J.V2+A8I)])[r0I]((Q4J+M3J+u3I+Z4J.l0X+j3+N7I+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J));m(g[(E0X)][O1I])[(C1I+Z4J.F1I+w8)]("click.DTED_Lightbox");m("div.DTED_Lightbox_Content_Wrapper",g[(F0X+S7)][(i4I+Z4J.Y8+k6I+g6I+Z4J.o6I)])[(O3J+N8+h5J)]((Q4J+S3I+z9J+Z4J.l0X+j3+X7+i3J+U5+S3I+X1+M6I+F2));m(j)[r0I]("resize.DTED_Lightbox");}
,_findAttachRow:function(){var v3I="dt",a=m(g[(F0X+I6I)][Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]();return g[(Z4J.V2+M7J)][a7I]==="head"?a[Q2X]()[(Q0I+b4+Q2)]():g[u5J][Z4J.n6I][V8J]===(Z4J.V2+Z4J.o6I+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)?a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)]()[(W7X+l8)]():a[o1](g[(F4+v3I+Z4J.q2)][Z4J.n6I][z4X])[(W9I+Z4J.q2)]();}
,_dte:null,_ready:!1,_cssBackgroundOpacity:1,_dom:{wrapper:m((x5+m2I+v3+q2X+B2I+Z2J+i8X+c2+V1X+q2X+c2+K3I+p0J+v9I+p2+x3J+s5X+H4+H7J+H7J+m8I+G9J+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+c2+r6I+V5X+p4I+E2+i8I+l4+Y1+m2I+d9I+R7J+G6I+Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+C4J+p2+d9I+H7J+m8I+I1X+v0J+q4I+m2I+d9I+Y3X+N6J+Z1I+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+V5X+M8X+Y7J+B5+d9I+H7J+s9J+o8J+c0X+q4I+S6+T+Z1I+m2I+v3+o9+m2I+T7I+Y7J+y2))[0],background:m((x5+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+c2+n2+v9I+p2+d9I+B4I+L8+Q4I+i4J+D6X+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2))[0],close:m((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+J3+Y7J+X2X+B4I+U7J+d9I+u2I+Z9+c0X+T7I+A9I+A0+C8X+m2I+T7I+Y7J+y2))[0],content:null}
}
);g=f[(S0+E0I)][(J6+Z4J.w1I+k6I+Z4J.q2)];g[P0I]={windowPadding:K9I,heightCalc:c3X,attach:(Z4J.o6I+O2),windowScroll:!E0}
;f.prototype.add=function(a,b){var w2I="rder",b2I="nitFi",D9X="'. ",a0o="` ",b0J=" `",A4X="quir",e0X="dding";if(d[(S3I+T8X+Z4J.o6I+Y8X+Z4J.g7I)](a))for(var c=0,e=a.length;c<e;c++)this[(Z4J.Y8+N9I)](a[c]);else{c=a[i1X];if(c===h)throw (L8X+M6+W4J+Z4J.Y8+e0X+W4J+c8I+S3I+Z4J.q2+Z0I+v2I+X6+Q0I+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+Z4J.o6I+Z4J.q2+A4X+B4+W4J+Z4J.Y8+b0J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2+a0o+Z4J.w1I+Q8I+Q7X+Z4J.F1I);if(this[Z4J.n6I][(g5I+Z4J.n6I)][c])throw "Error adding field '"+c+(D9X+U4X+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.Y8+Z4J.z5I+Z4J.o6I+h7I+Z4J.g7I+W4J+Z4J.q2+z0J+S3I+x8+Z4J.n6I+W4J+j0J+Z9X+y3I+W4J+Z4J.i0I+h1I+Z4J.n6I+W4J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2);this[e9]((S3I+b2I+w7+w8),a);this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)][c]=new f[v8I](a,this[(Z4J.V2+l7I+Z4J.n6I+Z4J.n6I+B4)][g5I],this);b===h?this[Z4J.n6I][(u2+y9I+Z4J.o6I)][q7I](c):null===b?this[Z4J.n6I][(u2+w8+Z4J.q2+Z4J.o6I)][(O3J+w5+S3I+c8I+Z4J.i0I)](c):(e=d[a4](b,this[Z4J.n6I][q0X]),this[Z4J.n6I][(Z4J.w1I+w2I)][R7I](e+1,0,c));}
this[(F0X+S3I+H2+l7I+Z4J.g7I+i0o+Z4J.w1I+Z4J.o6I+w8+Z4J.q2+Z4J.o6I)](this[(u2+w8+Q2)]());return this;}
;f.prototype.background=function(){var O8X="grou",C0X="onBa",a=this[Z4J.n6I][M9][(C0X+z9J+O8X+Z4J.F1I+w8)];(N8+Z4J.z5I+Z4J.R0I+Z4J.o6I)===a?this[T6]():d5I===a?this[(J1X+Z4J.q2)]():(Z4+o5I+S3I+Z4J.i0I)===a&&this[(Z4J.n6I+Z4J.R0I+v2X+Z9X)]();return this;}
;f.prototype.blur=function(){var g2="_bl";this[(g2+Z4J.R0I+Z4J.o6I)]();return this;}
;f.prototype.bubble=function(a,b,c,e){var A3J="ostop",A4I="clu",K2="anima",q3X="bubbleP",s2X="prepend",G8I="bod",O8J="dTo",K7I='" /></div></div><div class="',D8I="able",q4="lin",S1X='"><div/></div>',z9X="bg",T9J="ses",N2I="bleNode",j8="resize.",f3I="_formO",H5X="dual",G8J="ivi",D6I="Pl",g2X="boolean",T5X="je",U9I="_tidy",l=this;if(this[U9I](function(){l[(N8+u0J+N8+Z4J.z5I+Z4J.q2)](a,b,e);}
))return this;d[(r9X+i1+l7I+Y0o+s1+N8+T5X+i8J)](b)?(e=b,b=h,c=!E0):g2X===typeof b&&(c=b,e=b=h);d[(r9X+D6I+Z4J.Y8+S3I+Z4J.F1I+s1+N8+Z4J.i5I+Z4J.q2+i8J)](c)&&(e=c,c=!E0);c===h&&(c=!E0);var e=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)]({}
,this[Z4J.n6I][h3][(N8+Z4J.R0I+e6)],e),k=this[(F4+w8+h2+R0+E5J+Z4J.V2+Z4J.q2)]((h5J+G8J+H5X),a,b);this[Z7I](a,k,(L5X+N8+N8+m0I));if(!this[(F4+G0J+Z4J.q2+Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)]((L5X+N8+N8+m0I)))return this;var f=this[(f3I+k6I+Z4J.i0I+J5X)](e);d(j)[(t7)](j8+f,function(){var S4I="eP";l[(N8+S2X+Z4J.z5I+S4I+F8+X3+Z4J.w1I+Z4J.F1I)]();}
);var i=[];this[Z4J.n6I][(N8+Z4J.R0I+N8+N2I+Z4J.n6I)]=i[o1I][(e0+k6I+Z4J.z5I+Z4J.g7I)](i,y(k,a7I));i=this[(Q4J+Z4J.Y8+Z4J.n6I+T9J)][z3X];k=d((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[z9X]+S1X);i=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X)+i[(b1X+h1X)]+(b0X+m2I+v3+q2X+B2I+Z2J+i8X)+i[(q4+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X)+i[(Z4J.i0I+D8I)]+(b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[(J1X+Z4J.q2)]+K7I+i[(E7I+S3I+Z4J.F1I+Z4J.i0I+Q2)]+(s4X+m2I+v3+y2));c&&(i[(Z4J.Y8+k6I+K4X+V2I)]((N8+i2X)),k[(Z4J.Y8+k6I+A6X+O8J)]((G8I+Z4J.g7I)));var c=i[(O9J+G6J+w8+C3X+Z4J.F1I)]()[(Z4J.q2+j1I)](E0),g=c[(Z4J.V2+y3I+G6J+J4I+q8)](),u=g[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]();c[(l4X+w8)](this[Z6J][M6X]);g[(k6I+C3X+k6I+q8+w8)](this[Z6J][y0o]);e[(o5I+B4+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]&&c[s2X](this[(Z6J)][i0X]);e[(Z4J.i0I+W6)]&&c[(k6I+Z4J.o6I+W2+Z4J.q2+Z4J.F1I+w8)](this[Z6J][J0I]);e[w4]&&g[(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(u0o+Q3I+h3X)]);var z=d()[o4J](i)[o4J](k);this[(W4I+Z4J.w1I+u1+v0+P7)](function(){var V3X="animat";z[(V3X+Z4J.q2)]({opacity:E0}
,function(){var v4J="size";z[(w8+Z4J.A4+N4+y3I)]();d(j)[t9J]((C3X+v4J+Z4J.l0X)+f);l[a6I]();}
);}
);k[F3J](function(){l[T6]();}
);u[F3J](function(){l[(F4+Z4J.V2+A8I)]();}
);this[(q3X+F8+S3I+Z4J.i0I+s4)]();z[(K2+I6I)]({opacity:N0}
);this[(F4+c8I+Z4J.w1I+v5J+Z4J.n6I)](this[Z4J.n6I][(S3I+Z4J.F1I+A4I+w8+Z4J.q2+o3+S3I+v1J)],e[(c8I+Z4J.w1I+E8)]);this[(F4+k6I+A3J+q8)]((L5X+N8+l3));return this;}
;f.prototype.bubblePosition=function(){var T0I="below",e4J="rW",W1J="_Line",a=d((w8+S3I+g0J+Z4J.l0X+j3+X7+F4+p1X+L7X+Z4J.z5I+Z4J.q2)),b=d((I1+Z4J.l0X+j3+X6+u3+F4+p1X+N8+N8+m0I+W1J+Z4J.o6I)),c=this[Z4J.n6I][(N8+S2X+Z4J.z5I+P2I+G1+Z4J.q2+Z4J.n6I)],e=0,l=0,k=0,f=0;d[(J5I+O9J)](c,function(a,b){var f7I="Wid",c=d(b)[(d6+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I)]();e+=c.top;l+=c[s2I];k+=c[(m0I+f2)]+b[(Z4J.w1I+f4+Z4J.n6I+Z4J.A4+f7I+Z4J.i0I+y3I)];f+=c.top+b[(Z4J.w1I+c8I+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I+w7I+S3I+Z8I+y3I+Z4J.i0I)];}
);var e=e/c.length,l=l/c.length,k=k/c.length,f=f/c.length,c=e,i=(l+k)/2,g=b[(y4+Z4J.i0I+Z4J.q2+e4J+S3I+w8+Z4J.i0I+y3I)](),u=i-g/2,g=u+g,h=d(j).width();a[(Z4J.V2+Z4J.n6I+Z4J.n6I)]({top:c,left:i}
);b.length&&0>b[(Z4J.w1I+c8I+C2+Z4J.q2+Z4J.i0I)]().top?a[v3J]("top",f)[(o4J+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((N8+w7+Z4J.w1I+j0J)):a[(Z4J.o6I+Q8+Z4J.w1I+l9J+n1+Z4J.n6I)]((T0I));g+15>h?b[(Z4J.V2+t8)]("left",15>u?-(u-15):-(g-h+15)):b[(Z4J.V2+t8)]((m0I+f2),15>u?-(u-15):0);return this;}
;f.prototype.buttons=function(a){var b=this;E6J===a?a=[{label:this[k1I][this[Z4J.n6I][V8J]][(Z4J.n6I+Z4J.R0I+l6X)],fn:function(){this[(Z4+o5I+Z9X)]();}
}
]:d[(Y3I+Y8X+Z4J.g7I)](a)||(a=[a]);d(this[(Z6J)][w4]).empty();d[s8X](a,function(a,e){var W3I="keypress",x8X="keyup",y8I="lassN";(Z4J.n6I+Z4J.i0I+b7J+Z8I)===typeof e&&(e={label:e,fn:function(){this[(Z4J.n6I+Z4J.R0I+N8+o5I+S3I+Z4J.i0I)]();}
}
);d((M4X+N8+Z4J.R0I+Z4J.i0I+Q3I+Z4J.F1I+i9X),{"class":b[T4][(a8I+o5I)][(N8+P2X+Z4J.w1I+Z4J.F1I)]+(e[(Z4J.V2+y8I+a0+Z4J.q2)]?W4J+e[(Z4J.V2+Z4J.z5I+Z4J.Y8+t8+J1+Z4J.Y8+A1J)]:g0I)}
)[(y3I+Z4J.i0I+t3J)](Z4J.T5J===typeof e[s0I]?e[(s0I)](b):e[(Z4J.z5I+Z4J.w2+w7)]||g0I)[l5X]((Z4J.i0I+Z4J.w2+S3I+Z4J.F1I+y9I+z0J),E0)[(Z4J.w1I+Z4J.F1I)](x8X,function(a){a2I===a[(l6+Z4J.g7I+G4X+G1+Z4J.q2)]&&e[(Z4J.h0I)]&&e[(Z4J.h0I)][(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](b);}
)[t7](W3I,function(a){a2I===a[D2J]&&a[F1]();}
)[t7]((Z4J.V2+Z4J.z5I+S3I+z9J),function(a){a[F1]();e[(Z4J.h0I)]&&e[(c8I+Z4J.F1I)][(d5J+Z4J.z5I)](b);}
)[(e0+k6I+Z4J.q2+F9X+V2I)](b[Z6J][(L5X+X4J+Z4J.F1I+Z4J.n6I)]);}
);return this;}
;f.prototype.clear=function(a){var R8X="fie",b=this,c=this[Z4J.n6I][(R8X+Z4J.z5I+w8+Z4J.n6I)];X3X===typeof a?(c[a][(y9I+z6X+Z4J.w1I+Z4J.g7I)](),delete  c[a],a=d[(Y0o+X0+Y8X+Z4J.g7I)](a,this[Z4J.n6I][(i5X+Z4J.o6I)]),this[Z4J.n6I][(u2+y9I+Z4J.o6I)][R7I](a,N0)):d[s8X](this[C7I](a),function(a,c){var k2I="clear";b[k2I](c);}
);return this;}
;f.prototype.close=function(){this[w3X](!N0);return this;}
;f.prototype.create=function(a,b,c,e){var C1J="Open",X8J="ybe",u6="leM",O0J="Cr",Z6X="vent",Q9="_dis",K8="_actionClass",c9I="Arg",T7X="ru",l=this,k=this[Z4J.n6I][Y8I],f=N0;if(this[(F4+Z4J.i0I+C8I)](function(){l[d0I](a,b,c,e);}
))return this;y9X===typeof a&&(f=a,a=b,b=c);this[Z4J.n6I][(R0J+o3+m1J+Z4J.n6I)]={}
;for(var i=E0;i<f;i++)this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+I5J+w5I)][i]={fields:this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)]}
;f=this[(F4+Z4J.V2+T7X+w8+c9I+Z4J.n6I)](a,b,c,e);this[Z4J.n6I][(Z4J.Y8+i8J+S3I+Z4J.w1I+Z4J.F1I)]=(m3J+J5I+I6I);this[Z4J.n6I][z4X]=c3X;this[(w8+S7)][(c8I+Z4J.w1I+t6X)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][p6J]=h3J;this[K8]();this[(Q9+M7I+Z4J.Y8+Z4J.g7I+i0o+Z4J.w1I+I3X+Q2)](this[(b9+Z4J.q2+Z0I+Z4J.n6I)]());d[(e9I+y3I)](k,function(a,b){var N2="eset",k9J="iR";b[(o5I+Z4J.R0I+S2J+k9J+N2)]();b[(u1+Z4J.i0I)](b[D1I]());}
);this[(N9J+Z6X)]((Y0o+Z9X+O0J+J5I+I6I));this[(F4+Z4J.Y8+Z4J.n6I+Z4J.n6I+Q8+N8+u6+Z4J.Y8+S3I+Z4J.F1I)]();this[x6X](f[(Z4J.w1I+Q8I+Z4J.n6I)]);f[(o5I+Z4J.Y8+X8J+C1J)]();return this;}
;f.prototype.dependent=function(a,b,c){if(d[(Y3I+Z4J.o6I+y3)](a)){for(var e=0,l=a.length;e<l;e++)this[(w8+W2+C5I+q8+Z4J.i0I)](a[e],b,c);return this;}
var k=this,f=this[(b9+Q9X)](a),i={type:"POST",dataType:"json"}
,c=d[(K8X+Z4J.F1I+w8)]({event:"change",data:null,preUpdate:null,postUpdate:null}
,c),g=function(a){var T0X="pdate",S6J="Upd",k4="rror",l4I="preUpdate",U8="eUpd";c[(G0J+U8+Z4J.Y8+I6I)]&&c[l4I](a);d[s8X]({labels:(b3I+w7),options:"update",values:(g0J+X0I),messages:"message",errors:(Z4J.q2+k4)}
,function(b,c){a[b]&&d[(J5I+Z4J.V2+y3I)](a[b],function(a,b){k[(c8I+S3I+Q9X)](a)[c](b);}
);}
);d[s8X](["hide","show","enable",(w8+S3I+Z4J.n6I+Z4J.w2+Z4J.z5I+Z4J.q2)],function(b,c){if(a[c])k[c](a[c]);}
);c[(m0J+Z4J.i0I+S6J+Z4J.Y8+Z4J.i0I+Z4J.q2)]&&c[(m0J+Z4J.i0I+D7+T0X)](a);}
;d(f[o0o]())[(Z4J.w1I+Z4J.F1I)](c[(Z4J.q2+k6+Z4J.i0I)],function(a){if(-1!==d[a4](a[(Z4J.i0I+u2J+Z4J.q2+Z4J.i0I)],f[j0X]()[(Q3I+T0)]())){a={}
;a[C6X]=k[Z4J.n6I][(R0J+o3+e6J+r7I)]?y(k[Z4J.n6I][Z3J],(Z4J.C6J+Z4J.i0I+Z4J.Y8)):null;a[o1]=a[C6X]?a[(k7X+j0J+Z4J.n6I)][0]:null;a[(e7J+B8I+Z4J.n6I)]=k[y1]();if(c.data){var e=c.data(a);e&&(c.data=e);}
(c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b?(a=b(f[(y1)](),a,g))&&g(a):(d[T3J](b)?d[(p5+N5X+w8)](i,b):i[(Z4J.R0I+G6X)]=b,d[(Y7+F5)](d[(p5+Z4J.i0I+Z4J.q2+F9X)](i,{url:b,data:a,success:g}
)));}
}
);return this;}
;f.prototype.disable=function(a){var b=this[Z4J.n6I][Y8I];d[s8X](this[C7I](a),function(a,e){b[e][(w8+S3I+Z4J.n6I+G1I+Z4J.q2)]();}
);return this;}
;f.prototype.display=function(a){return a===h?this[Z4J.n6I][R8J]:this[a?Y5X:(J1X+Z4J.q2)]();}
;f.prototype.displayed=function(){return d[(A9J+k6I)](this[Z4J.n6I][Y8I],function(a,b){return a[R8J]()?b:c3X;}
);}
;f.prototype.displayNode=function(){var R4I="yCo";return this[Z4J.n6I][(N9+Z4J.z5I+Z4J.Y8+R4I+Z4J.F1I+Z4J.i0I+Z4J.o6I+A0I+m0I+Z4J.o6I)][(Z4J.F1I+G1+Z4J.q2)](this);}
;f.prototype.edit=function(a,b,c,e,d){var D5="ayb",a5J="ormOpt",e7="_assembleMain",x3="aSo",g0="rgs",y6X="crudA",m1I="_ti",k=this;if(this[(m1I+g3I)](function(){k[(u9+S3I+Z4J.i0I)](a,b,c,e,d);}
))return this;var f=this[(F4+y6X+g0)](b,c,e,d);this[Z7I](a,this[(F4+Z4J.C6J+Z4J.i0I+x3+Z4J.R0I+Z4J.o6I+Z9J)]((c8I+S3I+Z4J.q2+Z4J.z5I+w5I),a),(A9J+S3I+Z4J.F1I));this[e7]();this[(B9J+a5J+Q7X+Z4J.F1I+Z4J.n6I)](f[(V7+Z4J.I2I)]);f[(o5I+D5+Z4J.q2+s1+A6X)]();return this;}
;f.prototype.enable=function(a){var b=this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)];d[(e9I+y3I)](this[C7I](a),function(a,e){b[e][(q8+Z4J.Y8+N8+m0I)]();}
);return this;}
;f.prototype.error=function(a,b){var L0I="mE";b===h?this[(F4+o5I+B4+Z4J.n6I+L9+Z4J.q2)](this[(w8+Z4J.w1I+o5I)][(a8I+L0I+Z4J.o6I+Z4J.o6I+u2)],a):this[Z4J.n6I][Y8I][a].error(b);return this;}
;f.prototype.field=function(a){return this[Z4J.n6I][Y8I][a];}
;f.prototype.fields=function(){return d[(I0)](this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)],function(a,b){return b;}
);}
;f.prototype.get=function(a){var H3="Arr",b=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)];a||(a=this[(v7+w5I)]());if(d[(S3I+Z4J.n6I+H3+Z4J.Y8+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){c[d]=b[d][(n6+Z4J.i0I)]();}
);return c;}
return b[a][R5]();}
;f.prototype.hide=function(a,b){var r9J="dNam",C4="_fi",c=this[Z4J.n6I][Y8I];d[(s8X)](this[(C4+w7+r9J+B4)](a),function(a,d){c[d][(y3I+S3I+y9I)](b);}
);return this;}
;f.prototype.inError=function(a){var w6J="inError",J8X="isi",s0="rmE";if(d(this[(w8+Z4J.w1I+o5I)][(s8+s0+Z4J.o6I+Z4J.o6I+u2)])[r9X]((J0o+g0J+J8X+B2X+Z4J.q2)))return !0;for(var b=this[Z4J.n6I][(c8I+e6J+Z4J.z5I+w5I)],a=this[C7I](a),c=0,e=a.length;c<e;c++)if(b[a[c]][w6J]())return !0;return !1;}
;f.prototype.inline=function(a,b,c){var I0X="_closeReg",S6I="_Fie",m4X="TE_I",J4='_But',P5I='nl',K0I='I',z7='eld',S2='_F',a8='ne',r3='TE_Inli',i7I='nlin',W8X='TE_I',i1I="contents",s3I="_edi",C6="inli",R2X="tid",j1J="nli",y4J="_dat",U8X="inl",e=this;d[T3J](b)&&(c=b,b=h);var c=d[H3I]({}
,this[Z4J.n6I][h3][(U8X+S3I+G9X)],c),l=this[(y4J+Z4J.Y8+R0+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z9J)]("individual",a,b),k,f,i=0,g,u=!1;d[s8X](l,function(a,b){var e7X="han",c8X="ore",y5X="annot";if(i>0)throw (G4X+y5X+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+e7X+W4J+Z4J.w1I+G9X+W4J+Z4J.o6I+O2+W4J+S3I+j1J+G9X+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);k=d(b[a7I][0]);g=0;d[s8X](b[y0X],function(a,b){var N8X="nn",K2J="Ca";if(g>0)throw (K2J+N8X+T8+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+C3I+Z4J.F1I+W4J+Z4J.w1I+G9X+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+S3I+Z4J.F1I+Z4J.z5I+Y5J+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);f=b;g++;}
);i++;}
);if(d("div.DTE_Field",k).length||this[(F4+R2X+Z4J.g7I)](function(){e[(C6+Z4J.F1I+Z4J.q2)](a,b,c);}
))return this;this[(s3I+Z4J.i0I)](a,l,"inline");var z=this[(F4+a8I+v5I+k6I+p9X+Z4J.F1I+Z4J.n6I)](c);if(!this[b6I]((C6+Z4J.F1I+Z4J.q2)))return this;var O=k[i1I]()[(y9I+Z4J.i0I+Z4J.Y8+O9J)]();k[(Z4J.Y8+N0J+Z4J.q2+F9X)](d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+r6I+E2+q2X+c2+W8X+i7I+m8I+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r3+a8+S2+T7I+z7+e4X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X+c2+K3I+p4I+K0I+P5I+T7I+a8+J4+c0X+o8J+n9J+t3X+m2I+v3+y2)));k[T9X]((w8+S3I+g0J+Z4J.l0X+j3+m4X+j1J+G9X+S6I+Z0I))[w1X](f[(o8X+y9I)]());c[w4]&&k[(K3J+w8)]("div.DTE_Inline_Buttons")[(K1X+Z4J.q2+F9X)](this[Z6J][w4]);this[I0X](function(a){u=true;d(q)[(t9J)]((Q4J+S3I+z9J)+z);if(!a){k[(Z4J.V2+S3J+Z4J.q2+Z4J.F1I+Z4J.I2I)]()[K7X]();k[w1X](O);}
e[a6I]();}
);setTimeout(function(){if(!u)d(q)[t7]((Q4J+M3J+u3I)+z,function(a){var s9I="aren",H2X="peFn",x9="addBack",b=d[(c8I+Z4J.F1I)][x9]?"addBack":"andSelf";!f[(L9J+H2X)]("owns",a[(Z4J.i0I+u2J+Z4J.A4)])&&d[(S3I+Z4J.F1I+X0+Z4J.o6I+Z4J.Y8+Z4J.g7I)](k[0],d(a[(B7+Z4J.o6I+n6+Z4J.i0I)])[(k6I+s9I+Z4J.i0I+Z4J.n6I)]()[b]())===-1&&e[(T6)]();}
);}
,0);this[v6I]([f],c[(c8I+t0+q5J)]);this[(j6J+F8+Q3I+A6X)]((Y0o+Z4J.z5I+Y5J));return this;}
;f.prototype.message=function(a,b){var R0X="formInf",s5="_message";b===h?this[s5](this[(w8+Z4J.w1I+o5I)][(R0X+Z4J.w1I)],a):this[Z4J.n6I][Y8I][a][(w6+Z4J.n6I+i5)](b);return this;}
;f.prototype.mode=function(){return this[Z4J.n6I][V8J];}
;f.prototype.modifier=function(){var T4I="ier";return this[Z4J.n6I][(o5I+Z4J.w1I+w8+S3I+c8I+T4I)];}
;f.prototype.multiGet=function(a){var j7="Get",b=this[Z4J.n6I][Y8I];a===h&&(a=this[(c8I+S3I+w7+w8+Z4J.n6I)]());if(d[(r9X+U4X+P8J+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){var f8="tiG";c[d]=b[d][(p6+f8+Z4J.q2+Z4J.i0I)]();}
);return c;}
return b[a][(o5I+I8I+S3I+j7)]();}
;f.prototype.multiSet=function(a,b){var l9X="Objec",t7J="Plain",c=this[Z4J.n6I][Y8I];d[(S3I+Z4J.n6I+t7J+l9X+Z4J.i0I)](a)&&b===h?d[(J5I+Z4J.V2+y3I)](a,function(a,b){var A3="tiS";c[a][(p6+A3+Z4J.A4)](b);}
):c[a][C2J](b);return this;}
;f.prototype.node=function(a){var b=this[Z4J.n6I][(b9+v1J)];a||(a=this[(Z4J.w1I+Z4J.o6I+l8)]());return d[(w2J+U9X+Z4J.Y8+Z4J.g7I)](a)?d[(I0)](a,function(a){return b[a][(Z4J.F1I+G1+Z4J.q2)]();}
):b[a][(Z4J.F1I+O1X)]();}
;f.prototype.off=function(a,b){var c0J="ntN";d(this)[(Z4J.w1I+f4)](this[(N9J+g0J+Z4J.q2+c0J+a0+Z4J.q2)](a),b);return this;}
;f.prototype.on=function(a,b){d(this)[(t7)](this[(F4+f0X+Z4J.F1I+J8+Z4J.Y8+o5I+Z4J.q2)](a),b);return this;}
;f.prototype.one=function(a,b){d(this)[j7J](this[(F4+Z4J.q2+k6+J8+Z4J.Y8+A1J)](a),b);return this;}
;f.prototype.open=function(){var h9="ditO",W8="mai",U7I="seReg",I2="_clo",d7="eor",f3="splay",a=this;this[(F0X+S3I+f3+v0+d7+w8+Z4J.q2+Z4J.o6I)]();this[(I2+U7I)](function(){a[Z4J.n6I][(H0J+H2+c5J+G4X+S3J+k7X+Z4J.z5I+Z4J.z5I+Z4J.q2+Z4J.o6I)][(Z4J.V2+K8I+u1)](a,function(){var L1J="yna",o4X="arD",m9="_cle";a[(m9+o4X+L1J+o5I+S3I+Z4J.V2+s3X+s8)]();}
);}
);if(!this[b6I]((W8+Z4J.F1I)))return this;this[Z4J.n6I][(w8+t0o+y3+N7J+g3X+k7X+Z4J.z5I+Z4J.z5I+Q2)][(Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)](this,this[Z6J][(j0J+Z4J.o6I+e0+k6I+Q2)]);this[v6I](d[(o5I+e0)](this[Z4J.n6I][(i5X+Z4J.o6I)],function(b){return a[Z4J.n6I][(c8I+S3I+w7+w8+Z4J.n6I)][b];}
),this[Z4J.n6I][(Z4J.q2+h9+k6I+Z4J.i0I+Z4J.n6I)][O6I]);this[(j6J+Z4J.w1I+E8X+A6X)]((e2J));return this;}
;f.prototype.order=function(a){var J0X="ide",E6I="sort",P7X="ort",t2="sArra";if(!a)return this[Z4J.n6I][q0X];arguments.length&&!d[(S3I+t2+Z4J.g7I)](a)&&(a=Array.prototype.slice.call(arguments));if(this[Z4J.n6I][q0X][u4I]()[(Z4J.n6I+P7X)]()[W6I](F6X)!==a[(Z4J.n6I+u1I+Z4J.V2+Z4J.q2)]()[E6I]()[W6I](F6X))throw (U4X+Z4J.z5I+Z4J.z5I+W4J+c8I+m1J+Z4J.n6I+p5X+Z4J.Y8+F9X+W4J+Z4J.F1I+Z4J.w1I+W4J+Z4J.Y8+w8+w8+S3I+Z4J.i0I+Q7X+Z4J.F1I+Z4J.Y8+Z4J.z5I+W4J+c8I+S3I+w7+w5I+p5X+o5I+q5J+Z4J.i0I+W4J+N8+Z4J.q2+W4J+k6I+k7X+g0J+J0X+w8+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+I3X+Z4J.q2+M8J+Z4J.l0X);d[H3I](this[Z4J.n6I][q0X],a);this[L3J]();return this;}
;f.prototype.remove=function(a,b,c,e,l){var B3="maybeOpen",M0X="Ma",h4X="emble",m5I="tiRe",n0o="tMul",f3J="ini",F5X="nCl",c8="ditF",e6I="_dataS",I5X="_crudArgs",k=this;if(this[(F4+Z4J.i0I+C8I)](function(){k[V9I](a,b,c,e,l);}
))return this;a.length===h&&(a=[a]);var f=this[I5X](b,c,e,l),i=this[(e6I+E5J+Z9J)]((g5I+Z4J.n6I),a);this[Z4J.n6I][(M1J+S3I+t7)]=(Z4J.o6I+Q8+I4+Z4J.q2);this[Z4J.n6I][z4X]=a;this[Z4J.n6I][(Z4J.q2+c8+m1J+Z4J.n6I)]=i;this[(Z4J.x4I+o5I)][y0o][(Z4J.n6I+Z4J.i0I+Z4J.g7I+Z4J.z5I+Z4J.q2)][(w8+r9X+M7I+y3)]=D9I;this[(y7J+m1+F5X+Z1+Z4J.n6I)]();this[(N9J+l9J+g3X)]((S3I+N1X+Z4J.i0I+i0o+F2X),[y(i,(o8X+y9I)),y(i,(Z4J.C6J+B7)),a]);this[(F4+f0X+Z4J.F1I+Z4J.i0I)]((f3J+n0o+m5I+o5I+I4+Z4J.q2),[i,a]);this[(F4+L1+h4X+M0X+Y0o)]();this[x6X](f[l5J]);f[B3]();f=this[Z4J.n6I][M9];c3X!==f[(s8+Z4J.V2+q5J)]&&d((N8+Z4J.R0I+E2I+t7),this[(Z6J)][(N8+n4J+Z4J.i0I+p3J)])[(Z4J.q2+j1I)](f[O6I])[(O6I)]();return this;}
;f.prototype.set=function(a,b){var c=this[Z4J.n6I][(Y8I)];if(!d[T3J](a)){var e={}
;e[a]=b;a=e;}
d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](a,function(a,b){c[a][Y9J](b);}
);return this;}
;f.prototype.show=function(a,b){var c=this[Z4J.n6I][(c8I+S3I+w7+w5I)];d[(s8X)](this[C7I](a),function(a,d){c[d][(w5+O2)](b);}
);return this;}
;f.prototype.submit=function(a,b,c,e){var l=this,f=this[Z4J.n6I][Y8I],w=[],i=E0,g=!N0;if(this[Z4J.n6I][y2X]||!this[Z4J.n6I][(N4+t1I+t7)])return this;this[(F4+G0J+Z4J.w1I+Y2J+C8)](!E0);var h=function(){w.length!==i||g||(g=!0,l[(n8J+F7X+Z4J.i0I)](a,b,c,e));}
;this.error();d[(e9I+y3I)](f,function(a,b){var N0X="Erro";b[(Y0o+N0X+Z4J.o6I)]()&&w[q7I](a);}
);d[s8X](w,function(a,b){f[b].error("",function(){i++;h();}
);}
);h();return this;}
;f.prototype.title=function(a){var r0="unc",T3="lasses",b=d(this[(w8+Z4J.w1I+o5I)][(W7X+w8+Z4J.q2+Z4J.o6I)])[(Z4J.V2+y3I+S3I+Z4J.z5I+w8+C3X+Z4J.F1I)](F0J+this[(Z4J.V2+T3)][(y3I+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I)][t0J]);if(a===h)return b[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();(c8I+r0+t1I+Z4J.w1I+Z4J.F1I)===typeof a&&(a=a(this,new r[(q1+S3I)](this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])));b[(h0J+Z4J.z5I)](a);return this;}
;f.prototype.val=function(a,b){return b===h?this[R5](a):this[Y9J](a,b);}
;var p=r[m7J][h5X];p((Z4J.q2+w8+n2I+G2X),function(){return v(this);}
);p((k7X+j0J+Z4J.l0X+Z4J.V2+Z4J.o6I+J5I+Z4J.i0I+Z4J.q2+G2X),function(a){var b=v(this);b[(A1X+Z4J.Y8+Z4J.i0I+Z4J.q2)](B(b,a,(Z4J.V2+C3X+z1+Z4J.q2)));return this;}
);p(w4I,function(a){var b=v(this);b[(Z4J.q2+w8+Z9X)](this[E0][E0],B(b,a,(Z4J.q2+H0J+Z4J.i0I)));return this;}
);p((Z4J.o6I+O2+Z4J.n6I+l2X+Z4J.q2+w8+S3I+Z4J.i0I+G2X),function(a){var b=v(this);b[R0J](this[E0],B(b,a,(u9+Z9X)));return this;}
);p((o1+l2X+w8+Z4J.q2+m0I+I6I+G2X),function(a){var b=v(this);b[V9I](this[E0][E0],B(b,a,V9I,N0));return this;}
);p((C6X+l2X+w8+Z4J.q2+Z4J.z5I+Y0X+G2X),function(a){var b=v(this);b[V9I](this[0],B(b,a,"remove",this[0].length));return this;}
);p(T3I,function(a,b){var p0X="nl";a?d[T3J](a)&&(b=a,a=(S3I+p0X+S3I+Z4J.F1I+Z4J.q2)):a=(S3I+p0X+Y0o+Z4J.q2);v(this)[a](this[E0][E0],b);return this;}
);p((G1J+l2X+Z4J.q2+o6+G2X),function(a){v(this)[z3X](this[E0],a);return this;}
);p(w0J,function(a,b){return f[(J8J+B4)][a][b];}
);p((J8J+Z4J.q2+Z4J.n6I+G2X),function(a,b){var f6X="les";if(!a)return f[(J8J+Z4J.q2+Z4J.n6I)];if(!b)return f[(c8I+S3I+f6X)][a];f[G0I][a]=b;return this;}
);d(q)[t7](R3,function(a,b,c){var C0o="ile";(w8+Z4J.i0I)===a[(i1X+Z4J.n6I+k6I+Z4J.Y8+Z9J)]&&c&&c[(c8I+C0o+Z4J.n6I)]&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](c[(b9+m0I+Z4J.n6I)],function(a,b){f[(b9+Z4J.z5I+Z4J.q2+Z4J.n6I)][a]=b;}
);}
);f.error=function(a,b){var Q5J="bles",q5X="atat",h0X="://",w8I="ps";throw b?a+(W4J+o3+u2+W4J+o5I+Z4J.w1I+C3X+W4J+S3I+Z4J.F1I+c8I+Z4J.w1I+Z4J.o6I+o5I+n9+Z4J.w1I+Z4J.F1I+p5X+k6I+Z4J.z5I+J5I+u1+W4J+Z4J.o6I+Z4J.q2+c8I+Z4J.q2+Z4J.o6I+W4J+Z4J.i0I+Z4J.w1I+W4J+y3I+E2I+w8I+h0X+w8+q5X+Z4J.Y8+Q5J+Z4J.l0X+Z4J.F1I+Z4J.q2+Z4J.i0I+w0X+Z4J.i0I+Z4J.F1I+w0X)+b:a;}
;f[z4J]=function(a,b,c){var e,l,f,b=d[(Z4J.q2+z0J+I6I+F9X)]({label:(Z4J.z5I+Z4J.w2+w7),value:"value"}
,b);if(d[(S3I+Z4J.n6I+T0)](a)){e=0;for(l=a.length;e<l;e++)f=a[e],d[(r9X+i1+l7I+Y0o+s1+Z4J.c4X+K3X)](f)?c(f[b[o0X]]===h?f[b[(Z4J.z5I+Z4J.w2+w7)]]:f[b[(o0X)]],f[b[s0I]],e):c(f,f,e);}
else e=0,d[s8X](a,function(a,b){c(b,a,e);e++;}
);}
;f[(Z4J.n6I+Z4J.Y8+p1+x1+w8)]=function(a){return a[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+N4+Z4J.q2)](/\./g,F6X);}
;f[r2]=function(a,b,c,e,l){var L4X="readAsDataURL",c0o="<i>Uploading file</i>",L0J="Te",k=new FileReader,w=E0,i=[];a.error(b[(r4I+Z4J.q2)],"");e(b,b[(b9+Z4J.z5I+Z4J.q2+i0o+b4+L0J+z0J+Z4J.i0I)]||c0o);k[(t7+Z4J.z5I+Z4J.w1I+b4)]=function(){var r2J="rro",u0X="son",R2J="reS",R1I="ied",Z1X="No",O3X="ja",d7J="ajax",U4I="aja",V2X="ajaxData",I1J="uploadField",P4I="ploa",g=new FormData,h;g[w1X]((M1J+s4),(Z4J.R0I+P4I+w8));g[(Z4J.Y8+X1I+w8)](I1J,b[i1X]);g[(f1+Z4J.F1I+w8)](r2,c[w]);b[V2X]&&b[(Z4J.Y8+Y9I+Z)](g);if(b[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)])h=b[(Z4J.Y8+Y9I)];else if((x8+Z4J.o6I+B8J)===typeof a[Z4J.n6I][(U4I+z0J)]||d[T3J](a[Z4J.n6I][d7J]))h=a[Z4J.n6I][(Z4J.Y8+O3X+z0J)];if(!h)throw (Z1X+W4J+U4X+O3X+z0J+W4J+Z4J.w1I+Q8I+s4+W4J+Z4J.n6I+k6I+Z4J.q2+Z4J.V2+t1J+R1I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8+W4J+k6I+U4J+Z8I+F6X+S3I+Z4J.F1I);(Z4J.n6I+Z4J.i0I+Z4J.o6I+B8J)===typeof h&&(h={url:h}
);var z=!N0;a[t7]((k6I+R2J+Z4J.R0I+N8+o5I+Z9X+Z4J.l0X+j3+X7+F4+D7+k6I+Z4J.z5I+y5J),function(){z=!E0;return !N0;}
);d[(Z4J.Y8+Y9I)](d[(Z4J.q2+z0+F9X)]({}
,h,{type:(E7I+x8),data:g,dataType:(Z4J.i5I+u0X),contentType:!1,processData:!1,xhr:function(){var Q0J="onloadend",g7="ogr",T6J="pload",D4X="axSe",a=d[(Y7+D4X+Z4J.i0I+t1I+x3X)][(z0J+y3I+Z4J.o6I)]();a[(Z4J.R0I+T6J)]&&(a[(s3J+K8I+Z4J.Y8+w8)][(Z4J.w1I+Z4J.F1I+G0J+g7+Z4J.q2+Z4J.n6I+Z4J.n6I)]=function(a){var v1I="toFixed",r5X="loaded",k7I="lengthComputable";a[k7I]&&(a=(100*(a[r5X]/a[(Q3I+Z4J.i0I+Z4J.Y8+Z4J.z5I)]))[v1I](0)+"%",e(b,1===c.length?a:w+":"+c.length+" "+a));}
,a[r2][Q0J]=function(){e(b);}
);return a;}
,success:function(e){var I8="aURL",q6="adAsD",X0X="cc";a[(t9J)]("preSubmit.DTE_Upload");if(e[z0o]&&e[(c8I+S3I+Z4J.q2+Z0I+u3+U9X+Z4J.w1I+Z4J.o6I+Z4J.n6I)].length)for(var e=e[(v7+w8+u3+r2J+B9X)],g=0,h=e.length;g<h;g++)a.error(e[g][i1X],e[g][t9I]);else e.error?a.error(e.error):!e[r2]||!e[(r2)][(S3I+w8)]?a.error(b[(g7X+o5I+Z4J.q2)],(U4X+W4J+Z4J.n6I+Q2+l9J+Z4J.o6I+W4J+Z4J.q2+Z4J.o6I+Z4J.o6I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+X0X+Z4J.R0I+U9X+Z4J.q2+w8+W4J+j0J+y3I+S3I+Z4J.z5I+Z4J.q2+W4J+Z4J.R0I+k6I+Z4J.z5I+h6+w8+B8J+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+S3I+m0I)):(e[G0I]&&d[(e9I+y3I)](e[G0I],function(a,b){f[(J8J+B4)][a]=b;}
),i[(l2I+Z4J.n6I+y3I)](e[(s3J+Z4J.z5I+Z4J.w1I+Z4J.Y8+w8)][J1J]),w<c.length-1?(w++,k[(C3X+q6+Z4J.Y8+Z4J.i0I+I8)](c[w])):(l[(Z4J.V2+u7X)](a,i),z&&a[f0o]()));}
,error:function(){var O5J="rre";a.error(b[i1X],(U4X+W4J+Z4J.n6I+Q2+g0J+Q2+W4J+Z4J.q2+r2J+Z4J.o6I+W4J+Z4J.w1I+Z4J.V2+v5J+O5J+w8+W4J+j0J+h1I+m0I+W4J+Z4J.R0I+k6I+K8I+Z4J.Y8+H0J+Z4J.F1I+Z8I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+G6J+Z4J.q2));}
}
));}
;k[L4X](c[E0]);}
;f.prototype._constructor=function(a){var M2J="initComplete",W8J="trol",C3J="xhr",w5J="nT",O1J="init.dt.dte",R9X="body_content",c7="oo",a6J="form_content",F3="formC",M0="events",m6I="reat",S2I="TableTools",E1J='but',y5I='fo',o2X='_i',D9J='orm',z2J='error',L4='_co',q9='rm',z1X="ter",V9J="footer",K8J='oo',k0I='nt',H1I='conte',b3X='ody',t7I='rocess',c9J="legacyAjax",z7I="rmOption",V2J="dataSources",Z6="Url",Y0="domTab",y7="dels";a=d[H3I](!E0,{}
,f[A2],a);this[Z4J.n6I]=d[(X0J+w8)](!E0,{}
,f[(Z8J+y7)][(Z4J.n6I+Z4J.A4+t1I+x3X)],{table:a[(Y0+m0I)]||a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)],dbTable:a[m3]||c3X,ajaxUrl:a[(Z4J.Y8+Y9I+Z6)],ajax:a[(Z4J.Y8+Y9I)],idSrc:a[(S3I+w8+R0+Z4J.o6I+Z4J.V2)],dataSource:a[(w8+S7+W+l3)]||a[Q2X]?f[V2J][g9]:f[V2J][z6I],formOptions:a[(s8+z7I+Z4J.n6I)],legacyAjax:a[c9J]}
);this[(Q4J+Z4J.Y8+t8+Z4J.q2+Z4J.n6I)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,f[(Q4J+L1+Z4J.q2+Z4J.n6I)]);this[(D1X+Z4J.F1I)]=a[(S3I+G5+Z4J.F1I)];var b=this,c=this[T4];this[(w8+S7)]={wrapper:d('<div class="'+c[(C9X+b4I+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+H7J+t7I+T7I+v9I+P0J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(G0J+t0+Z4J.q2+Z4J.n6I+C8)][(S3I+Z4J.F1I+w8+M3J+z1+u2)]+(Z1I+m2I+v3+B6I+m2I+v3+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+b3X+k6J+B2I+Z2J+i8X)+c[Q5X][a3J]+(b0X+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+d9I+m2I+F2J+p4I+H1I+k0I+k6J+B2I+t8J+n9J+n9J+i8X)+c[(N8+i2X)][t0J]+(t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+K8J+c0X+k6J+B2I+t8J+e0J+i8X)+c[V9J][(j0J+Z4J.o6I+e0+h1X)]+'"><div class="'+c[(c8I+Z4J.w1I+Z4J.w1I+z1X)][(Z4J.V2+Z4J.w1I+g3X+S9I)]+(t3X+m2I+v3+o9+m2I+v3+y2))[0],form:d((x5+c2I+d9I+q9+q2X+m2I+h1+q4I+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+k6J+B2I+U9+n9J+i8X)+c[(y0o)][(Z4J.i0I+L9)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+L4+v9I+j2J+v9I+c0X+k6J+B2I+U9+n9J+i8X)+c[y0o][t0J]+(t3X+c2I+Q6J+A9I+y2))[0],formError:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+d9I+q9+p4I+z2J+k6J+B2I+P7I+b6+n9J+i8X)+c[(c8I+Z4J.w1I+Z4J.o6I+o5I)].error+(I0J))[0],formInfo:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+o2X+v9I+y5I+k6J+B2I+P7I+o5X+i8X)+c[(s8+Z4J.o6I+o5I)][(S3I+l1X+Z4J.w1I)]+(I0J))[0],header:d('<div data-dte-e="head" class="'+c[J0I][(j0J+Z4J.o6I+e0+k6I+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+Z2J+i8X)+c[J0I][(f2J+Z4J.F1I+I6I+g3X)]+(t3X+m2I+v3+y2))[0],buttons:d((x5+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+p4I+E1J+Z0X+v9I+n9J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(y0o)][w4]+'"/>')[0]}
;if(d[(c8I+Z4J.F1I)][(w8+Z4J.Y8+B7+X6+G1I+Z4J.q2)][(W+N8+m0I+X6+Z4J.w1I+s3)]){var e=d[(c8I+Z4J.F1I)][g9][S2I][A5X],l=this[(D7I+B0o+Z4J.F1I)];d[(s8X)]([(Z4J.V2+m6I+Z4J.q2),R0J,(Z4J.o6I+Z4J.q2+F2X)],function(a,b){var r7X="sButtonText";e[(u9+Z9X+x2J)+b][r7X]=l[b][g8];}
);}
d[(J5I+O9J)](a[(M0)],function(a,c){b[t7](a,function(){var l8I="shift",a=Array.prototype.slice.call(arguments);a[l8I]();c[(Z4J.Y8+N0J+n2J)](b,a);}
);}
);var c=this[(Z6J)],k=c[(j0J+k8I+k6I+Q2)];c[(F3+t7+N5X+Z4J.i0I)]=t(a6J,c[(c8I+Z4J.w1I+t6X)])[E0];c[(c8I+c7+Z4J.i0I+Z4J.q2+Z4J.o6I)]=t(S1J,k)[E0];c[Q5X]=t((N8+Z4J.w1I+w8+Z4J.g7I),k)[E0];c[J9J]=t(R9X,k)[E0];c[(G0J+t0+Z4J.q2+t8+Y0o+Z8I)]=t((k6I+Z4J.o6I+t0+Z4J.q2+Z4J.n6I+n5+Z4J.F1I+Z8I),k)[E0];a[Y8I]&&this[(Z4J.Y8+N9I)](a[Y8I]);d(q)[(Z4J.w1I+Z4J.F1I)](O1J,function(a,c){b[Z4J.n6I][Q2X]&&c[(w5J+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(n6+Z4J.i0I)](E0)&&(c[(F4+u9+S3I+D6J)]=b);}
)[(Z4J.w1I+Z4J.F1I)]((C3J+Z4J.l0X+w8+Z4J.i0I),function(a,c,e){e&&(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]&&c[(w5J+Z4J.w2+m0I)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+l3)])[R5](E0))&&b[(L6J+Q8I+J5X+D7+k6I+w8+Z4J.Y8+Z4J.i0I+Z4J.q2)](e);}
);this[Z4J.n6I][(H0J+A9X+y3+G4X+Z4J.w1I+Z4J.F1I+W8J+Z4J.z5I+Z4J.q2+Z4J.o6I)]=f[(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][a[(w8+r9X+k6I+Z4J.z5I+Z4J.Y8+Z4J.g7I)]][(S3I+Z4J.F1I+S3I+Z4J.i0I)](this);this[i2](M2J,[]);}
;f.prototype._actionClass=function(){var L6X="oin",W9X="eCl",T6I="actions",a=this[T4][T6I],b=this[Z4J.n6I][(d9X+t7)],c=d(this[(w8+S7)][a3J]);c[(Z4J.o6I+i2J+g0J+W9X+Z4J.Y8+t8)]([a[d0I],a[R0J],a[(Z4J.o6I+u9X)]][(Z4J.i5I+L6X)](W4J));d0I===b?c[d8J](a[(m3J+R5I+Z4J.q2)]):(Z4J.q2+w8+Z9X)===b?c[d8J](a[(Z4J.q2+o6)]):(Z4J.o6I+Q8+Z4J.w1I+l9J)===b&&c[(Z4J.Y8+w8+w8+X7J+Z1+Z4J.n6I)](a[(J8I+a0X)]);}
;f.prototype._ajax=function(a,b,c){var B4J="param",J2I="rep",d1J="url",H7="Of",q8I="indexOf",c7J="axUr",H8X="ction",d3X="sF",s6X="lain",a8X="idS",U3I="ajaxUrl",G3="so",b0="PO",e={type:(b0+R0+X6),dataType:(Z4J.i5I+G3+Z4J.F1I),data:null,error:c,success:function(a,c,e){var A7I="statu";204===e[(A7I+Z4J.n6I)]&&(a={}
);b(a);}
}
,l;l=this[Z4J.n6I][V8J];var f=this[Z4J.n6I][(Z4J.Y8+Z4J.i5I+F5)]||this[Z4J.n6I][U3I],g=(R0J)===l||(Z4J.o6I+Z4J.q2+F2X)===l?y(this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+Z4J.q2+Z0I+Z4J.n6I)],(a8X+k5X)):null;d[(S3I+Z4J.n6I+U4X+W1I)](g)&&(g=g[W6I](","));d[(S3I+x7X+s6X+s1+N8+A2J+Z4J.i0I)](f)&&f[l]&&(f=f[l]);if(d[(S3I+d3X+Z4J.R0I+Z4J.F1I+H8X)](f)){var h=null,e=null;if(this[Z4J.n6I][U3I]){var J=this[Z4J.n6I][(Y7+c7J+Z4J.z5I)];J[(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2)]&&(h=J[l]);-1!==h[q8I](" ")&&(l=h[z5X](" "),e=l[0],h=l[1]);h=h[(S7X)](/_id_/,g);}
f(e,h,a,b,c);}
else "string"===typeof f?-1!==f[(S3I+F9X+p5+H7)](" ")?(l=f[(H2+r7)](" "),e[(O4I+g6I)]=l[0],e[(Z4J.R0I+G6X)]=l[1]):e[(Z4J.R0I+Z4J.o6I+Z4J.z5I)]=f:e=d[(X0J+w8)]({}
,e,f||{}
),e[(Z4J.R0I+G6X)]=e[d1J][(J2I+Z4J.z5I+Z4J.Y8+Z9J)](/_id_/,g),e.data&&(c=d[(S3I+Z4J.n6I+X5+M7X+p9X+Z4J.F1I)](e.data)?e.data(a):e.data,a=d[(S3I+Z4J.n6I+o3+Z4J.R0I+Z4J.F1I+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)](e.data)&&c?c:d[(Z4J.q2+z0J+I6I+Z4J.F1I+w8)](!0,a,c)),e.data=a,"DELETE"===e[(Z4J.i0I+O7X+Z4J.q2)]&&(a=d[B4J](e.data),e[(Z4J.R0I+G6X)]+=-1===e[(d1J)][(S3I+Z4J.F1I+y9I+z0J+H7)]("?")?"?"+a:"&"+a,delete  e.data),d[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)](e);}
;f.prototype._assembleMain=function(){var a=this[(Z4J.x4I+o5I)];d(a[a3J])[(S6X+Z4J.q2+Z4J.F1I+w8)](a[(W7X+y9I+Z4J.o6I)]);d(a[(S1J+Q2)])[(Z4J.Y8+N0J+q8+w8)](a[M6X])[w1X](a[(N8+n4J+H5)]);d(a[J9J])[w1X](a[i0X])[w1X](a[(s8+t6X)]);}
;f.prototype._blur=function(){var o4I="eBlur",a=this[Z4J.n6I][M9];!N0!==this[(N9J+g0J+Z4J.q2+g3X)]((k6I+Z4J.o6I+o4I))&&((Z4J.n6I+u0J+P)===a[z5]?this[(Z4J.n6I+Z4J.R0I+N8+P)]():d5I===a[z5]&&this[w3X]());}
;f.prototype._clearDynamicInfo=function(){var f7J="eCla",a=this[T4][(c8I+e6J+Z4J.z5I+w8)].error,b=this[Z4J.n6I][Y8I];d("div."+a,this[Z6J][(j0J+k8I+h1X)])[(Z4J.o6I+Z4J.q2+o5I+Z4J.w1I+g0J+f7J+t8)](a);d[s8X](b,function(a,b){b.error("")[r8I]("");}
);this.error("")[(o5I+Z4J.q2+Z4J.n6I+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]("");}
;f.prototype._close=function(a){var u5X="closeIcb",h0o="eIcb",J3X="seC",d8I="closeC",F5I="preClose";!N0!==this[(G9+Z4J.i0I)](F5I)&&(this[Z4J.n6I][T0o]&&(this[Z4J.n6I][(d8I+N8)](a),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+J3X+N8)]=c3X),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+Z4J.n6I+h0o)]&&(this[Z4J.n6I][u5X](),this[Z4J.n6I][u5X]=c3X),d(Q5X)[(d6+c8I)]((c8I+Z4J.w1I+Z4J.V2+Z4J.R0I+Z4J.n6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+c8I+P2+Z4J.n6I)),this[Z4J.n6I][R8J]=!N0,this[i2]((r0J+u1)));}
;f.prototype._closeReg=function(a){this[Z4J.n6I][T0o]=a;}
;f.prototype._crudArgs=function(a,b,c,e){var V3J="ain",G7X="mOp",Q6="oolea",G2I="Obj",l=this,f,g,i;d[(r9X+i1+Z4J.z5I+Z4J.Y8+Y0o+G2I+K3X)](a)||((N8+Q6+Z4J.F1I)===typeof a?(i=a,a=b):(f=a,g=b,i=c,a=e));i===h&&(i=!E0);f&&l[(t1I+D3I)](f);g&&l[(N8+n4J+Z4J.i0I+t7+Z4J.n6I)](g);return {opts:d[H3I]({}
,this[Z4J.n6I][(a8I+G7X+Z4J.i0I+Q7X+Z4J.F1I+Z4J.n6I)][(o5I+V3J)],a),maybeOpen:function(){i&&l[(Z4J.w1I+A6X)]();}
}
;}
;f.prototype._dataSource=function(a){var u6X="apply",H7X="dataSource",t4="ift",b=Array.prototype.slice.call(arguments);b[(w5+t4)]();var c=this[Z4J.n6I][H7X][a];if(c)return c[u6X](this,b);}
;f.prototype._displayReorder=function(a){var S1="layed",M8="Or",O4="det",K6X="hildr",K0o="includeFields",d9="eFi",B7J="nclud",E1X="formCon",b=d(this[(w8+Z4J.w1I+o5I)][(E1X+Z4J.i0I+Z4J.q2+g3X)]),c=this[Z4J.n6I][(b9+Z4J.q2+Z0I+Z4J.n6I)],e=this[Z4J.n6I][q0X];a?this[Z4J.n6I][(S3I+B7J+d9+w7+w5I)]=a:a=this[Z4J.n6I][K0o];b[(Z4J.V2+K6X+Z4J.q2+Z4J.F1I)]()[(O4+N4+y3I)]();d[s8X](e,function(e,k){var g=k instanceof f[(v1X+Z0I)]?k[(Z4J.F1I+Z4J.Y8+A1J)]():k;-N0!==d[a4](g,a)&&b[w1X](c[g][(Z4J.F1I+Z4J.w1I+y9I)]());}
);this[(F4+Z4J.q2+g0J+q8+Z4J.i0I)]((w8+r9X+E0I+M8+y9I+Z4J.o6I),[this[Z4J.n6I][(w8+r9X+k6I+S1)],this[Z4J.n6I][(N4+Z4J.i0I+Q7X+Z4J.F1I)],b]);}
;f.prototype._edit=function(a,b,c){var j5="ock",b9X="tyl",k8J="modifi",e=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Z4J.n6I)],l=[],f;this[Z4J.n6I][Z3J]=b;this[Z4J.n6I][(k8J+Q2)]=a;this[Z4J.n6I][(Z4J.Y8+m1+Z4J.F1I)]="edit";this[Z6J][y0o][(Z4J.n6I+b9X+Z4J.q2)][p6J]=(N8+Z4J.z5I+j5);this[(F4+Z4J.Y8+i8J+s4+n1+Z4J.n6I)]();d[(Z4J.q2+K0J)](e,function(a,c){var t8I="pus",p7J="multiIds";c[(p6+t1I+v0+Z4J.q2+u1+Z4J.i0I)]();f=!0;d[s8X](b,function(b,e){var W7J="lFrom";if(e[(b9+w7+w5I)][a]){var d=c[(e7J+W7J+N8J+Z4J.i0I+Z4J.Y8)](e.data);c[C2J](b,d!==h?d:c[(D1I)]());e[y0X]&&!e[y0X][a]&&(f=!1);}
}
);0!==c[p7J]().length&&f&&l[(t8I+y3I)](a);}
);for(var e=this[(i5X+Z4J.o6I)]()[u4I](),g=e.length;0<=g;g--)-1===d[a4](e[g],l)&&e[(Z4J.n6I+k6I+Z4J.z5I+S3I+Z9J)](g,1);this[L3J](e);this[Z4J.n6I][X5J]=d[H3I](!0,{}
,this[d4I]());this[(G9+Z4J.i0I)]("initEdit",[y(b,"node")[0],y(b,"data")[0],a,c]);this[(R0o+q8+Z4J.i0I)]((S3I+N1X+Z4J.i0I+R3J+Z4J.z5I+Z4J.i0I+S3I+x7J+Z9X),[b,a,c]);}
;f.prototype._event=function(a,b){var n5X="result",l7J="Event";b||(b=[]);if(d[(S3I+T8X+U9X+y3)](a))for(var c=0,e=a.length;c<e;c++)this[(F4+c5+q8+Z4J.i0I)](a[c],b);else return c=d[l7J](a),d(this)[g4I](c,b),c[n5X];}
;f.prototype._eventName=function(a){var r8X="substri",n9I="ase",e4="wer",p6X="oL";for(var b=a[(A9X+S3I+Z4J.i0I)](" "),c=0,e=b.length;c<e;c++){var a=b[c],d=a[(o5I+z1+O9J)](/^on([A-Z])/);d&&(a=d[1][(Z4J.i0I+p6X+Z4J.w1I+e4+G4X+n9I)]()+a[(r8X+Z4J.F1I+Z8I)](3));b[c]=a;}
return b[W6I](" ");}
;f.prototype._fieldNames=function(a){return a===h?this[(c8I+s0J+w5I)]():!d[S8](a)?[a]:a;}
;f.prototype._focus=function(a,b){var F7I="foc",s6I="setFocus",a2="jq",c=this,e,l=d[(o5I+Z4J.Y8+k6I)](a,function(a){var e1X="ri";return (x8+e1X+M5X)===typeof a?c[Z4J.n6I][(b9+Q9X+Z4J.n6I)][a]:a;}
);y9X===typeof b?e=l[b]:b&&(e=E0===b[(h5J+Z4J.q2+z0J+s1+c8I)]((a2+J0o))?d((I1+Z4J.l0X+j3+X6+u3+W4J)+b[(C3X+k6I+Z4J.z5I+N4+Z4J.q2)](/^jq:/,g0I)):this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)][b]);(this[Z4J.n6I][s6I]=e)&&e[(F7I+Z4J.R0I+Z4J.n6I)]();}
;f.prototype._formOptions=function(a){var k5="oseIc",y6J="olean",V8X="titl",a4I="nBa",T7="blurOnBackground",P9I="Retu",s5J="nR",t4J="eturn",R5X="submitOnBlur",g6X="itO",k1X="closeOnComplete",K4I="Com",D0="On",q5="Inlin",b=this,c=N++,e=(Z4J.l0X+w8+Z4J.i0I+Z4J.q2+q5+Z4J.q2)+c;a[(Z4J.V2+h9J+Z4J.q2+D0+K4I+M7I+Z4J.q2+I6I)]!==h&&(a[Q4]=a[k1X]?d5I:D9I);a[(V4+N8+o5I+g6X+Z4J.F1I+y4X+Z4J.z5I+g5J)]!==h&&(a[z5]=a[R5X]?(Z4J.n6I+Z4J.R0I+l6X):d5I);a[(V4+l6X+s1+Z4J.F1I+v0+t4J)]!==h&&(a[(Z4J.w1I+s5J+t4J)]=a[(V3I+Z9X+D0+P9I+Z4J.o6I+Z4J.F1I)]?f0o:D9I);a[T7]!==h&&(a[(Z4J.w1I+a4I+z9J+R3X+O3J+w8)]=a[(N8+U4J+Z4J.o6I+D0+y4X+Z4J.Y8+Z4J.V2+n7I+Z4J.w1I+O3J+w8)]?T6:(w0I+Z4J.q2));this[Z4J.n6I][(u9+g6X+Q8I+Z4J.n6I)]=a;this[Z4J.n6I][b5X]=c;if((x8+M8J)===typeof a[j2]||(c8I+O3J+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)===typeof a[j2])this[(V8X+Z4J.q2)](a[(t1I+q3I+Z4J.q2)]),a[(Z4J.i0I+Z9X+m0I)]=!E0;if((x8+Z4J.o6I+Y0o+Z8I)===typeof a[r8I]||Z4J.T5J===typeof a[r8I])this[r8I](a[r8I]),a[r8I]=!E0;(G8X+y6J)!==typeof a[(L5X+Z4J.i0I+H5)]&&(this[(N8+P2X+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a[(L5X+B9I+Z4J.n6I)]),a[(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)]=!E0);d(q)[(Z4J.w1I+Z4J.F1I)]("keydown"+e,function(c){var e5J="keyCo",a8J="pre",r0X="TE_For",W9J="are",p3I="onEsc",o2="entDe",U0J="nRet",g3="toLowerCase",C6I="lem",Q0X="tiveE",e=d(q[(Z4J.Y8+Z4J.V2+Q0X+C6I+q8+Z4J.i0I)]),f=e.length?e[0][L0o][g3]():null;d(e)[(Z4J.Y8+E2I+Z4J.o6I)]((y2J));if(b[Z4J.n6I][(H0J+Z4J.n6I+M7I+Z4J.Y8+j1+w8)]&&a[(Z4J.w1I+U0J+g5J+Z4J.F1I)]==="submit"&&c[D2J]===13&&f===(X4X+n4J)){c[(k6I+Z4J.o6I+Z4J.q2+g0J+o2+c8I+b7X)]();b[f0o]();}
else if(c[D2J]===27){c[F1]();switch(a[p3I]){case (B2X+Z4J.R0I+Z4J.o6I):b[(B2X+Z4J.R0I+Z4J.o6I)]();break;case (Z4J.V2+Z4J.z5I+j6):b[(Q4J+j6)]();break;case "submit":b[(V4+N8+o5I+S3I+Z4J.i0I)]();}
}
else e[(k6I+W9J+Z4J.F1I+Z4J.i0I+Z4J.n6I)]((Z4J.l0X+j3+r0X+o5I+b5I+u3X)).length&&(c[D2J]===37?e[(a8J+g0J)]((u0o+Z4J.i0I+t7))[(s8+Z4J.V2+Z4J.R0I+Z4J.n6I)]():c[(e5J+w8+Z4J.q2)]===39&&e[(c6X)]("button")[(O6I)]());}
);this[Z4J.n6I][(Z4J.V2+Z4J.z5I+k5+N8)]=function(){d(q)[(Z4J.w1I+f4)]((u3I+Z4J.q2+Z4J.g7I+Z4J.x4I+j0J+Z4J.F1I)+e);}
;return e;}
;f.prototype._legacyAjax=function(a,b,c){var A9="Aj",y9="gac";if(this[Z4J.n6I][(m0I+y9+Z4J.g7I+A9+Z4J.Y8+z0J)])if((Z4J.n6I+Z4J.q2+Z4J.F1I+w8)===a)if(d0I===b||(Z4J.q2+o6)===b){var e;d[(Z4J.q2+N4+y3I)](c.data,function(a){var f6J="cy",y3X="uppor";if(e!==h)throw (t6+u2+n4I+g6+i0J+F6X+Z4J.o6I+O2+W4J+Z4J.q2+w8+X3+Z4J.F1I+Z8I+W4J+S3I+Z4J.n6I+W4J+Z4J.F1I+T8+W4J+Z4J.n6I+y3X+I6I+w8+W4J+N8+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+Z4J.z5I+Z4J.q2+Z8I+Z4J.Y8+f6J+W4J+U4X+Y9I+W4J+w8+Z4J.Y8+B7+W4J+c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I);e=a;}
);c.data=c.data[e];(R0J)===b&&(c[(S3I+w8)]=e);}
else c[J1J]=d[(o5I+e0)](c.data,function(a,b){return b;}
),delete  c.data;else c.data=!c.data&&c[o1]?[c[(k7X+j0J)]]:[];}
;f.prototype._optionsUpdate=function(a){var b=this;a[(Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+h3X)]&&d[(J5I+O9J)](this[Z4J.n6I][Y8I],function(c){if(a[(V7+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)][c]!==h){var e=b[(b9+Q9X)](c);e&&e[j5J]&&e[(Z4J.R0I+k6I+Z4J.C6J+I6I)](a[V6X][c]);}
}
);}
;f.prototype._message=function(a,b){var O9X="tabl";Z4J.T5J===typeof b&&(b=b(this,new r[m7J](this[Z4J.n6I][(O9X+Z4J.q2)])));a=d(a);!b&&this[Z4J.n6I][R8J]?a[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I)]()[O7I](function(){a[(E4J+t3J)](g0I);}
):b?this[Z4J.n6I][R8J]?a[l8X]()[(y3I+f6)](b)[(c8I+Z4J.Y8+w8+Z4J.q2+s3X)]():a[(h0J+Z4J.z5I)](b)[(Z4J.V2+t8)]((w8+N9X+Z4J.g7I),(N8+Z4J.z5I+Z4J.w1I+z9J)):a[(y3I+Z4J.i0I+o5I+Z4J.z5I)](g0I)[v3J]((S0+M7I+Z4J.Y8+Z4J.g7I),(D9I));}
;f.prototype._multiInfo=function(){var U7="oSh",t1X="ields",a=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w5I)],b=this[Z4J.n6I][(Y0o+Z4J.V2+Z4J.z5I+Z4J.R0I+w8+Z4J.q2+o3+t1X)],c=!0;if(b)for(var e=0,d=b.length;e<d;e++)a[b[e]][q7X]()&&c?(a[b[e]][(p6+t1I+x1+Z4J.F1I+c8I+Z4J.w1I+x4+o0I)](c),c=!1):a[b[e]][(o5I+g8J+Z4J.i0I+I7J+c8I+U7+Z4J.w1I+g9I)](!1);}
;f.prototype._postopen=function(a){var q1I="iI",K0X="_mul",s2="focus.editor-focus",a9X="ernal",w9J="submit.editor-internal",E5X="Focus",U6="oll",b=this,c=this[Z4J.n6I][(p6J+G4X+Z4J.w1I+Z4J.F1I+U8I+U6+Q2)][(L7J+Q8I+g5J+Z4J.q2+E5X)];c===h&&(c=!E0);d(this[(w8+S7)][(s8+t6X)])[t9J](w9J)[(Z4J.w1I+Z4J.F1I)]((Z4J.n6I+u0J+o5I+Z9X+Z4J.l0X+Z4J.q2+w8+S3I+Q3I+Z4J.o6I+F6X+S3I+Z4J.F1I+Z4J.i0I+a9X),function(a){a[F1]();}
);if(c&&(e2J===a||(L5X+e6)===a))d(Q5X)[t7](s2,function(){var o7="setF",w9I="Foc",h0="iveEl",g7J="veElem";0===d(q[(d9X+g7J+Z4J.q2+Z4J.F1I+Z4J.i0I)])[(k6I+Z4J.Y8+Z4J.o6I+S9I+Z4J.n6I)]((Z4J.l0X+j3+X6+u3)).length&&0===d(q[(M1J+h0+Z4J.q2+o5I+q8+Z4J.i0I)])[p7I](".DTED").length&&b[Z4J.n6I][(Z4J.n6I+Z4J.q2+Z4J.i0I+w9I+q5J)]&&b[Z4J.n6I][(o7+P2+Z4J.n6I)][O6I]();}
);this[(K0X+Z4J.i0I+q1I+Z4J.F1I+c8I+Z4J.w1I)]();this[i2]((Z4J.w1I+A6X),[a,this[Z4J.n6I][(d9X+Z4J.w1I+Z4J.F1I)]]);return !E0;}
;f.prototype._preopen=function(a){var Z8="mic",O2X="arDyna";if(!N0===this[i2]((G0J+Z4J.q2+s1+k6I+Z4J.q2+Z4J.F1I),[a,this[Z4J.n6I][(M1J+s4)]]))return this[(W4I+Z4J.q2+O2X+Z8+x1+l1X+Z4J.w1I)](),!N0;this[Z4J.n6I][R8J]=a;return !E0;}
;f.prototype._processing=function(a){var c6="oce",p4="div.DTE",u8X="veC",Q1I="dCla",N4I="active",b=d(this[(w8+Z4J.w1I+o5I)][(i4I+Z4J.Y8+b4I+Z4J.o6I)]),c=this[(w8+S7)][y2X][e1J],e=this[T4][(p4J+N8I+B8J)][N4I];a?(c[p6J]=h3J,b[(b4+w8+G4X+Z4J.z5I+L1)](e),d((w8+P9X+Z4J.l0X+j3+X6+u3))[(b4+Q1I+t8)](e)):(c[p6J]=(o8X+Z4J.F1I+Z4J.q2),b[(Z4J.o6I+Z4J.q2+Z8J+u8X+Z4J.z5I+Z4J.Y8+t8)](e),d(p4)[R](e));this[Z4J.n6I][(G0J+Z4J.w1I+Z9J+Z4J.n6I+l6J+Z8I)]=a;this[i2]((k6I+Z4J.o6I+c6+t8+S3I+M5X),[a]);}
;f.prototype._submit=function(a,b,c,e){var v5X="_ajax",m7="_proces",O0="eSubm",A8J="acy",n3X="plet",a6X="_proce",o8="nge",F6I="llIfC",I9I="aF",q9X="ctD",J9I="_fnSetObje",f=this,k,g=!1,i={}
,n={}
,u=r[(Z4J.q2+z0J+Z4J.i0I)][k0J][(J9I+q9X+z1+I9I+Z4J.F1I)],m=this[Z4J.n6I][Y8I],j=this[Z4J.n6I][V8J],p=this[Z4J.n6I][b5X],o=this[Z4J.n6I][z4X],q=this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+v1J)],s=this[Z4J.n6I][X5J],t=this[Z4J.n6I][M9],v=t[f0o],x={action:this[Z4J.n6I][V8J],data:{}
}
,y;this[Z4J.n6I][(m3)]&&(x[Q2X]=this[Z4J.n6I][(w8+N8+W+l3)]);if((Z4J.V2+Z4J.o6I+J5I+I6I)===j||"edit"===j)if(d[s8X](q,function(a,b){var U8J="mp",c={}
,e={}
;d[(J5I+O9J)](m,function(f,l){var w1="ny";if(b[(c8I+m1J+Z4J.n6I)][f]){var k=l[d4I](a),h=u(f),i=d[S8](k)&&f[(S3I+F9X+Z4J.q2+z0J+s1+c8I)]("[]")!==-1?u(f[(Z4J.o6I+Z4J.q2+k6I+l7I+Z4J.V2+Z4J.q2)](/\[.*$/,"")+(F6X+o5I+Z4J.Y8+w1+F6X+Z4J.V2+y4+g3X)):null;h(c,k);i&&i(c,k.length);if(j===(R0J)&&k!==s[f][a]){h(e,k);g=true;i&&i(e,k.length);}
}
}
);d[(S3I+r3X+o5I+k6I+O4I+s1+N8+Z4J.i5I+Z4J.V1I+Z4J.i0I)](c)||(i[a]=c);d[(S3I+r3X+U8J+O4I+s1+w3J+i8J)](e)||(n[a]=e);}
),"create"===j||"all"===v||(Z4J.Y8+F6I+y3I+Z4J.Y8+o8+w8)===v&&g)x.data=i;else if("changed"===v&&g)x.data=n;else{this[Z4J.n6I][V8J]=null;(Z4J.V2+K8I+u1)===t[Q4]&&(e===h||e)&&this[w3X](!1);a&&a[L5I](this);this[(a6X+Z4J.n6I+Z4J.n6I+B8J)](!1);this[(N9J+l9J+g3X)]((Z4J.n6I+F7X+C0+S7+n3X+Z4J.q2));return ;}
else(Z4J.o6I+Q8+a0X)===j&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](q,function(a,b){x.data[a]=b.data;}
);this[(T1J+P7+A8J+U4X+Y9I)]((Z4J.n6I+Z4J.q2+Z4J.F1I+w8),j,x);y=d[H3I](!0,{}
,x);c&&c(x);!1===this[i2]((k6I+Z4J.o6I+O0+Z9X),[x,j])?this[(m7+Z4J.n6I+S3I+M5X)](!1):this[v5X](x,function(c){var L2="Coun",q9J="ommi",p6I="aS",n5I="even",G0o="event",d7X="Sou",F8J="urc",S3X="eCr",W5X="taS",D1="Error",o9I="Errors",M5="acyAj",g;f[(F4+m0I+Z8I+M5+Z4J.Y8+z0J)]("receive",j,c);f[i2]((E7I+x8+R0+u0J+o5I+S3I+Z4J.i0I),[c,x,j]);if(!c.error)c.error="";if(!c[(b9+Z4J.q2+Z4J.z5I+w8+L8X+k7X+B9X)])c[z0o]=[];if(c.error||c[(g5I+o9I)].length){f.error(c.error);d[(Z4J.q2+K0J)](c[(b9+Z4J.q2+Z4J.z5I+w8+D1+Z4J.n6I)],function(a,b){var r1I="yC",c=m[b[(Z4J.F1I+Z4J.Y8+A1J)]];c.error(b[t9I]||(u3+Z4J.o6I+Z4J.o6I+u2));if(a===0){d(f[Z6J][(N8+Z4J.w1I+w8+r1I+Z4J.w1I+Z4J.F1I+I6I+Z4J.F1I+Z4J.i0I)],f[Z4J.n6I][a3J])[h2J]({scrollTop:d(c[o0o]()).position().top}
,500);c[O6I]();}
}
);b&&b[(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](f,c);}
else{var i={}
;f[(F4+w8+Z4J.Y8+W5X+Z4J.w1I+g5J+Z4J.V2+Z4J.q2)]("prep",j,o,y,c.data,i);if(j===(m3J+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)||j==="edit")for(k=0;k<c.data.length;k++){g=c.data[k];f[(R0o+q8+Z4J.i0I)]("setData",[c,g,j]);if(j==="create"){f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]((G0J+S3X+R5I+Z4J.q2),[c,g]);f[(F4+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+b8+F8J+Z4J.q2)]((Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),m,g,i);f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]([(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),"postCreate"],[c,g]);}
else if(j==="edit"){f[i2]((k6I+C3X+x7J+S3I+Z4J.i0I),[c,g]);f[(F4+w8+Z4J.Y8+B7+d7X+k5X+Z4J.q2)]((Z4J.q2+w8+S3I+Z4J.i0I),o,m,g,i);f[i2](["edit",(k6I+F8+Z4J.i0I+x7J+Z9X)],[c,g]);}
}
else if(j==="remove"){f[(F4+G0o)]("preRemove",[c]);f[e9]("remove",o,m,i);f[(F4+n5I+Z4J.i0I)](["remove",(k6I+Z4J.w1I+x8+v0+Q8+I4+Z4J.q2)],[c]);}
f[(F0X+z1+p6I+Z4J.w1I+Z4J.R0I+h8X)]((Z4J.V2+q9J+Z4J.i0I),j,o,c.data,i);if(p===f[Z4J.n6I][(Z4J.q2+w8+Z9X+L2+Z4J.i0I)]){f[Z4J.n6I][(d9X+t7)]=null;t[(Z4J.w1I+Z4J.F1I+N7J+o5I+n3X+Z4J.q2)]==="close"&&(e===h||e)&&f[(G0X+Z4J.z5I+j6)](true);}
a&&a[L5I](f,c);f[(F4+n5I+Z4J.i0I)]((Z4J.n6I+Z4J.R0I+v2X+S3I+Z4J.i0I+R0+Z4J.R0I+Z4J.V2+Z4J.V2+Z4J.q2+Z4J.n6I+Z4J.n6I),[c,g]);}
f[(F4+p4J+Y2J+l6J+Z8I)](false);f[i2]((V4+N8+P+N7J+o5I+M7I+Y0X),[c,g]);}
,function(a,c,e){var F0o="lete",n4X="itC",a5X="system";f[(R0o+q8+Z4J.i0I)]("postSubmit",[a,c,e,x]);f.error(f[k1I].error[a5X]);f[(j6J+k7X+N8I+S3I+M5X)](false);b&&b[(L7J+q5I)](f,a,c,e);f[(R0o+S9I)](["submitError",(Z4+o5I+n4X+Z4J.w1I+o5I+k6I+F0o)],[a,c,e,x]);}
);}
;f.prototype._tidy=function(a){var m4="lur",R4="bbl",P8I="omple",u8J="bmitC",Q7="roces",H8J="Sid",L9I="Server",b=this,c=this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)]?new d[(c8I+Z4J.F1I)][(Z4J.C6J+Z4J.i0I+Z4J.Y8+X6+G1I+Z4J.q2)][(q1+S3I)](this[Z4J.n6I][Q2X]):c3X,e=!N0;c&&(e=c[R5J]()[E0][(Z4J.w1I+o3+J5I+Z4J.i0I+g5J+Z4J.q2+Z4J.n6I)][(N8+L9I+H8J+Z4J.q2)]);return this[Z4J.n6I][(k6I+Q7+Z4J.n6I+B8J)]?(this[j7J]((Z4J.n6I+Z4J.R0I+u8J+P8I+Z4J.i0I+Z4J.q2),function(){if(e)c[j7J](X4,a);else setTimeout(function(){a();}
,f2I);}
),!E0):(S3I+Z4J.F1I+Z4J.z5I+Y5J)===this[(w8+S3I+Z4J.n6I+E0I)]()||(L5X+R4+Z4J.q2)===this[p6J]()?(this[j7J]((Z4J.V2+Z4J.z5I+F8+Z4J.q2),function(){var p7="mitComple";if(b[Z4J.n6I][y2X])b[(t7+Z4J.q2)]((Z4J.n6I+u0J+p7+I6I),function(b,d){if(e&&d)c[(t7+Z4J.q2)]((L4I+j0J),a);else setTimeout(function(){a();}
,f2I);}
);else setTimeout(function(){a();}
,f2I);}
)[(N8+m4)](),!E0):!N0;}
;f[(w8+L8I+Z4J.R0I+S2J+Z4J.n6I)]={table:null,ajaxUrl:null,fields:[],display:(u1I+Z8I+y3I+c0I),ajax:null,idSrc:(j3+Q0+v0+Z4J.w1I+j0J+d0X),events:{}
,i18n:{create:{button:(E0o+j0J),title:(G4X+C3X+z1+Z4J.q2+W4J+Z4J.F1I+Z5+W4J+Z4J.q2+Z4J.F1I+O3I),submit:"Create"}
,edit:{button:"Edit",title:(u3+w8+Z9X+W4J+Z4J.q2+Z4J.F1I+O3I),submit:(g8X+Z4J.C6J+Z4J.i0I+Z4J.q2)}
,remove:{button:(S0J+b6X+Z4J.q2),title:"Delete",submit:(S0J+Z4J.z5I+Z4J.q2+I6I),confirm:{_:(X0+Z4J.q2+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+Z4J.R0I+Z4J.o6I+Z4J.q2+W4J+Z4J.g7I+Z4J.w1I+Z4J.R0I+W4J+j0J+S3I+Z4J.n6I+y3I+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+Z4J.q2+Z4J.z5I+Z4J.A4+Z4J.q2+l5+w8+W4J+Z4J.o6I+O2+Z4J.n6I+J2X),1:(O9I+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+g5J+Z4J.q2+W4J+Z4J.g7I+y4+W4J+j0J+S3I+w5+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+n6X+Z4J.q2+W4J+U1X+W4J+Z4J.o6I+Z4J.w1I+j0J+J2X)}
}
,error:{system:(D4+q2X+n9J+J4J+A9I+q2X+m8I+G9J+I3I+q2X+v0J+b6+q2X+d9I+B2I+D1J+U3J+z8X+q4I+q2X+c0X+L6+O7+i8X+p4I+M9X+v9I+b9I+k6J+v0J+G9J+N3+V0o+m2I+q4I+c0X+h1+m8J+A0+Y6+v9I+m8I+c0X+E6+c0X+v9I+E6+M1+c0+H6+R9+Q6J+m8I+q2X+T7I+D8+o1X+v9I+b0o+q4I+W0J)}
,multi:{title:(R3J+Z4J.z5I+Y5+Z4J.q2+W4J+g0J+e8),info:(A1+W4J+Z4J.n6I+Z4J.q2+m0I+Z4J.V2+U2X+W4J+S3I+Z4J.i0I+Z4J.q2+S5J+W4J+Z4J.V2+t7+B7+Y0o+W4J+w8+S3I+x0I+h8+W4J+g0J+X0I+O8+W4J+c8I+u2+W4J+Z4J.i0I+y3I+r9X+W4J+S3I+n8X+Z4J.R0I+Z4J.i0I+v2I+X6+Z4J.w1I+W4J+Z4J.q2+o6+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+Z4J.n6I+Z4J.q2+Z4J.i0I+W4J+Z4J.Y8+Z4J.z5I+Z4J.z5I+W4J+S3I+I6I+o5I+Z4J.n6I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+y3I+S3I+Z4J.n6I+W4J+S3I+Z4J.F1I+W2I+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.i0I+Q0I+W4J+Z4J.n6I+Z4J.Y8+o5I+Z4J.q2+W4J+g0J+B6X+Z4J.q2+p5X+Z4J.V2+q6I+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+Z4J.Y8+k6I+W4J+y3I+Q2+Z4J.q2+p5X+Z4J.w1I+Z4J.i0I+y3I+Q2+j0J+r9X+Z4J.q2+W4J+Z4J.i0I+Q0I+Z4J.g7I+W4J+j0J+S3I+Z4J.z5I+Z4J.z5I+W4J+Z4J.o6I+i6I+S3I+Z4J.F1I+W4J+Z4J.i0I+y3I+Z4J.q2+s7X+W4J+S3I+Z4J.F1I+I1+S3I+W5I+Z4J.Y8+Z4J.z5I+W4J+g0J+B6X+B4+Z4J.l0X),restore:(D7+F9X+Z4J.w1I+W4J+Z4J.V2+y3I+Q+a5)}
,datetime:{previous:"Previous",next:(W1),months:(v8J+e1+W4J+o3+x6I+Z4J.o6I+e7I+Z4J.o6I+Z4J.g7I+W4J+g6+a4J+y3I+W4J+U4X+k6I+l2J+W4J+g6+Z4J.Y8+Z4J.g7I+W4J+r5+O3J+Z4J.q2+W4J+r5+V5I+W4J+U4X+Z4J.R0I+Z8I+q5J+Z4J.i0I+W4J+R0+M5I+N8+Z4J.q2+Z4J.o6I+W4J+s1+i8J+u0+Z4J.q2+Z4J.o6I+W4J+J1+a0X+P7J+Q2+W4J+j3+Z4J.q2+b9J+g9X+Z4J.o6I)[(H2+Z4J.z5I+Z9X)](" "),weekdays:(R0+O3J+W4J+g6+Z4J.w1I+Z4J.F1I+W4J+X6+N1J+W4J+j0I+Z4J.q2+w8+W4J+X6+l4J+W4J+o3+Z4J.o6I+S3I+W4J+R0+z1)[z5X](" "),amPm:["am",(Q9I)],unknown:"-"}
}
,formOptions:{bubble:d[(K8X+Z4J.F1I+w8)]({}
,f[(S4J+Z4J.q2+h4J)][(c8I+u2+p4X+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{title:!1,message:!1,buttons:"_basic",submit:(O9J+Z4J.Y8+M5X+u9)}
),inline:d[(p5+N5X+w8)]({}
,f[(o5I+G1+Z4J.q2+h4J)][h3],{buttons:!1,submit:(v1+Z4J.F1I+i9)}
),main:d[H3I]({}
,f[(o5I+G1+Z4J.q2+Z4J.z5I+Z4J.n6I)][(c8I+u1X+s1+k6I+G5X+Z4J.n6I)])}
,legacyAjax:!1}
;var K=function(a,b,c){d[(s8X)](b,function(b,d){var N5="aSr",e3="Fr",f=d[(g0J+Z4J.Y8+Z4J.z5I+e3+S7+N8J+B7)](c);f!==h&&C(a,d[(w8+Z4J.Y8+Z4J.i0I+N5+Z4J.V2)]())[(s8X)](function(){var C4X="hild",c3I="childNodes";for(;this[c3I].length;)this[(Z4J.o6I+Z4J.q2+o5I+I4+X7I+C4X)](this[(b9+Z4J.o6I+Z4J.n6I+Z4J.i0I+G4X+w7X+w8)]);}
)[z6I](f);}
);}
,C=function(a,b){var J4X='ld',u3J='dito',c=v8===a?q:d((G3I+m2I+h1+q4I+m6+m8I+m2I+T7I+Z0X+G9J+m6+T7I+m2I+i8X)+a+(y6I));return d((G3I+m2I+j9J+m6+m8I+u3J+G9J+m6+c2I+T7I+m8I+J4X+i8X)+b+(y6I),c);}
,D=f[(Z4J.C6J+B7+b8+Z4J.R0I+h8X+Z4J.n6I)]={}
,E=function(a,b){var e9J="awTy",X9J="erSide",h6J="bSer",X0o="atures",V9X="oF";return a[R5J]()[E0][(V9X+Z4J.q2+X0o)][(h6J+g0J+X9J)]&&(o8X+G9X)!==b[Z4J.n6I][(E7J+Z4J.i0I+s1+Q8I+Z4J.n6I)][(w8+Z4J.o6I+e9J+g6I)];}
,L=function(a){a=d(a);setTimeout(function(){var s7J="highlight",r5J="dClas";a[(Z4J.Y8+w8+r5J+Z4J.n6I)](s7J);setTimeout(function(){var a1=550,J1I="noHighlight",G1X="dCl";a[(Z4J.Y8+w8+G1X+Z4J.Y8+Z4J.n6I+Z4J.n6I)](J1I)[(C3X+F2X+G4X+Z4J.z5I+Z1+Z4J.n6I)](s7J);setTimeout(function(){var K7="oHi";a[(C3X+o5I+a0X+G4X+p2J+Z4J.n6I)]((Z4J.F1I+K7+Z8I+y3I+Z4J.z5I+S3I+Z8I+E4J));}
,a1);}
,C3);}
,t2I);}
,F=function(a,b,c,e,d){var j8X="exes";b[(k7X+j0J+Z4J.n6I)](c)[(S3I+F9X+j8X)]()[(J5I+Z4J.V2+y3I)](function(c){var c=b[(k7X+j0J)](c),g=c.data(),i=d(g);i===h&&f.error((D7+Z4J.F1I+Z4J.Y8+N8+m0I+W4J+Z4J.i0I+Z4J.w1I+W4J+c8I+h5J+W4J+Z4J.o6I+O2+W4J+S3I+y9I+Z4J.F1I+t1I+c8I+S3I+Z4J.q2+Z4J.o6I),14);a[i]={idSrc:i,data:g,node:c[(Z4J.F1I+G1+Z4J.q2)](),fields:e,type:(Z4J.o6I+Z4J.w1I+j0J)}
;}
);}
,G=function(a,b,c,e,l,g){var o3X="indexes";b[G1J](c)[o3X]()[s8X](function(w){var z8J="ayFie",h9I="eNam",S0I="cif",M3I="eas",Y3="rmin",R1="isEmptyObject",n1X="itFi",E9I="aoColumns",s6="tings",I4X="column",i=b[a3](w),j=b[(Z4J.o6I+Z4J.w1I+j0J)](w[o1]).data(),j=l(j),u;if(!(u=g)){u=w[I4X];u=b[(u1+Z4J.i0I+s6)]()[0][E9I][u];var m=u[(E7J+P1+e6J+Z0I)]!==h?u[(u9+n1X+Q9X)]:u[(o5I+Z)],n={}
;d[(s8X)](e,function(a,b){var x6J="dataSrc";if(d[S8](m))for(var c=0;c<m.length;c++){var e=b,f=m[c];e[(w8+h2+B0I)]()===f&&(n[e[(i1X)]()]=e);}
else b[x6J]()===m&&(n[b[i1X]()]=b);}
);d[R1](n)&&f.error((D7+Z4J.F1I+Z4J.w2+Z4J.z5I+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.Y8+n4J+Z4J.w1I+o5I+z1+M3J+X0I+n2J+W4J+w8+Z4J.A4+Z4J.q2+Y3+Z4J.q2+W4J+c8I+e6J+Z0I+W4J+c8I+Z4J.o6I+S7+W4J+Z4J.n6I+Z4J.w1I+Z4J.R0I+h8X+v2I+i1+Z4J.z5I+M3I+Z4J.q2+W4J+Z4J.n6I+k6I+Z4J.q2+S0I+Z4J.g7I+W4J+Z4J.i0I+Q0I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.F1I+Z4J.Y8+A1J+Z4J.l0X),11);u=n;}
F(a,b,w[(Z4J.o6I+O2)],e,l);a[j][a7I]="object"===typeof c&&c[(Z4J.F1I+Z4J.w1I+w8+h9I+Z4J.q2)]?[c]:[i[o0o]()];a[j][(H0J+Z4J.n6I+M7I+z8J+r7I)]=u;}
);}
;D[(M0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]={individual:function(a,b){var H2J="index",U9J="siv",b1="asCl",j4="ctDat",c=r[(Z4J.q2+z0J+Z4J.i0I)][(Z4J.w1I+q1+S3I)][(B9J+Z4J.F1I+b3+Z4J.q2+Z4J.i0I+q0I+Z4J.i5I+Z4J.q2+j4+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+Z4J.o6I+Z4J.V2)]),e=d(this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)])[(N8J+m0X+Z4J.Y8+N8+m0I)](),f=this[Z4J.n6I][(b9+w7+w5I)],g={}
,h,i;a[(W9I+P2I+Z4J.Y8+o5I+Z4J.q2)]&&d(a)[(y3I+b1+Z4J.Y8+t8)]("dtr-data")&&(i=a,a=e[(Z4J.o6I+B4+E7I+Z4J.F1I+U9J+Z4J.q2)][H2J](d(a)[(Z4J.V2+h9J+B4+Z4J.i0I)]("li")));b&&(d[(w2J+Z4J.o6I+Y8X+Z4J.g7I)](b)||(b=[b]),h={}
,d[(J5I+O9J)](b,function(a,b){h[b]=f[b];}
));G(g,e,a,f,c,h);i&&d[s8X](g,function(a,b){b[a7I]=[i];}
);return g;}
,fields:function(a){var a0I="mns",s5I="Object",B0J="Pla",Q1="aTabl",W0o="oA",b=r[s0X][(W0o+k6I+S3I)][h4I](this[Z4J.n6I][q7J]),c=d(this[Z4J.n6I][Q2X])[(j3+z1+Q1+Z4J.q2)](),e=this[Z4J.n6I][(c8I+s0J+w8+Z4J.n6I)],f={}
;d[(r9X+B0J+Y0o+s5I)](a)&&(a[C6X]!==h||a[d0]!==h||a[(a3+Z4J.n6I)]!==h)?(a[(C6X)]!==h&&F(f,c,a[(Z4J.o6I+Z4J.w1I+j0J+Z4J.n6I)],e,b),a[d0]!==h&&c[(Z9J+q5I+Z4J.n6I)](null,a[(f2J+U4J+a0I)])[(Y0o+w8+Z4J.q2+z0J+B4)]()[(e9I+y3I)](function(a){G(f,c,a,e,b);}
),a[G1J]!==h&&G(f,c,a[(Z4J.V2+w7+Z4J.z5I+Z4J.n6I)],e,b)):F(f,c,a,e,b);return f;}
,create:function(a,b){var c=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[g4X]();E(c,this)||(c=c[(k7X+j0J)][(b4+w8)](b),L(c[(o0o)]()));}
,edit:function(a,b,c,e){var m7X="wIds",C9J="nA",R6I="DataTa";b=d(this[Z4J.n6I][Q2X])[(R6I+N8+m0I)]();if(!E(b,this)){var f=r[(s0X)][(k0J)][h4I](this[Z4J.n6I][(J1J+B0I)]),g=f(c),a=b[(o1)]("#"+g);a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return g==f(b);}
));a[y7I]()?(a.data(c),c=d[(S3I+C9J+W1I)](g,e[(o1+X7X)]),e[(k7X+m7X)][(H2+Z4J.z5I+S3I+Z4J.V2+Z4J.q2)](c,1)):a=b[o1][(b4+w8)](c);L(a[o0o]());}
}
,remove:function(a){var b=d(this[Z4J.n6I][(B7+N8+m0I)])[g4X]();E(b,this)||b[(k7X+j0J+Z4J.n6I)](a)[(Z4J.o6I+u9X)]();}
,prep:function(a,b,c,e,f){var e0I="rowId";"edit"===a&&(f[(e0I+Z4J.n6I)]=d[I0](c.data,function(a,b){var b2X="yObje";if(!d[(S3I+r3X+o5I+Q8I+b2X+i8J)](c.data[b]))return b;}
));}
,commit:function(a,b,c,e){var f5I="drawType",t2J="ject",W4="nGet",G2="rowIds";b=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(j3+Z4J.Y8+m0X+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]();if((Z4J.q2+w8+S3I+Z4J.i0I)===a&&e[G2].length)for(var f=e[G2],g=r[s0X][(G5J+S3I)][(F4+c8I+W4+q0I+t2J+j3+Z4J.Y8+Z4J.i0I+Z4J.Y8+m0)](this[Z4J.n6I][q7J]),h=0,e=f.length;h<e;h++)a=b[(Z4J.o6I+Z4J.w1I+j0J)]("#"+f[h]),a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return f[h]===g(b);}
)),a[(Z4J.Y8+Z4J.F1I+Z4J.g7I)]()&&a[V9I]();a=this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+s1+Q8I+Z4J.n6I)][f5I];(Z4J.F1I+Z4J.w1I+G9X)!==a&&b[X4](a);}
}
;D[z6I]={initField:function(a){var Z1J='ito',b=d((G3I+m2I+q4I+e3J+m6+m8I+m2I+Z1J+G9J+m6+P7I+M9I+B5+i8X)+(a.data||a[(g7X+A1J)])+'"]');!a[s0I]&&b.length&&(a[s0I]=b[z6I]());}
,individual:function(a,b){var U6X="rom",K4J="termin",b8I="lly",E3I="omati",c2X="yless";if(a instanceof d||a[L0o])b||(b=[d(a)[(Z4J.Y8+Z4J.i0I+U8I)]((Z4J.l1+Z4J.Y8+F6X+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+c8I+S3I+Z4J.q2+Z0I))]),a=d(a)[(o8I+C3X+Z4J.F1I+Z4J.I2I)]("[data-editor-id]").data("editor-id");a||(a=(u3I+Z4J.q2+c2X));b&&!d[(S3I+Z4J.n6I+X0+Y8X+Z4J.g7I)](b)&&(b=[b]);if(!b||0===b.length)throw (G4X+Z4J.Y8+Z4J.F1I+Z4J.F1I+Z4J.w1I+Z4J.i0I+W4J+Z4J.Y8+Z4J.R0I+Z4J.i0I+E3I+L7J+b8I+W4J+w8+Z4J.q2+K4J+Z4J.q2+W4J+c8I+s0J+w8+W4J+Z4J.F1I+a0+Z4J.q2+W4J+c8I+U6X+W4J+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+W4J+Z4J.n6I+Z4J.w1I+g5J+Z4J.V2+Z4J.q2);var c=D[z6I][Y8I][(L7J+Z4J.z5I+Z4J.z5I)](this,a),e=this[Z4J.n6I][(v7+w8+Z4J.n6I)],f={}
;d[(s8X)](b,function(a,b){f[b]=e[b];}
);d[(Z4J.q2+Z4J.Y8+O9J)](c,function(c,g){var x2I="isplayF",i6J="toArray";g[(O4I+g6I)]="cell";for(var h=a,j=b,m=d(),n=0,p=j.length;n<p;n++)m=m[(Z4J.Y8+N9I)](C(h,j[n]));g[a7I]=m[i6J]();g[Y8I]=e;g[(w8+x2I+e6J+Z0I+Z4J.n6I)]=f;}
);return c;}
,fields:function(a){var G3J="keyle",b={}
,c={}
,e=this[Z4J.n6I][(v7+w5I)];a||(a=(G3J+t8));d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](e,function(b,e){var d=C(a,e[(w8+z1+Z4J.Y8+B0I)]())[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();e[K6](c,null===d?h:d);}
);b[a]={idSrc:a,data:c,node:q,fields:e,type:(o1)}
;return b;}
,create:function(a,b){var i3='tor',c5X="GetOb";if(b){var c=r[s0X][(G5J+S3I)][(B9J+Z4J.F1I+c5X+A2J+Z4J.i0I+n7J+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+k5X)])(b);d((G3I+m2I+q4I+c0X+q4I+m6+m8I+m2I+T7I+i3+m6+T7I+m2I+i8X)+c+'"]').length&&K(c,a,b);}
}
,edit:function(a,b,c){a=r[s0X][(G5J+S3I)][h4I](this[Z4J.n6I][q7J])(c)||"keyless";K(a,b,c);}
,remove:function(a){d('[data-editor-id="'+a+(y6I))[(C3X+f1J+Z4J.q2)]();}
}
;f[T4]={wrapper:(j3+X7),processing:{indicator:(j3+a7+e8X+Z4J.n6I+S3I+v4+s3X+w8+S3I+Z4J.V2+Z4J.Y8+D6J),active:(j3+X6+u3+F4+i1+Z4J.o6I+Z4J.w1I+Z9J+Z4J.n6I+n5+Z4J.F1I+Z8I)}
,header:{wrapper:(j3+X7+x1X+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I),content:(I6J+K7J+w7I+b4+Q2+F4+G4X+Z4J.w1I+d4J+Z4J.i0I)}
,body:{wrapper:"DTE_Body",content:"DTE_Body_Content"}
,footer:{wrapper:(X2J+V4X),content:"DTE_Footer_Content"}
,form:{wrapper:"DTE_Form",content:"DTE_Form_Content",tag:"",info:(I6J+R9I+B5I+x1+Z4J.F1I+s8),error:(j3+X7+o9X+Z4J.w1I+i9J),buttons:(j3+X6+u3+F4+F8I+p1X+Z4J.i0I+Q3I+h3X),button:"btn"}
,field:{wrapper:"DTE_Field",typePrefix:"DTE_Field_Type_",namePrefix:"DTE_Field_Name_",label:"DTE_Label",input:(I6J+l1I+Z4J.q2+Z4J.z5I+w9X+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I),inputControl:(I6J+I4I+S3I+Z4J.q2+Z4J.z5I+S9X+t7+U8I+Z4J.w1I+Z4J.z5I),error:(I6J+K7J+O6+w7+w8+F3X+Z4J.i0I+Z4J.Y8+Z4J.i0I+W2J),"msg-label":(v6J+H4I+Z4J.z5I+F4+x1+Z4J.F1I+s8),"msg-error":(j3+X6+K7J+I5J+K6I+M6),"msg-message":(j3+X6+k7J+Z0I+F4+n6J+t8+L9+Z4J.q2),"msg-info":"DTE_Field_Info",multiValue:(o5I+g8J+t1I+F6X+g0J+Z4J.Y8+B8I),multiInfo:(p6+Z4J.i0I+S3I+F6X+S3I+Z4J.F1I+s8),multiRestore:(d1I+F6X+Z4J.o6I+Z4J.q2+Z4J.n6I+Z4J.i0I+u2+Z4J.q2)}
,actions:{create:(j3+X7+F4+U4X+Z4J.V2+B2J+P6J+z1+Z4J.q2),edit:"DTE_Action_Edit",remove:"DTE_Action_Remove"}
,bubble:{wrapper:(I6J+u3+W4J+j3+X7+b5I+e6),liner:(j3+X6+u3+b5I+N8+N8+A2I+U5+S3I+F3I),table:(I6J+C8J+L7X+Z4J.z5I+q4X+Z4J.Y8+N8+m0I),close:(I6J+b7I+M0o+A8I),pointer:(j3+X6+u3+F4+y4X+Z4J.R0I+L7X+A2I+X6+I5I+Z8I+m0I),bg:(j3+X6+w0+Z8I+k7X+V)}
}
;if(r[(W+N8+I7I+Z4J.w1I+s3)]){var p=r[(Z4J.B3I+I7I+Z4J.w1I+s3)][A5X],H={sButtonText:c3X,editor:c3X,formTitle:c3X}
;p[(Z4J.q2+H0J+Q3I+m0o+C3X+Z4J.Y8+I6I)]=d[(s0X+Z4J.q2+Z4J.F1I+w8)](!E0,p[k0X],H,{formButtons:[{label:c3X,fn:function(){this[f0o]();}
}
],fnClick:function(a,b){var n4="edito",c=b[(n4+Z4J.o6I)],e=c[(S3I+G5+Z4J.F1I)][(A1X+Z4J.Y8+I6I)],d=b[e1I];if(!d[E0][(l7I+N8+w7)])d[E0][(Z4J.z5I+Z4J.w2+w7)]=e[f0o];c[(m3J+J5I+I6I)]({title:e[(Z4J.i0I+S3I+D3I)],buttons:d}
);}
}
);p[J7J]=d[H3I](!0,p[r1],H,{formButtons:[{label:null,fn:function(){this[(Z4+P)]();}
}
],fnClick:function(a,b){var c4J="Sel",c=this[(c8I+Z4J.F1I+b3+Z4J.A4+c4J+Z4J.q2+i8J+Z4J.q2+w8+s3X+w8+p5+Z4J.q2+Z4J.n6I)]();if(c.length===1){var e=b[(Z4J.q2+w8+T1+Z4J.o6I)],d=e[k1I][R0J],f=b[(y0o+y4X+Z4J.R0I+u3X)];if(!f[0][(l7I+N8+Z4J.q2+Z4J.z5I)])f[0][(l7I+N8+Z4J.q2+Z4J.z5I)]=d[(V4+v2X+Z9X)];e[R0J](c[0],{title:d[j2],buttons:f}
);}
}
}
);p[(Z4J.q2+w8+S3I+E7+Z4J.o6I+g0X+Z4J.q2)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!0,p[(u1+Z4J.z5I+Z4J.q2+Z4J.V2+Z4J.i0I)],H,{question:null,formButtons:[{label:null,fn:function(){var a=this;this[(Z4J.n6I+u0J+o5I+S3I+Z4J.i0I)](function(){var W1X="Sele",H9X="tab",X6J="fnGetInstance",F8X="bleToo";d[Z4J.h0I][g9][(W+F8X+Z4J.z5I+Z4J.n6I)][X6J](d(a[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]()[(H9X+m0I)]()[o0o]())[(c8I+Z4J.F1I+W1X+Z4J.V2+Z4J.i0I+J1+t7+Z4J.q2)]();}
);}
}
],fnClick:function(a,b){var b1J="fir",Q7I="mB",L1I="xe",D2="lectedI",L8J="fnGet",c=this[(L8J+R0+Z4J.q2+D2+F9X+Z4J.q2+L1I+Z4J.n6I)]();if(c.length!==0){var e=b[G8],d=e[(D7I+B0o+Z4J.F1I)][(V9I)],f=b[(c8I+u2+Q7I+n4J+Y1J+Z4J.n6I)],g=typeof d[(Z4J.V2+Z4J.w1I+l1X+S3I+Z4J.o6I+o5I)]==="string"?d[(H0X+c8I+S3I+t6X)]:d[(Z4J.V2+Z4J.w1I+l1X+S3I+t6X)][c.length]?d[(H0X+b9+Z4J.o6I+o5I)][c.length]:d[(Z4J.V2+t7+b1J+o5I)][F4];if(!f[0][(Z4J.z5I+Z4J.Y8+N8+Z4J.q2+Z4J.z5I)])f[0][(b3I+Z4J.q2+Z4J.z5I)]=d[(V4+N8+u6J+Z4J.i0I)];e[V9I](c,{message:g[S7X](/%d/g,c.length),title:d[(j2)],buttons:f}
);}
}
}
);}
d[(p5+I6I+F9X)](r[(p5+Z4J.i0I)][(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{create:{text:function(a,b,c){var r2X="butt",f0="reate";return a[k1I]((L5X+B9I+Z4J.n6I+Z4J.l0X+Z4J.V2+f0),c[G8][(k1I)][d0I][(r2X+t7)]);}
,className:(N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I+F6X+Z4J.V2+C3X+G4),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][(A1X+z1+Z4J.q2)][f0o];}
,fn:function(){this[(V4+v2X+Z9X)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var u5="itl",P1I="formTitle";a=e[G8];a[(Z4J.V2+Z4J.o6I+Z4J.q2+G4)]({buttons:e[e1I],message:e[(c8I+Z4J.w1I+Z4J.o6I+o5I+g6+B4+Z4J.n6I+i5)],title:e[P1I]||a[k1I][d0I][(Z4J.i0I+u5+Z4J.q2)]}
);}
}
,edit:{extend:(P2J+I6I+w8),text:function(a,b,c){return a[(S3I+G5+Z4J.F1I)]((N8+Z4J.R0I+E2I+p3J+Z4J.l0X+Z4J.q2+w8+S3I+Z4J.i0I),c[(Z4J.q2+H0J+D6J)][(D1X+Z4J.F1I)][R0J][(u0o+Z4J.i0I+t7)]);}
,className:(L5X+X4J+h3X+F6X+Z4J.q2+w8+Z9X),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][R0J][(V3I+S3I+Z4J.i0I)];}
,fn:function(){var N0o="ubm";this[(Z4J.n6I+N0o+S3I+Z4J.i0I)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var Q7J="formMessage",u9J="xes",D2X="ell",i3I="indexe",a=e[G8],c=b[C6X]({selected:!0}
)[(S3I+Z4J.F1I+y9I+z0J+B4)](),d=b[d0]({selected:!0}
)[(i3I+Z4J.n6I)](),b=b[(Z4J.V2+D2X+Z4J.n6I)]({selected:!0}
)[(h5J+Z4J.q2+u9J)]();a[(Z4J.q2+o6)](d.length||b.length?{rows:c,columns:d,cells:b}
:c,{message:e[Q7J],buttons:e[(y0o+p1X+Z4J.i0I+Z4J.i0I+t7+Z4J.n6I)],title:e[(c8I+u2+R6X+q3I+Z4J.q2)]||a[(D1X+Z4J.F1I)][(Z4J.q2+w8+S3I+Z4J.i0I)][(Z4J.i0I+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]}
);}
}
,remove:{extend:"selected",text:function(a,b,c){var Z2="18n";return a[k1I]("buttons.remove",c[G8][(S3I+Z2)][(Z4J.o6I+Z4J.q2+f1J+Z4J.q2)][(g8)]);}
,className:"buttons-remove",editor:null,formButtons:{label:function(a){return a[(D7I+R6)][V9I][(Z4+o5I+Z9X)];}
,fn:function(){this[f0o]();}
}
,formMessage:function(a,b){var l0J="irm",Y9X="confirm",u7J="nfirm",Y2="ows",c=b[(Z4J.o6I+Y2)]({selected:!0}
)[(h5J+Z4J.q2+z0J+B4)](),e=a[(S3I+G5+Z4J.F1I)][(C3X+f1J+Z4J.q2)];return ("string"===typeof e[(Z4J.V2+M7J+s7X+o5I)]?e[(f2J+u7J)]:e[Y9X][c.length]?e[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I+l0J)][c.length]:e[(P0I+l0J)][F4])[(Z4J.o6I+Z4J.q2+M7I+Y7I)](/%d/g,c.length);}
,formTitle:null,action:function(a,b,c,e){var g1="remov",Q3J="mMes",E9X="Buttons";a=e[G8];a[(Z4J.o6I+Z4J.q2+Z8J+l9J)](b[(Z4J.o6I+O2+Z4J.n6I)]({selected:!0}
)[(S3I+D7X+z0J+B4)](),{buttons:e[(s8+Z4J.o6I+o5I+E9X)],message:e[(c8I+Z4J.w1I+Z4J.o6I+Q3J+Z4J.n6I+Z4J.Y8+n6)],title:e[(c8I+Z4J.w1I+Z4J.o6I+R6X+Z4J.i0I+Z4J.z5I+Z4J.q2)]||a[(D7I+R6)][(g1+Z4J.q2)][j2]}
);}
}
}
);f[(c8I+S3I+k0o+Z4J.q2+Z4J.n6I)]={}
;f[(j3+z1+S5I+S3I+A1J)]=function(a,b){var X5X="calendar",t5X="matc",z2X="sta",D8X="-time",O4J="ndar",D3J="-date",k3="</div></div>",E3="<span>:</span>",Y6J='-time">',Y8J='lend',f9I='-year"/></div></div><div class="',g4J='th',r1X='</button></div><div class="',a4X='conRi',X2="evi",C5='nLeft',M9J='-title"><div class="',n1I='-label"><span/><select class="',s0o='ut',J5J="sed",K1="YYY",k1J="ntj",N6="tetim",n7X="YYYY-MM-DD",H8I="lassP";this[Z4J.V2]=d[H3I](!E0,{}
,f[H1J][(y9I+c8I+Z4J.Y8+g8J+Z4J.I2I)],b);var c=this[Z4J.V2][(Z4J.V2+H8I+Z4J.o6I+Z4J.q2+c8I+Y4X)],e=this[Z4J.V2][k1I];if(!j[H7I]&&n7X!==this[Z4J.V2][(c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I)])throw (u3+o6+Z4J.w1I+Z4J.o6I+W4J+w8+Z4J.Y8+N6+Z4J.q2+n4I+j0I+S3I+Z4J.i0I+y3I+Z4J.w1I+n4J+W4J+o5I+S7+Z4J.q2+k1J+Z4J.n6I+W4J+Z4J.w1I+Z4J.F1I+Z4J.z5I+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+Z4J.w1I+t6X+Z4J.Y8+Z4J.i0I+c3+V9+K1+F6X+g6+g6+F6X+j3+j3+G4J+Z4J.V2+Q+W4J+N8+Z4J.q2+W4J+Z4J.R0I+J5J);var g=function(a){var x8I='utto',B1J='wn',i7X='Do',O0I='U',q6J='con',d0o='ck',f9X='lo',U0I='meb';return g8I+c+(m6+c0X+T7I+U0I+f9X+d0o+b0X+m2I+v3+q2X+B2I+P7I+o5X+i8X)+c+(m6+T7I+q6J+O0I+H7J+b0X+Z4I+t4X+y2)+e[(k6I+Z4J.o6I+Z4J.q2+g0J+Q7X+q5J)]+(b0o+Z4I+s0o+c0X+d9I+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+n1I+c+F6X+a+(t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+(m6+T7I+B2I+o8J+i7X+B1J+b0X+Z4I+x8I+v9I+y2)+e[c6X]+(P0o+N8+Z4J.R0I+Z4J.i0I+Z4J.i0I+t7+U+w8+S3I+g0J+U+w8+P9X+N2X);}
,g=d(g8I+c+(b0X+m2I+v3+q2X+B2I+P7I+q4I+n9J+n9J+i8X)+c+(m6+m2I+q4I+j2J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+c+M9J+c+(m6+T7I+A7X+C5+b0X+Z4I+B0X+c0X+c0X+o8J+y2)+e[(k6I+Z4J.o6I+X2+Z4J.w1I+Z4J.R0I+Z4J.n6I)]+(b0o+Z4I+s0o+Z0X+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+c+(m6+T7I+a4X+P0J+v0J+c0X+b0X+Z4I+t4X+y2)+e[c6X]+r1X+c+n1I+c+(m6+A9I+d9I+v9I+g4J+t3X+m2I+T7I+Y7J+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X)+c+n1I+c+f9I+c+(m6+B2I+q4I+Y8J+L6+t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+U9+n9J+i8X)+c+Y6J+g(C1X)+E3+g(N2J)+E3+g(Z5I)+g(K9J)+k3);this[Z6J]={container:g,date:g[(b9+Z4J.F1I+w8)](Z4J.l0X+c+D3J),title:g[(b9+F9X)](Z4J.l0X+c+(F6X+Z4J.i0I+W6)),calendar:g[T9X](Z4J.l0X+c+(F6X+Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.q2+O4J)),time:g[T9X](Z4J.l0X+c+D8X),input:d(a)}
;this[Z4J.n6I]={d:c3X,display:c3X,namespace:(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+w8+z1+Z4J.q2+v0o+Z4J.q2+F6X)+f[H1J][(z1J+Z4J.F1I+z2X+Z4J.F1I+Z9J)]++,parts:{date:c3X!==this[Z4J.V2][(c8I+u2+F6)][e6X](/[YMD]/),time:c3X!==this[Z4J.V2][o7J][(t5X+y3I)](/[Hhm]/),seconds:-N0!==this[Z4J.V2][(c8I+u1X+z1)][(h5J+p5+s1+c8I)](Z4J.n6I),hours12:c3X!==this[Z4J.V2][(c8I+u1X+Z4J.Y8+Z4J.i0I)][(A9J+Z4J.i0I+O9J)](/[haA]/)}
}
;this[(Z6J)][Q9J][(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)])[(Z4J.Y8+k6I+k6I+q8+w8)](this[(w8+Z4J.w1I+o5I)][Y0I]);this[(w8+S7)][(w8+Z4J.Y8+I6I)][(Z4J.Y8+k6I+k6I+C5I)](this[Z6J][(Z4J.i0I+S3I+q3I+Z4J.q2)])[(l4X+w8)](this[Z6J][X5X]);this[t2X]();}
;d[(Z4J.q2+S8X)](f.DateTime.prototype,{destroy:function(){var S8I="iner";this[(F4+y3I+S3I+w8+Z4J.q2)]();this[(w8+Z4J.w1I+o5I)][(H0X+B7+S8I)]()[(Z4J.w1I+f4)]("").empty();this[(Z6J)][(S3I+r4)][t9J](".editor-datetime");}
,max:function(a){var R4X="ander",t0I="Titl",x7I="maxDate";this[Z4J.V2][x7I]=a;this[(L6J+Q8I+S3I+Z4J.w1I+h3X+t0I+Z4J.q2)]();this[(z6+C0+Z4J.Y8+Z4J.z5I+R4X)]();}
,min:function(a){var j9I="etC",Z3="_optionsTitle";this[Z4J.V2][R6J]=a;this[Z3]();this[(n8J+j9I+X0I+Q+w8+Z4J.q2+Z4J.o6I)]();}
,owns:function(a){return 0<d(a)[p7I]()[k6X](this[(Z6J)][(H0X+u2X+Z4J.o6I)]).length;}
,val:function(a,b){var A8X="Cal",b2="setTi",V1J="toString",V5J="oUt",E8I="toDa",E4I="Lo",a7X="ome",b0I="tc";if(a===h)return this[Z4J.n6I][w8];if(a instanceof Date)this[Z4J.n6I][w8]=this[z3J](a);else if(null===a||""===a)this[Z4J.n6I][w8]=null;else if("string"===typeof a)if(j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]){var c=j[H7I][(Z4J.R0I+b0I)](a,this[Z4J.V2][o7J],this[Z4J.V2][(o5I+a7X+Z4J.F1I+Z4J.i0I+E4I+Z4J.V2+w2X)],this[Z4J.V2][N3I]);this[Z4J.n6I][w8]=c[(S3I+Z4J.n6I+q7+Z4J.Y8+u1I+w8)]()?c[(E8I+Z4J.i0I+Z4J.q2)]():null;}
else c=a[e6X](/(\d{4})\-(\d{2})\-(\d{2})/),this[Z4J.n6I][w8]=c?new Date(Date[(G2J)](c[1],c[2]-1,c[3])):null;if(b||b===h)this[Z4J.n6I][w8]?this[j0o]():this[(Z6J)][j0X][(g0J+X0I)](a);this[Z4J.n6I][w8]||(this[Z4J.n6I][w8]=this[(F4+c1+X6+V5J+Z4J.V2)](new Date));this[Z4J.n6I][p6J]=new Date(this[Z4J.n6I][w8][V1J]());this[(F4+b2+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.n6I+Z4J.q2+Z4J.i0I+A8X+Z4J.Y8+F9X+Z4J.q2+Z4J.o6I)]();this[(z6+Z4J.i0I+X6+v0o+Z4J.q2)]();}
,_constructor:function(){var J3J="_setTitle",k2="atetim",p1I="Pm",X9="cond",M3X="sInc",U3X="nut",q0o="_optionsTime",a7J="s1",A0X="onsT",t9X="sT",J5="ast",Q2J="eblo",C7X="tim",v4X="par",d6X="isp",P0X="ime",a=this,b=this[Z4J.V2][N7X],c=this[Z4J.V2][(D1X+Z4J.F1I)];this[Z4J.n6I][(k6I+Z4J.Y8+Z4J.o6I+Z4J.i0I+Z4J.n6I)][c1]||this[Z6J][(w8+G4)][v3J]((H0J+Z4J.n6I+V7I+Z4J.g7I),(w0I+Z4J.q2));this[Z4J.n6I][B8X][Y0I]||this[Z6J][(Z4J.i0I+P0X)][v3J]((w8+d6X+c5J),"none");this[Z4J.n6I][(v4X+Z4J.I2I)][(u1+Z4J.V2+t7+w8+Z4J.n6I)]||(this[(Z6J)][Y0I][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("div.editor-datetime-timeblock")[(Z4J.q2+j1I)](2)[(Z4J.o6I+Z4J.q2+F2X)](),this[(Z6J)][(C7X+Z4J.q2)][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("span")[(Z4J.q2+j1I)](1)[V9I]());this[Z4J.n6I][B8X][i4X]||this[Z6J][Y0I][I7X]((w8+P9X+Z4J.l0X+Z4J.q2+w8+Z9X+u2+F6X+w8+Z4J.Y8+Z4J.i0I+Z4J.q2+t1I+A1J+F6X+Z4J.i0I+S3I+o5I+Q2J+Z4J.V2+u3I))[(Z4J.z5I+J5)]()[V9I]();this[(L6J+k6I+t1I+t7+t9X+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.w1I+k6I+Z4J.i0I+S3I+A0X+v0o+Z4J.q2)]("hours",this[Z4J.n6I][B8X][(y3I+Z4J.w1I+g5J+a7J+w6X)]?12:24,1);this[q0o]("minutes",60,this[Z4J.V2][(u6J+U3X+Z4J.q2+M3X+C3X+A1J+g3X)]);this[q0o]((Z4J.n6I+Z4J.V1I+t7+w8+Z4J.n6I),60,this[Z4J.V2][(u1+X9+Z4J.n6I+x1+Z4J.F1I+Z4J.V2+C3X+A1J+g3X)]);this[u8]("ampm",["am","pm"],c[(a0+p1I)]);this[Z6J][j0X][t7]((c8I+Z4J.w1I+E8+Z4J.l0X+Z4J.q2+H0J+Z4J.i0I+u2+F6X+w8+z1+Z4J.q2+Y0I+W4J+Z4J.V2+q6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+w8+Z4J.Y8+I6I+Z4J.i0I+v0o+Z4J.q2),function(){var B9="isabl";if(!a[(w8+Z4J.w1I+o5I)][(Q9J)][(S3I+Z4J.n6I)]((J0o+g0J+r9X+S3I+N8+Z4J.z5I+Z4J.q2))&&!a[(w8+Z4J.w1I+o5I)][j0X][(S3I+Z4J.n6I)]((J0o+w8+B9+u9))){a[y1](a[(w8+Z4J.w1I+o5I)][j0X][(e7J+Z4J.z5I)](),false);a[J2]();}
}
)[(t7)]((l6+Z4J.g7I+s3J+Z4J.l0X+Z4J.q2+o6+Z4J.w1I+Z4J.o6I+F6X+w8+k2+Z4J.q2),function(){var r3J="isib",H5J="ntai";a[Z6J][(Z4J.V2+Z4J.w1I+H5J+Z4J.F1I+Z4J.q2+Z4J.o6I)][(r9X)]((J0o+g0J+r3J+m0I))&&a[y1](a[Z6J][j0X][(g0J+X0I)](),false);}
);this[(Z6J)][Q9J][t7]((Z4J.V2+C3I+M5X+Z4J.q2),(Z4J.n6I+Z4J.q2+Z4J.z5I+Z4J.V1I+Z4J.i0I),function(){var I3J="itio",A4J="_setTime",N1="econ",b5="TCMi",F0="utp",K0="_wr",I0o="_set",r6="UTCHou",a3I="UT",j7X="mpm",h5I="art",F2I="Cla",x9X="has",D3="alander",N7="_correctMonth",c=d(this),f=c[(g0J+X0I)]();if(c[F4J](b+"-month")){a[N7](a[Z4J.n6I][p6J],f);a[J3J]();a[(F4+u1+Z4J.i0I+G4X+D3)]();}
else if(c[(x9X+X7J+L1)](b+(F6X+Z4J.g7I+Z4J.q2+v6))){a[Z4J.n6I][p6J][(Z4J.n6I+K5I+Q8J+Z4J.R0I+Z4J.z5I+D3X)](f);a[(z6+Z4J.i0I+W7I+q3I+Z4J.q2)]();a[(z6+C0+Z4J.Y8+l7I+Z4J.F1I+l8)]();}
else if(c[F4J](b+(F6X+y3I+E5J+Z4J.n6I))||c[(y3I+Z4J.Y8+Z4J.n6I+F2I+t8)](b+(F6X+Z4J.Y8+o5I+Q9I))){if(a[Z4J.n6I][(k6I+h5I+Z4J.n6I)][i4X]){c=d(a[Z6J][(f2J+Z4J.F1I+B7+S3I+G9X+Z4J.o6I)])[(K3J+w8)]("."+b+(F6X+y3I+Z4J.w1I+Z4J.R0I+B9X))[y1]()*1;f=d(a[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+S3I+Z4J.F1I+Q2)])[(c8I+Y0o+w8)]("."+b+(F6X+Z4J.Y8+j7X))[(g0J+X0I)]()===(Q9I);a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+a3I+G4X+z8+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z4J.n6I)](c===12&&!f?0:f&&c!==12?c+12:c);}
else a[Z4J.n6I][w8][(Z4J.n6I+Z4J.q2+Z4J.i0I+r6+Z4J.o6I+Z4J.n6I)](f);a[(I0o+X6+v0o+Z4J.q2)]();a[(K0+S3I+Z4J.i0I+Z4J.q2+s1+F0+n4J)](true);}
else if(c[(y3I+Z4J.Y8+Z4J.n6I+n1+Z4J.n6I)](b+"-minutes")){a[Z4J.n6I][w8][(u1+Z4J.i0I+D7+b5+Z5X+Z4J.i0I+Z4J.q2+Z4J.n6I)](f);a[(F4+u1+Z4J.i0I+X6+P0X)]();a[j0o](true);}
else if(c[F4J](b+(F6X+Z4J.n6I+N1+w5I))){a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+R0+Z4J.V1I+Z4J.w1I+F9X+Z4J.n6I)](f);a[A4J]();a[j0o](true);}
a[(w8+S7)][(S3I+Z4J.F1I+W2I)][(c8I+Z4J.w1I+v5J+Z4J.n6I)]();a[(F4+m0J+I3J+Z4J.F1I)]();}
)[t7]("click",function(c){var l0="ocus",o5="eOut",h7J="rit",D0J="setUTCDate",k5J="Mo",c9X="setUTCFullYear",y5="dIn",m9J="cte",H6J="ption",f9J="nD",P4J="asC",U6I="edIn",Q5="dex",p9J="dI",d5="selectedIndex",Z5J="tTi",a5I="corre",U1="nRi",z0X="lan",F0I="CMon",d1X="etUT",Q0o="CM",e5X="setUT",E9="eft",D0X="onL",D5X="pag",I9X="Cas",k9X="we",F6J="toLo",C2X="arget",f=c[(Z4J.i0I+C2X)][L0o][(F6J+k9X+Z4J.o6I+I9X+Z4J.q2)]();if(f!==(T8J)){c[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I+T3X+D5X+Z4J.Y8+Z4J.i0I+Q7X+Z4J.F1I)]();if(f==="button"){c=d(c[d6J]);f=c.parent();if(!f[(y3I+Z4J.Y8+Z4J.n6I+X7J+L1)]((w8+r9X+Z4J.Y8+B2X+Z4J.q2+w8)))if(f[(y3I+Z1+X7J+Z4J.Y8+Z4J.n6I+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+D0X+E9))){a[Z4J.n6I][p6J][(e5X+Q0o+Z4J.w1I+g3X+y3I)](a[Z4J.n6I][p6J][(Z8I+d1X+F0I+U1I)]()-1);a[J3J]();a[(z6+C0+Z4J.Y8+z0X+y9I+Z4J.o6I)]();a[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][O6I]();}
else if(f[F4J](b+(F6X+S3I+Z4J.V2+Z4J.w1I+U1+Z8I+y3I+Z4J.i0I))){a[(F4+a5I+i8J+g6+t7+U1I)](a[Z4J.n6I][(S0+k6I+Z4J.z5I+y3)],a[Z4J.n6I][(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][f5J]()+1);a[(n8J+Z4J.q2+Z5J+q3I+Z4J.q2)]();a[(n8J+Z4J.A4+G4X+X0I+Z4J.Y8+Z4J.F1I+l8)]();a[(w8+S7)][(S3I+n8X+n4J)][(O6I)]();}
else if(f[(C3I+Z4J.n6I+G4X+Z4J.z5I+Z1+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+t7+g8X))){c=f.parent()[(T9X)]((I2J+K3X))[0];c[d5]=c[(Z4J.n6I+Z4J.q2+p5J+Z4J.q2+p9J+Z4J.F1I+Q5)]!==c[V6X].length-1?c[(Z4J.n6I+w7+K3X+U6I+w8+p5)]+1:0;d(c)[l2]();}
else if(f[(y3I+P4J+Z4J.z5I+L1)](b+(F6X+S3I+f2J+f9J+Z4J.w1I+g9I))){c=f.parent()[(K3J+w8)]((I2J+K3X))[0];c[d5]=c[(u1+Z4J.z5I+K3X+Z4J.q2+w8+x1+D7X+z0J)]===0?c[(Z4J.w1I+H6J+Z4J.n6I)].length-1:c[(Z4J.n6I+Z4J.q2+m0I+m9J+y5+w8+Z4J.q2+z0J)]-1;d(c)[l2]();}
else{if(!a[Z4J.n6I][w8])a[Z4J.n6I][w8]=a[z3J](new Date);a[Z4J.n6I][w8][c9X](c.data("year"));a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+D7+W0I+k5J+Z4J.F1I+Z4J.i0I+y3I)](c.data((o5I+Z4J.w1I+r1J)));a[Z4J.n6I][w8][D0J](c.data((w8+y3)));a[(F4+j0J+h7J+o5+k6I+Z4J.R0I+Z4J.i0I)](true);setTimeout(function(){a[(F4+h1I+w8+Z4J.q2)]();}
,10);}
}
else a[(Z6J)][j0X][(c8I+l0)]();}
}
);}
,_compareDates:function(a,b){var Z3X="_dateToUtcString",X8X="cS",I8J="dateToUt";return this[(F4+I8J+X8X+Z4J.i0I+b7J+Z8I)](a)===this[Z3X](b);}
,_correctMonth:function(a,b){var N4X="Mont",K4="setUTCMonth",a1X="sI",c8J="_da",c=this[(c8J+Z4J.g7I+a1X+Z4J.F1I+g6+t7+Z4J.i0I+y3I)](a[W2X](),b),e=a[Y1I]()>c;a[K4](b);e&&(a[(Z4J.n6I+Z4J.q2+o1J+G4X+j3+z1+Z4J.q2)](c),a[(u1+m8+W0I+N4X+y3I)](b));}
,_daysInMonth:function(a,b){return [31,0===a%4&&(0!==a%100||0===a%400)?29:28,31,30,31,30,31,31,30,31,30,31][b];}
,_dateToUtc:function(a){var H9I="getS",t0X="getHours";return new Date(Date[G2J](a[D8J](),a[(Z8I+Z4J.A4+g6+S3J+y3I)](),a[(R5+j3+Z4J.Y8+I6I)](),a[t0X](),a[(R5+g6+S3I+Z5X+c1X)](),a[(H9I+Z4J.q2+Z4J.V2+t7+w5I)]()));}
,_dateToUtcString:function(a){var v4I="getU",q1J="tUTCMont",r8J="_pad",w1J="lYe";return a[(R5+D7+Q8J+g8J+w1J+v6)]()+"-"+this[r8J](a[(n6+q1J+y3I)]()+1)+"-"+this[(F4+k6I+b4)](a[(v4I+X6+G4X+N8J+Z4J.i0I+Z4J.q2)]());}
,_hide:function(){var e4I="clic",i5J="dow",r3I="esp",a=this[Z4J.n6I][(g7X+o5I+r3I+N4+Z4J.q2)];this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+u2X+Z4J.o6I)][K7X]();d(j)[(Z4J.w1I+f4)]("."+a);d(q)[(Z4J.w1I+c8I+c8I)]((l6+Z4J.g7I+i5J+Z4J.F1I+Z4J.l0X)+a);d("div.DTE_Body_Content")[(Z4J.w1I+f4)]("scroll."+a);d((G8X+w8+Z4J.g7I))[t9J]((e4I+u3I+Z4J.l0X)+a);}
,_hours24To12:function(a){return 0===a?12:12<a?a-12:a;}
,_htmlDay:function(a){var S5='ay',q6X='tt',E5="day",B2="disa";if(a.empty)return '<td class="empty"></td>';var b=[(w8+y3)],c=this[Z4J.V2][N7X];a[(B2+N8+Z4J.z5I+Z4J.q2+w8)]&&b[q7I]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I));a[(Z4J.i0I+G1+Z4J.Y8+Z4J.g7I)]&&b[q7I]("today");a[r4X]&&b[(l2I+w5)]("selected");return '<td data-day="'+a[(E5)]+(k6J+B2I+t8J+n9J+n9J+i8X)+b[W6I](" ")+'"><button class="'+c+(F6X+N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+W4J)+c+(m6+m2I+q4I+F2J+k6J+c0X+H3J+i8X+Z4I+B0X+q6X+d9I+v9I+k6J+m2I+h1+q4I+m6+F2J+m8I+L6+i8X)+a[(j1+Z4J.Y8+Z4J.o6I)]+'" data-month="'+a[(Z8J+Z4J.F1I+U1I)]+(k6J+m2I+h1+q4I+m6+m2I+S5+i8X)+a[E5]+(H6)+a[(E5)]+(P0o+N8+n4J+Z4J.i0I+t7+U+Z4J.i0I+w8+N2X);}
,_htmlMonth:function(a,b){var Y9="><",a1I="Mon",c7I='ead',h6X="kN",e8I="showWeekNumber",p0I="refi",X3J="_htmlWeekOfYear",f3X="Nu",H4X="owWeek",d2J="_htmlDay",c4="fu",W5="etUTC",S0o="ys",q4J="sab",U6J="_compareDates",d3J="_comp",u4J="Secon",L1X="UTCMin",m5J="setUTCHours",g5="setSeconds",V0J="setUTCMinutes",T2="TCHo",S3="axDate",l7X="irstD",u8I="TCDa",i7J="_daysInMonth",c=new Date,e=this[i7J](a,b),f=(new Date(Date[G2J](a,b,1)))[(Z8I+Z4J.q2+m8+u8I+Z4J.g7I)](),g=[],h=[];0<this[Z4J.V2][G7I]&&(f-=this[Z4J.V2][(c8I+l7X+y3)],0>f&&(f+=7));for(var i=e+f,j=i;7<j;)j-=7;var i=i+(7-j),j=this[Z4J.V2][R6J],m=this[Z4J.V2][(o5I+S3)];j&&(j[(Z4J.n6I+K5I+T2+Z4J.R0I+B9X)](0),j[V0J](0),j[g5](0));m&&(m[m5J](23),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+L1X+Z4J.R0I+c1X)](59),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+u4J+w5I)](59));for(var n=0,p=0;n<i;n++){var o=new Date(Date[G2J](a,b,1+(n-f))),q=this[Z4J.n6I][w8]?this[(d3J+v6+Z4J.q2+N8J+c1X)](o,this[Z4J.n6I][w8]):!1,r=this[U6J](o,c),s=n<f||n>=e+f,t=j&&o<j||m&&o>m,v=this[Z4J.V2][(H0J+q4J+Z4J.z5I+Z4J.q2+j3+Z4J.Y8+S0o)];d[(r9X+X0+Z4J.o6I+y3)](v)&&-1!==d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Y8X+Z4J.g7I)](o[(Z8I+W5+N8J+Z4J.g7I)](),v)?t=!0:(c4+M7X+Z4J.i0I+S3I+t7)===typeof v&&!0===v(o)&&(t=!0);h[(k6I+Z4J.R0I+w5)](this[d2J]({day:1+(n-f),month:b,year:a,selected:q,today:r,disabled:t,empty:s}
));7===++p&&(this[Z4J.V2][(Z4J.n6I+y3I+H4X+f3X+o5I+N8+Q2)]&&h[(Z4J.R0I+Z4J.F1I+Z4J.n6I+h1I+c8I+Z4J.i0I)](this[X3J](n-f,b,a)),g[q7I]("<tr>"+h[W6I]("")+(P0o+Z4J.i0I+Z4J.o6I+N2X)),h=[],p=0);}
c=this[Z4J.V2][(Z4J.V2+q2J+i1+p0I+z0J)]+(F6X+Z4J.i0I+Z4J.Y8+l3);this[Z4J.V2][e8I]&&(c+=(W4J+j0J+Z4J.q2+Z4J.q2+h6X+Z4J.R0I+P7J+Z4J.q2+Z4J.o6I));return (x5+c0X+M9I+K2X+q2X+B2I+P7I+b6+n9J+i8X)+c+(b0X+c0X+v0J+c7I+y2)+this[(F4+h0J+Z4J.z5I+a1I+Z4J.i0I+y3I+w7I+b4)]()+(P0o+Z4J.i0I+W7X+w8+Y9+Z4J.i0I+N8+i2X+N2X)+g[W6I]("")+(P0o+Z4J.i0I+N8+Z4J.w1I+g3I+U+Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2+N2X);}
,_htmlMonthHead:function(){var x5I="ush",v7I="Num",O2I="eek",a=[],b=this[Z4J.V2][G7I],c=this[Z4J.V2][(S3I+U1X+B0o+Z4J.F1I)],e=function(a){var T8I="weekdays";for(a+=b;7<=a;)a-=7;return c[T8I][a];}
;this[Z4J.V2][(Z4J.n6I+y3I+O2+j0I+O2I+v7I+N8+Z4J.q2+Z4J.o6I)]&&a[(k6I+x5I)]("<th></th>");for(var d=0;7>d;d++)a[(l2I+Z4J.n6I+y3I)]((M4X+Z4J.i0I+y3I+N2X)+e(d)+(P0o+Z4J.i0I+y3I+N2X));return a[(Z4J.i5I+Z4J.w1I+S3I+Z4J.F1I)]("");}
,_htmlWeekOfYear:function(a,b,c){var l3J="classPr",j8I="CDa",l7="ei",e=new Date(c,0,1),a=Math[(Z4J.V2+l7+Z4J.z5I)](((new Date(c,b,a)-e)/864E5+e[(Z8I+Z4J.q2+o1J+j8I+Z4J.g7I)]()+1)/7);return '<td class="'+this[Z4J.V2][(l3J+Z4J.q2+c8I+S3I+z0J)]+(m6+R7J+m8I+m8I+b9I+H6)+a+(P0o+Z4J.i0I+w8+N2X);}
,_options:function(a,b,c){var n8I="assP";c||(c=b);a=this[Z6J][(H0X+B7+S3I+F3I)][T9X]((u1+p5J+Z4J.l0X)+this[Z4J.V2][(Z4J.V2+Z4J.z5I+n8I+Z4J.o6I+Z4J.q2+b9+z0J)]+"-"+a);a.empty();for(var e=0,d=b.length;e<d;e++)a[w1X]('<option value="'+b[e]+(H6)+c[e]+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionSet:function(a,b){var Z0o="unknown",B1I="ected",k2J="refix",w5X="clas",c=this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+Y0o+Q2)][(c8I+h5J)]("select."+this[Z4J.V2][(w5X+x7X+k2J)]+"-"+a),e=c.parent()[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]("span");c[y1](b);c=c[(c8I+Y0o+w8)]((Y7X+J0o+Z4J.n6I+w7+B1I));e[(E4J+o5I+Z4J.z5I)](0!==c.length?c[(I6I+z0J+Z4J.i0I)]():this[Z4J.V2][k1I][Z0o]);}
,_optionsTime:function(a,b,c){var x0J="fix",a=this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][T9X]((u1+m0I+i8J+Z4J.l0X)+this[Z4J.V2][(Q4J+Z1+Z4J.n6I+i1+Z4J.o6I+Z4J.q2+x0J)]+"-"+a),e=0,d=b,f=12===b?function(a){return a;}
:this[(j6J+Z4J.Y8+w8)];12===b&&(e=1,d=13);for(b=e;b<d;b+=c)a[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]('<option value="'+b+'">'+f(b)+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionsTitle:function(){var M1X="_range",H4J="hs",n3J="_r",w7J="mon",p9I="opt",V0X="yearRange",f9="Ye",o4="tFull",M6J="rRang",V5="yea",W0X="getF",a=this[Z4J.V2][(D7I+R6)],b=this[Z4J.V2][(o5I+S3I+Z4J.F1I+N8J+Z4J.i0I+Z4J.q2)],c=this[Z4J.V2][(A9J+z0J+n7J+Z4J.q2)],b=b?b[(n6+P1+Z4J.R0I+q5I+V9+Z4J.q2+v6)]():null,c=c?c[(W0X+g8J+D3X)]():null,b=null!==b?b:(new Date)[D8J]()-this[Z4J.V2][(V5+M6J+Z4J.q2)],c=null!==c?c:(new Date)[(n6+o4+f9+Z4J.Y8+Z4J.o6I)]()+this[Z4J.V2][V0X];this[(F4+p9I+s4+Z4J.n6I)]((w7J+Z4J.i0I+y3I),this[(n3J+Q+n6)](0,11),a[(w7J+Z4J.i0I+H4J)]);this[u8]("year",this[M1X](b,c));}
,_pad:function(a){return 10>a?"0"+a:a;}
,_position:function(){var e2X="ndTo",j5I="erHeight",E8J="out",G3X="onta",a=this[Z6J][(Y0o+W2I)][(t9J+Y9J)](),b=this[(Z6J)][(Z4J.V2+G3X+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)],c=this[(w8+S7)][(S3I+r4)][(E8J+j5I)]();b[v3J]({top:a.top+c,left:a[s2I]}
)[(Z4J.Y8+N0J+Z4J.q2+e2X)]("body");var e=b[u6I](),f=d("body")[(Z4J.n6I+Z4J.V2+P1X+g6J+k6I)]();a.top+c+e-f>d(j).height()&&(a=a.top-e,b[(Z4J.V2+Z4J.n6I+Z4J.n6I)]((Z4J.i0I+Z4J.w1I+k6I),0>a?0:a));}
,_range:function(a,b){for(var c=[],e=a;e<=b;e++)c[q7I](e);return c;}
,_setCalander:function(){var R8="isplay",f5="lM",p0="_htm";this[Z6J][(Z4J.V2+w2X+Z4J.F1I+Z4J.C6J+Z4J.o6I)].empty()[w1X](this[(p0+f5+t7+Z4J.i0I+y3I)](this[Z4J.n6I][(w8+R8)][W2X](),this[Z4J.n6I][(w8+S3I+Z4J.n6I+V7I+Z4J.g7I)][(Z8I+Z4J.A4+D7+W0I+g6+Z4J.w1I+r1J)]()));}
,_setTitle:function(){var c4I="lY",I7="CFul",H6X="displ";this[(F4+Z4J.w1I+k6I+Z4J.i0I+Q7X+Z4J.F1I+w9+Z4J.i0I)]((Z8J+g3X+y3I),this[Z4J.n6I][(H6X+Z4J.Y8+Z4J.g7I)][f5J]());this[L3I]((Z4J.g7I+H5I),this[Z4J.n6I][p6J][(Z8I+Z4J.q2+m8+X6+I7+c4I+Z4J.q2+Z4J.Y8+Z4J.o6I)]());}
,_setTime:function(){var z9I="optio",l1J="Mi",d7I="4T",j3J="_ho",s4I="hou",H8="ptionS",b5J="getUTCHours",a=this[Z4J.n6I][w8],b=a?a[b5J]():0;this[Z4J.n6I][B8X][i4X]?(this[(F4+Z4J.w1I+H8+Z4J.q2+Z4J.i0I)]((s4I+B9X),this[(j3J+g5J+Z4J.n6I+w6X+d7I+Z4J.w1I+U1X+w6X)](b)),this[L3I]("ampm",12>b?(Z4J.Y8+o5I):(k6I+o5I))):this[L3I]((I9J+g5J+Z4J.n6I),b);this[L3I]((o5I+S3I+Z4J.F1I+Z4J.R0I+c1X),a?a[(Z8I+Z4J.q2+m8+W0I+l1J+Z4J.F1I+n4J+Z4J.q2+Z4J.n6I)]():0);this[(F4+z9I+Z4J.F1I+R0+Z4J.q2+Z4J.i0I)]("seconds",a?a[(n6+Z4J.i0I+w9+H0X+w5I)]():0);}
,_show:function(){var t1="yd",u0I="scr",Y="_position",V1="esiz",F1X="mesp",a=this,b=this[Z4J.n6I][(g7X+F1X+Y7I)];this[(F4+E7I+Z4J.n6I+S3I+Z4J.i0I+s4)]();d(j)[t7]("scroll."+b+(W4J+Z4J.o6I+V1+Z4J.q2+Z4J.l0X)+b,function(){a[Y]();}
);d("div.DTE_Body_Content")[(Z4J.w1I+Z4J.F1I)]((u0I+A0I+Z4J.z5I+Z4J.l0X)+b,function(){a[Y]();}
);d(q)[t7]((l6+t1+o0I+Z4J.l0X)+b,function(b){var b8J="key",z3="ey",x9J="eyCo";(9===b[(u3I+x9J+y9I)]||27===b[(u3I+z3+G4X+O1X)]||13===b[(b8J+G4X+O1X)])&&a[(M4)]();}
);setTimeout(function(){d("body")[t7]("click."+b,function(b){var X1X="rg";!d(b[d6J])[(k6I+v6+q8+Z4J.i0I+Z4J.n6I)]()[k6X](a[(w8+Z4J.w1I+o5I)][(Z4J.V2+S3J+A7+F3I)]).length&&b[(B7+X1X+Z4J.A4)]!==a[(Z6J)][(Y0o+W2I)][0]&&a[M4]();}
);}
,10);}
,_writeOutput:function(a){var Y6I="_pa",a2J="Yea",T5I="momentLocale",p3="utc",b=this[Z4J.n6I][w8],b=j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]?j[H7I][p3](b,h,this[Z4J.V2][T5I],this[Z4J.V2][N3I])[o7J](this[Z4J.V2][o7J]):b[(n6+m8+X6+G4X+X5+q5I+a2J+Z4J.o6I)]()+"-"+this[(Y6I+w8)](b[f5J]()+1)+"-"+this[(j6J+Z4J.Y8+w8)](b[Y1I]());this[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][(e7J+Z4J.z5I)](b);a&&this[Z6J][(S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][O6I]();}
}
);f[(j3+z1+Z4J.q2+X6+S3I+A1J)][(F4+e9X+V3+Z4J.q2)]=E0;f[H1J][(w8+Z4J.q2+g5X+Z4J.n6I)]={classPrefix:L4J,disableDays:c3X,firstDay:N0,format:(V9+r8+V9+F6X+g6+g6+F6X+j3+j3),i18n:f[(w8+W9+Z4J.Y8+g8J+Z4J.I2I)][(D1X+Z4J.F1I)][(w8+Z4J.Y8+Z4J.i0I+O7J+Z4J.q2)],maxDate:c3X,minDate:c3X,minutesIncrement:N0,momentStrict:!E0,momentLocale:q8,secondsIncrement:N0,showWeekNumber:!N0,yearRange:f2I}
;var I=function(a,b){var Q1X="div.upload button",D4I="...",f4J="hoose",i6="uploadText";if(c3X===b||b===h)b=a[i6]||(G4X+f4J+W4J+c8I+S3I+Z4J.z5I+Z4J.q2+D4I);a[(L3X+l2I+Z4J.i0I)][(b9+F9X)](Q1X)[z6I](b);}
,M=function(a,b,c){var U2="]",Y2X="=",W7="[",b4J="nder",l3X="oDr",i7="E_Upl",i4="agex",w6I="eav",R3I="drop",I6X="Drag",n8="pT",y2I="gDro",A6="dragDrop",k0="eRea",n3I='ered',D0o='ell',v7X='ll',v2='ton',X='lue',y0I='V',a9='il',x6='yp',M1I='np',O9='" /><',L2X='load',c3J='_ta',z0I='itor_uplo',F5J="asses",e=a[(Z4J.V2+Z4J.z5I+F5J)][y0o][g8],g=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+m2I+z0I+q4I+m2I+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+B0X+c3J+Z4I+K2X+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+G9J+d9I+R7J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+B2I+B5+P7I+q2X+B0X+H7J+L2X+b0X+Z4I+t4X+q2X+B2I+P7I+o5X+i8X)+e+(O9+T7I+M1I+B0X+c0X+q2X+c0X+x6+m8I+i8X+c2I+a9+m8I+t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+B2I+B5+P7I+q2X+B2I+K2X+L6+y0I+q4I+X+b0X+Z4I+B0X+c0X+v2+q2X+B2I+t8J+e0J+i8X)+e+(s4X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+U9+n9J+i8X+G9J+d9I+R7J+q2X+n9J+m8I+A7X+v9I+m2I+b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+B2I+m8I+v7X+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+m2I+G9J+d9I+H7J+b0X+n9J+H7J+q4I+v9I+P8X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+v3+q2X+B2I+t8J+n9J+n9J+i8X+B2I+D0o+b0X+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+G9J+V6+m2I+n3I+t3X+m2I+v3+o9+m2I+T7I+Y7J+o9+m2I+T7I+Y7J+o9+m2I+v3+y2));b[(F4+S3I+Z4J.F1I+l2I+Z4J.i0I)]=g;b[(E4+N8+m0I+w8)]=!E0;I(b);if(j[(o3+S3I+Z4J.z5I+k0+l8)]&&!N0!==b[A6]){g[T9X]((H0J+g0J+Z4J.l0X+w8+X6X+W4J+Z4J.n6I+o8I+Z4J.F1I))[(Z4J.i0I+s0X)](b[(J4I+Z4J.Y8+y2I+n8+Z4J.q2+z0J+Z4J.i0I)]||(I6X+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+W4J+Z4J.Y8+W4J+c8I+G6J+Z4J.q2+W4J+y3I+Q2+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.R0I+M7I+y5J));var h=g[(c8I+S3I+Z4J.F1I+w8)]((w8+P9X+Z4J.l0X+w8+Z4J.o6I+Z4J.w1I+k6I));h[(t7)](R3I,function(e){var V6J="eClas",c9="dataTransfer",Z8X="lEv",L9X="orig";b[x4J]&&(f[(Z4J.R0I+A5I+b4)](a,b,e[(L9X+S3I+Z4J.F1I+Z4J.Y8+Z8X+Z4J.q2+Z4J.F1I+Z4J.i0I)][c9][G0I],I,c),h[(Z4J.o6I+i2J+g0J+V6J+Z4J.n6I)]((a0X+Z4J.o6I)));return !N0;}
)[t7]((L4I+Z8I+Z4J.z5I+w6I+Z4J.q2+W4J+w8+Z4J.o6I+i4+Z9X),function(){var o5J="over",O5I="oveC";b[x4J]&&h[(Z4J.o6I+Z4J.q2+o5I+O5I+q2J)](o5J);return !N0;}
)[(t7)]((J4I+L9+a0X+Z4J.o6I),function(){b[(F4+q8+Z4J.Y8+N8+P3I)]&&h[d8J]((a0X+Z4J.o6I));return !N0;}
);a[(Z4J.w1I+Z4J.F1I)](Y5X,function(){var m6X="_Upl",l9I="ver";d(Q5X)[t7]((L4I+Z8I+Z4J.w1I+l9I+Z4J.l0X+j3+X6+i7+Z4J.w1I+Z4J.Y8+w8+W4J+w8+k7X+k6I+Z4J.l0X+j3+X7+m6X+h6+w8),function(){return !N0;}
);}
)[(t7)](d5I,function(){var l6I="E_U",m7I="gov";d((N8+G1+Z4J.g7I))[(d6+c8I)]((w8+Z4J.o6I+Z4J.Y8+m7I+Q2+Z4J.l0X+j3+X6+i7+h6+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+Z4J.l0X+j3+X6+l6I+k6I+Z4J.z5I+Z4J.w1I+b4));}
);}
else g[d8J]((Z4J.F1I+l3X+Z4J.w1I+k6I)),g[(Z4J.Y8+N0J+Z4J.q2+F9X)](g[(c8I+S3I+Z4J.F1I+w8)]((w8+S3I+g0J+Z4J.l0X+Z4J.o6I+Z4J.q2+b4J+Z4J.q2+w8)));g[(b9+Z4J.F1I+w8)](I0I)[t7]((Z4J.V2+u1I+z9J),function(){f[j3I][r2][Y9J][L5I](a,b,g0I);}
);g[T9X]((Y0o+l2I+Z4J.i0I+W7+Z4J.i0I+Z4J.g7I+g6I+Y2X+c8I+S3I+Z4J.z5I+Z4J.q2+U2))[(t7)]((Z4J.V2+y3I+Z4J.Y8+M5X+Z4J.q2),function(){f[r2](a,b,this[(c8I+S3I+m0I+Z4J.n6I)],I,function(b){var M2="input[type=file]";c[(d5J+Z4J.z5I)](a,b);g[T9X](M2)[(g0J+Z4J.Y8+Z4J.z5I)](g0I);}
);}
);return g;}
,A=function(a){setTimeout(function(){var d0J="trigge";a[(d0J+Z4J.o6I)]((v1+Z4J.F1I+n6),{editor:!E0,editorSet:!E0}
);}
,E0);}
,s=f[(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Y5I+k6I+B4)],p=d[(p5+Z4J.i0I+q8+w8)](!E0,{}
,f[(E1)][w8J],{get:function(a){return a[(F4+S3I+Z4J.F1I+k6I+n4J)][(g0J+X0I)]();}
,set:function(a,b){a[m8X][y1](b);A(a[(F4+S3I+Z4J.F1I+W2I)]);}
,enable:function(a){a[(m8X)][x3I]((S0+Z4J.Y8+N8+Z4J.z5I+u9),q9I);}
,disable:function(a){var e3X="isab";a[m8X][(x3I)]((w8+e3X+Z4J.z5I+u9),v3X);}
}
);s[e5]={create:function(a){a[(F4+y1)]=a[o0X];return c3X;}
,get:function(a){return a[C7];}
,set:function(a,b){a[(W5J+Z4J.Y8+Z4J.z5I)]=b;}
}
;s[A6I]=d[H3I](!E0,{}
,p,{create:function(a){a[(F4+Y0o+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+Z4J.R0I+Z4J.i0I+i9X))[l5X](d[H3I]({id:f[T0J](a[(J1J)]),type:(k0X),readonly:A6I}
,a[(z1+U8I)]||{}
));return a[(F4+S3I+P3J+Z4J.i0I)][E0];}
}
);s[k0X]=d[H3I](!E0,{}
,p,{create:function(a){a[(m8X)]=d((M4X+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I+i9X))[(Z4J.Y8+c2J)](d[H3I]({id:f[T0J](a[(J1J)]),type:(W6X+Z4J.i0I)}
,a[l5X]||{}
));return a[(F4+S3I+r4)][E0];}
}
);s[(o8I+Z4J.n6I+Z4J.n6I+j0J+Z4J.w1I+I3X)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,p,{create:function(a){var e8J="word";a[m8X]=d((M4X+S3I+n8X+n4J+i9X))[l5X](d[(p5+Z4J.i0I+Z4J.q2+F9X)]({id:f[T0J](a[(S3I+w8)]),type:(o8I+t8+e8J)}
,a[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]||{}
));return a[m8X][E0];}
}
);s[P5X]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var g3J="tend",R1J="tar";a[(z1J+Z4J.F1I+k6I+n4J)]=d((M4X+Z4J.i0I+Z4J.q2+z0J+R1J+Z4J.q2+Z4J.Y8+i9X))[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)](d[(p5+g3J)]({id:f[T0J](a[J1J])}
,a[l5X]||{}
));return a[(F4+Y0o+l2I+Z4J.i0I)][E0];}
}
);s[(I2J+K3X)]=d[(p5+I6I+F9X)](!0,{}
,p,{_addOptions:function(a,b){var Y4="placeholderDisabled",D7J="olderDi",X6I="ceh",u7="placeholderValue",R7X="rVa",u9I="olde",D9="eh",w3I="lac",n5J="eholde",c=a[(m8X)][0][V6X],e=0;c.length=0;if(a[(M7I+N4+n5J+Z4J.o6I)]!==h){e=e+1;c[0]=new Option(a[s4J],a[(k6I+w3I+D9+u9I+R7X+Z4J.z5I+Z4J.R0I+Z4J.q2)]!==h?a[u7]:"");var d=a[(k6I+Z4J.z5I+Z4J.Y8+X6I+D7J+Z4J.n6I+Z4J.Y8+B2X+Z4J.q2+w8)]!==h?a[Y4]:true;c[0][(y3I+J1J+w8+Z4J.q2+Z4J.F1I)]=d;c[0][c6I]=d;}
b&&f[z4J](b,a[d1],function(a,b,d){c[d+e]=new Option(b,a);c[d+e][z5J]=a;}
);}
,create:function(a){var P0="ipOpts",v9X="ele";a[m8X]=d((M4X+Z4J.n6I+v9X+Z4J.V2+Z4J.i0I+i9X))[l5X](d[(Z4J.q2+z0J+Z4J.i0I+C5I)]({id:f[T0J](a[J1J]),multiple:a[s8J]===true}
,a[(Z4J.Y8+c2J)]||{}
))[(t7)]((Z4J.V2+y3I+Z4J.Y8+Z4J.F1I+Z8I+Z4J.q2+Z4J.l0X+w8+Z4J.i0I+Z4J.q2),function(b,c){var o9J="_lastSet";if(!c||!c[(u9+S3I+Z4J.i0I+u2)])a[o9J]=s[T8J][(Z8I+Z4J.q2+Z4J.i0I)](a);}
);s[(u1+Z4J.z5I+Z4J.V1I+Z4J.i0I)][k3X](a,a[V6X]||a[P0]);return a[(L3X+W2I)][0];}
,update:function(a,b){var w3="lastS",Q4X="ddOp";s[(P2J+Z4J.i0I)][(y7J+Q4X+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a,b);var c=a[(F4+w3+Z4J.q2+Z4J.i0I)];c!==h&&s[T8J][(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,c,true);A(a[(F4+Y0o+k6I+n4J)]);}
,get:function(a){var b=a[m8X][(b9+F9X)]((Z4J.w1I+Q8I+S3I+t7+J0o+Z4J.n6I+Z4J.q2+m0I+i8J+Z4J.q2+w8))[(A9J+k6I)](function(){return this[(F4+u9+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+y1)];}
)[(Q3I+T0)]();return a[s8J]?a[(Z4J.n6I+Z4J.q2+o8I+Y8X+Z4J.i0I+Z4J.w1I+Z4J.o6I)]?b[W6I](a[z1I]):b:b.length?b[0]:null;}
,set:function(a,b,c){var E1I="ple",A8="tS";if(!c)a[(T1J+Z1+A8+Z4J.A4)]=b;a[(x4X+Z4J.z5I+t1I+k6I+Z4J.z5I+Z4J.q2)]&&a[z1I]&&!d[(r9X+U4X+P8J+Z4J.g7I)](b)?b=b[z5X](a[(u1+k6I+Z4J.Y8+Y8X+Q3I+Z4J.o6I)]):d[S8](b)||(b=[b]);var e,f=b.length,g,h=false,i=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)][T9X]("option");a[(z1J+n8X+n4J)][(c8I+Y0o+w8)]((V7+p9X+Z4J.F1I))[(s8X)](function(){g=false;for(e=0;e<f;e++)if(this[(F4+Z4J.q2+H0J+E7+y1)]==b[e]){h=g=true;break;}
this[r4X]=g;}
);if(a[s4J]&&!h&&!a[(o5I+I8I+S3I+E1I)]&&i.length)i[0][r4X]=true;c||A(a[(L3X+l2I+Z4J.i0I)]);return h;}
,destroy:function(a){a[(z1J+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(Z4J.w1I+f4)]((v1+Z4J.F1I+n6+Z4J.l0X+w8+Z4J.i0I+Z4J.q2));}
}
);s[M2X]=d[(Z4J.q2+z0+F9X)](!0,{}
,p,{_addOptions:function(a,b){var d8X="sPa",c=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)].empty();b&&f[(k6I+A7+B9X)](b,a[(V7+Z4J.i0I+Q7X+Z4J.F1I+d8X+S3I+Z4J.o6I)],function(b,g,h){var T2J="eId",I9="af";c[w1X]('<div><input id="'+f[(Z4J.n6I+I9+T2J)](a[(J1J)])+"_"+h+'" type="checkbox" /><label for="'+f[(Z4J.n6I+I9+Z4J.q2+x1+w8)](a[J1J])+"_"+h+(H6)+g+"</label></div>");d((h5+Z4J.i0I+J0o+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.i0I),c)[(Z4J.Y8+E2I+Z4J.o6I)]((g0J+X0I+Z4J.R0I+Z4J.q2),b)[0][z5J]=b;}
);}
,create:function(a){var D6="pti",n0="Op",k3I="kbo";a[m8X]=d((M4X+w8+P9X+t4I));s[(O9J+Z4J.V1I+k3I+z0J)][(F4+Z4J.Y8+w8+w8+n0+t1I+t7+Z4J.n6I)](a,a[(Z4J.w1I+D6+p3J)]||a[(H0o+n0+Z4J.I2I)]);return a[(L3X+k6I+n4J)][0];}
,get:function(a){var W3X="rato",i8="jo",b=[];a[m8X][(T9X)]("input:checked")[(Z4J.q2+Z4J.Y8+O9J)](function(){b[(l2I+Z4J.n6I+y3I)](this[z5J]);}
);return !a[(u1+k6I+Z4J.Y8+Z4J.o6I+Z4J.Y8+Q3I+Z4J.o6I)]?b:b.length===1?b[0]:b[(i8+S3I+Z4J.F1I)](a[(u1+o8I+W3X+Z4J.o6I)]);}
,set:function(a,b){var c=a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(b9+Z4J.F1I+w8)]((h5+Z4J.i0I));!d[S8](b)&&typeof b===(z6X+Y0o+Z8I)?b=b[(Z4J.n6I+k6I+Z4J.z5I+Z9X)](a[z1I]||"|"):d[S8](b)||(b=[b]);var e,f=b.length,g;c[s8X](function(){g=false;for(e=0;e<f;e++)if(this[z5J]==b[e]){g=true;break;}
this[(O9J+Z4J.V1I+u3I+Z4J.q2+w8)]=g;}
);A(c);}
,enable:function(a){a[(P6X+Z4J.i0I)][T9X]((Y0o+k6I+n4J))[(k6I+k7X+k6I)]((H0J+Z4J.n6I+Z4J.w2+P3I),false);}
,disable:function(a){a[m8X][T9X]((S3I+r4))[(G0J+V7)]("disabled",true);}
,update:function(a,b){var r4J="ddO",c=s[M2X],d=c[(Z8I+Z4J.q2+Z4J.i0I)](a);c[(F4+Z4J.Y8+r4J+Q8I+J5X)](a,b);c[(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,d);}
}
);s[r7J]=d[H3I](!0,{}
,p,{_addOptions:function(a,b){var c=a[m8X].empty();b&&f[(k6I+Z4J.Y8+S3I+Z4J.o6I+Z4J.n6I)](b,a[d1],function(b,g,h){var P8='me',m3I='dio';c[(e0+K4X)]('<div><input id="'+f[T0J](a[J1J])+"_"+h+(k6J+c0X+H3J+i8X+G9J+q4I+m3I+k6J+v9I+q4I+P8+i8X)+a[(Z4J.F1I+a0+Z4J.q2)]+'" /><label for="'+f[T0J](a[(S3I+w8)])+"_"+h+'">'+g+(P0o+Z4J.z5I+Z4J.Y8+N8+w7+U+w8+S3I+g0J+N2X));d("input:last",c)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value",b)[0][(F4+u9+T1+Z4J.o6I+W5J+X0I)]=b;}
);}
,create:function(a){var m4I="ptio",n0X="Opt";a[(z1J+n8X+Z4J.R0I+Z4J.i0I)]=d((M4X+w8+P9X+t4I));s[(Z4J.o6I+b4+Q7X)][(F4+Z4J.Y8+N9I+n0X+S3I+p3J)](a,a[(Z4J.w1I+m4I+Z4J.F1I+Z4J.n6I)]||a[(H0o+s1+Q8I+Z4J.n6I)]);this[(t7)]("open",function(){a[m8X][T9X]("input")[s8X](function(){var c6J="reC";if(this[(j6J+c6J+y3I+Z4J.q2+O0o+w8)])this[B6J]=true;}
);}
);return a[m8X][0];}
,get:function(a){a=a[(F4+S3I+r4)][(c8I+S3I+F9X)]((X4X+Z4J.R0I+Z4J.i0I+J0o+Z4J.V2+t7X+u3I+u9));return a.length?a[0][(F4+Z4J.q2+w8+Z9X+x2J+y1)]:h;}
,set:function(a,b){a[m8X][(b9+Z4J.F1I+w8)]((Y0o+k6I+n4J))[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](function(){var n2X="eck",A1I="_preChecked";this[A1I]=false;if(this[(F4+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+g0J+X0I)]==b)this[(F4+k6I+Z4J.o6I+X7I+t7X+u3I+u9)]=this[B6J]=true;else this[(F4+k6I+Z4J.o6I+Z4J.q2+G4X+y3I+n2X+Z4J.q2+w8)]=this[B6J]=false;}
);A(a[m8X][(c8I+S3I+Z4J.F1I+w8)]("input:checked"));}
,enable:function(a){a[(m8X)][(K3J+w8)]("input")[x3I]("disabled",false);}
,disable:function(a){a[m8X][(c8I+Y0o+w8)]((S3I+n8X+Z4J.R0I+Z4J.i0I))[(p4J+k6I)]("disabled",true);}
,update:function(a,b){var m2="eq",y8J="ilt",c=s[(Z4J.o6I+Z4J.Y8+H0J+Z4J.w1I)],d=c[(R5)](a);c[k3X](a,b);var f=a[m8X][T9X]("input");c[(Y9J)](a,f[(c8I+y8J+Q2)]('[value="'+d+'"]').length?d:f[(m2)](0)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value"));}
}
);s[(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)]=d[H3I](!0,{}
,p,{create:function(a){var z2="../../",g2J="teIm",k9="mage",q0J="eI",i6X="822",p8="_2",T4X="ker",X5I="For",C9="dateFormat",L0X="dC";a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+n4J+t4I))[l5X](d[H3I]({id:f[T0J](a[J1J]),type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
,a[(z1+Z4J.i0I+Z4J.o6I)]));if(d[(w8+Z4J.Y8+I6I+k6I+M3J+l6+Z4J.o6I)]){a[(F4+S3I+n8X+Z4J.R0I+Z4J.i0I)][(Z4J.Y8+w8+L0X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("jqueryui");if(!a[C9])a[(Z4J.C6J+I6I+X5I+A9J+Z4J.i0I)]=d[(c1+S1I+Z4J.V2+T4X)][(v0+o3+G4X+p8+i6X)];if(a[(w8+z1+q0J+k9)]===h)a[(Z4J.C6J+g2J+Z4J.Y8+Z8I+Z4J.q2)]=(z2+S3I+o5I+L9+Z4J.q2+Z4J.n6I+w0X+Z4J.V2+Z4J.Y8+Z4J.z5I+q8+w8+Z4J.q2+Z4J.o6I+Z4J.l0X+k6I+Z4J.F1I+Z8I);setTimeout(function(){var y7X="dateImage",P6="Fo";d(a[(L3X+l2I+Z4J.i0I)])[(Z4J.l1+i3X+Z4J.V2+l6+Z4J.o6I)](d[H3I]({showOn:(N8+Z4J.w1I+U1I),dateFormat:a[(Z4J.l1+Z4J.q2+P6+Z4J.o6I+o5I+z1)],buttonImage:a[y7X],buttonImageOnly:true}
,a[(l5J)]));d("#ui-datepicker-div")[v3J]("display",(w0I+Z4J.q2));}
,10);}
else a[m8X][(Z4J.Y8+E2I+Z4J.o6I)]("type",(Z4J.l1+Z4J.q2));return a[(z1J+P3J+Z4J.i0I)][0];}
,set:function(a,b){var n1J="etDa",E4X="atep";d[o0J]&&a[(F4+S3I+Z4J.F1I+k6I+n4J)][F4J]((C3I+Z4J.n6I+j3+E4X+S3I+Z4J.V2+u3I+Q2))?a[m8X][o0J]((Z4J.n6I+n1J+Z4J.i0I+Z4J.q2),b)[l2]():d(a[(z1J+P3J+Z4J.i0I)])[y1](b);}
,enable:function(a){d[o0J]?a[(z1J+n8X+Z4J.R0I+Z4J.i0I)][o0J]("enable"):d(a[(z1J+Z4J.F1I+l2I+Z4J.i0I)])[(G0J+V7)]("disabled",false);}
,disable:function(a){d[(Z4J.l1+i3X+O0o+Z4J.o6I)]?a[(F4+Y0o+l2I+Z4J.i0I)][o0J]("disable"):d(a[(z1J+P3J+Z4J.i0I)])[(p4J+k6I)]((H0J+Z4J.n6I+Z4J.Y8+l3+w8),true);}
,owns:function(a,b){var f6I="epick",f8J="nts",s2J="icker",m6J="paren";return d(b)[(m6J+Z4J.I2I)]((w8+S3I+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+z1+W2+s2J)).length||d(b)[(o8I+C3X+f8J)]((H0J+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+Z4J.Y8+Z4J.i0I+f6I+Z4J.q2+Z4J.o6I+F6X+y3I+h7I+Q2)).length?true:false;}
}
);s[P4]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var E3X="cker";a[(Z0+n4J)]=d((M4X+S3I+Z4J.F1I+W2I+t4I))[(Z4J.Y8+Z4J.i0I+U8I)](d[(Z4J.q2+z0J+Z4J.i0I+C5I)](v3X,{id:f[T0J](a[(S3I+w8)]),type:(W6X+Z4J.i0I)}
,a[l5X]));a[(F4+k6I+S3I+E3X)]=new f[(N8J+I6I+W7I+o5I+Z4J.q2)](a[(L3X+W2I)],d[H3I]({format:a[o7J],i18n:this[(D7I+B0o+Z4J.F1I)][(w8+z1+Z4J.q2+Y0I)]}
,a[l5J]));return a[(L3X+W2I)][E0];}
,set:function(a,b){a[(F4+S1I+z9J+Z4J.q2+Z4J.o6I)][(y1)](b);A(a[m8X]);}
,owns:function(a,b){return a[(j6J+S3I+z9J+Q2)][v2J](b);}
,destroy:function(a){var K3="stroy",F4I="_picker";a[F4I][(y9I+K3)]();}
,minDate:function(a,b){a[(F4+k6I+M3J+l6+Z4J.o6I)][(u6J+Z4J.F1I)](b);}
,maxDate:function(a,b){a[(F4+k6I+S3I+O0o+Z4J.o6I)][(o5I+Z4J.Y8+z0J)](b);}
}
);s[(Z4J.R0I+A5I+Z4J.Y8+w8)]=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,p,{create:function(a){var b=this;return M(b,a,function(c){var x2="Type";f[(c8I+S3I+Z4J.q2+Z0I+x2+Z4J.n6I)][(Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8)][Y9J][(Z4J.V2+Z4J.Y8+q5I)](b,a,c[E0]);}
);}
,get:function(a){return a[(F4+g0J+X0I)];}
,set:function(a,b){var i9I="dito",T2I="dl",n3="ger",e5I="trig",Q6X="noClear",d9J="rT",X8I="lea",H1="FileT",A2X="div.rendered";a[(F4+g0J+Z4J.Y8+Z4J.z5I)]=b;var c=a[(z1J+n8X+Z4J.R0I+Z4J.i0I)];if(a[(w8+N9X+Z4J.g7I)]){var d=c[T9X](A2X);a[(F4+e7J+Z4J.z5I)]?d[(E4J+o5I+Z4J.z5I)](a[(w8+S3I+H2+l7I+Z4J.g7I)](a[C7])):d.empty()[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.n6I+k6I+Z4J.Y8+Z4J.F1I+N2X)+(a[(Z4J.F1I+Z4J.w1I+H1+Z4J.q2+z0J+Z4J.i0I)]||"No file")+"</span>");}
d=c[T9X](I0I);if(b&&a[(Q4J+Z4J.q2+Z4J.Y8+Z4J.o6I+X6+Z4J.q2+z0J+Z4J.i0I)]){d[z6I](a[(Z4J.V2+X8I+d9J+p5+Z4J.i0I)]);c[(J8I+Z4J.w1I+g0J+X7I+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((Z4J.F1I+Z4J.w1I+X7J+H5I));}
else c[(b8X+p2J+Z4J.n6I)](Q6X);a[(P6X+Z4J.i0I)][T9X]((X4X+Z4J.R0I+Z4J.i0I))[(e5I+n3+z8+Z4J.Y8+Z4J.F1I+T2I+Z4J.q2+Z4J.o6I)]((r2+Z4J.l0X+Z4J.q2+i9I+Z4J.o6I),[a[(C7)]]);}
,enable:function(a){a[m8X][T9X]((S3I+r4))[(x3I)]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I),q9I);a[(E4+N8+P3I)]=v3X;}
,disable:function(a){var w4X="_en";a[(F4+S3I+r4)][T9X]((X4X+n4J))[x3I](c6I,v3X);a[(w4X+Z4J.Y8+l3+w8)]=q9I;}
}
);s[(r2+g6+Q+Z4J.g7I)]=d[(s0X+Z4J.q2+F9X)](!0,{}
,p,{create:function(a){var T9="uploadMany",b=this,c=M(b,a,function(c){var M7="ldT";a[C7]=a[(W5J+X0I)][o1I](c);f[(c8I+S3I+Z4J.q2+M7+O7X+B4)][T9][Y9J][(d5J+Z4J.z5I)](b,a,a[(F4+e7J+Z4J.z5I)]);}
);c[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+L1)]((p6+Z4J.i0I+S3I))[(t7)]("click",(u0o+Z4J.i0I+Z4J.w1I+Z4J.F1I+Z4J.l0X+Z4J.o6I+Z4J.q2+f1J+Z4J.q2),function(c){var D4J="stopPropagation";c[D4J]();c=d(this).data((S3I+w8+z0J));a[C7][(Z4J.n6I+k6I+u1I+Z9J)](c,1);f[j3I][T9][Y9J][(L7J+Z4J.z5I+Z4J.z5I)](b,a,a[(W5J+X0I)]);}
);return c;}
,get:function(a){return a[(W5J+X0I)];}
,set:function(a,b){var J9X="_va",S7J="noFileText",k3J="appendTo",L7="ust",t3I="lec",b1I="Uplo";b||(b=[]);if(!d[S8](b))throw (b1I+b4+W4J+Z4J.V2+A0I+t3I+G5X+Z4J.n6I+W4J+o5I+L7+W4J+y3I+Z4J.Y8+l9J+W4J+Z4J.Y8+Z4J.F1I+W4J+Z4J.Y8+Z4J.o6I+Y8X+Z4J.g7I+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+W4J+g0J+X0I+N1J);a[(F4+g0J+X0I)]=b;var c=this,e=a[m8X];if(a[(S0+k6I+c5J)]){e=e[(K3J+w8)]((I1+Z4J.l0X+Z4J.o6I+Z4J.q2+Z4J.F1I+w8+Q2+Z4J.q2+w8)).empty();if(b.length){var f=d("<ul/>")[k3J](e);d[s8X](b,function(b,d){var z9='dx',i1J='ov';f[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.z5I+S3I+N2X)+a[p6J](d,b)+' <button class="'+c[T4][y0o][g8]+(q2X+G9J+m8I+A9I+i1J+m8I+k6J+m2I+h1+q4I+m6+T7I+z9+i8X)+b+'">&times;</button></li>');}
);}
else e[(Z4J.Y8+X1I+w8)]((M4X+Z4J.n6I+k6I+Q+N2X)+(a[S7J]||"No files")+(P0o+Z4J.n6I+o8I+Z4J.F1I+N2X));}
a[(Z0+n4J)][T9X]("input")[g4I]("upload.editor",[a[(J9X+Z4J.z5I)]]);}
,enable:function(a){var V7X="bled";a[m8X][(K3J+w8)]((S3I+r4))[(k6I+X6X)]("disabled",false);a[(N9J+g7X+V7X)]=true;}
,disable:function(a){a[m8X][T9X]("input")[(G0J+Z4J.w1I+k6I)]((w8+S3I+i0+N8+Z4J.z5I+u9),true);a[x4J]=false;}
}
);r[(p5+Z4J.i0I)][D5I]&&d[H3I](f[(b9+Z4J.q2+Z0I+X6+Z4J.g7I+g6I+Z4J.n6I)],r[s0X][D5I]);r[(s0X)][(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+g1J+S3I+w7+w5I)]=f[(v7+h8J+m5+Z4J.n6I)];f[(c8I+G6J+Z4J.q2+Z4J.n6I)]={}
;f.prototype.CLASS=P9J;f[L7I]=(U1X+Z4J.l0X+z7X+Z4J.l0X+n9X);return f;}
);

/*! Responsive 2.1.0
 * 2014-2016 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     Responsive
 * @description Responsive tables plug-in for DataTables
 * @version     2.1.0
 * @file        dataTables.responsive.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2014-2016 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */
(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/**
 * Responsive is a plug-in for the DataTables library that makes use of
 * DataTables' ability to change the visibility of columns, changing the
 * visibility of columns so the displayed columns fit into the table container.
 * The end result is that complex tables will be dynamically adjusted to fit
 * into the viewport, be it on a desktop, tablet or mobile browser.
 *
 * Responsive for DataTables has two modes of operation, which can used
 * individually or combined:
 *
 * * Class name based control - columns assigned class names that match the
 *   breakpoint logic can be shown / hidden as required for each breakpoint.
 * * Automatic control - columns are automatically hidden when there is no
 *   room left to display them. Columns removed from the right.
 *
 * In additional to column visibility control, Responsive also has built into
 * options to use DataTables' child row display to show / hide the information
 * from the table that has been hidden. There are also two modes of operation
 * for this child row display:
 *
 * * Inline - when the control element that the user can use to show / hide
 *   child rows is displayed inside the first column of the table.
 * * Column - where a whole column is dedicated to be the show / hide control.
 *
 * Initialisation of Responsive is performed by:
 *
 * * Adding the class `responsive` or `dt-responsive` to the table. In this case
 *   Responsive will automatically be initialised with the default configuration
 *   options when the DataTable is created.
 * * Using the `responsive` option in the DataTables configuration options. This
 *   can also be used to specify the configuration options, or simply set to
 *   `true` to use the defaults.
 *
 *  @class
 *  @param {object} settings DataTables settings object for the host table
 *  @param {object} [opts] Configuration options
 *  @requires jQuery 1.7+
 *  @requires DataTables 1.10.3+
 *
 *  @example
 *      $('#example').DataTable( {
 *        responsive: true
 *      } );
 *    } );
 */
var Responsive = function ( settings, opts ) {
	// Sanity check that we are using DataTables 1.10 or newer
	if ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.3' ) ) {
		throw 'DataTables Responsive requires DataTables 1.10.3 or newer';
	}

	this.s = {
		dt: new DataTable.Api( settings ),
		columns: [],
		current: []
	};

	// Check if responsive has already been initialised on this table
	if ( this.s.dt.settings()[0].responsive ) {
		return;
	}

	// details is an object, but for simplicity the user can give it as a string
	// or a boolean
	if ( opts && typeof opts.details === 'string' ) {
		opts.details = { type: opts.details };
	}
	else if ( opts && opts.details === false ) {
		opts.details = { type: false };
	}
	else if ( opts && opts.details === true ) {
		opts.details = { type: 'inline' };
	}

	this.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );
	settings.responsive = this;
	this._constructor();
};

$.extend( Responsive.prototype, {
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Constructor
	 */

	/**
	 * Initialise the Responsive instance
	 *
	 * @private
	 */
	_constructor: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var dtPrivateSettings = dt.settings()[0];
		var oldWindowWidth = $(window).width();

		dt.settings()[0]._responsive = this;

		// Use DataTables' throttle function to avoid processor thrashing on
		// resize
		$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {
			// iOS has a bug whereby resize can fire when only scrolling
			// See: http://stackoverflow.com/questions/8898412
			var width = $(window).width();

			if ( width !== oldWindowWidth ) {
				that._resize();
				oldWindowWidth = width;
			}
		} ) );

		// DataTables doesn't currently trigger an event when a row is added, so
		// we need to hook into its private API to enforce the hidden rows when
		// new data is added
		dtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {
			if ( $.inArray( false, that.s.current ) !== -1 ) {
				$('td, th', tr).each( function ( i ) {
					var idx = dt.column.index( 'toData', i );

					if ( that.s.current[idx] === false ) {
						$(this).css('display', 'none');
					}
				} );
			}
		} );

		// Destroy event handler
		dt.on( 'destroy.dtr', function () {
			dt.off( '.dtr' );
			$( dt.table().body() ).off( '.dtr' );
			$(window).off( 'resize.dtr orientationchange.dtr' );

			// Restore the columns that we've hidden
			$.each( that.s.current, function ( i, val ) {
				if ( val === false ) {
					that._setColumnVis( i, true );
				}
			} );
		} );

		// Reorder the breakpoints array here in case they have been added out
		// of order
		this.c.breakpoints.sort( function (a, b) {
			return a.width < b.width ? 1 :
				a.width > b.width ? -1 : 0;
		} );

		this._classLogic();
		this._resizeAuto();

		// Details handler
		var details = this.c.details;

		if ( details.type !== false ) {
			that._detailsInit();

			// DataTables will trigger this event on every column it shows and
			// hides individually
			dt.on( 'column-visibility.dtr', function (e, ctx, col, vis) {
				that._classLogic();
				that._resizeAuto();
				that._resize();
			} );

			// Redraw the details box on each draw which will happen if the data
			// has changed. This is used until DataTables implements a native
			// `updated` event for rows
			dt.on( 'draw.dtr', function () {
				that._redrawChildren();
			} );

			$(dt.table().node()).addClass( 'dtr-'+details.type );
		}

		dt.on( 'column-reorder.dtr', function (e, settings, details) {
			that._classLogic();
			that._resizeAuto();
			that._resize();
		} );

		// Change in column sizes means we need to calc
		dt.on( 'column-sizing.dtr', function () {
			that._resizeAuto();
			that._resize();
		});

		dt.on( 'init.dtr', function (e, settings, details) {
			that._resizeAuto();
			that._resize();

			// If columns were hidden, then DataTables needs to adjust the
			// column sizing
			if ( $.inArray( false, that.s.current ) ) {
				dt.columns.adjust();
			}
		} );

		// First pass - draw the table for the current viewport size
		this._resize();
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Private methods
	 */

	/**
	 * Calculate the visibility for the columns in a table for a given
	 * breakpoint. The result is pre-determined based on the class logic if
	 * class names are used to control all columns, but the width of the table
	 * is also used if there are columns which are to be automatically shown
	 * and hidden.
	 *
	 * @param  {string} breakpoint Breakpoint name to use for the calculation
	 * @return {array} Array of boolean values initiating the visibility of each
	 *   column.
	 *  @private
	 */
	_columnsVisiblity: function ( breakpoint )
	{
		var dt = this.s.dt;
		var columns = this.s.columns;
		var i, ien;

		// Create an array that defines the column ordering based first on the
		// column's priority, and secondly the column index. This allows the
		// columns to be removed from the right if the priority matches
		var order = columns
			.map( function ( col, idx ) {
				return {
					columnIdx: idx,
					priority: col.priority
				};
			} )
			.sort( function ( a, b ) {
				if ( a.priority !== b.priority ) {
					return a.priority - b.priority;
				}
				return a.columnIdx - b.columnIdx;
			} );

		// Class logic - determine which columns are in this breakpoint based
		// on the classes. If no class control (i.e. `auto`) then `-` is used
		// to indicate this to the rest of the function
		var display = $.map( columns, function ( col ) {
			return col.auto && col.minWidth === null ?
				false :
				col.auto === true ?
					'-' :
					$.inArray( breakpoint, col.includeIn ) !== -1;
		} );

		// Auto column control - first pass: how much width is taken by the
		// ones that must be included from the non-auto columns
		var requiredWidth = 0;
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( display[i] === true ) {
				requiredWidth += columns[i].minWidth;
			}
		}

		// Second pass, use up any remaining width for other columns. For
		// scrolling tables we need to subtract the width of the scrollbar. It
		// may not be requires which makes this sub-optimal, but it would
		// require another full redraw to make complete use of those extra few
		// pixels
		var scrolling = dt.settings()[0].oScroll;
		var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;
		var widthAvailable = dt.table().container().offsetWidth - bar;
		var usedWidth = widthAvailable - requiredWidth;

		// Control column needs to always be included. This makes it sub-
		// optimal in terms of using the available with, but to stop layout
		// thrashing or overflow. Also we need to account for the control column
		// width first so we know how much width is available for the other
		// columns, since the control column might not be the first one shown
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				usedWidth -= columns[i].minWidth;
			}
		}

		// Allow columns to be shown (counting by priority and then right to
		// left) until we run out of room
		var empty = false;
		for ( i=0, ien=order.length ; i<ien ; i++ ) {
			var colIdx = order[i].columnIdx;

			if ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {
				// Once we've found a column that won't fit we don't let any
				// others display either, or columns might disappear in the
				// middle of the table
				if ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {
					empty = true;
					display[colIdx] = false;
				}
				else {
					display[colIdx] = true;
				}

				usedWidth -= columns[colIdx].minWidth;
			}
		}

		// Determine if the 'control' column should be shown (if there is one).
		// This is the case when there is a hidden column (that is not the
		// control column). The two loops look inefficient here, but they are
		// trivial and will fly through. We need to know the outcome from the
		// first , before the action in the second can be taken
		var showControl = false;

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( ! columns[i].control && ! columns[i].never && ! display[i] ) {
				showControl = true;
				break;
			}
		}

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				display[i] = showControl;
			}
		}

		// Finally we need to make sure that there is at least one column that
		// is visible
		if ( $.inArray( true, display ) === -1 ) {
			display[0] = true;
		}

		return display;
	},


	/**
	 * Create the internal `columns` array with information about the columns
	 * for the table. This includes determining which breakpoints the column
	 * will appear in, based upon class names in the column, which makes up the
	 * vast majority of this method.
	 *
	 * @private
	 */
	_classLogic: function ()
	{
		var that = this;
		var calc = {};
		var breakpoints = this.c.breakpoints;
		var dt = this.s.dt;
		var columns = dt.columns().eq(0).map( function (i) {
			var column = this.column(i);
			var className = column.header().className;
			var priority = dt.settings()[0].aoColumns[i].responsivePriority;

			if ( priority === undefined ) {
				var dataPriority = $(column.header()).data('priority');

				priority = dataPriority !== undefined ?
					dataPriority * 1 :
					10000;
			}

			return {
				className: className,
				includeIn: [],
				auto:      false,
				control:   false,
				never:     className.match(/\bnever\b/) ? true : false,
				priority:  priority
			};
		} );

		// Simply add a breakpoint to `includeIn` array, ensuring that there are
		// no duplicates
		var add = function ( colIdx, name ) {
			var includeIn = columns[ colIdx ].includeIn;

			if ( $.inArray( name, includeIn ) === -1 ) {
				includeIn.push( name );
			}
		};

		var column = function ( colIdx, name, operator, matched ) {
			var size, i, ien;

			if ( ! operator ) {
				columns[ colIdx ].includeIn.push( name );
			}
			else if ( operator === 'max-' ) {
				// Add this breakpoint and all smaller
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width <= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'min-' ) {
				// Add this breakpoint and all larger
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width >= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'not-' ) {
				// Add all but this breakpoint
				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].name.indexOf( matched ) === -1 ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
		};

		// Loop over each column and determine if it has a responsive control
		// class
		columns.each( function ( col, i ) {
			var classNames = col.className.split(' ');
			var hasClass = false;

			// Split the class name up so multiple rules can be applied if needed
			for ( var k=0, ken=classNames.length ; k<ken ; k++ ) {
				var className = $.trim( classNames[k] );

				if ( className === 'all' ) {
					// Include in all
					hasClass = true;
					col.includeIn = $.map( breakpoints, function (a) {
						return a.name;
					} );
					return;
				}
				else if ( className === 'none' || col.never ) {
					// Include in none (default) and no auto
					hasClass = true;
					return;
				}
				else if ( className === 'control' ) {
					// Special column that is only visible, when one of the other
					// columns is hidden. This is used for the details control
					hasClass = true;
					col.control = true;
					return;
				}

				$.each( breakpoints, function ( j, breakpoint ) {
					// Does this column have a class that matches this breakpoint?
					var brokenPoint = breakpoint.name.split('-');
					var re = new RegExp( '(min\\-|max\\-|not\\-)?('+brokenPoint[0]+')(\\-[_a-zA-Z0-9])?' );
					var match = className.match( re );

					if ( match ) {
						hasClass = true;

						if ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {
							// Class name matches breakpoint name fully
							column( i, breakpoint.name, match[1], match[2]+match[3] );
						}
						else if ( match[2] === brokenPoint[0] && ! match[3] ) {
							// Class name matched primary breakpoint name with no qualifier
							column( i, breakpoint.name, match[1], match[2] );
						}
					}
				} );
			}

			// If there was no control class, then automatic sizing is used
			if ( ! hasClass ) {
				col.auto = true;
			}
		} );

		this.s.columns = columns;
	},


	/**
	 * Show the details for the child row
	 *
	 * @param  {DataTables.Api} row    API instance for the row
	 * @param  {boolean}        update Update flag
	 * @private
	 */
	_detailsDisplay: function ( row, update )
	{
		var that = this;
		var dt = this.s.dt;
		var details = this.c.details;

		if ( details && details.type !== false ) {
			var res = details.display( row, update, function () {
				return details.renderer(
					dt, row[0], that._detailsObj(row[0])
				);
			} );

			if ( res === true || res === false ) {
				$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );
			}
		}
	},


	/**
	 * Initialisation for the details handler
	 *
	 * @private
	 */
	_detailsInit: function ()
	{
		var that    = this;
		var dt      = this.s.dt;
		var details = this.c.details;

		// The inline type always uses the first child as the target
		if ( details.type === 'inline' ) {
			details.target = 'td:first-child, th:first-child';
		}

		// Keyboard accessibility
		dt.on( 'draw.dtr', function () {
			that._tabIndexes();
		} );
		that._tabIndexes(); // Initial draw has already happened

		$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {
			if ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {
				$(this).click();
			}
		} );

		// type.target can be a string jQuery selector or a column index
		var target   = details.target;
		var selector = typeof target === 'string' ? target : 'td, th';

		// Click handler to show / hide the details rows when they are available
		$( dt.table().body() )
			.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {
				// If the table is not collapsed (i.e. there is no hidden columns)
				// then take no action
				if ( ! $(dt.table().node()).hasClass('collapsed' ) ) {
					return;
				}

				// Check that the row is actually a DataTable's controlled node
				if ( ! dt.row( $(this).closest('tr') ).length ) {
					return;
				}

				// For column index, we determine if we should act or not in the
				// handler - otherwise it is already okay
				if ( typeof target === 'number' ) {
					var targetIdx = target < 0 ?
						dt.columns().eq(0).length + target :
						target;

					if ( dt.cell( this ).index().column !== targetIdx ) {
						return;
					}
				}

				// $().closest() includes itself in its check
				var row = dt.row( $(this).closest('tr') );

				// Check event type to do an action
				if ( e.type === 'click' ) {
					// The renderer is given as a function so the caller can execute it
					// only when they need (i.e. if hiding there is no point is running
					// the renderer)
					that._detailsDisplay( row, false );
				}
				else if ( e.type === 'mousedown' ) {
					// For mouse users, prevent the focus ring from showing
					$(this).css('outline', 'none');
				}
				else if ( e.type === 'mouseup' ) {
					// And then re-allow at the end of the click
					$(this).blur().css('outline', '');
				}
			} );
	},


	/**
	 * Get the details to pass to a renderer for a row
	 * @param  {int} rowIdx Row index
	 * @private
	 */
	_detailsObj: function ( rowIdx )
	{
		var that = this;
		var dt = this.s.dt;

		return $.map( this.s.columns, function( col, i ) {
			// Never and control columns should not be passed to the renderer
			if ( col.never || col.control ) {
				return;
			}

			return {
				title:       dt.settings()[0].aoColumns[ i ].sTitle,
				data:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),
				hidden:      dt.column( i ).visible() && !that.s.current[ i ],
				columnIndex: i,
				rowIndex:    rowIdx
			};
		} );
	},


	/**
	 * Find a breakpoint object from a name
	 *
	 * @param  {string} name Breakpoint name to find
	 * @return {object}      Breakpoint description object
	 * @private
	 */
	_find: function ( name )
	{
		var breakpoints = this.c.breakpoints;

		for ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {
			if ( breakpoints[i].name === name ) {
				return breakpoints[i];
			}
		}
	},


	/**
	 * Re-create the contents of the child rows as the display has changed in
	 * some way.
	 *
	 * @private
	 */
	_redrawChildren: function ()
	{
		var that = this;
		var dt = this.s.dt;

		dt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {
			var row = dt.row( idx );

			that._detailsDisplay( dt.row( idx ), true );
		} );
	},


	/**
	 * Alter the table display for a resized viewport. This involves first
	 * determining what breakpoint the window currently is in, getting the
	 * column visibilities to apply and then setting them.
	 *
	 * @private
	 */
	_resize: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var width = $(window).width();
		var breakpoints = this.c.breakpoints;
		var breakpoint = breakpoints[0].name;
		var columns = this.s.columns;
		var i, ien;
		var oldVis = this.s.current.slice();

		// Determine what breakpoint we are currently at
		for ( i=breakpoints.length-1 ; i>=0 ; i-- ) {
			if ( width <= breakpoints[i].width ) {
				breakpoint = breakpoints[i].name;
				break;
			}
		}
		
		// Show the columns for that break point
		var columnsVis = this._columnsVisiblity( breakpoint );
		this.s.current = columnsVis;

		// Set the class before the column visibility is changed so event
		// listeners know what the state is. Need to determine if there are
		// any columns that are not visible but can be shown
		var collapsedClass = false;
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control ) {
				collapsedClass = true;
				break;
			}
		}

		$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );

		var changed = false;

		dt.columns().eq(0).each( function ( colIdx, i ) {
			if ( columnsVis[i] !== oldVis[i] ) {
				changed = true;
				that._setColumnVis( colIdx, columnsVis[i] );
			}
		} );

		if ( changed ) {
			this._redrawChildren();

			// Inform listeners of the change
			$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );
		}
	},


	/**
	 * Determine the width of each column in the table so the auto column hiding
	 * has that information to work with. This method is never going to be 100%
	 * perfect since column widths can change slightly per page, but without
	 * seriously compromising performance this is quite effective.
	 *
	 * @private
	 */
	_resizeAuto: function ()
	{
		var dt = this.s.dt;
		var columns = this.s.columns;

		// Are we allowed to do auto sizing?
		if ( ! this.c.auto ) {
			return;
		}

		// Are there any columns that actually need auto-sizing, or do they all
		// have classes defined
		if ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {
			return;
		}

		// Clone the table with the current data in it
		var tableWidth   = dt.table().node().offsetWidth;
		var columnWidths = dt.columns;
		var clonedTable  = dt.table().node().cloneNode( false );
		var clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );
		var clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8

		// Header
		var headerCells = dt.columns()
			.header()
			.filter( function (idx) {
				return dt.column(idx).visible();
			} )
			.to$()
			.clone( false )
			.css( 'display', 'table-cell' );

		// Body rows - we don't need to take account of DataTables' column
		// visibility since we implement our own here (hence the `display` set)
		$(clonedBody)
			.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )
			.find( 'th, td' ).css( 'display', '' );

		// Footer
		var footer = dt.table().footer();
		if ( footer ) {
			var clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );
			var footerCells = dt.columns()
				.footer()
				.filter( function (idx) {
					return dt.column(idx).visible();
				} )
				.to$()
				.clone( false )
				.css( 'display', 'table-cell' );

			$('<tr/>')
				.append( footerCells )
				.appendTo( clonedFooter );
		}

		$('<tr/>')
			.append( headerCells )
			.appendTo( clonedHeader );

		// In the inline case extra padding is applied to the first column to
		// give space for the show / hide icon. We need to use this in the
		// calculation
		if ( this.c.details.type === 'inline' ) {
			$(clonedTable).addClass( 'dtr-inline collapsed' );
		}
		
		// It is unsafe to insert elements with the same name into the DOM
		// multiple times. For example, cloning and inserting a checked radio
		// clears the chcecked state of the original radio.
		$( clonedTable ).find( '[name]' ).removeAttr( 'name' );
		
		var inserted = $('<div/>')
			.css( {
				width: 1,
				height: 1,
				overflow: 'hidden'
			} )
			.append( clonedTable );

		inserted.insertBefore( dt.table().node() );

		// The cloned header now contains the smallest that each column can be
		headerCells.each( function (i) {
			var idx = dt.column.index( 'fromVisible', i );
			columns[ idx ].minWidth =  this.offsetWidth || 0;
		} );

		inserted.remove();
	},

	/**
	 * Set a column's visibility.
	 *
	 * We don't use DataTables' column visibility controls in order to ensure
	 * that column visibility can Responsive can no-exist. Since only IE8+ is
	 * supported (and all evergreen browsers of course) the control of the
	 * display attribute works well.
	 *
	 * @param {integer} col      Column index
	 * @param {boolean} showHide Show or hide (true or false)
	 * @private
	 */
	_setColumnVis: function ( col, showHide )
	{
		var dt = this.s.dt;
		var display = showHide ? '' : 'none'; // empty string will remove the attr

		$( dt.column( col ).header() ).css( 'display', display );
		$( dt.column( col ).footer() ).css( 'display', display );
		dt.column( col ).nodes().to$().css( 'display', display );
	},


	/**
	 * Update the cell tab indexes for keyboard accessibility. This is called on
	 * every table draw - that is potentially inefficient, but also the least
	 * complex option given that column visibility can change on the fly. Its a
	 * shame user-focus was removed from CSS 3 UI, as it would have solved this
	 * issue with a single CSS statement.
	 *
	 * @private
	 */
	_tabIndexes: function ()
	{
		var dt = this.s.dt;
		var cells = dt.cells( { page: 'current' } ).nodes().to$();
		var ctx = dt.settings()[0];
		var target = this.c.details.target;

		cells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );

		var selector = typeof target === 'number' ?
			':eq('+target+')' :
			target;

		$( selector, dt.rows( { page: 'current' } ).nodes() )
			.attr( 'tabIndex', ctx.iTabIndex )
			.data( 'dtr-keyboard', 1 );
	}
} );


/**
 * List of default breakpoints. Each item in the array is an object with two
 * properties:
 *
 * * `name` - the breakpoint name.
 * * `width` - the breakpoint width
 *
 * @name Responsive.breakpoints
 * @static
 */
Responsive.breakpoints = [
	{ name: 'desktop',  width: Infinity },
	{ name: 'tablet-l', width: 1024 },
	{ name: 'tablet-p', width: 768 },
	{ name: 'mobile-l', width: 480 },
	{ name: 'mobile-p', width: 320 }
];


/**
 * Display methods - functions which define how the hidden data should be shown
 * in the table.
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.display = {
	childRow: function ( row, update, render ) {
		if ( update ) {
			if ( $(row.node()).hasClass('parent') ) {
				row.child( render(), 'child' ).show();

				return true;
			}
		}
		else {
			if ( ! row.child.isShown()  ) {
				row.child( render(), 'child' ).show();
				$( row.node() ).addClass( 'parent' );

				return true;
			}
			else {
				row.child( false );
				$( row.node() ).removeClass( 'parent' );

				return false;
			}
		}
	},

	childRowImmediate: function ( row, update, render ) {
		if ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {
			// User interaction and the row is show, or nothing to show
			row.child( false );
			$( row.node() ).removeClass( 'parent' );

			return false;
		}
		else {
			// Display
			row.child( render(), 'child' ).show();
			$( row.node() ).addClass( 'parent' );

			return true;
		}
	},

	// This is a wrapper so the modal options for Bootstrap and jQuery UI can
	// have options passed into them. This specific one doesn't need to be a
	// function but it is for consistency in the `modal` name
	modal: function ( options ) {
		return function ( row, update, render ) {
			if ( ! update ) {
				// Show a modal
				var close = function () {
					modal.remove(); // will tidy events for us
					$(document).off( 'keypress.dtr' );
				};

				var modal = $('<div class="dtr-modal"/>')
					.append( $('<div class="dtr-modal-display"/>')
						.append( $('<div class="dtr-modal-content"/>')
							.append( render() )
						)
						.append( $('<div class="dtr-modal-close">&times;</div>' )
							.click( function () {
								close();
							} )
						)
					)
					.append( $('<div class="dtr-modal-background"/>')
						.click( function () {
							close();
						} )
					)
					.appendTo( 'body' );

				$(document).on( 'keyup.dtr', function (e) {
					if ( e.keyCode === 27 ) {
						e.stopPropagation();

						close();
					}
				} );
			}
			else {
				$('div.dtr-modal-content')
					.empty()
					.append( render() );
			}

			if ( options && options.header ) {
				$('div.dtr-modal-content').prepend(
					'<h2>'+options.header( row )+'</h2>'
				);
			}
		};
	}
};


/**
 * Display methods - functions which define how the hidden data should be shown
 * in the table.
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.renderer = {
	listHidden: function () {
		return function ( api, rowIdx, columns ) {
			var data = $.map( columns, function ( col ) {
				return col.hidden ?
					'<li data-dtr-index="'+col.columnIndex+'" data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
						'<span class="dtr-title">'+
							col.title+
						'</span> '+
						'<span class="dtr-data">'+
							col.data+
						'</span>'+
					'</li>' :
					'';
			} ).join('');

			return data ?
				$('<ul data-dtr-index="'+rowIdx+'"/>').append( data ) :
				false;
		}
	},

	tableAll: function ( options ) {
		options = $.extend( {
			tableClass: ''
		}, options );

		return function ( api, rowIdx, columns ) {
			var data = $.map( columns, function ( col ) {
				return '<tr data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
						'<td>'+col.title+':'+'</td> '+
						'<td>'+col.data+'</td>'+
					'</tr>';
			} ).join('');

			return $('<table class="'+options.tableClass+'" width="100%"/>').append( data );
		}
	}
};

/**
 * Responsive default settings for initialisation
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.defaults = {
	/**
	 * List of breakpoints for the instance. Note that this means that each
	 * instance can have its own breakpoints. Additionally, the breakpoints
	 * cannot be changed once an instance has been creased.
	 *
	 * @type {Array}
	 * @default Takes the value of `Responsive.breakpoints`
	 */
	breakpoints: Responsive.breakpoints,

	/**
	 * Enable / disable auto hiding calculations. It can help to increase
	 * performance slightly if you disable this option, but all columns would
	 * need to have breakpoint classes assigned to them
	 *
	 * @type {Boolean}
	 * @default  `true`
	 */
	auto: true,

	/**
	 * Details control. If given as a string value, the `type` property of the
	 * default object is set to that value, and the defaults used for the rest
	 * of the object - this is for ease of implementation.
	 *
	 * The object consists of the following properties:
	 *
	 * * `display` - A function that is used to show and hide the hidden details
	 * * `renderer` - function that is called for display of the child row data.
	 *   The default function will show the data from the hidden columns
	 * * `target` - Used as the selector for what objects to attach the child
	 *   open / close to
	 * * `type` - `false` to disable the details display, `inline` or `column`
	 *   for the two control types
	 *
	 * @type {Object|string}
	 */
	details: {
		display: Responsive.display.childRow,

		renderer: Responsive.renderer.listHidden(),

		target: 0,

		type: 'inline'
	},

	/**
	 * Orthogonal data request option. This is used to define the data type
	 * requested when Responsive gets the data to show in the child row.
	 *
	 * @type {String}
	 */
	orthogonal: 'display'
};


/*
 * API
 */
var Api = $.fn.dataTable.Api;

// Doesn't do anything - work around for a bug in DT... Not documented
Api.register( 'responsive()', function () {
	return this;
} );

Api.register( 'responsive.index()', function ( li ) {
	li = $(li);

	return {
		column: li.data('dtr-index'),
		row:    li.parent().data('dtr-index')
	};
} );

Api.register( 'responsive.rebuild()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._classLogic();
		}
	} );
} );

Api.register( 'responsive.recalc()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._resizeAuto();
			ctx._responsive._resize();
		}
	} );
} );

Api.register( 'responsive.hasHidden()', function () {
	var ctx = this.context[0];

	return ctx._responsive ?
		$.inArray( false, ctx._responsive.s.current ) !== -1 :
		false;
} );


/**
 * Version information
 *
 * @name Responsive.version
 * @static
 */
Responsive.version = '2.1.0';


$.fn.dataTable.Responsive = Responsive;
$.fn.DataTable.Responsive = Responsive;

// Attach a listener to the document which listens for DataTables initialisation
// events so we can automatically initialise
$(document).on( 'preInit.dt.dtr', function (e, settings, json) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	if ( $(settings.nTable).hasClass( 'responsive' ) ||
		 $(settings.nTable).hasClass( 'dt-responsive' ) ||
		 settings.oInit.responsive ||
		 DataTable.defaults.responsive
	) {
		var init = settings.oInit.responsive;

		if ( init !== false ) {
			new Responsive( settings, $.isPlainObject( init ) ? init : {}  );
		}
	}
} );


return Responsive;
}));


/*! Select for DataTables 1.2.0
 * 2015-2016 SpryMedia Ltd - datatables.net/license/mit
 */

/**
 * @summary     Select for DataTables
 * @description A collection of API methods, events and buttons for DataTables
 *   that provides selection options of the items in a DataTable
 * @version     1.2.0
 * @file        dataTables.select.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     datatables.net/forums
 * @copyright   Copyright 2015-2016 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net/extensions/select
 */
(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


// Version information for debugger
DataTable.select = {};

DataTable.select.version = '1.2.0';

DataTable.select.init = function ( dt ) {
	var ctx = dt.settings()[0];
	var init = ctx.oInit.select;
	var defaults = DataTable.defaults.select;
	var opts = init === undefined ?
		defaults :
		init;

	// Set defaults
	var items = 'row';
	var style = 'api';
	var blurable = false;
	var info = true;
	var selector = 'td, th';
	var className = 'selected';

	ctx._select = {};

	// Initialisation customisations
	if ( opts === true ) {
		style = 'os';
	}
	else if ( typeof opts === 'string' ) {
		style = opts;
	}
	else if ( $.isPlainObject( opts ) ) {
		if ( opts.blurable !== undefined ) {
			blurable = opts.blurable;
		}

		if ( opts.info !== undefined ) {
			info = opts.info;
		}

		if ( opts.items !== undefined ) {
			items = opts.items;
		}

		if ( opts.style !== undefined ) {
			style = opts.style;
		}

		if ( opts.selector !== undefined ) {
			selector = opts.selector;
		}

		if ( opts.className !== undefined ) {
			className = opts.className;
		}
	}

	dt.select.selector( selector );
	dt.select.items( items );
	dt.select.style( style );
	dt.select.blurable( blurable );
	dt.select.info( info );
	ctx._select.className = className;


	// Sort table based on selected rows. Requires Select Datatables extension
	$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {
		return this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {
			if ( settings._select.items === 'row' ) {
				return $( td ).parent().hasClass( settings._select.className );
			} else if ( settings._select.items === 'cell' ) {
				return $( td ).hasClass( settings._select.className );
			}
			return false;
		});
	};

	// If the init options haven't enabled select, but there is a selectable
	// class name, then enable
	if ( $( dt.table().node() ).hasClass( 'selectable' ) ) {
		dt.select.style( 'os' );
	}
};

/*

Select is a collection of API methods, event handlers, event emitters and
buttons (for the `Buttons` extension) for DataTables. It provides the following
features, with an overview of how they are implemented:

## Selection of rows, columns and cells. Whether an item is selected or not is
   stored in:

* rows: a `_select_selected` property which contains a boolean value of the
  DataTables' `aoData` object for each row
* columns: a `_select_selected` property which contains a boolean value of the
  DataTables' `aoColumns` object for each column
* cells: a `_selected_cells` property which contains an array of boolean values
  of the `aoData` object for each row. The array is the same length as the
  columns array, with each element of it representing a cell.

This method of using boolean flags allows Select to operate when nodes have not
been created for rows / cells (DataTables' defer rendering feature).

## API methods

A range of API methods are available for triggering selection and de-selection
of rows. Methods are also available to configure the selection events that can
be triggered by an end user (such as which items are to be selected). To a large
extent, these of API methods *is* Select. It is basically a collection of helper
functions that can be used to select items in a DataTable.

Configuration of select is held in the object `_select` which is attached to the
DataTables settings object on initialisation. Select being available on a table
is not optional when Select is loaded, but its default is for selection only to
be available via the API - so the end user wouldn't be able to select rows
without additional configuration.

The `_select` object contains the following properties:

```
{
	items:string     - Can be `rows`, `columns` or `cells`. Defines what item 
	                   will be selected if the user is allowed to activate row
	                   selection using the mouse.
	style:string     - Can be `none`, `single`, `multi` or `os`. Defines the
	                   interaction style when selecting items
	blurable:boolean - If row selection can be cleared by clicking outside of
	                   the table
	info:boolean     - If the selection summary should be shown in the table
	                   information elements
}
```

In addition to the API methods, Select also extends the DataTables selector
options for rows, columns and cells adding a `selected` option to the selector
options object, allowing the developer to select only selected items or
unselected items.

## Mouse selection of items

Clicking on items can be used to select items. This is done by a simple event
handler that will select the items using the API methods.

 */


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local functions
 */

/**
 * Add one or more cells to the selection when shift clicking in OS selection
 * style cell selection.
 *
 * Cell range is more complicated than row and column as we want to select
 * in the visible grid rather than by index in sequence. For example, if you
 * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1
 * should also be selected (and not 1-3, 1-4. etc)
 * 
 * @param  {DataTable.Api} dt   DataTable
 * @param  {object}        idx  Cell index to select to
 * @param  {object}        last Cell index to select from
 * @private
 */
function cellRange( dt, idx, last )
{
	var indexes;
	var columnIndexes;
	var rowIndexes;
	var selectColumns = function ( start, end ) {
		if ( start > end ) {
			var tmp = end;
			end = start;
			start = tmp;
		}
		
		var record = false;
		return dt.columns( ':visible' ).indexes().filter( function (i) {
			if ( i === start ) {
				record = true;
			}
			
			if ( i === end ) { // not else if, as start might === end
				record = false;
				return true;
			}

			return record;
		} );
	};

	var selectRows = function ( start, end ) {
		var indexes = dt.rows( { search: 'applied' } ).indexes();

		// Which comes first - might need to swap
		if ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {
			var tmp = end;
			end = start;
			start = tmp;
		}

		var record = false;
		return indexes.filter( function (i) {
			if ( i === start ) {
				record = true;
			}
			
			if ( i === end ) {
				record = false;
				return true;
			}

			return record;
		} );
	};

	if ( ! dt.cells( { selected: true } ).any() && ! last ) {
		// select from the top left cell to this one
		columnIndexes = selectColumns( 0, idx.column );
		rowIndexes = selectRows( 0 , idx.row );
	}
	else {
		// Get column indexes between old and new
		columnIndexes = selectColumns( last.column, idx.column );
		rowIndexes = selectRows( last.row , idx.row );
	}

	indexes = dt.cells( rowIndexes, columnIndexes ).flatten();

	if ( ! dt.cells( idx, { selected: true } ).any() ) {
		// Select range
		dt.cells( indexes ).select();
	}
	else {
		// Deselect range
		dt.cells( indexes ).deselect();
	}
}

/**
 * Disable mouse selection by removing the selectors
 *
 * @param {DataTable.Api} dt DataTable to remove events from
 * @private
 */
function disableMouseSelection( dt )
{
	var ctx = dt.settings()[0];
	var selector = ctx._select.selector;

	$( dt.table().body() )
		.off( 'mousedown.dtSelect', selector )
		.off( 'mouseup.dtSelect', selector )
		.off( 'click.dtSelect', selector );

	$('body').off( 'click.dtSelect' );
}

/**
 * Attach mouse listeners to the table to allow mouse selection of items
 *
 * @param {DataTable.Api} dt DataTable to remove events from
 * @private
 */
function enableMouseSelection ( dt )
{
	var body = $( dt.table().body() );
	var ctx = dt.settings()[0];
	var selector = ctx._select.selector;

	body
		.on( 'mousedown.dtSelect', selector, function(e) {
			// Disallow text selection for shift clicking on the table so multi
			// element selection doesn't look terrible!
			if ( e.shiftKey || e.metaKey || e.ctrlKey ) {
				body
					.css( '-moz-user-select', 'none' )
					.one('selectstart.dtSelect', selector, function () {
						return false;
					} );
			}
		} )
		.on( 'mouseup.dtSelect', selector, function() {
			// Allow text selection to occur again, Mozilla style (tested in FF
			// 35.0.1 - still required)
			body.css( '-moz-user-select', '' );
		} )
		.on( 'click.dtSelect', selector, function ( e ) {
			var items = dt.select.items();
			var idx;

			// If text was selected (click and drag), then we shouldn't change
			// the row's selected state
			if ( window.getSelection && window.getSelection().toString() ) {
				return;
			}

			var ctx = dt.settings()[0];

			// Ignore clicks inside a sub-table
			if ( $(e.target).closest('div.dataTables_wrapper')[0] != dt.table().container() ) {
				return;
			}

			var cell = dt.cell( $(e.target).closest('td, th') );

			// Check the cell actually belongs to the host DataTable (so child
			// rows, etc, are ignored)
			if ( ! cell.any() ) {
				return;
			}

			var event = $.Event('user-select.dt');
			eventTrigger( dt, event, [ items, cell, e ] );

			if ( event.isDefaultPrevented() ) {
				return;
			}

			var cellIndex = cell.index();
			if ( items === 'row' ) {
				idx = cellIndex.row;
				typeSelect( e, dt, ctx, 'row', idx );
			}
			else if ( items === 'column' ) {
				idx = cell.index().column;
				typeSelect( e, dt, ctx, 'column', idx );
			}
			else if ( items === 'cell' ) {
				idx = cell.index();
				typeSelect( e, dt, ctx, 'cell', idx );
			}

			ctx._select_lastCell = cellIndex;
		} );

	// Blurable
	$('body').on( 'click.dtSelect', function ( e ) {
		if ( ctx._select.blurable ) {
			// If the click was inside the DataTables container, don't blur
			if ( $(e.target).parents().filter( dt.table().container() ).length ) {
				return;
			}

			// Don't blur in Editor form
			if ( $(e.target).parents('div.DTE').length ) {
				return;
			}

			clear( ctx, true );
		}
	} );
}

/**
 * Trigger an event on a DataTable
 *
 * @param {DataTable.Api} api      DataTable to trigger events on
 * @param  {boolean}      selected true if selected, false if deselected
 * @param  {string}       type     Item type acting on
 * @param  {boolean}      any      Require that there are values before
 *     triggering
 * @private
 */
function eventTrigger ( api, type, args, any )
{
	if ( any && ! api.flatten().length ) {
		return;
	}

	if ( typeof type === 'string' ) {
		type = type +'.dt';
	}

	args.unshift( api );

	$(api.table().node()).triggerHandler( type, args );
}

/**
 * Update the information element of the DataTable showing information about the
 * items selected. This is done by adding tags to the existing text
 * 
 * @param {DataTable.Api} api DataTable to update
 * @private
 */
function info ( api )
{
	var ctx = api.settings()[0];

	if ( ! ctx._select.info || ! ctx.aanFeatures.i ) {
		return;
	}

	var output  = $('<span class="select-info"/>');
	var add = function ( name, num ) {
		output.append( $('<span class="select-item"/>').append( api.i18n(
			'select.'+name+'s',
			{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },
			num
		) ) );
	};

	add( 'row',    api.rows( { selected: true } ).flatten().length );
	add( 'column', api.columns( { selected: true } ).flatten().length );
	add( 'cell',   api.cells( { selected: true } ).flatten().length );

	// Internal knowledge of DataTables to loop over all information elements
	$.each( ctx.aanFeatures.i, function ( i, el ) {
		el = $(el);

		var exisiting = el.children('span.select-info');
		if ( exisiting.length ) {
			exisiting.remove();
		}

		if ( output.text() !== '' ) {
			el.append( output );
		}
	} );
}

/**
 * Initialisation of a new table. Attach event handlers and callbacks to allow
 * Select to operate correctly.
 *
 * This will occur _after_ the initial DataTables initialisation, although
 * before Ajax data is rendered, if there is ajax data
 *
 * @param  {DataTable.settings} ctx Settings object to operate on
 * @private
 */
function init ( ctx ) {
	var api = new DataTable.Api( ctx );

	// Row callback so that classes can be added to rows and cells if the item
	// was selected before the element was created. This will happen with the
	// `deferRender` option enabled.
	// 
	// This method of attaching to `aoRowCreatedCallback` is a hack until
	// DataTables has proper events for row manipulation If you are reviewing
	// this code to create your own plug-ins, please do not do this!
	ctx.aoRowCreatedCallback.push( {
		fn: function ( row, data, index ) {
			var i, ien;
			var d = ctx.aoData[ index ];

			// Row
			if ( d._select_selected ) {
				$( row ).addClass( ctx._select.className );
			}

			// Cells and columns - if separated out, we would need to do two
			// loops, so it makes sense to combine them into a single one
			for ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {
				if ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {
					$(d.anCells[i]).addClass( ctx._select.className );
				}
			}
		},
		sName: 'select-deferRender'
	} );

	// On Ajax reload we want to reselect all rows which are currently selected,
	// if there is an rowId (i.e. a unique value to identify each row with)
	api.on( 'preXhr.dt.dtSelect', function () {
		// note that column selection doesn't need to be cached and then
		// reselected, as they are already selected
		var rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {
			return d !== undefined;
		} );

		var cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {
			var id = api.row( cellIdx.row ).id( true );
			return id ?
				{ row: id, column: cellIdx.column } :
				undefined;
		} ).filter( function ( d ) {
			return d !== undefined;
		} );

		// On the next draw, reselect the currently selected items
		api.one( 'draw.dt.dtSelect', function () {
			api.rows( rows ).select();

			// `cells` is not a cell index selector, so it needs a loop
			if ( cells.any() ) {
				cells.each( function ( id ) {
					api.cells( id.row, id.column ).select();
				} );
			}
		} );
	} );

	// Update the table information element with selected item summary
	api.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {
		info( api );
	} );

	// Clean up and release
	api.on( 'destroy.dtSelect', function () {
		disableMouseSelection( api );
		api.off( '.dtSelect' );
	} );
}

/**
 * Add one or more items (rows or columns) to the selection when shift clicking
 * in OS selection style
 *
 * @param  {DataTable.Api} dt   DataTable
 * @param  {string}        type Row or column range selector
 * @param  {object}        idx  Item index to select to
 * @param  {object}        last Item index to select from
 * @private
 */
function rowColumnRange( dt, type, idx, last )
{
	// Add a range of rows from the last selected row to this one
	var indexes = dt[type+'s']( { search: 'applied' } ).indexes();
	var idx1 = $.inArray( last, indexes );
	var idx2 = $.inArray( idx, indexes );

	if ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {
		// select from top to here - slightly odd, but both Windows and Mac OS
		// do this
		indexes.splice( $.inArray( idx, indexes )+1, indexes.length );
	}
	else {
		// reverse so we can shift click 'up' as well as down
		if ( idx1 > idx2 ) {
			var tmp = idx2;
			idx2 = idx1;
			idx1 = tmp;
		}

		indexes.splice( idx2+1, indexes.length );
		indexes.splice( 0, idx1 );
	}

	if ( ! dt[type]( idx, { selected: true } ).any() ) {
		// Select range
		dt[type+'s']( indexes ).select();
	}
	else {
		// Deselect range - need to keep the clicked on row selected
		indexes.splice( $.inArray( idx, indexes ), 1 );
		dt[type+'s']( indexes ).deselect();
	}
}

/**
 * Clear all selected items
 *
 * @param  {DataTable.settings} ctx Settings object of the host DataTable
 * @param  {boolean} [force=false] Force the de-selection to happen, regardless
 *     of selection style
 * @private
 */
function clear( ctx, force )
{
	if ( force || ctx._select.style === 'single' ) {
		var api = new DataTable.Api( ctx );
		
		api.rows( { selected: true } ).deselect();
		api.columns( { selected: true } ).deselect();
		api.cells( { selected: true } ).deselect();
	}
}

/**
 * Select items based on the current configuration for style and items.
 *
 * @param  {object}             e    Mouse event object
 * @param  {DataTables.Api}     dt   DataTable
 * @param  {DataTable.settings} ctx  Settings object of the host DataTable
 * @param  {string}             type Items to select
 * @param  {int|object}         idx  Index of the item to select
 * @private
 */
function typeSelect ( e, dt, ctx, type, idx )
{
	var style = dt.select.style();
	var isSelected = dt[type]( idx, { selected: true } ).any();

	if ( style === 'os' ) {
		if ( e.ctrlKey || e.metaKey ) {
			// Add or remove from the selection
			dt[type]( idx ).select( ! isSelected );
		}
		else if ( e.shiftKey ) {
			if ( type === 'cell' ) {
				cellRange( dt, idx, ctx._select_lastCell || null );
			}
			else {
				rowColumnRange( dt, type, idx, ctx._select_lastCell ?
					ctx._select_lastCell[type] :
					null
				);
			}
		}
		else {
			// No cmd or shift click - deselect if selected, or select
			// this row only
			var selected = dt[type+'s']( { selected: true } );

			if ( isSelected && selected.flatten().length === 1 ) {
				dt[type]( idx ).deselect();
			}
			else {
				selected.deselect();
				dt[type]( idx ).select();
			}
		}
	} else if ( style == 'multi+shift' ) {
		if ( e.shiftKey ) {
			if ( type === 'cell' ) {
				cellRange( dt, idx, ctx._select_lastCell || null );
			}
			else {
				rowColumnRange( dt, type, idx, ctx._select_lastCell ?
					ctx._select_lastCell[type] :
					null
				);
			}
		}
		else {
			dt[ type ]( idx ).select( ! isSelected );
		}
	}
	else {
		dt[ type ]( idx ).select( ! isSelected );
	}
}



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables selectors
 */

// row and column are basically identical just assigned to different properties
// and checking a different array, so we can dynamically create the functions to
// reduce the code size
$.each( [
	{ type: 'row', prop: 'aoData' },
	{ type: 'column', prop: 'aoColumns' }
], function ( i, o ) {
	DataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {
		var selected = opts.selected;
		var data;
		var out = [];

		if ( selected === undefined ) {
			return indexes;
		}

		for ( var i=0, ien=indexes.length ; i<ien ; i++ ) {
			data = settings[ o.prop ][ indexes[i] ];

			if ( (selected === true && data._select_selected === true) ||
			     (selected === false && ! data._select_selected )
			) {
				out.push( indexes[i] );
			}
		}

		return out;
	} );
} );

DataTable.ext.selector.cell.push( function ( settings, opts, cells ) {
	var selected = opts.selected;
	var rowData;
	var out = [];

	if ( selected === undefined ) {
		return cells;
	}

	for ( var i=0, ien=cells.length ; i<ien ; i++ ) {
		rowData = settings.aoData[ cells[i].row ];

		if ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||
		     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )
		) {
			out.push( cells[i] );
		}
	}

	return out;
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * DataTables API
 *
 * For complete documentation, please refer to the docs/api directory or the
 * DataTables site
 */

// Local variables to improve compression
var apiRegister = DataTable.Api.register;
var apiRegisterPlural = DataTable.Api.registerPlural;

apiRegister( 'select()', function () {
	return this.iterator( 'table', function ( ctx ) {
		DataTable.select.init( new DataTable.Api( ctx ) );
	} );
} );

apiRegister( 'select.blurable()', function ( flag ) {
	if ( flag === undefined ) {
		return this.context[0]._select.blurable;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.blurable = flag;
	} );
} );

apiRegister( 'select.info()', function ( flag ) {
	if ( info === undefined ) {
		return this.context[0]._select.info;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.info = flag;
	} );
} );

apiRegister( 'select.items()', function ( items ) {
	if ( items === undefined ) {
		return this.context[0]._select.items;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.items = items;

		eventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );
	} );
} );

// Takes effect from the _next_ selection. None disables future selection, but
// does not clear the current selection. Use the `deselect` methods for that
apiRegister( 'select.style()', function ( style ) {
	if ( style === undefined ) {
		return this.context[0]._select.style;
	}

	return this.iterator( 'table', function ( ctx ) {
		ctx._select.style = style;

		if ( ! ctx._select_init ) {
			init( ctx );
		}

		// Add / remove mouse event handlers. They aren't required when only
		// API selection is available
		var dt = new DataTable.Api( ctx );
		disableMouseSelection( dt );
		
		if ( style !== 'api' ) {
			enableMouseSelection( dt );
		}

		eventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );
	} );
} );

apiRegister( 'select.selector()', function ( selector ) {
	if ( selector === undefined ) {
		return this.context[0]._select.selector;
	}

	return this.iterator( 'table', function ( ctx ) {
		disableMouseSelection( new DataTable.Api( ctx ) );

		ctx._select.selector = selector;

		if ( ctx._select.style !== 'api' ) {
			enableMouseSelection( new DataTable.Api( ctx ) );
		}
	} );
} );



apiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'row', function ( ctx, idx ) {
		clear( ctx );

		ctx.aoData[ idx ]._select_selected = true;
		$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'row', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'column', function ( ctx, idx ) {
		clear( ctx );

		ctx.aoColumns[ idx ]._select_selected = true;

		var column = new DataTable.Api( ctx ).column( idx );

		$( column.header() ).addClass( ctx._select.className );
		$( column.footer() ).addClass( ctx._select.className );

		column.nodes().to$().addClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'column', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {
	var api = this;

	if ( select === false ) {
		return this.deselect();
	}

	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {
		clear( ctx );

		var data = ctx.aoData[ rowIdx ];

		if ( data._selected_cells === undefined ) {
			data._selected_cells = [];
		}

		data._selected_cells[ colIdx ] = true;

		if ( data.anCells ) {
			$( data.anCells[ colIdx ] ).addClass( ctx._select.className );
		}
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'select', [ 'cell', api[i] ], true );
	} );

	return this;
} );


apiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {
	var api = this;

	this.iterator( 'row', function ( ctx, idx ) {
		ctx.aoData[ idx ]._select_selected = false;
		$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'row', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {
	var api = this;

	this.iterator( 'column', function ( ctx, idx ) {
		ctx.aoColumns[ idx ]._select_selected = false;

		var api = new DataTable.Api( ctx );
		var column = api.column( idx );

		$( column.header() ).removeClass( ctx._select.className );
		$( column.footer() ).removeClass( ctx._select.className );

		// Need to loop over each cell, rather than just using
		// `column().nodes()` as cells which are individually selected should
		// not have the `selected` class removed from them
		api.cells( null, idx ).indexes().each( function (cellIdx) {
			var data = ctx.aoData[ cellIdx.row ];
			var cellSelected = data._selected_cells;

			if ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {
				$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );
			}
		} );
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'column', api[i] ], true );
	} );

	return this;
} );

apiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {
	var api = this;

	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {
		var data = ctx.aoData[ rowIdx ];

		data._selected_cells[ colIdx ] = false;

		// Remove class only if the cells exist, and the cell is not column
		// selected, in which case the class should remain (since it is selected
		// in the column)
		if ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {
			$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );
		}
	} );

	this.iterator( 'table', function ( ctx, i ) {
		eventTrigger( api, 'deselect', [ 'cell', api[i] ], true );
	} );

	return this;
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Buttons
 */
function i18n( label, def ) {
	return function (dt) {
		return dt.i18n( 'buttons.'+label, def );
	};
}

$.extend( DataTable.ext.buttons, {
	selected: {
		text: i18n( 'selected', 'Selected' ),
		className: 'buttons-selected',
		init: function ( dt ) {
			var that = this;

			// .DT namespace listeners are removed by DataTables automatically
			// on table destroy
			dt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {
				var enable = that.rows( { selected: true } ).any() ||
				             that.columns( { selected: true } ).any() ||
				             that.cells( { selected: true } ).any();

				that.enable( enable );
			} );

			this.disable();
		}
	},
	selectedSingle: {
		text: i18n( 'selectedSingle', 'Selected single' ),
		className: 'buttons-selected-single',
		init: function ( dt ) {
			var that = this;

			dt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {
				var count = dt.rows( { selected: true } ).flatten().length +
				            dt.columns( { selected: true } ).flatten().length +
				            dt.cells( { selected: true } ).flatten().length;

				that.enable( count === 1 );
			} );

			this.disable();
		}
	},
	selectAll: {
		text: i18n( 'selectAll', 'Select all' ),
		className: 'buttons-select-all',
		action: function () {
			var items = this.select.items();
			this[ items+'s' ]().select();
		}
	},
	selectNone: {
		text: i18n( 'selectNone', 'Deselect all' ),
		className: 'buttons-select-none',
		action: function () {
			clear( this.settings()[0], true );
		},
		init: function ( dt ) {
			var that = this;

			dt.on( 'draw.dt.DT select.dt.DT deselect.dt.DT', function () {
				var count = dt.rows( { selected: true } ).flatten().length +
				            dt.columns( { selected: true } ).flatten().length +
				            dt.cells( { selected: true } ).flatten().length;

				that.enable( count > 0 );
			} );

			this.disable();
		}
	}
} );

$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {
	var lc = item.toLowerCase();

	DataTable.ext.buttons[ 'select'+item+'s' ] = {
		text: i18n( 'select'+item+'s', 'Select '+lc+'s' ),
		className: 'buttons-select-'+lc+'s',
		action: function () {
			this.select.items( lc );
		},
		init: function ( dt ) {
			var that = this;

			dt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {
				that.active( items === lc );
			} );
		}
	};
} );



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Initialisation
 */

// DataTables creation - check if select has been defined in the options. Note
// this required that the table be in the document! If it isn't then something
// needs to trigger this method unfortunately. The next major release of
// DataTables will rework the events and address this.
$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	DataTable.select.init( new DataTable.Api( ctx ) );
} );


return DataTable.select;
}));


/*
 * This combined file was created by the DataTables downloader builder:
 *   https://datatables.net/download
 *
 * To rebuild or modify this file with the latest versions of the included
 * software please visit:
 *   https://datatables.net/download/#dt/dt-1.10.12/b-1.2.2/b-colvis-1.2.2/e-1.5.6/r-2.1.0/se-1.2.0
 *
 * Included libraries:
 *   DataTables 1.10.12, Buttons 1.2.2, Column visibility 1.2.2, Editor 1.5.6, Responsive 2.1.0, Select 1.2.0
 */

/*!
 DataTables 1.10.12
 ©2008-2015 SpryMedia Ltd - datatables.net/license
*/

(function(h){"function"===typeof define&&define.amd?define(["jquery"],function(D){return h(D,window,document)}):"object"===typeof exports?module.exports=function(D,I){D||(D=window);I||(I="undefined"!==typeof window?require("jquery"):require("jquery")(D));return h(I,D,D.document)}:h(jQuery,window,document)})(function(h,D,I,k){function X(a){var b,c,d={};h.each(a,function(e){if((b=e.match(/^([^A-Z]+?)([A-Z])/))&&-1!=="a aa ai ao as b fn i m o s ".indexOf(b[1]+" "))c=e.replace(b[0],b[2].toLowerCase()),
d[c]=e,"o"===b[1]&&X(a[e])});a._hungarianMap=d}function K(a,b,c){a._hungarianMap||X(a);var d;h.each(b,function(e){d=a._hungarianMap[e];if(d!==k&&(c||b[d]===k))"o"===d.charAt(0)?(b[d]||(b[d]={}),h.extend(!0,b[d],b[e]),K(a[d],b[d],c)):b[d]=b[e]})}function Da(a){var b=m.defaults.oLanguage,c=a.sZeroRecords;!a.sEmptyTable&&(c&&"No data available in table"===b.sEmptyTable)&&E(a,a,"sZeroRecords","sEmptyTable");!a.sLoadingRecords&&(c&&"Loading..."===b.sLoadingRecords)&&E(a,a,"sZeroRecords","sLoadingRecords");
a.sInfoThousands&&(a.sThousands=a.sInfoThousands);(a=a.sDecimal)&&db(a)}function eb(a){A(a,"ordering","bSort");A(a,"orderMulti","bSortMulti");A(a,"orderClasses","bSortClasses");A(a,"orderCellsTop","bSortCellsTop");A(a,"order","aaSorting");A(a,"orderFixed","aaSortingFixed");A(a,"paging","bPaginate");A(a,"pagingType","sPaginationType");A(a,"pageLength","iDisplayLength");A(a,"searching","bFilter");"boolean"===typeof a.sScrollX&&(a.sScrollX=a.sScrollX?"100%":"");"boolean"===typeof a.scrollX&&(a.scrollX=
a.scrollX?"100%":"");if(a=a.aoSearchCols)for(var b=0,c=a.length;b<c;b++)a[b]&&K(m.models.oSearch,a[b])}function fb(a){A(a,"orderable","bSortable");A(a,"orderData","aDataSort");A(a,"orderSequence","asSorting");A(a,"orderDataType","sortDataType");var b=a.aDataSort;b&&!h.isArray(b)&&(a.aDataSort=[b])}function gb(a){if(!m.__browser){var b={};m.__browser=b;var c=h("<div/>").css({position:"fixed",top:0,left:0,height:1,width:1,overflow:"hidden"}).append(h("<div/>").css({position:"absolute",top:1,left:1,
width:100,overflow:"scroll"}).append(h("<div/>").css({width:"100%",height:10}))).appendTo("body"),d=c.children(),e=d.children();b.barWidth=d[0].offsetWidth-d[0].clientWidth;b.bScrollOversize=100===e[0].offsetWidth&&100!==d[0].clientWidth;b.bScrollbarLeft=1!==Math.round(e.offset().left);b.bBounding=c[0].getBoundingClientRect().width?!0:!1;c.remove()}h.extend(a.oBrowser,m.__browser);a.oScroll.iBarWidth=m.__browser.barWidth}function hb(a,b,c,d,e,f){var g,j=!1;c!==k&&(g=c,j=!0);for(;d!==e;)a.hasOwnProperty(d)&&
(g=j?b(g,a[d],d,a):a[d],j=!0,d+=f);return g}function Ea(a,b){var c=m.defaults.column,d=a.aoColumns.length,c=h.extend({},m.models.oColumn,c,{nTh:b?b:I.createElement("th"),sTitle:c.sTitle?c.sTitle:b?b.innerHTML:"",aDataSort:c.aDataSort?c.aDataSort:[d],mData:c.mData?c.mData:d,idx:d});a.aoColumns.push(c);c=a.aoPreSearchCols;c[d]=h.extend({},m.models.oSearch,c[d]);ja(a,d,h(b).data())}function ja(a,b,c){var b=a.aoColumns[b],d=a.oClasses,e=h(b.nTh);if(!b.sWidthOrig){b.sWidthOrig=e.attr("width")||null;var f=
(e.attr("style")||"").match(/width:\s*(\d+[pxem%]+)/);f&&(b.sWidthOrig=f[1])}c!==k&&null!==c&&(fb(c),K(m.defaults.column,c),c.mDataProp!==k&&!c.mData&&(c.mData=c.mDataProp),c.sType&&(b._sManualType=c.sType),c.className&&!c.sClass&&(c.sClass=c.className),h.extend(b,c),E(b,c,"sWidth","sWidthOrig"),c.iDataSort!==k&&(b.aDataSort=[c.iDataSort]),E(b,c,"aDataSort"));var g=b.mData,j=Q(g),i=b.mRender?Q(b.mRender):null,c=function(a){return"string"===typeof a&&-1!==a.indexOf("@")};b._bAttrSrc=h.isPlainObject(g)&&
(c(g.sort)||c(g.type)||c(g.filter));b._setter=null;b.fnGetData=function(a,b,c){var d=j(a,b,k,c);return i&&b?i(d,b,a,c):d};b.fnSetData=function(a,b,c){return R(g)(a,b,c)};"number"!==typeof g&&(a._rowReadObject=!0);a.oFeatures.bSort||(b.bSortable=!1,e.addClass(d.sSortableNone));a=-1!==h.inArray("asc",b.asSorting);c=-1!==h.inArray("desc",b.asSorting);!b.bSortable||!a&&!c?(b.sSortingClass=d.sSortableNone,b.sSortingClassJUI=""):a&&!c?(b.sSortingClass=d.sSortableAsc,b.sSortingClassJUI=d.sSortJUIAscAllowed):
!a&&c?(b.sSortingClass=d.sSortableDesc,b.sSortingClassJUI=d.sSortJUIDescAllowed):(b.sSortingClass=d.sSortable,b.sSortingClassJUI=d.sSortJUI)}function Y(a){if(!1!==a.oFeatures.bAutoWidth){var b=a.aoColumns;Fa(a);for(var c=0,d=b.length;c<d;c++)b[c].nTh.style.width=b[c].sWidth}b=a.oScroll;(""!==b.sY||""!==b.sX)&&ka(a);u(a,null,"column-sizing",[a])}function Z(a,b){var c=la(a,"bVisible");return"number"===typeof c[b]?c[b]:null}function $(a,b){var c=la(a,"bVisible"),c=h.inArray(b,c);return-1!==c?c:null}
function aa(a){var b=0;h.each(a.aoColumns,function(a,d){d.bVisible&&"none"!==h(d.nTh).css("display")&&b++});return b}function la(a,b){var c=[];h.map(a.aoColumns,function(a,e){a[b]&&c.push(e)});return c}function Ga(a){var b=a.aoColumns,c=a.aoData,d=m.ext.type.detect,e,f,g,j,i,h,l,q,t;e=0;for(f=b.length;e<f;e++)if(l=b[e],t=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){g=0;for(j=d.length;g<j;g++){i=0;for(h=c.length;i<h;i++){t[i]===k&&(t[i]=B(a,i,e,"type"));q=d[g](t[i],a);if(!q&&
g!==d.length-1)break;if("html"===q)break}if(q){l.sType=q;break}}l.sType||(l.sType="string")}}function ib(a,b,c,d){var e,f,g,j,i,n,l=a.aoColumns;if(b)for(e=b.length-1;0<=e;e--){n=b[e];var q=n.targets!==k?n.targets:n.aTargets;h.isArray(q)||(q=[q]);f=0;for(g=q.length;f<g;f++)if("number"===typeof q[f]&&0<=q[f]){for(;l.length<=q[f];)Ea(a);d(q[f],n)}else if("number"===typeof q[f]&&0>q[f])d(l.length+q[f],n);else if("string"===typeof q[f]){j=0;for(i=l.length;j<i;j++)("_all"==q[f]||h(l[j].nTh).hasClass(q[f]))&&
d(j,n)}}if(c){e=0;for(a=c.length;e<a;e++)d(e,c[e])}}function N(a,b,c,d){var e=a.aoData.length,f=h.extend(!0,{},m.models.oRow,{src:c?"dom":"data",idx:e});f._aData=b;a.aoData.push(f);for(var g=a.aoColumns,j=0,i=g.length;j<i;j++)g[j].sType=null;a.aiDisplayMaster.push(e);b=a.rowIdFn(b);b!==k&&(a.aIds[b]=f);(c||!a.oFeatures.bDeferRender)&&Ha(a,e,c,d);return e}function ma(a,b){var c;b instanceof h||(b=h(b));return b.map(function(b,e){c=Ia(a,e);return N(a,c.data,e,c.cells)})}function B(a,b,c,d){var e=a.iDraw,
f=a.aoColumns[c],g=a.aoData[b]._aData,j=f.sDefaultContent,i=f.fnGetData(g,d,{settings:a,row:b,col:c});if(i===k)return a.iDrawError!=e&&null===j&&(L(a,0,"Requested unknown parameter "+("function"==typeof f.mData?"{function}":"'"+f.mData+"'")+" for row "+b+", column "+c,4),a.iDrawError=e),j;if((i===g||null===i)&&null!==j&&d!==k)i=j;else if("function"===typeof i)return i.call(g);return null===i&&"display"==d?"":i}function jb(a,b,c,d){a.aoColumns[c].fnSetData(a.aoData[b]._aData,d,{settings:a,row:b,col:c})}
function Ja(a){return h.map(a.match(/(\\.|[^\.])+/g)||[""],function(a){return a.replace(/\\./g,".")})}function Q(a){if(h.isPlainObject(a)){var b={};h.each(a,function(a,c){c&&(b[a]=Q(c))});return function(a,c,f,g){var j=b[c]||b._;return j!==k?j(a,c,f,g):a}}if(null===a)return function(a){return a};if("function"===typeof a)return function(b,c,f,g){return a(b,c,f,g)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var c=function(a,b,f){var g,j;if(""!==f){j=Ja(f);
for(var i=0,n=j.length;i<n;i++){f=j[i].match(ba);g=j[i].match(U);if(f){j[i]=j[i].replace(ba,"");""!==j[i]&&(a=a[j[i]]);g=[];j.splice(0,i+1);j=j.join(".");if(h.isArray(a)){i=0;for(n=a.length;i<n;i++)g.push(c(a[i],b,j))}a=f[0].substring(1,f[0].length-1);a=""===a?g:g.join(a);break}else if(g){j[i]=j[i].replace(U,"");a=a[j[i]]();continue}if(null===a||a[j[i]]===k)return k;a=a[j[i]]}}return a};return function(b,e){return c(b,e,a)}}return function(b){return b[a]}}function R(a){if(h.isPlainObject(a))return R(a._);
if(null===a)return function(){};if("function"===typeof a)return function(b,d,e){a(b,"set",d,e)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var b=function(a,d,e){var e=Ja(e),f;f=e[e.length-1];for(var g,j,i=0,n=e.length-1;i<n;i++){g=e[i].match(ba);j=e[i].match(U);if(g){e[i]=e[i].replace(ba,"");a[e[i]]=[];f=e.slice();f.splice(0,i+1);g=f.join(".");if(h.isArray(d)){j=0;for(n=d.length;j<n;j++)f={},b(f,d[j],g),a[e[i]].push(f)}else a[e[i]]=d;return}j&&(e[i]=e[i].replace(U,
""),a=a[e[i]](d));if(null===a[e[i]]||a[e[i]]===k)a[e[i]]={};a=a[e[i]]}if(f.match(U))a[f.replace(U,"")](d);else a[f.replace(ba,"")]=d};return function(c,d){return b(c,d,a)}}return function(b,d){b[a]=d}}function Ka(a){return G(a.aoData,"_aData")}function na(a){a.aoData.length=0;a.aiDisplayMaster.length=0;a.aiDisplay.length=0;a.aIds={}}function oa(a,b,c){for(var d=-1,e=0,f=a.length;e<f;e++)a[e]==b?d=e:a[e]>b&&a[e]--; -1!=d&&c===k&&a.splice(d,1)}function ca(a,b,c,d){var e=a.aoData[b],f,g=function(c,d){for(;c.childNodes.length;)c.removeChild(c.firstChild);
c.innerHTML=B(a,b,d,"display")};if("dom"===c||(!c||"auto"===c)&&"dom"===e.src)e._aData=Ia(a,e,d,d===k?k:e._aData).data;else{var j=e.anCells;if(j)if(d!==k)g(j[d],d);else{c=0;for(f=j.length;c<f;c++)g(j[c],c)}}e._aSortData=null;e._aFilterData=null;g=a.aoColumns;if(d!==k)g[d].sType=null;else{c=0;for(f=g.length;c<f;c++)g[c].sType=null;La(a,e)}}function Ia(a,b,c,d){var e=[],f=b.firstChild,g,j,i=0,n,l=a.aoColumns,q=a._rowReadObject,d=d!==k?d:q?{}:[],t=function(a,b){if("string"===typeof a){var c=a.indexOf("@");
-1!==c&&(c=a.substring(c+1),R(a)(d,b.getAttribute(c)))}},S=function(a){if(c===k||c===i)j=l[i],n=h.trim(a.innerHTML),j&&j._bAttrSrc?(R(j.mData._)(d,n),t(j.mData.sort,a),t(j.mData.type,a),t(j.mData.filter,a)):q?(j._setter||(j._setter=R(j.mData)),j._setter(d,n)):d[i]=n;i++};if(f)for(;f;){g=f.nodeName.toUpperCase();if("TD"==g||"TH"==g)S(f),e.push(f);f=f.nextSibling}else{e=b.anCells;f=0;for(g=e.length;f<g;f++)S(e[f])}if(b=b.firstChild?b:b.nTr)(b=b.getAttribute("id"))&&R(a.rowId)(d,b);return{data:d,cells:e}}
function Ha(a,b,c,d){var e=a.aoData[b],f=e._aData,g=[],j,i,n,l,q;if(null===e.nTr){j=c||I.createElement("tr");e.nTr=j;e.anCells=g;j._DT_RowIndex=b;La(a,e);l=0;for(q=a.aoColumns.length;l<q;l++){n=a.aoColumns[l];i=c?d[l]:I.createElement(n.sCellType);i._DT_CellIndex={row:b,column:l};g.push(i);if((!c||n.mRender||n.mData!==l)&&(!h.isPlainObject(n.mData)||n.mData._!==l+".display"))i.innerHTML=B(a,b,l,"display");n.sClass&&(i.className+=" "+n.sClass);n.bVisible&&!c?j.appendChild(i):!n.bVisible&&c&&i.parentNode.removeChild(i);
n.fnCreatedCell&&n.fnCreatedCell.call(a.oInstance,i,B(a,b,l),f,b,l)}u(a,"aoRowCreatedCallback",null,[j,f,b])}e.nTr.setAttribute("role","row")}function La(a,b){var c=b.nTr,d=b._aData;if(c){var e=a.rowIdFn(d);e&&(c.id=e);d.DT_RowClass&&(e=d.DT_RowClass.split(" "),b.__rowc=b.__rowc?pa(b.__rowc.concat(e)):e,h(c).removeClass(b.__rowc.join(" ")).addClass(d.DT_RowClass));d.DT_RowAttr&&h(c).attr(d.DT_RowAttr);d.DT_RowData&&h(c).data(d.DT_RowData)}}function kb(a){var b,c,d,e,f,g=a.nTHead,j=a.nTFoot,i=0===
h("th, td",g).length,n=a.oClasses,l=a.aoColumns;i&&(e=h("<tr/>").appendTo(g));b=0;for(c=l.length;b<c;b++)f=l[b],d=h(f.nTh).addClass(f.sClass),i&&d.appendTo(e),a.oFeatures.bSort&&(d.addClass(f.sSortingClass),!1!==f.bSortable&&(d.attr("tabindex",a.iTabIndex).attr("aria-controls",a.sTableId),Ma(a,f.nTh,b))),f.sTitle!=d[0].innerHTML&&d.html(f.sTitle),Na(a,"header")(a,d,f,n);i&&da(a.aoHeader,g);h(g).find(">tr").attr("role","row");h(g).find(">tr>th, >tr>td").addClass(n.sHeaderTH);h(j).find(">tr>th, >tr>td").addClass(n.sFooterTH);
if(null!==j){a=a.aoFooter[0];b=0;for(c=a.length;b<c;b++)f=l[b],f.nTf=a[b].cell,f.sClass&&h(f.nTf).addClass(f.sClass)}}function ea(a,b,c){var d,e,f,g=[],j=[],i=a.aoColumns.length,n;if(b){c===k&&(c=!1);d=0;for(e=b.length;d<e;d++){g[d]=b[d].slice();g[d].nTr=b[d].nTr;for(f=i-1;0<=f;f--)!a.aoColumns[f].bVisible&&!c&&g[d].splice(f,1);j.push([])}d=0;for(e=g.length;d<e;d++){if(a=g[d].nTr)for(;f=a.firstChild;)a.removeChild(f);f=0;for(b=g[d].length;f<b;f++)if(n=i=1,j[d][f]===k){a.appendChild(g[d][f].cell);
for(j[d][f]=1;g[d+i]!==k&&g[d][f].cell==g[d+i][f].cell;)j[d+i][f]=1,i++;for(;g[d][f+n]!==k&&g[d][f].cell==g[d][f+n].cell;){for(c=0;c<i;c++)j[d+c][f+n]=1;n++}h(g[d][f].cell).attr("rowspan",i).attr("colspan",n)}}}}function O(a){var b=u(a,"aoPreDrawCallback","preDraw",[a]);if(-1!==h.inArray(!1,b))C(a,!1);else{var b=[],c=0,d=a.asStripeClasses,e=d.length,f=a.oLanguage,g=a.iInitDisplayStart,j="ssp"==y(a),i=a.aiDisplay;a.bDrawing=!0;g!==k&&-1!==g&&(a._iDisplayStart=j?g:g>=a.fnRecordsDisplay()?0:g,a.iInitDisplayStart=
-1);var g=a._iDisplayStart,n=a.fnDisplayEnd();if(a.bDeferLoading)a.bDeferLoading=!1,a.iDraw++,C(a,!1);else if(j){if(!a.bDestroying&&!lb(a))return}else a.iDraw++;if(0!==i.length){f=j?a.aoData.length:n;for(j=j?0:g;j<f;j++){var l=i[j],q=a.aoData[l];null===q.nTr&&Ha(a,l);l=q.nTr;if(0!==e){var t=d[c%e];q._sRowStripe!=t&&(h(l).removeClass(q._sRowStripe).addClass(t),q._sRowStripe=t)}u(a,"aoRowCallback",null,[l,q._aData,c,j]);b.push(l);c++}}else c=f.sZeroRecords,1==a.iDraw&&"ajax"==y(a)?c=f.sLoadingRecords:
f.sEmptyTable&&0===a.fnRecordsTotal()&&(c=f.sEmptyTable),b[0]=h("<tr/>",{"class":e?d[0]:""}).append(h("<td />",{valign:"top",colSpan:aa(a),"class":a.oClasses.sRowEmpty}).html(c))[0];u(a,"aoHeaderCallback","header",[h(a.nTHead).children("tr")[0],Ka(a),g,n,i]);u(a,"aoFooterCallback","footer",[h(a.nTFoot).children("tr")[0],Ka(a),g,n,i]);d=h(a.nTBody);d.children().detach();d.append(h(b));u(a,"aoDrawCallback","draw",[a]);a.bSorted=!1;a.bFiltered=!1;a.bDrawing=!1}}function T(a,b){var c=a.oFeatures,d=c.bFilter;
c.bSort&&mb(a);d?fa(a,a.oPreviousSearch):a.aiDisplay=a.aiDisplayMaster.slice();!0!==b&&(a._iDisplayStart=0);a._drawHold=b;O(a);a._drawHold=!1}function nb(a){var b=a.oClasses,c=h(a.nTable),c=h("<div/>").insertBefore(c),d=a.oFeatures,e=h("<div/>",{id:a.sTableId+"_wrapper","class":b.sWrapper+(a.nTFoot?"":" "+b.sNoFooter)});a.nHolding=c[0];a.nTableWrapper=e[0];a.nTableReinsertBefore=a.nTable.nextSibling;for(var f=a.sDom.split(""),g,j,i,n,l,q,t=0;t<f.length;t++){g=null;j=f[t];if("<"==j){i=h("<div/>")[0];
n=f[t+1];if("'"==n||'"'==n){l="";for(q=2;f[t+q]!=n;)l+=f[t+q],q++;"H"==l?l=b.sJUIHeader:"F"==l&&(l=b.sJUIFooter);-1!=l.indexOf(".")?(n=l.split("."),i.id=n[0].substr(1,n[0].length-1),i.className=n[1]):"#"==l.charAt(0)?i.id=l.substr(1,l.length-1):i.className=l;t+=q}e.append(i);e=h(i)}else if(">"==j)e=e.parent();else if("l"==j&&d.bPaginate&&d.bLengthChange)g=ob(a);else if("f"==j&&d.bFilter)g=pb(a);else if("r"==j&&d.bProcessing)g=qb(a);else if("t"==j)g=rb(a);else if("i"==j&&d.bInfo)g=sb(a);else if("p"==
j&&d.bPaginate)g=tb(a);else if(0!==m.ext.feature.length){i=m.ext.feature;q=0;for(n=i.length;q<n;q++)if(j==i[q].cFeature){g=i[q].fnInit(a);break}}g&&(i=a.aanFeatures,i[j]||(i[j]=[]),i[j].push(g),e.append(g))}c.replaceWith(e);a.nHolding=null}function da(a,b){var c=h(b).children("tr"),d,e,f,g,j,i,n,l,q,t;a.splice(0,a.length);f=0;for(i=c.length;f<i;f++)a.push([]);f=0;for(i=c.length;f<i;f++){d=c[f];for(e=d.firstChild;e;){if("TD"==e.nodeName.toUpperCase()||"TH"==e.nodeName.toUpperCase()){l=1*e.getAttribute("colspan");
q=1*e.getAttribute("rowspan");l=!l||0===l||1===l?1:l;q=!q||0===q||1===q?1:q;g=0;for(j=a[f];j[g];)g++;n=g;t=1===l?!0:!1;for(j=0;j<l;j++)for(g=0;g<q;g++)a[f+g][n+j]={cell:e,unique:t},a[f+g].nTr=d}e=e.nextSibling}}}function qa(a,b,c){var d=[];c||(c=a.aoHeader,b&&(c=[],da(c,b)));for(var b=0,e=c.length;b<e;b++)for(var f=0,g=c[b].length;f<g;f++)if(c[b][f].unique&&(!d[f]||!a.bSortCellsTop))d[f]=c[b][f].cell;return d}function ra(a,b,c){u(a,"aoServerParams","serverParams",[b]);if(b&&h.isArray(b)){var d={},
e=/(.*?)\[\]$/;h.each(b,function(a,b){var c=b.name.match(e);c?(c=c[0],d[c]||(d[c]=[]),d[c].push(b.value)):d[b.name]=b.value});b=d}var f,g=a.ajax,j=a.oInstance,i=function(b){u(a,null,"xhr",[a,b,a.jqXHR]);c(b)};if(h.isPlainObject(g)&&g.data){f=g.data;var n=h.isFunction(f)?f(b,a):f,b=h.isFunction(f)&&n?n:h.extend(!0,b,n);delete g.data}n={data:b,success:function(b){var c=b.error||b.sError;c&&L(a,0,c);a.json=b;i(b)},dataType:"json",cache:!1,type:a.sServerMethod,error:function(b,c){var d=u(a,null,"xhr",
[a,null,a.jqXHR]);-1===h.inArray(!0,d)&&("parsererror"==c?L(a,0,"Invalid JSON response",1):4===b.readyState&&L(a,0,"Ajax error",7));C(a,!1)}};a.oAjaxData=b;u(a,null,"preXhr",[a,b]);a.fnServerData?a.fnServerData.call(j,a.sAjaxSource,h.map(b,function(a,b){return{name:b,value:a}}),i,a):a.sAjaxSource||"string"===typeof g?a.jqXHR=h.ajax(h.extend(n,{url:g||a.sAjaxSource})):h.isFunction(g)?a.jqXHR=g.call(j,b,i,a):(a.jqXHR=h.ajax(h.extend(n,g)),g.data=f)}function lb(a){return a.bAjaxDataGet?(a.iDraw++,C(a,
!0),ra(a,ub(a),function(b){vb(a,b)}),!1):!0}function ub(a){var b=a.aoColumns,c=b.length,d=a.oFeatures,e=a.oPreviousSearch,f=a.aoPreSearchCols,g,j=[],i,n,l,q=V(a);g=a._iDisplayStart;i=!1!==d.bPaginate?a._iDisplayLength:-1;var k=function(a,b){j.push({name:a,value:b})};k("sEcho",a.iDraw);k("iColumns",c);k("sColumns",G(b,"sName").join(","));k("iDisplayStart",g);k("iDisplayLength",i);var S={draw:a.iDraw,columns:[],order:[],start:g,length:i,search:{value:e.sSearch,regex:e.bRegex}};for(g=0;g<c;g++)n=b[g],
l=f[g],i="function"==typeof n.mData?"function":n.mData,S.columns.push({data:i,name:n.sName,searchable:n.bSearchable,orderable:n.bSortable,search:{value:l.sSearch,regex:l.bRegex}}),k("mDataProp_"+g,i),d.bFilter&&(k("sSearch_"+g,l.sSearch),k("bRegex_"+g,l.bRegex),k("bSearchable_"+g,n.bSearchable)),d.bSort&&k("bSortable_"+g,n.bSortable);d.bFilter&&(k("sSearch",e.sSearch),k("bRegex",e.bRegex));d.bSort&&(h.each(q,function(a,b){S.order.push({column:b.col,dir:b.dir});k("iSortCol_"+a,b.col);k("sSortDir_"+
a,b.dir)}),k("iSortingCols",q.length));b=m.ext.legacy.ajax;return null===b?a.sAjaxSource?j:S:b?j:S}function vb(a,b){var c=sa(a,b),d=b.sEcho!==k?b.sEcho:b.draw,e=b.iTotalRecords!==k?b.iTotalRecords:b.recordsTotal,f=b.iTotalDisplayRecords!==k?b.iTotalDisplayRecords:b.recordsFiltered;if(d){if(1*d<a.iDraw)return;a.iDraw=1*d}na(a);a._iRecordsTotal=parseInt(e,10);a._iRecordsDisplay=parseInt(f,10);d=0;for(e=c.length;d<e;d++)N(a,c[d]);a.aiDisplay=a.aiDisplayMaster.slice();a.bAjaxDataGet=!1;O(a);a._bInitComplete||
ta(a,b);a.bAjaxDataGet=!0;C(a,!1)}function sa(a,b){var c=h.isPlainObject(a.ajax)&&a.ajax.dataSrc!==k?a.ajax.dataSrc:a.sAjaxDataProp;return"data"===c?b.aaData||b[c]:""!==c?Q(c)(b):b}function pb(a){var b=a.oClasses,c=a.sTableId,d=a.oLanguage,e=a.oPreviousSearch,f=a.aanFeatures,g='<input type="search" class="'+b.sFilterInput+'"/>',j=d.sSearch,j=j.match(/_INPUT_/)?j.replace("_INPUT_",g):j+g,b=h("<div/>",{id:!f.f?c+"_filter":null,"class":b.sFilter}).append(h("<label/>").append(j)),f=function(){var b=!this.value?
"":this.value;b!=e.sSearch&&(fa(a,{sSearch:b,bRegex:e.bRegex,bSmart:e.bSmart,bCaseInsensitive:e.bCaseInsensitive}),a._iDisplayStart=0,O(a))},g=null!==a.searchDelay?a.searchDelay:"ssp"===y(a)?400:0,i=h("input",b).val(e.sSearch).attr("placeholder",d.sSearchPlaceholder).bind("keyup.DT search.DT input.DT paste.DT cut.DT",g?Oa(f,g):f).bind("keypress.DT",function(a){if(13==a.keyCode)return!1}).attr("aria-controls",c);h(a.nTable).on("search.dt.DT",function(b,c){if(a===c)try{i[0]!==I.activeElement&&i.val(e.sSearch)}catch(d){}});
return b[0]}function fa(a,b,c){var d=a.oPreviousSearch,e=a.aoPreSearchCols,f=function(a){d.sSearch=a.sSearch;d.bRegex=a.bRegex;d.bSmart=a.bSmart;d.bCaseInsensitive=a.bCaseInsensitive};Ga(a);if("ssp"!=y(a)){wb(a,b.sSearch,c,b.bEscapeRegex!==k?!b.bEscapeRegex:b.bRegex,b.bSmart,b.bCaseInsensitive);f(b);for(b=0;b<e.length;b++)xb(a,e[b].sSearch,b,e[b].bEscapeRegex!==k?!e[b].bEscapeRegex:e[b].bRegex,e[b].bSmart,e[b].bCaseInsensitive);yb(a)}else f(b);a.bFiltered=!0;u(a,null,"search",[a])}function yb(a){for(var b=
m.ext.search,c=a.aiDisplay,d,e,f=0,g=b.length;f<g;f++){for(var j=[],i=0,n=c.length;i<n;i++)e=c[i],d=a.aoData[e],b[f](a,d._aFilterData,e,d._aData,i)&&j.push(e);c.length=0;h.merge(c,j)}}function xb(a,b,c,d,e,f){if(""!==b)for(var g=a.aiDisplay,d=Pa(b,d,e,f),e=g.length-1;0<=e;e--)b=a.aoData[g[e]]._aFilterData[c],d.test(b)||g.splice(e,1)}function wb(a,b,c,d,e,f){var d=Pa(b,d,e,f),e=a.oPreviousSearch.sSearch,f=a.aiDisplayMaster,g;0!==m.ext.search.length&&(c=!0);g=zb(a);if(0>=b.length)a.aiDisplay=f.slice();
else{if(g||c||e.length>b.length||0!==b.indexOf(e)||a.bSorted)a.aiDisplay=f.slice();b=a.aiDisplay;for(c=b.length-1;0<=c;c--)d.test(a.aoData[b[c]]._sFilterRow)||b.splice(c,1)}}function Pa(a,b,c,d){a=b?a:Qa(a);c&&(a="^(?=.*?"+h.map(a.match(/"[^"]+"|[^ ]+/g)||[""],function(a){if('"'===a.charAt(0))var b=a.match(/^"(.*)"$/),a=b?b[1]:a;return a.replace('"',"")}).join(")(?=.*?")+").*$");return RegExp(a,d?"i":"")}function zb(a){var b=a.aoColumns,c,d,e,f,g,j,i,h,l=m.ext.type.search;c=!1;d=0;for(f=a.aoData.length;d<
f;d++)if(h=a.aoData[d],!h._aFilterData){j=[];e=0;for(g=b.length;e<g;e++)c=b[e],c.bSearchable?(i=B(a,d,e,"filter"),l[c.sType]&&(i=l[c.sType](i)),null===i&&(i=""),"string"!==typeof i&&i.toString&&(i=i.toString())):i="",i.indexOf&&-1!==i.indexOf("&")&&(ua.innerHTML=i,i=Zb?ua.textContent:ua.innerText),i.replace&&(i=i.replace(/[\r\n]/g,"")),j.push(i);h._aFilterData=j;h._sFilterRow=j.join("  ");c=!0}return c}function Ab(a){return{search:a.sSearch,smart:a.bSmart,regex:a.bRegex,caseInsensitive:a.bCaseInsensitive}}
function Bb(a){return{sSearch:a.search,bSmart:a.smart,bRegex:a.regex,bCaseInsensitive:a.caseInsensitive}}function sb(a){var b=a.sTableId,c=a.aanFeatures.i,d=h("<div/>",{"class":a.oClasses.sInfo,id:!c?b+"_info":null});c||(a.aoDrawCallback.push({fn:Cb,sName:"information"}),d.attr("role","status").attr("aria-live","polite"),h(a.nTable).attr("aria-describedby",b+"_info"));return d[0]}function Cb(a){var b=a.aanFeatures.i;if(0!==b.length){var c=a.oLanguage,d=a._iDisplayStart+1,e=a.fnDisplayEnd(),f=a.fnRecordsTotal(),
g=a.fnRecordsDisplay(),j=g?c.sInfo:c.sInfoEmpty;g!==f&&(j+=" "+c.sInfoFiltered);j+=c.sInfoPostFix;j=Db(a,j);c=c.fnInfoCallback;null!==c&&(j=c.call(a.oInstance,a,d,e,f,g,j));h(b).html(j)}}function Db(a,b){var c=a.fnFormatNumber,d=a._iDisplayStart+1,e=a._iDisplayLength,f=a.fnRecordsDisplay(),g=-1===e;return b.replace(/_START_/g,c.call(a,d)).replace(/_END_/g,c.call(a,a.fnDisplayEnd())).replace(/_MAX_/g,c.call(a,a.fnRecordsTotal())).replace(/_TOTAL_/g,c.call(a,f)).replace(/_PAGE_/g,c.call(a,g?1:Math.ceil(d/
e))).replace(/_PAGES_/g,c.call(a,g?1:Math.ceil(f/e)))}function ga(a){var b,c,d=a.iInitDisplayStart,e=a.aoColumns,f;c=a.oFeatures;var g=a.bDeferLoading;if(a.bInitialised){nb(a);kb(a);ea(a,a.aoHeader);ea(a,a.aoFooter);C(a,!0);c.bAutoWidth&&Fa(a);b=0;for(c=e.length;b<c;b++)f=e[b],f.sWidth&&(f.nTh.style.width=x(f.sWidth));u(a,null,"preInit",[a]);T(a);e=y(a);if("ssp"!=e||g)"ajax"==e?ra(a,[],function(c){var f=sa(a,c);for(b=0;b<f.length;b++)N(a,f[b]);a.iInitDisplayStart=d;T(a);C(a,!1);ta(a,c)},a):(C(a,!1),
ta(a))}else setTimeout(function(){ga(a)},200)}function ta(a,b){a._bInitComplete=!0;(b||a.oInit.aaData)&&Y(a);u(a,null,"plugin-init",[a,b]);u(a,"aoInitComplete","init",[a,b])}function Ra(a,b){var c=parseInt(b,10);a._iDisplayLength=c;Sa(a);u(a,null,"length",[a,c])}function ob(a){for(var b=a.oClasses,c=a.sTableId,d=a.aLengthMenu,e=h.isArray(d[0]),f=e?d[0]:d,d=e?d[1]:d,e=h("<select/>",{name:c+"_length","aria-controls":c,"class":b.sLengthSelect}),g=0,j=f.length;g<j;g++)e[0][g]=new Option(d[g],f[g]);var i=
h("<div><label/></div>").addClass(b.sLength);a.aanFeatures.l||(i[0].id=c+"_length");i.children().append(a.oLanguage.sLengthMenu.replace("_MENU_",e[0].outerHTML));h("select",i).val(a._iDisplayLength).bind("change.DT",function(){Ra(a,h(this).val());O(a)});h(a.nTable).bind("length.dt.DT",function(b,c,d){a===c&&h("select",i).val(d)});return i[0]}function tb(a){var b=a.sPaginationType,c=m.ext.pager[b],d="function"===typeof c,e=function(a){O(a)},b=h("<div/>").addClass(a.oClasses.sPaging+b)[0],f=a.aanFeatures;
d||c.fnInit(a,b,e);f.p||(b.id=a.sTableId+"_paginate",a.aoDrawCallback.push({fn:function(a){if(d){var b=a._iDisplayStart,i=a._iDisplayLength,h=a.fnRecordsDisplay(),l=-1===i,b=l?0:Math.ceil(b/i),i=l?1:Math.ceil(h/i),h=c(b,i),k,l=0;for(k=f.p.length;l<k;l++)Na(a,"pageButton")(a,f.p[l],l,h,b,i)}else c.fnUpdate(a,e)},sName:"pagination"}));return b}function Ta(a,b,c){var d=a._iDisplayStart,e=a._iDisplayLength,f=a.fnRecordsDisplay();0===f||-1===e?d=0:"number"===typeof b?(d=b*e,d>f&&(d=0)):"first"==b?d=0:
"previous"==b?(d=0<=e?d-e:0,0>d&&(d=0)):"next"==b?d+e<f&&(d+=e):"last"==b?d=Math.floor((f-1)/e)*e:L(a,0,"Unknown paging action: "+b,5);b=a._iDisplayStart!==d;a._iDisplayStart=d;b&&(u(a,null,"page",[a]),c&&O(a));return b}function qb(a){return h("<div/>",{id:!a.aanFeatures.r?a.sTableId+"_processing":null,"class":a.oClasses.sProcessing}).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]}function C(a,b){a.oFeatures.bProcessing&&h(a.aanFeatures.r).css("display",b?"block":"none");u(a,null,"processing",
[a,b])}function rb(a){var b=h(a.nTable);b.attr("role","grid");var c=a.oScroll;if(""===c.sX&&""===c.sY)return a.nTable;var d=c.sX,e=c.sY,f=a.oClasses,g=b.children("caption"),j=g.length?g[0]._captionSide:null,i=h(b[0].cloneNode(!1)),n=h(b[0].cloneNode(!1)),l=b.children("tfoot");l.length||(l=null);i=h("<div/>",{"class":f.sScrollWrapper}).append(h("<div/>",{"class":f.sScrollHead}).css({overflow:"hidden",position:"relative",border:0,width:d?!d?null:x(d):"100%"}).append(h("<div/>",{"class":f.sScrollHeadInner}).css({"box-sizing":"content-box",
width:c.sXInner||"100%"}).append(i.removeAttr("id").css("margin-left",0).append("top"===j?g:null).append(b.children("thead"))))).append(h("<div/>",{"class":f.sScrollBody}).css({position:"relative",overflow:"auto",width:!d?null:x(d)}).append(b));l&&i.append(h("<div/>",{"class":f.sScrollFoot}).css({overflow:"hidden",border:0,width:d?!d?null:x(d):"100%"}).append(h("<div/>",{"class":f.sScrollFootInner}).append(n.removeAttr("id").css("margin-left",0).append("bottom"===j?g:null).append(b.children("tfoot")))));
var b=i.children(),k=b[0],f=b[1],t=l?b[2]:null;if(d)h(f).on("scroll.DT",function(){var a=this.scrollLeft;k.scrollLeft=a;l&&(t.scrollLeft=a)});h(f).css(e&&c.bCollapse?"max-height":"height",e);a.nScrollHead=k;a.nScrollBody=f;a.nScrollFoot=t;a.aoDrawCallback.push({fn:ka,sName:"scrolling"});return i[0]}function ka(a){var b=a.oScroll,c=b.sX,d=b.sXInner,e=b.sY,b=b.iBarWidth,f=h(a.nScrollHead),g=f[0].style,j=f.children("div"),i=j[0].style,n=j.children("table"),j=a.nScrollBody,l=h(j),q=j.style,t=h(a.nScrollFoot).children("div"),
m=t.children("table"),o=h(a.nTHead),F=h(a.nTable),p=F[0],r=p.style,u=a.nTFoot?h(a.nTFoot):null,Eb=a.oBrowser,Ua=Eb.bScrollOversize,s=G(a.aoColumns,"nTh"),P,v,w,y,z=[],A=[],B=[],C=[],D,E=function(a){a=a.style;a.paddingTop="0";a.paddingBottom="0";a.borderTopWidth="0";a.borderBottomWidth="0";a.height=0};v=j.scrollHeight>j.clientHeight;if(a.scrollBarVis!==v&&a.scrollBarVis!==k)a.scrollBarVis=v,Y(a);else{a.scrollBarVis=v;F.children("thead, tfoot").remove();u&&(w=u.clone().prependTo(F),P=u.find("tr"),w=
w.find("tr"));y=o.clone().prependTo(F);o=o.find("tr");v=y.find("tr");y.find("th, td").removeAttr("tabindex");c||(q.width="100%",f[0].style.width="100%");h.each(qa(a,y),function(b,c){D=Z(a,b);c.style.width=a.aoColumns[D].sWidth});u&&J(function(a){a.style.width=""},w);f=F.outerWidth();if(""===c){r.width="100%";if(Ua&&(F.find("tbody").height()>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=x(F.outerWidth()-b);f=F.outerWidth()}else""!==d&&(r.width=x(d),f=F.outerWidth());J(E,v);J(function(a){B.push(a.innerHTML);
z.push(x(h(a).css("width")))},v);J(function(a,b){if(h.inArray(a,s)!==-1)a.style.width=z[b]},o);h(v).height(0);u&&(J(E,w),J(function(a){C.push(a.innerHTML);A.push(x(h(a).css("width")))},w),J(function(a,b){a.style.width=A[b]},P),h(w).height(0));J(function(a,b){a.innerHTML='<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+B[b]+"</div>";a.style.width=z[b]},v);u&&J(function(a,b){a.innerHTML='<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+C[b]+"</div>";a.style.width=
A[b]},w);if(F.outerWidth()<f){P=j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")?f+b:f;if(Ua&&(j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=x(P-b);(""===c||""!==d)&&L(a,1,"Possible column misalignment",6)}else P="100%";q.width=x(P);g.width=x(P);u&&(a.nScrollFoot.style.width=x(P));!e&&Ua&&(q.height=x(p.offsetHeight+b));c=F.outerWidth();n[0].style.width=x(c);i.width=x(c);d=F.height()>j.clientHeight||"scroll"==l.css("overflow-y");e="padding"+(Eb.bScrollbarLeft?"Left":
"Right");i[e]=d?b+"px":"0px";u&&(m[0].style.width=x(c),t[0].style.width=x(c),t[0].style[e]=d?b+"px":"0px");F.children("colgroup").insertBefore(F.children("thead"));l.scroll();if((a.bSorted||a.bFiltered)&&!a._drawHold)j.scrollTop=0}}function J(a,b,c){for(var d=0,e=0,f=b.length,g,j;e<f;){g=b[e].firstChild;for(j=c?c[e].firstChild:null;g;)1===g.nodeType&&(c?a(g,j,d):a(g,d),d++),g=g.nextSibling,j=c?j.nextSibling:null;e++}}function Fa(a){var b=a.nTable,c=a.aoColumns,d=a.oScroll,e=d.sY,f=d.sX,g=d.sXInner,
j=c.length,i=la(a,"bVisible"),n=h("th",a.nTHead),l=b.getAttribute("width"),k=b.parentNode,t=!1,m,o,p=a.oBrowser,d=p.bScrollOversize;(m=b.style.width)&&-1!==m.indexOf("%")&&(l=m);for(m=0;m<i.length;m++)o=c[i[m]],null!==o.sWidth&&(o.sWidth=Fb(o.sWidthOrig,k),t=!0);if(d||!t&&!f&&!e&&j==aa(a)&&j==n.length)for(m=0;m<j;m++)i=Z(a,m),null!==i&&(c[i].sWidth=x(n.eq(m).width()));else{j=h(b).clone().css("visibility","hidden").removeAttr("id");j.find("tbody tr").remove();var r=h("<tr/>").appendTo(j.find("tbody"));
j.find("thead, tfoot").remove();j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());j.find("tfoot th, tfoot td").css("width","");n=qa(a,j.find("thead")[0]);for(m=0;m<i.length;m++)o=c[i[m]],n[m].style.width=null!==o.sWidthOrig&&""!==o.sWidthOrig?x(o.sWidthOrig):"",o.sWidthOrig&&f&&h(n[m]).append(h("<div/>").css({width:o.sWidthOrig,margin:0,padding:0,border:0,height:1}));if(a.aoData.length)for(m=0;m<i.length;m++)t=i[m],o=c[t],h(Gb(a,t)).clone(!1).append(o.sContentPadding).appendTo(r);h("[name]",
j).removeAttr("name");o=h("<div/>").css(f||e?{position:"absolute",top:0,left:0,height:1,right:0,overflow:"hidden"}:{}).append(j).appendTo(k);f&&g?j.width(g):f?(j.css("width","auto"),j.removeAttr("width"),j.width()<k.clientWidth&&l&&j.width(k.clientWidth)):e?j.width(k.clientWidth):l&&j.width(l);for(m=e=0;m<i.length;m++)k=h(n[m]),g=k.outerWidth()-k.width(),k=p.bBounding?Math.ceil(n[m].getBoundingClientRect().width):k.outerWidth(),e+=k,c[i[m]].sWidth=x(k-g);b.style.width=x(e);o.remove()}l&&(b.style.width=
x(l));if((l||f)&&!a._reszEvt)b=function(){h(D).bind("resize.DT-"+a.sInstance,Oa(function(){Y(a)}))},d?setTimeout(b,1E3):b(),a._reszEvt=!0}function Fb(a,b){if(!a)return 0;var c=h("<div/>").css("width",x(a)).appendTo(b||I.body),d=c[0].offsetWidth;c.remove();return d}function Gb(a,b){var c=Hb(a,b);if(0>c)return null;var d=a.aoData[c];return!d.nTr?h("<td/>").html(B(a,c,b,"display"))[0]:d.anCells[b]}function Hb(a,b){for(var c,d=-1,e=-1,f=0,g=a.aoData.length;f<g;f++)c=B(a,f,b,"display")+"",c=c.replace($b,
""),c=c.replace(/&nbsp;/g," "),c.length>d&&(d=c.length,e=f);return e}function x(a){return null===a?"0px":"number"==typeof a?0>a?"0px":a+"px":a.match(/\d$/)?a+"px":a}function V(a){var b,c,d=[],e=a.aoColumns,f,g,j,i;b=a.aaSortingFixed;c=h.isPlainObject(b);var n=[];f=function(a){a.length&&!h.isArray(a[0])?n.push(a):h.merge(n,a)};h.isArray(b)&&f(b);c&&b.pre&&f(b.pre);f(a.aaSorting);c&&b.post&&f(b.post);for(a=0;a<n.length;a++){i=n[a][0];f=e[i].aDataSort;b=0;for(c=f.length;b<c;b++)g=f[b],j=e[g].sType||
"string",n[a]._idx===k&&(n[a]._idx=h.inArray(n[a][1],e[g].asSorting)),d.push({src:i,col:g,dir:n[a][1],index:n[a]._idx,type:j,formatter:m.ext.type.order[j+"-pre"]})}return d}function mb(a){var b,c,d=[],e=m.ext.type.order,f=a.aoData,g=0,j,i=a.aiDisplayMaster,h;Ga(a);h=V(a);b=0;for(c=h.length;b<c;b++)j=h[b],j.formatter&&g++,Ib(a,j.col);if("ssp"!=y(a)&&0!==h.length){b=0;for(c=i.length;b<c;b++)d[i[b]]=b;g===h.length?i.sort(function(a,b){var c,e,g,j,i=h.length,k=f[a]._aSortData,m=f[b]._aSortData;for(g=
0;g<i;g++)if(j=h[g],c=k[j.col],e=m[j.col],c=c<e?-1:c>e?1:0,0!==c)return"asc"===j.dir?c:-c;c=d[a];e=d[b];return c<e?-1:c>e?1:0}):i.sort(function(a,b){var c,g,j,i,k=h.length,m=f[a]._aSortData,p=f[b]._aSortData;for(j=0;j<k;j++)if(i=h[j],c=m[i.col],g=p[i.col],i=e[i.type+"-"+i.dir]||e["string-"+i.dir],c=i(c,g),0!==c)return c;c=d[a];g=d[b];return c<g?-1:c>g?1:0})}a.bSorted=!0}function Jb(a){for(var b,c,d=a.aoColumns,e=V(a),a=a.oLanguage.oAria,f=0,g=d.length;f<g;f++){c=d[f];var j=c.asSorting;b=c.sTitle.replace(/<.*?>/g,
"");var i=c.nTh;i.removeAttribute("aria-sort");c.bSortable&&(0<e.length&&e[0].col==f?(i.setAttribute("aria-sort","asc"==e[0].dir?"ascending":"descending"),c=j[e[0].index+1]||j[0]):c=j[0],b+="asc"===c?a.sSortAscending:a.sSortDescending);i.setAttribute("aria-label",b)}}function Va(a,b,c,d){var e=a.aaSorting,f=a.aoColumns[b].asSorting,g=function(a,b){var c=a._idx;c===k&&(c=h.inArray(a[1],f));return c+1<f.length?c+1:b?null:0};"number"===typeof e[0]&&(e=a.aaSorting=[e]);c&&a.oFeatures.bSortMulti?(c=h.inArray(b,
G(e,"0")),-1!==c?(b=g(e[c],!0),null===b&&1===e.length&&(b=0),null===b?e.splice(c,1):(e[c][1]=f[b],e[c]._idx=b)):(e.push([b,f[0],0]),e[e.length-1]._idx=0)):e.length&&e[0][0]==b?(b=g(e[0]),e.length=1,e[0][1]=f[b],e[0]._idx=b):(e.length=0,e.push([b,f[0]]),e[0]._idx=0);T(a);"function"==typeof d&&d(a)}function Ma(a,b,c,d){var e=a.aoColumns[c];Wa(b,{},function(b){!1!==e.bSortable&&(a.oFeatures.bProcessing?(C(a,!0),setTimeout(function(){Va(a,c,b.shiftKey,d);"ssp"!==y(a)&&C(a,!1)},0)):Va(a,c,b.shiftKey,d))})}
function va(a){var b=a.aLastSort,c=a.oClasses.sSortColumn,d=V(a),e=a.oFeatures,f,g;if(e.bSort&&e.bSortClasses){e=0;for(f=b.length;e<f;e++)g=b[e].src,h(G(a.aoData,"anCells",g)).removeClass(c+(2>e?e+1:3));e=0;for(f=d.length;e<f;e++)g=d[e].src,h(G(a.aoData,"anCells",g)).addClass(c+(2>e?e+1:3))}a.aLastSort=d}function Ib(a,b){var c=a.aoColumns[b],d=m.ext.order[c.sSortDataType],e;d&&(e=d.call(a.oInstance,a,b,$(a,b)));for(var f,g=m.ext.type.order[c.sType+"-pre"],j=0,i=a.aoData.length;j<i;j++)if(c=a.aoData[j],
c._aSortData||(c._aSortData=[]),!c._aSortData[b]||d)f=d?e[j]:B(a,j,b,"sort"),c._aSortData[b]=g?g(f):f}function wa(a){if(a.oFeatures.bStateSave&&!a.bDestroying){var b={time:+new Date,start:a._iDisplayStart,length:a._iDisplayLength,order:h.extend(!0,[],a.aaSorting),search:Ab(a.oPreviousSearch),columns:h.map(a.aoColumns,function(b,d){return{visible:b.bVisible,search:Ab(a.aoPreSearchCols[d])}})};u(a,"aoStateSaveParams","stateSaveParams",[a,b]);a.oSavedState=b;a.fnStateSaveCallback.call(a.oInstance,a,
b)}}function Kb(a){var b,c,d=a.aoColumns;if(a.oFeatures.bStateSave){var e=a.fnStateLoadCallback.call(a.oInstance,a);if(e&&e.time&&(b=u(a,"aoStateLoadParams","stateLoadParams",[a,e]),-1===h.inArray(!1,b)&&(b=a.iStateDuration,!(0<b&&e.time<+new Date-1E3*b)&&d.length===e.columns.length))){a.oLoadedState=h.extend(!0,{},e);e.start!==k&&(a._iDisplayStart=e.start,a.iInitDisplayStart=e.start);e.length!==k&&(a._iDisplayLength=e.length);e.order!==k&&(a.aaSorting=[],h.each(e.order,function(b,c){a.aaSorting.push(c[0]>=
d.length?[0,c[1]]:c)}));e.search!==k&&h.extend(a.oPreviousSearch,Bb(e.search));b=0;for(c=e.columns.length;b<c;b++){var f=e.columns[b];f.visible!==k&&(d[b].bVisible=f.visible);f.search!==k&&h.extend(a.aoPreSearchCols[b],Bb(f.search))}u(a,"aoStateLoaded","stateLoaded",[a,e])}}}function xa(a){var b=m.settings,a=h.inArray(a,G(b,"nTable"));return-1!==a?b[a]:null}function L(a,b,c,d){c="DataTables warning: "+(a?"table id="+a.sTableId+" - ":"")+c;d&&(c+=". For more information about this error, please see http://datatables.net/tn/"+
d);if(b)D.console&&console.log&&console.log(c);else if(b=m.ext,b=b.sErrMode||b.errMode,a&&u(a,null,"error",[a,d,c]),"alert"==b)alert(c);else{if("throw"==b)throw Error(c);"function"==typeof b&&b(a,d,c)}}function E(a,b,c,d){h.isArray(c)?h.each(c,function(c,d){h.isArray(d)?E(a,b,d[0],d[1]):E(a,b,d)}):(d===k&&(d=c),b[c]!==k&&(a[d]=b[c]))}function Lb(a,b,c){var d,e;for(e in b)b.hasOwnProperty(e)&&(d=b[e],h.isPlainObject(d)?(h.isPlainObject(a[e])||(a[e]={}),h.extend(!0,a[e],d)):a[e]=c&&"data"!==e&&"aaData"!==
e&&h.isArray(d)?d.slice():d);return a}function Wa(a,b,c){h(a).bind("click.DT",b,function(b){a.blur();c(b)}).bind("keypress.DT",b,function(a){13===a.which&&(a.preventDefault(),c(a))}).bind("selectstart.DT",function(){return!1})}function z(a,b,c,d){c&&a[b].push({fn:c,sName:d})}function u(a,b,c,d){var e=[];b&&(e=h.map(a[b].slice().reverse(),function(b){return b.fn.apply(a.oInstance,d)}));null!==c&&(b=h.Event(c+".dt"),h(a.nTable).trigger(b,d),e.push(b.result));return e}function Sa(a){var b=a._iDisplayStart,
c=a.fnDisplayEnd(),d=a._iDisplayLength;b>=c&&(b=c-d);b-=b%d;if(-1===d||0>b)b=0;a._iDisplayStart=b}function Na(a,b){var c=a.renderer,d=m.ext.renderer[b];return h.isPlainObject(c)&&c[b]?d[c[b]]||d._:"string"===typeof c?d[c]||d._:d._}function y(a){return a.oFeatures.bServerSide?"ssp":a.ajax||a.sAjaxSource?"ajax":"dom"}function ya(a,b){var c=[],c=Mb.numbers_length,d=Math.floor(c/2);b<=c?c=W(0,b):a<=d?(c=W(0,c-2),c.push("ellipsis"),c.push(b-1)):(a>=b-1-d?c=W(b-(c-2),b):(c=W(a-d+2,a+d-1),c.push("ellipsis"),
c.push(b-1)),c.splice(0,0,"ellipsis"),c.splice(0,0,0));c.DT_el="span";return c}function db(a){h.each({num:function(b){return za(b,a)},"num-fmt":function(b){return za(b,a,Xa)},"html-num":function(b){return za(b,a,Aa)},"html-num-fmt":function(b){return za(b,a,Aa,Xa)}},function(b,c){v.type.order[b+a+"-pre"]=c;b.match(/^html\-/)&&(v.type.search[b+a]=v.type.search.html)})}function Nb(a){return function(){var b=[xa(this[m.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return m.ext.internal[a].apply(this,
b)}}var m=function(a){this.$=function(a,b){return this.api(!0).$(a,b)};this._=function(a,b){return this.api(!0).rows(a,b).data()};this.api=function(a){return a?new r(xa(this[v.iApiIndex])):new r(this)};this.fnAddData=function(a,b){var c=this.api(!0),d=h.isArray(a)&&(h.isArray(a[0])||h.isPlainObject(a[0]))?c.rows.add(a):c.row.add(a);(b===k||b)&&c.draw();return d.flatten().toArray()};this.fnAdjustColumnSizing=function(a){var b=this.api(!0).columns.adjust(),c=b.settings()[0],d=c.oScroll;a===k||a?b.draw(!1):
(""!==d.sX||""!==d.sY)&&ka(c)};this.fnClearTable=function(a){var b=this.api(!0).clear();(a===k||a)&&b.draw()};this.fnClose=function(a){this.api(!0).row(a).child.hide()};this.fnDeleteRow=function(a,b,c){var d=this.api(!0),a=d.rows(a),e=a.settings()[0],h=e.aoData[a[0][0]];a.remove();b&&b.call(this,e,h);(c===k||c)&&d.draw();return h};this.fnDestroy=function(a){this.api(!0).destroy(a)};this.fnDraw=function(a){this.api(!0).draw(a)};this.fnFilter=function(a,b,c,d,e,h){e=this.api(!0);null===b||b===k?e.search(a,
c,d,h):e.column(b).search(a,c,d,h);e.draw()};this.fnGetData=function(a,b){var c=this.api(!0);if(a!==k){var d=a.nodeName?a.nodeName.toLowerCase():"";return b!==k||"td"==d||"th"==d?c.cell(a,b).data():c.row(a).data()||null}return c.data().toArray()};this.fnGetNodes=function(a){var b=this.api(!0);return a!==k?b.row(a).node():b.rows().nodes().flatten().toArray()};this.fnGetPosition=function(a){var b=this.api(!0),c=a.nodeName.toUpperCase();return"TR"==c?b.row(a).index():"TD"==c||"TH"==c?(a=b.cell(a).index(),
[a.row,a.columnVisible,a.column]):null};this.fnIsOpen=function(a){return this.api(!0).row(a).child.isShown()};this.fnOpen=function(a,b,c){return this.api(!0).row(a).child(b,c).show().child()[0]};this.fnPageChange=function(a,b){var c=this.api(!0).page(a);(b===k||b)&&c.draw(!1)};this.fnSetColumnVis=function(a,b,c){a=this.api(!0).column(a).visible(b);(c===k||c)&&a.columns.adjust().draw()};this.fnSettings=function(){return xa(this[v.iApiIndex])};this.fnSort=function(a){this.api(!0).order(a).draw()};this.fnSortListener=
function(a,b,c){this.api(!0).order.listener(a,b,c)};this.fnUpdate=function(a,b,c,d,e){var h=this.api(!0);c===k||null===c?h.row(b).data(a):h.cell(b,c).data(a);(e===k||e)&&h.columns.adjust();(d===k||d)&&h.draw();return 0};this.fnVersionCheck=v.fnVersionCheck;var b=this,c=a===k,d=this.length;c&&(a={});this.oApi=this.internal=v.internal;for(var e in m.ext.internal)e&&(this[e]=Nb(e));this.each(function(){var e={},e=1<d?Lb(e,a,!0):a,g=0,j,i=this.getAttribute("id"),n=!1,l=m.defaults,q=h(this);if("table"!=
this.nodeName.toLowerCase())L(null,0,"Non-table node initialisation ("+this.nodeName+")",2);else{eb(l);fb(l.column);K(l,l,!0);K(l.column,l.column,!0);K(l,h.extend(e,q.data()));var t=m.settings,g=0;for(j=t.length;g<j;g++){var p=t[g];if(p.nTable==this||p.nTHead.parentNode==this||p.nTFoot&&p.nTFoot.parentNode==this){g=e.bRetrieve!==k?e.bRetrieve:l.bRetrieve;if(c||g)return p.oInstance;if(e.bDestroy!==k?e.bDestroy:l.bDestroy){p.oInstance.fnDestroy();break}else{L(p,0,"Cannot reinitialise DataTable",3);
return}}if(p.sTableId==this.id){t.splice(g,1);break}}if(null===i||""===i)this.id=i="DataTables_Table_"+m.ext._unique++;var o=h.extend(!0,{},m.models.oSettings,{sDestroyWidth:q[0].style.width,sInstance:i,sTableId:i});o.nTable=this;o.oApi=b.internal;o.oInit=e;t.push(o);o.oInstance=1===b.length?b:q.dataTable();eb(e);e.oLanguage&&Da(e.oLanguage);e.aLengthMenu&&!e.iDisplayLength&&(e.iDisplayLength=h.isArray(e.aLengthMenu[0])?e.aLengthMenu[0][0]:e.aLengthMenu[0]);e=Lb(h.extend(!0,{},l),e);E(o.oFeatures,
e,"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));E(o,e,["asStripeClasses","ajax","fnServerData","fnFormatNumber","sServerMethod","aaSorting","aaSortingFixed","aLengthMenu","sPaginationType","sAjaxSource","sAjaxDataProp","iStateDuration","sDom","bSortCellsTop","iTabIndex","fnStateLoadCallback","fnStateSaveCallback","renderer","searchDelay","rowId",["iCookieDuration","iStateDuration"],["oSearch","oPreviousSearch"],["aoSearchCols",
"aoPreSearchCols"],["iDisplayLength","_iDisplayLength"],["bJQueryUI","bJUI"]]);E(o.oScroll,e,[["sScrollX","sX"],["sScrollXInner","sXInner"],["sScrollY","sY"],["bScrollCollapse","bCollapse"]]);E(o.oLanguage,e,"fnInfoCallback");z(o,"aoDrawCallback",e.fnDrawCallback,"user");z(o,"aoServerParams",e.fnServerParams,"user");z(o,"aoStateSaveParams",e.fnStateSaveParams,"user");z(o,"aoStateLoadParams",e.fnStateLoadParams,"user");z(o,"aoStateLoaded",e.fnStateLoaded,"user");z(o,"aoRowCallback",e.fnRowCallback,
"user");z(o,"aoRowCreatedCallback",e.fnCreatedRow,"user");z(o,"aoHeaderCallback",e.fnHeaderCallback,"user");z(o,"aoFooterCallback",e.fnFooterCallback,"user");z(o,"aoInitComplete",e.fnInitComplete,"user");z(o,"aoPreDrawCallback",e.fnPreDrawCallback,"user");o.rowIdFn=Q(e.rowId);gb(o);i=o.oClasses;e.bJQueryUI?(h.extend(i,m.ext.oJUIClasses,e.oClasses),e.sDom===l.sDom&&"lfrtip"===l.sDom&&(o.sDom='<"H"lfr>t<"F"ip>'),o.renderer)?h.isPlainObject(o.renderer)&&!o.renderer.header&&(o.renderer.header="jqueryui"):
o.renderer="jqueryui":h.extend(i,m.ext.classes,e.oClasses);q.addClass(i.sTable);o.iInitDisplayStart===k&&(o.iInitDisplayStart=e.iDisplayStart,o._iDisplayStart=e.iDisplayStart);null!==e.iDeferLoading&&(o.bDeferLoading=!0,g=h.isArray(e.iDeferLoading),o._iRecordsDisplay=g?e.iDeferLoading[0]:e.iDeferLoading,o._iRecordsTotal=g?e.iDeferLoading[1]:e.iDeferLoading);var r=o.oLanguage;h.extend(!0,r,e.oLanguage);""!==r.sUrl&&(h.ajax({dataType:"json",url:r.sUrl,success:function(a){Da(a);K(l.oLanguage,a);h.extend(true,
r,a);ga(o)},error:function(){ga(o)}}),n=!0);null===e.asStripeClasses&&(o.asStripeClasses=[i.sStripeOdd,i.sStripeEven]);var g=o.asStripeClasses,v=q.children("tbody").find("tr").eq(0);-1!==h.inArray(!0,h.map(g,function(a){return v.hasClass(a)}))&&(h("tbody tr",this).removeClass(g.join(" ")),o.asDestroyStripes=g.slice());t=[];g=this.getElementsByTagName("thead");0!==g.length&&(da(o.aoHeader,g[0]),t=qa(o));if(null===e.aoColumns){p=[];g=0;for(j=t.length;g<j;g++)p.push(null)}else p=e.aoColumns;g=0;for(j=
p.length;g<j;g++)Ea(o,t?t[g]:null);ib(o,e.aoColumnDefs,p,function(a,b){ja(o,a,b)});if(v.length){var s=function(a,b){return a.getAttribute("data-"+b)!==null?b:null};h(v[0]).children("th, td").each(function(a,b){var c=o.aoColumns[a];if(c.mData===a){var d=s(b,"sort")||s(b,"order"),e=s(b,"filter")||s(b,"search");if(d!==null||e!==null){c.mData={_:a+".display",sort:d!==null?a+".@data-"+d:k,type:d!==null?a+".@data-"+d:k,filter:e!==null?a+".@data-"+e:k};ja(o,a)}}})}var w=o.oFeatures;e.bStateSave&&(w.bStateSave=
!0,Kb(o,e),z(o,"aoDrawCallback",wa,"state_save"));if(e.aaSorting===k){t=o.aaSorting;g=0;for(j=t.length;g<j;g++)t[g][1]=o.aoColumns[g].asSorting[0]}va(o);w.bSort&&z(o,"aoDrawCallback",function(){if(o.bSorted){var a=V(o),b={};h.each(a,function(a,c){b[c.src]=c.dir});u(o,null,"order",[o,a,b]);Jb(o)}});z(o,"aoDrawCallback",function(){(o.bSorted||y(o)==="ssp"||w.bDeferRender)&&va(o)},"sc");g=q.children("caption").each(function(){this._captionSide=q.css("caption-side")});j=q.children("thead");0===j.length&&
(j=h("<thead/>").appendTo(this));o.nTHead=j[0];j=q.children("tbody");0===j.length&&(j=h("<tbody/>").appendTo(this));o.nTBody=j[0];j=q.children("tfoot");if(0===j.length&&0<g.length&&(""!==o.oScroll.sX||""!==o.oScroll.sY))j=h("<tfoot/>").appendTo(this);0===j.length||0===j.children().length?q.addClass(i.sNoFooter):0<j.length&&(o.nTFoot=j[0],da(o.aoFooter,o.nTFoot));if(e.aaData)for(g=0;g<e.aaData.length;g++)N(o,e.aaData[g]);else(o.bDeferLoading||"dom"==y(o))&&ma(o,h(o.nTBody).children("tr"));o.aiDisplay=
o.aiDisplayMaster.slice();o.bInitialised=!0;!1===n&&ga(o)}});b=null;return this},v,r,p,s,Ya={},Ob=/[\r\n]/g,Aa=/<.*?>/g,ac=/^[\w\+\-]/,bc=/[\w\+\-]$/,cc=RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)","g"),Xa=/[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfk]/gi,M=function(a){return!a||!0===a||"-"===a?!0:!1},Pb=function(a){var b=parseInt(a,10);return!isNaN(b)&&isFinite(a)?b:null},Qb=function(a,b){Ya[b]||(Ya[b]=RegExp(Qa(b),"g"));return"string"===typeof a&&"."!==b?a.replace(/\./g,
"").replace(Ya[b],"."):a},Za=function(a,b,c){var d="string"===typeof a;if(M(a))return!0;b&&d&&(a=Qb(a,b));c&&d&&(a=a.replace(Xa,""));return!isNaN(parseFloat(a))&&isFinite(a)},Rb=function(a,b,c){return M(a)?!0:!(M(a)||"string"===typeof a)?null:Za(a.replace(Aa,""),b,c)?!0:null},G=function(a,b,c){var d=[],e=0,f=a.length;if(c!==k)for(;e<f;e++)a[e]&&a[e][b]&&d.push(a[e][b][c]);else for(;e<f;e++)a[e]&&d.push(a[e][b]);return d},ha=function(a,b,c,d){var e=[],f=0,g=b.length;if(d!==k)for(;f<g;f++)a[b[f]][c]&&
e.push(a[b[f]][c][d]);else for(;f<g;f++)e.push(a[b[f]][c]);return e},W=function(a,b){var c=[],d;b===k?(b=0,d=a):(d=b,b=a);for(var e=b;e<d;e++)c.push(e);return c},Sb=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},pa=function(a){var b=[],c,d,e=a.length,f,g=0;d=0;a:for(;d<e;d++){c=a[d];for(f=0;f<g;f++)if(b[f]===c)continue a;b.push(c);g++}return b};m.util={throttle:function(a,b){var c=b!==k?b:200,d,e;return function(){var b=this,g=+new Date,h=arguments;d&&g<d+c?(clearTimeout(e),
e=setTimeout(function(){d=k;a.apply(b,h)},c)):(d=g,a.apply(b,h))}},escapeRegex:function(a){return a.replace(cc,"\\$1")}};var A=function(a,b,c){a[b]!==k&&(a[c]=a[b])},ba=/\[.*?\]$/,U=/\(\)$/,Qa=m.util.escapeRegex,ua=h("<div>")[0],Zb=ua.textContent!==k,$b=/<.*?>/g,Oa=m.util.throttle,Tb=[],w=Array.prototype,dc=function(a){var b,c,d=m.settings,e=h.map(d,function(a){return a.nTable});if(a){if(a.nTable&&a.oApi)return[a];if(a.nodeName&&"table"===a.nodeName.toLowerCase())return b=h.inArray(a,e),-1!==b?[d[b]]:
null;if(a&&"function"===typeof a.settings)return a.settings().toArray();"string"===typeof a?c=h(a):a instanceof h&&(c=a)}else return[];if(c)return c.map(function(){b=h.inArray(this,e);return-1!==b?d[b]:null}).toArray()};r=function(a,b){if(!(this instanceof r))return new r(a,b);var c=[],d=function(a){(a=dc(a))&&(c=c.concat(a))};if(h.isArray(a))for(var e=0,f=a.length;e<f;e++)d(a[e]);else d(a);this.context=pa(c);b&&h.merge(this,b);this.selector={rows:null,cols:null,opts:null};r.extend(this,this,Tb)};
m.Api=r;h.extend(r.prototype,{any:function(){return 0!==this.count()},concat:w.concat,context:[],count:function(){return this.flatten().length},each:function(a){for(var b=0,c=this.length;b<c;b++)a.call(this,this[b],b,this);return this},eq:function(a){var b=this.context;return b.length>a?new r(b[a],this[a]):null},filter:function(a){var b=[];if(w.filter)b=w.filter.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)a.call(this,this[c],c,this)&&b.push(this[c]);return new r(this.context,b)},flatten:function(){var a=
[];return new r(this.context,a.concat.apply(a,this.toArray()))},join:w.join,indexOf:w.indexOf||function(a,b){for(var c=b||0,d=this.length;c<d;c++)if(this[c]===a)return c;return-1},iterator:function(a,b,c,d){var e=[],f,g,h,i,n,l=this.context,m,t,p=this.selector;"string"===typeof a&&(d=c,c=b,b=a,a=!1);g=0;for(h=l.length;g<h;g++){var o=new r(l[g]);if("table"===b)f=c.call(o,l[g],g),f!==k&&e.push(f);else if("columns"===b||"rows"===b)f=c.call(o,l[g],this[g],g),f!==k&&e.push(f);else if("column"===b||"column-rows"===
b||"row"===b||"cell"===b){t=this[g];"column-rows"===b&&(m=Ba(l[g],p.opts));i=0;for(n=t.length;i<n;i++)f=t[i],f="cell"===b?c.call(o,l[g],f.row,f.column,g,i):c.call(o,l[g],f,g,i,m),f!==k&&e.push(f)}}return e.length||d?(a=new r(l,a?e.concat.apply([],e):e),b=a.selector,b.rows=p.rows,b.cols=p.cols,b.opts=p.opts,a):this},lastIndexOf:w.lastIndexOf||function(a,b){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(a){var b=[];if(w.map)b=w.map.call(this,a,this);else for(var c=
0,d=this.length;c<d;c++)b.push(a.call(this,this[c],c));return new r(this.context,b)},pluck:function(a){return this.map(function(b){return b[a]})},pop:w.pop,push:w.push,reduce:w.reduce||function(a,b){return hb(this,a,b,0,this.length,1)},reduceRight:w.reduceRight||function(a,b){return hb(this,a,b,this.length-1,-1,-1)},reverse:w.reverse,selector:null,shift:w.shift,sort:w.sort,splice:w.splice,toArray:function(){return w.slice.call(this)},to$:function(){return h(this)},toJQuery:function(){return h(this)},
unique:function(){return new r(this.context,pa(this))},unshift:w.unshift});r.extend=function(a,b,c){if(c.length&&b&&(b instanceof r||b.__dt_wrapper)){var d,e,f,g=function(a,b,c){return function(){var d=b.apply(a,arguments);r.extend(d,d,c.methodExt);return d}};d=0;for(e=c.length;d<e;d++)f=c[d],b[f.name]="function"===typeof f.val?g(a,f.val,f):h.isPlainObject(f.val)?{}:f.val,b[f.name].__dt_wrapper=!0,r.extend(a,b[f.name],f.propExt)}};r.register=p=function(a,b){if(h.isArray(a))for(var c=0,d=a.length;c<
d;c++)r.register(a[c],b);else for(var e=a.split("."),f=Tb,g,j,c=0,d=e.length;c<d;c++){g=(j=-1!==e[c].indexOf("()"))?e[c].replace("()",""):e[c];var i;a:{i=0;for(var n=f.length;i<n;i++)if(f[i].name===g){i=f[i];break a}i=null}i||(i={name:g,val:{},methodExt:[],propExt:[]},f.push(i));c===d-1?i.val=b:f=j?i.methodExt:i.propExt}};r.registerPlural=s=function(a,b,c){r.register(a,c);r.register(b,function(){var a=c.apply(this,arguments);return a===this?this:a instanceof r?a.length?h.isArray(a[0])?new r(a.context,
a[0]):a[0]:k:a})};p("tables()",function(a){var b;if(a){b=r;var c=this.context;if("number"===typeof a)a=[c[a]];else var d=h.map(c,function(a){return a.nTable}),a=h(d).filter(a).map(function(){var a=h.inArray(this,d);return c[a]}).toArray();b=new b(a)}else b=this;return b});p("table()",function(a){var a=this.tables(a),b=a.context;return b.length?new r(b[0]):a});s("tables().nodes()","table().node()",function(){return this.iterator("table",function(a){return a.nTable},1)});s("tables().body()","table().body()",
function(){return this.iterator("table",function(a){return a.nTBody},1)});s("tables().header()","table().header()",function(){return this.iterator("table",function(a){return a.nTHead},1)});s("tables().footer()","table().footer()",function(){return this.iterator("table",function(a){return a.nTFoot},1)});s("tables().containers()","table().container()",function(){return this.iterator("table",function(a){return a.nTableWrapper},1)});p("draw()",function(a){return this.iterator("table",function(b){"page"===
a?O(b):("string"===typeof a&&(a="full-hold"===a?!1:!0),T(b,!1===a))})});p("page()",function(a){return a===k?this.page.info().page:this.iterator("table",function(b){Ta(b,a)})});p("page.info()",function(){if(0===this.context.length)return k;var a=this.context[0],b=a._iDisplayStart,c=a.oFeatures.bPaginate?a._iDisplayLength:-1,d=a.fnRecordsDisplay(),e=-1===c;return{page:e?0:Math.floor(b/c),pages:e?1:Math.ceil(d/c),start:b,end:a.fnDisplayEnd(),length:c,recordsTotal:a.fnRecordsTotal(),recordsDisplay:d,
serverSide:"ssp"===y(a)}});p("page.len()",function(a){return a===k?0!==this.context.length?this.context[0]._iDisplayLength:k:this.iterator("table",function(b){Ra(b,a)})});var Ub=function(a,b,c){if(c){var d=new r(a);d.one("draw",function(){c(d.ajax.json())})}if("ssp"==y(a))T(a,b);else{C(a,!0);var e=a.jqXHR;e&&4!==e.readyState&&e.abort();ra(a,[],function(c){na(a);for(var c=sa(a,c),d=0,e=c.length;d<e;d++)N(a,c[d]);T(a,b);C(a,!1)})}};p("ajax.json()",function(){var a=this.context;if(0<a.length)return a[0].json});
p("ajax.params()",function(){var a=this.context;if(0<a.length)return a[0].oAjaxData});p("ajax.reload()",function(a,b){return this.iterator("table",function(c){Ub(c,!1===b,a)})});p("ajax.url()",function(a){var b=this.context;if(a===k){if(0===b.length)return k;b=b[0];return b.ajax?h.isPlainObject(b.ajax)?b.ajax.url:b.ajax:b.sAjaxSource}return this.iterator("table",function(b){h.isPlainObject(b.ajax)?b.ajax.url=a:b.ajax=a})});p("ajax.url().load()",function(a,b){return this.iterator("table",function(c){Ub(c,
!1===b,a)})});var $a=function(a,b,c,d,e){var f=[],g,j,i,n,l,m;i=typeof b;if(!b||"string"===i||"function"===i||b.length===k)b=[b];i=0;for(n=b.length;i<n;i++){j=b[i]&&b[i].split?b[i].split(","):[b[i]];l=0;for(m=j.length;l<m;l++)(g=c("string"===typeof j[l]?h.trim(j[l]):j[l]))&&g.length&&(f=f.concat(g))}a=v.selector[a];if(a.length){i=0;for(n=a.length;i<n;i++)f=a[i](d,e,f)}return pa(f)},ab=function(a){a||(a={});a.filter&&a.search===k&&(a.search=a.filter);return h.extend({search:"none",order:"current",
page:"all"},a)},bb=function(a){for(var b=0,c=a.length;b<c;b++)if(0<a[b].length)return a[0]=a[b],a[0].length=1,a.length=1,a.context=[a.context[b]],a;a.length=0;return a},Ba=function(a,b){var c,d,e,f=[],g=a.aiDisplay;c=a.aiDisplayMaster;var j=b.search;d=b.order;e=b.page;if("ssp"==y(a))return"removed"===j?[]:W(0,c.length);if("current"==e){c=a._iDisplayStart;for(d=a.fnDisplayEnd();c<d;c++)f.push(g[c])}else if("current"==d||"applied"==d)f="none"==j?c.slice():"applied"==j?g.slice():h.map(c,function(a){return-1===
h.inArray(a,g)?a:null});else if("index"==d||"original"==d){c=0;for(d=a.aoData.length;c<d;c++)"none"==j?f.push(c):(e=h.inArray(c,g),(-1===e&&"removed"==j||0<=e&&"applied"==j)&&f.push(c))}return f};p("rows()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=ab(b),c=this.iterator("table",function(c){var e=b;return $a("row",a,function(a){var b=Pb(a);if(b!==null&&!e)return[b];var j=Ba(c,e);if(b!==null&&h.inArray(b,j)!==-1)return[b];if(!a)return j;if(typeof a==="function")return h.map(j,function(b){var e=
c.aoData[b];return a(b,e._aData,e.nTr)?b:null});b=Sb(ha(c.aoData,j,"nTr"));if(a.nodeName){if(a._DT_RowIndex!==k)return[a._DT_RowIndex];if(a._DT_CellIndex)return[a._DT_CellIndex.row];b=h(a).closest("*[data-dt-row]");return b.length?[b.data("dt-row")]:[]}if(typeof a==="string"&&a.charAt(0)==="#"){j=c.aIds[a.replace(/^#/,"")];if(j!==k)return[j.idx]}return h(b).filter(a).map(function(){return this._DT_RowIndex}).toArray()},c,e)},1);c.selector.rows=a;c.selector.opts=b;return c});p("rows().nodes()",function(){return this.iterator("row",
function(a,b){return a.aoData[b].nTr||k},1)});p("rows().data()",function(){return this.iterator(!0,"rows",function(a,b){return ha(a.aoData,b,"_aData")},1)});s("rows().cache()","row().cache()",function(a){return this.iterator("row",function(b,c){var d=b.aoData[c];return"search"===a?d._aFilterData:d._aSortData},1)});s("rows().invalidate()","row().invalidate()",function(a){return this.iterator("row",function(b,c){ca(b,c,a)})});s("rows().indexes()","row().index()",function(){return this.iterator("row",
function(a,b){return b},1)});s("rows().ids()","row().id()",function(a){for(var b=[],c=this.context,d=0,e=c.length;d<e;d++)for(var f=0,g=this[d].length;f<g;f++){var h=c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);b.push((!0===a?"#":"")+h)}return new r(c,b)});s("rows().remove()","row().remove()",function(){var a=this;this.iterator("row",function(b,c,d){var e=b.aoData,f=e[c],g,h,i,n,l;e.splice(c,1);g=0;for(h=e.length;g<h;g++)if(i=e[g],l=i.anCells,null!==i.nTr&&(i.nTr._DT_RowIndex=g),null!==l){i=0;for(n=
l.length;i<n;i++)l[i]._DT_CellIndex.row=g}oa(b.aiDisplayMaster,c);oa(b.aiDisplay,c);oa(a[d],c,!1);Sa(b);c=b.rowIdFn(f._aData);c!==k&&delete b.aIds[c]});this.iterator("table",function(a){for(var c=0,d=a.aoData.length;c<d;c++)a.aoData[c].idx=c});return this});p("rows.add()",function(a){var b=this.iterator("table",function(b){var c,f,g,h=[];f=0;for(g=a.length;f<g;f++)c=a[f],c.nodeName&&"TR"===c.nodeName.toUpperCase()?h.push(ma(b,c)[0]):h.push(N(b,c));return h},1),c=this.rows(-1);c.pop();h.merge(c,b);
return c});p("row()",function(a,b){return bb(this.rows(a,b))});p("row().data()",function(a){var b=this.context;if(a===k)return b.length&&this.length?b[0].aoData[this[0]]._aData:k;b[0].aoData[this[0]]._aData=a;ca(b[0],this[0],"data");return this});p("row().node()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]].nTr||null:null});p("row.add()",function(a){a instanceof h&&a.length&&(a=a[0]);var b=this.iterator("table",function(b){return a.nodeName&&"TR"===a.nodeName.toUpperCase()?
ma(b,a)[0]:N(b,a)});return this.row(b[0])});var cb=function(a,b){var c=a.context;if(c.length&&(c=c[0].aoData[b!==k?b:a[0]])&&c._details)c._details.remove(),c._detailsShow=k,c._details=k},Vb=function(a,b){var c=a.context;if(c.length&&a.length){var d=c[0].aoData[a[0]];if(d._details){(d._detailsShow=b)?d._details.insertAfter(d.nTr):d._details.detach();var e=c[0],f=new r(e),g=e.aoData;f.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details");0<G(g,"_details").length&&(f.on("draw.dt.DT_details",
function(a,b){e===b&&f.rows({page:"current"}).eq(0).each(function(a){a=g[a];a._detailsShow&&a._details.insertAfter(a.nTr)})}),f.on("column-visibility.dt.DT_details",function(a,b){if(e===b)for(var c,d=aa(b),f=0,h=g.length;f<h;f++)c=g[f],c._details&&c._details.children("td[colspan]").attr("colspan",d)}),f.on("destroy.dt.DT_details",function(a,b){if(e===b)for(var c=0,d=g.length;c<d;c++)g[c]._details&&cb(f,c)}))}}};p("row().child()",function(a,b){var c=this.context;if(a===k)return c.length&&this.length?
c[0].aoData[this[0]]._details:k;if(!0===a)this.child.show();else if(!1===a)cb(this);else if(c.length&&this.length){var d=c[0],c=c[0].aoData[this[0]],e=[],f=function(a,b){if(h.isArray(a)||a instanceof h)for(var c=0,k=a.length;c<k;c++)f(a[c],b);else a.nodeName&&"tr"===a.nodeName.toLowerCase()?e.push(a):(c=h("<tr><td/></tr>").addClass(b),h("td",c).addClass(b).html(a)[0].colSpan=aa(d),e.push(c[0]))};f(a,b);c._details&&c._details.remove();c._details=h(e);c._detailsShow&&c._details.insertAfter(c.nTr)}return this});
p(["row().child.show()","row().child().show()"],function(){Vb(this,!0);return this});p(["row().child.hide()","row().child().hide()"],function(){Vb(this,!1);return this});p(["row().child.remove()","row().child().remove()"],function(){cb(this);return this});p("row().child.isShown()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]]._detailsShow||!1:!1});var ec=/^(.+):(name|visIdx|visible)$/,Wb=function(a,b,c,d,e){for(var c=[],d=0,f=e.length;d<f;d++)c.push(B(a,e[d],b));
return c};p("columns()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=ab(b),c=this.iterator("table",function(c){var e=a,f=b,g=c.aoColumns,j=G(g,"sName"),i=G(g,"nTh");return $a("column",e,function(a){var b=Pb(a);if(a==="")return W(g.length);if(b!==null)return[b>=0?b:g.length+b];if(typeof a==="function"){var e=Ba(c,f);return h.map(g,function(b,f){return a(f,Wb(c,f,0,0,e),i[f])?f:null})}var k=typeof a==="string"?a.match(ec):"";if(k)switch(k[2]){case "visIdx":case "visible":b=parseInt(k[1],
10);if(b<0){var m=h.map(g,function(a,b){return a.bVisible?b:null});return[m[m.length+b]]}return[Z(c,b)];case "name":return h.map(j,function(a,b){return a===k[1]?b:null});default:return[]}if(a.nodeName&&a._DT_CellIndex)return[a._DT_CellIndex.column];b=h(i).filter(a).map(function(){return h.inArray(this,i)}).toArray();if(b.length||!a.nodeName)return b;b=h(a).closest("*[data-dt-column]");return b.length?[b.data("dt-column")]:[]},c,f)},1);c.selector.cols=a;c.selector.opts=b;return c});s("columns().header()",
"column().header()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTh},1)});s("columns().footer()","column().footer()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTf},1)});s("columns().data()","column().data()",function(){return this.iterator("column-rows",Wb,1)});s("columns().dataSrc()","column().dataSrc()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].mData},1)});s("columns().cache()","column().cache()",
function(a){return this.iterator("column-rows",function(b,c,d,e,f){return ha(b.aoData,f,"search"===a?"_aFilterData":"_aSortData",c)},1)});s("columns().nodes()","column().nodes()",function(){return this.iterator("column-rows",function(a,b,c,d,e){return ha(a.aoData,e,"anCells",b)},1)});s("columns().visible()","column().visible()",function(a,b){var c=this.iterator("column",function(b,c){if(a===k)return b.aoColumns[c].bVisible;var f=b.aoColumns,g=f[c],j=b.aoData,i,n,l;if(a!==k&&g.bVisible!==a){if(a){var m=
h.inArray(!0,G(f,"bVisible"),c+1);i=0;for(n=j.length;i<n;i++)l=j[i].nTr,f=j[i].anCells,l&&l.insertBefore(f[c],f[m]||null)}else h(G(b.aoData,"anCells",c)).detach();g.bVisible=a;ea(b,b.aoHeader);ea(b,b.aoFooter);wa(b)}});a!==k&&(this.iterator("column",function(c,e){u(c,null,"column-visibility",[c,e,a,b])}),(b===k||b)&&this.columns.adjust());return c});s("columns().indexes()","column().index()",function(a){return this.iterator("column",function(b,c){return"visible"===a?$(b,c):c},1)});p("columns.adjust()",
function(){return this.iterator("table",function(a){Y(a)},1)});p("column.index()",function(a,b){if(0!==this.context.length){var c=this.context[0];if("fromVisible"===a||"toData"===a)return Z(c,b);if("fromData"===a||"toVisible"===a)return $(c,b)}});p("column()",function(a,b){return bb(this.columns(a,b))});p("cells()",function(a,b,c){h.isPlainObject(a)&&(a.row===k?(c=a,a=null):(c=b,b=null));h.isPlainObject(b)&&(c=b,b=null);if(null===b||b===k)return this.iterator("table",function(b){var d=a,e=ab(c),f=
b.aoData,g=Ba(b,e),j=Sb(ha(f,g,"anCells")),i=h([].concat.apply([],j)),l,n=b.aoColumns.length,m,p,r,u,v,s;return $a("cell",d,function(a){var c=typeof a==="function";if(a===null||a===k||c){m=[];p=0;for(r=g.length;p<r;p++){l=g[p];for(u=0;u<n;u++){v={row:l,column:u};if(c){s=f[l];a(v,B(b,l,u),s.anCells?s.anCells[u]:null)&&m.push(v)}else m.push(v)}}return m}if(h.isPlainObject(a))return[a];c=i.filter(a).map(function(a,b){return{row:b._DT_CellIndex.row,column:b._DT_CellIndex.column}}).toArray();if(c.length||
!a.nodeName)return c;s=h(a).closest("*[data-dt-row]");return s.length?[{row:s.data("dt-row"),column:s.data("dt-column")}]:[]},b,e)});var d=this.columns(b,c),e=this.rows(a,c),f,g,j,i,n,l=this.iterator("table",function(a,b){f=[];g=0;for(j=e[b].length;g<j;g++){i=0;for(n=d[b].length;i<n;i++)f.push({row:e[b][g],column:d[b][i]})}return f},1);h.extend(l.selector,{cols:b,rows:a,opts:c});return l});s("cells().nodes()","cell().node()",function(){return this.iterator("cell",function(a,b,c){return(a=a.aoData[b])&&
a.anCells?a.anCells[c]:k},1)});p("cells().data()",function(){return this.iterator("cell",function(a,b,c){return B(a,b,c)},1)});s("cells().cache()","cell().cache()",function(a){a="search"===a?"_aFilterData":"_aSortData";return this.iterator("cell",function(b,c,d){return b.aoData[c][a][d]},1)});s("cells().render()","cell().render()",function(a){return this.iterator("cell",function(b,c,d){return B(b,c,d,a)},1)});s("cells().indexes()","cell().index()",function(){return this.iterator("cell",function(a,
b,c){return{row:b,column:c,columnVisible:$(a,c)}},1)});s("cells().invalidate()","cell().invalidate()",function(a){return this.iterator("cell",function(b,c,d){ca(b,c,a,d)})});p("cell()",function(a,b,c){return bb(this.cells(a,b,c))});p("cell().data()",function(a){var b=this.context,c=this[0];if(a===k)return b.length&&c.length?B(b[0],c[0].row,c[0].column):k;jb(b[0],c[0].row,c[0].column,a);ca(b[0],c[0].row,"data",c[0].column);return this});p("order()",function(a,b){var c=this.context;if(a===k)return 0!==
c.length?c[0].aaSorting:k;"number"===typeof a?a=[[a,b]]:a.length&&!h.isArray(a[0])&&(a=Array.prototype.slice.call(arguments));return this.iterator("table",function(b){b.aaSorting=a.slice()})});p("order.listener()",function(a,b,c){return this.iterator("table",function(d){Ma(d,a,b,c)})});p("order.fixed()",function(a){if(!a){var b=this.context,b=b.length?b[0].aaSortingFixed:k;return h.isArray(b)?{pre:b}:b}return this.iterator("table",function(b){b.aaSortingFixed=h.extend(!0,{},a)})});p(["columns().order()",
"column().order()"],function(a){var b=this;return this.iterator("table",function(c,d){var e=[];h.each(b[d],function(b,c){e.push([c,a])});c.aaSorting=e})});p("search()",function(a,b,c,d){var e=this.context;return a===k?0!==e.length?e[0].oPreviousSearch.sSearch:k:this.iterator("table",function(e){e.oFeatures.bFilter&&fa(e,h.extend({},e.oPreviousSearch,{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),1)})});s("columns().search()","column().search()",function(a,
b,c,d){return this.iterator("column",function(e,f){var g=e.aoPreSearchCols;if(a===k)return g[f].sSearch;e.oFeatures.bFilter&&(h.extend(g[f],{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),fa(e,e.oPreviousSearch,1))})});p("state()",function(){return this.context.length?this.context[0].oSavedState:null});p("state.clear()",function(){return this.iterator("table",function(a){a.fnStateSaveCallback.call(a.oInstance,a,{})})});p("state.loaded()",function(){return this.context.length?
this.context[0].oLoadedState:null});p("state.save()",function(){return this.iterator("table",function(a){wa(a)})});m.versionCheck=m.fnVersionCheck=function(a){for(var b=m.version.split("."),a=a.split("."),c,d,e=0,f=a.length;e<f;e++)if(c=parseInt(b[e],10)||0,d=parseInt(a[e],10)||0,c!==d)return c>d;return!0};m.isDataTable=m.fnIsDataTable=function(a){var b=h(a).get(0),c=!1;h.each(m.settings,function(a,e){var f=e.nScrollHead?h("table",e.nScrollHead)[0]:null,g=e.nScrollFoot?h("table",e.nScrollFoot)[0]:
null;if(e.nTable===b||f===b||g===b)c=!0});return c};m.tables=m.fnTables=function(a){var b=!1;h.isPlainObject(a)&&(b=a.api,a=a.visible);var c=h.map(m.settings,function(b){if(!a||a&&h(b.nTable).is(":visible"))return b.nTable});return b?new r(c):c};m.camelToHungarian=K;p("$()",function(a,b){var c=this.rows(b).nodes(),c=h(c);return h([].concat(c.filter(a).toArray(),c.find(a).toArray()))});h.each(["on","one","off"],function(a,b){p(b+"()",function(){var a=Array.prototype.slice.call(arguments);a[0].match(/\.dt\b/)||
(a[0]+=".dt");var d=h(this.tables().nodes());d[b].apply(d,a);return this})});p("clear()",function(){return this.iterator("table",function(a){na(a)})});p("settings()",function(){return new r(this.context,this.context)});p("init()",function(){var a=this.context;return a.length?a[0].oInit:null});p("data()",function(){return this.iterator("table",function(a){return G(a.aoData,"_aData")}).flatten()});p("destroy()",function(a){a=a||!1;return this.iterator("table",function(b){var c=b.nTableWrapper.parentNode,
d=b.oClasses,e=b.nTable,f=b.nTBody,g=b.nTHead,j=b.nTFoot,i=h(e),f=h(f),k=h(b.nTableWrapper),l=h.map(b.aoData,function(a){return a.nTr}),p;b.bDestroying=!0;u(b,"aoDestroyCallback","destroy",[b]);a||(new r(b)).columns().visible(!0);k.unbind(".DT").find(":not(tbody *)").unbind(".DT");h(D).unbind(".DT-"+b.sInstance);e!=g.parentNode&&(i.children("thead").detach(),i.append(g));j&&e!=j.parentNode&&(i.children("tfoot").detach(),i.append(j));b.aaSorting=[];b.aaSortingFixed=[];va(b);h(l).removeClass(b.asStripeClasses.join(" "));
h("th, td",g).removeClass(d.sSortable+" "+d.sSortableAsc+" "+d.sSortableDesc+" "+d.sSortableNone);b.bJUI&&(h("th span."+d.sSortIcon+", td span."+d.sSortIcon,g).detach(),h("th, td",g).each(function(){var a=h("div."+d.sSortJUIWrapper,this);h(this).append(a.contents());a.detach()}));f.children().detach();f.append(l);g=a?"remove":"detach";i[g]();k[g]();!a&&c&&(c.insertBefore(e,b.nTableReinsertBefore),i.css("width",b.sDestroyWidth).removeClass(d.sTable),(p=b.asDestroyStripes.length)&&f.children().each(function(a){h(this).addClass(b.asDestroyStripes[a%
p])}));c=h.inArray(b,m.settings);-1!==c&&m.settings.splice(c,1)})});h.each(["column","row","cell"],function(a,b){p(b+"s().every()",function(a){var d=this.selector.opts,e=this;return this.iterator(b,function(f,g,h,i,n){a.call(e[b](g,"cell"===b?h:d,"cell"===b?d:k),g,h,i,n)})})});p("i18n()",function(a,b,c){var d=this.context[0],a=Q(a)(d.oLanguage);a===k&&(a=b);c!==k&&h.isPlainObject(a)&&(a=a[c]!==k?a[c]:a._);return a.replace("%d",c)});m.version="1.10.12";m.settings=[];m.models={};m.models.oSearch={bCaseInsensitive:!0,
sSearch:"",bRegex:!1,bSmart:!0};m.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:"",src:null,idx:-1};m.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:"std",sSortingClass:null,sSortingClassJUI:null,
sTitle:null,sType:null,sWidth:null,sWidthOrig:null};m.defaults={aaData:null,aaSorting:[[0,"asc"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bJQueryUI:!1,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,
fnFormatNumber:function(a){return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(a){try{return JSON.parse((-1===a.iStateDuration?sessionStorage:localStorage).getItem("DataTables_"+a.sInstance+"_"+location.pathname))}catch(b){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(a,b){try{(-1===
a.iStateDuration?sessionStorage:localStorage).setItem("DataTables_"+a.sInstance+"_"+location.pathname,JSON.stringify(b))}catch(c){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:": activate to sort column ascending",sSortDescending:": activate to sort column descending"},oPaginate:{sFirst:"First",sLast:"Last",sNext:"Next",sPrevious:"Previous"},sEmptyTable:"No data available in table",sInfo:"Showing _START_ to _END_ of _TOTAL_ entries",
sInfoEmpty:"Showing 0 to 0 of 0 entries",sInfoFiltered:"(filtered from _MAX_ total entries)",sInfoPostFix:"",sDecimal:"",sThousands:",",sLengthMenu:"Show _MENU_ entries",sLoadingRecords:"Loading...",sProcessing:"Processing...",sSearch:"Search:",sSearchPlaceholder:"",sUrl:"",sZeroRecords:"No matching records found"},oSearch:h.extend({},m.models.oSearch),sAjaxDataProp:"data",sAjaxSource:null,sDom:"lfrtip",searchDelay:null,sPaginationType:"simple_numbers",sScrollX:"",sScrollXInner:"",sScrollY:"",sServerMethod:"GET",
renderer:null,rowId:"DT_RowId"};X(m.defaults);m.defaults.column={aDataSort:null,iDataSort:-1,asSorting:["asc","desc"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:"td",sClass:"",sContentPadding:"",sDefaultContent:null,sName:"",sSortDataType:"std",sTitle:null,sType:null,sWidth:null};X(m.defaults.column);m.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,
bSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1,bBounding:!1,barWidth:0},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aIds:{},aoColumns:[],aoHeader:[],aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],
aoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:"",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:"two_button",iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:k,oAjaxData:k,
fnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,bJUI:null,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return"ssp"==y(this)?1*this._iRecordsTotal:this.aiDisplayMaster.length},fnRecordsDisplay:function(){return"ssp"==y(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var a=
this._iDisplayLength,b=this._iDisplayStart,c=b+a,d=this.aiDisplay.length,e=this.oFeatures,f=e.bPaginate;return e.bServerSide?!1===f||-1===a?b+d:Math.min(b+a,this._iRecordsDisplay):!f||c>d||-1===a?d:c},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{},rowIdFn:null,rowId:null};m.ext=v={buttons:{},classes:{},build:"dt/dt-1.10.12/b-1.2.2/b-colvis-1.2.2/e-1.5.6/r-2.1.0/se-1.2.0",errMode:"alert",feature:[],search:[],selector:{cell:[],column:[],row:[]},internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},
header:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:m.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:m.version};h.extend(v,{afnFiltering:v.search,aTypes:v.type.detect,ofnSearch:v.type.search,oSort:v.type.order,afnSortData:v.order,aoFeatures:v.feature,oApi:v.internal,oStdClasses:v.classes,oPagination:v.pager});h.extend(m.ext.classes,{sTable:"dataTable",sNoFooter:"no-footer",sPageButton:"paginate_button",sPageButtonActive:"current",sPageButtonDisabled:"disabled",sStripeOdd:"odd",
sStripeEven:"even",sRowEmpty:"dataTables_empty",sWrapper:"dataTables_wrapper",sFilter:"dataTables_filter",sInfo:"dataTables_info",sPaging:"dataTables_paginate paging_",sLength:"dataTables_length",sProcessing:"dataTables_processing",sSortAsc:"sorting_asc",sSortDesc:"sorting_desc",sSortable:"sorting",sSortableAsc:"sorting_asc_disabled",sSortableDesc:"sorting_desc_disabled",sSortableNone:"sorting_disabled",sSortColumn:"sorting_",sFilterInput:"",sLengthSelect:"",sScrollWrapper:"dataTables_scroll",sScrollHead:"dataTables_scrollHead",
sScrollHeadInner:"dataTables_scrollHeadInner",sScrollBody:"dataTables_scrollBody",sScrollFoot:"dataTables_scrollFoot",sScrollFootInner:"dataTables_scrollFootInner",sHeaderTH:"",sFooterTH:"",sSortJUIAsc:"",sSortJUIDesc:"",sSortJUI:"",sSortJUIAscAllowed:"",sSortJUIDescAllowed:"",sSortJUIWrapper:"",sSortIcon:"",sJUIHeader:"",sJUIFooter:""});var Ca="",Ca="",H=Ca+"ui-state-default",ia=Ca+"css_right ui-icon ui-icon-",Xb=Ca+"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix";h.extend(m.ext.oJUIClasses,
m.ext.classes,{sPageButton:"fg-button ui-button "+H,sPageButtonActive:"ui-state-disabled",sPageButtonDisabled:"ui-state-disabled",sPaging:"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",sSortAsc:H+" sorting_asc",sSortDesc:H+" sorting_desc",sSortable:H+" sorting",sSortableAsc:H+" sorting_asc_disabled",sSortableDesc:H+" sorting_desc_disabled",sSortableNone:H+" sorting_disabled",sSortJUIAsc:ia+"triangle-1-n",sSortJUIDesc:ia+"triangle-1-s",sSortJUI:ia+"carat-2-n-s",
sSortJUIAscAllowed:ia+"carat-1-n",sSortJUIDescAllowed:ia+"carat-1-s",sSortJUIWrapper:"DataTables_sort_wrapper",sSortIcon:"DataTables_sort_icon",sScrollHead:"dataTables_scrollHead "+H,sScrollFoot:"dataTables_scrollFoot "+H,sHeaderTH:H,sFooterTH:H,sJUIHeader:Xb+" ui-corner-tl ui-corner-tr",sJUIFooter:Xb+" ui-corner-bl ui-corner-br"});var Mb=m.ext.pager;h.extend(Mb,{simple:function(){return["previous","next"]},full:function(){return["first","previous","next","last"]},numbers:function(a,b){return[ya(a,
b)]},simple_numbers:function(a,b){return["previous",ya(a,b),"next"]},full_numbers:function(a,b){return["first","previous",ya(a,b),"next","last"]},_numbers:ya,numbers_length:7});h.extend(!0,m.ext.renderer,{pageButton:{_:function(a,b,c,d,e,f){var g=a.oClasses,j=a.oLanguage.oPaginate,i=a.oLanguage.oAria.paginate||{},k,l,m=0,p=function(b,d){var o,r,u,s,v=function(b){Ta(a,b.data.action,true)};o=0;for(r=d.length;o<r;o++){s=d[o];if(h.isArray(s)){u=h("<"+(s.DT_el||"div")+"/>").appendTo(b);p(u,s)}else{k=null;
l="";switch(s){case "ellipsis":b.append('<span class="ellipsis">&#x2026;</span>');break;case "first":k=j.sFirst;l=s+(e>0?"":" "+g.sPageButtonDisabled);break;case "previous":k=j.sPrevious;l=s+(e>0?"":" "+g.sPageButtonDisabled);break;case "next":k=j.sNext;l=s+(e<f-1?"":" "+g.sPageButtonDisabled);break;case "last":k=j.sLast;l=s+(e<f-1?"":" "+g.sPageButtonDisabled);break;default:k=s+1;l=e===s?g.sPageButtonActive:""}if(k!==null){u=h("<a>",{"class":g.sPageButton+" "+l,"aria-controls":a.sTableId,"aria-label":i[s],
"data-dt-idx":m,tabindex:a.iTabIndex,id:c===0&&typeof s==="string"?a.sTableId+"_"+s:null}).html(k).appendTo(b);Wa(u,{action:s},v);m++}}}},r;try{r=h(b).find(I.activeElement).data("dt-idx")}catch(o){}p(h(b).empty(),d);r&&h(b).find("[data-dt-idx="+r+"]").focus()}}});h.extend(m.ext.type.detect,[function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c)?"num"+c:null},function(a){if(a&&!(a instanceof Date)&&(!ac.test(a)||!bc.test(a)))return null;var b=Date.parse(a);return null!==b&&!isNaN(b)||M(a)?"date":
null},function(a,b){var c=b.oLanguage.sDecimal;return Za(a,c,!0)?"num-fmt"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c)?"html-num"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Rb(a,c,!0)?"html-num-fmt"+c:null},function(a){return M(a)||"string"===typeof a&&-1!==a.indexOf("<")?"html":null}]);h.extend(m.ext.type.search,{html:function(a){return M(a)?a:"string"===typeof a?a.replace(Ob," ").replace(Aa,""):""},string:function(a){return M(a)?a:"string"===typeof a?a.replace(Ob,
" "):a}});var za=function(a,b,c,d){if(0!==a&&(!a||"-"===a))return-Infinity;b&&(a=Qb(a,b));a.replace&&(c&&(a=a.replace(c,"")),d&&(a=a.replace(d,"")));return 1*a};h.extend(v.type.order,{"date-pre":function(a){return Date.parse(a)||0},"html-pre":function(a){return M(a)?"":a.replace?a.replace(/<.*?>/g,"").toLowerCase():a+""},"string-pre":function(a){return M(a)?"":"string"===typeof a?a.toLowerCase():!a.toString?"":a.toString()},"string-asc":function(a,b){return a<b?-1:a>b?1:0},"string-desc":function(a,
b){return a<b?1:a>b?-1:0}});db("");h.extend(!0,m.ext.renderer,{header:{_:function(a,b,c,d){h(a.nTable).on("order.dt.DT",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(c.sSortingClass+" "+d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass)}})},jqueryui:function(a,b,c,d){h("<div/>").addClass(d.sSortJUIWrapper).append(b.contents()).append(h("<span/>").addClass(d.sSortIcon+" "+c.sSortingClassJUI)).appendTo(b);h(a.nTable).on("order.dt.DT",function(e,
f,g,h){if(a===f){e=c.idx;b.removeClass(d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass);b.find("span."+d.sSortIcon).removeClass(d.sSortJUIAsc+" "+d.sSortJUIDesc+" "+d.sSortJUI+" "+d.sSortJUIAscAllowed+" "+d.sSortJUIDescAllowed).addClass(h[e]=="asc"?d.sSortJUIAsc:h[e]=="desc"?d.sSortJUIDesc:c.sSortingClassJUI)}})}}});var Yb=function(a){return"string"===typeof a?a.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"):a};m.render={number:function(a,
b,c,d,e){return{display:function(f){if("number"!==typeof f&&"string"!==typeof f)return f;var g=0>f?"-":"",h=parseFloat(f);if(isNaN(h))return Yb(f);f=Math.abs(h);h=parseInt(f,10);f=c?b+(f-h).toFixed(c).substring(2):"";return g+(d||"")+h.toString().replace(/\B(?=(\d{3})+(?!\d))/g,a)+f+(e||"")}}},text:function(){return{display:Yb}}};h.extend(m.ext.internal,{_fnExternApiFunc:Nb,_fnBuildAjax:ra,_fnAjaxUpdate:lb,_fnAjaxParameters:ub,_fnAjaxUpdateDraw:vb,_fnAjaxDataSrc:sa,_fnAddColumn:Ea,_fnColumnOptions:ja,
_fnAdjustColumnSizing:Y,_fnVisibleToColumnIndex:Z,_fnColumnIndexToVisible:$,_fnVisbleColumns:aa,_fnGetColumns:la,_fnColumnTypes:Ga,_fnApplyColumnDefs:ib,_fnHungarianMap:X,_fnCamelToHungarian:K,_fnLanguageCompat:Da,_fnBrowserDetect:gb,_fnAddData:N,_fnAddTr:ma,_fnNodeToDataIndex:function(a,b){return b._DT_RowIndex!==k?b._DT_RowIndex:null},_fnNodeToColumnIndex:function(a,b,c){return h.inArray(c,a.aoData[b].anCells)},_fnGetCellData:B,_fnSetCellData:jb,_fnSplitObjNotation:Ja,_fnGetObjectDataFn:Q,_fnSetObjectDataFn:R,
_fnGetDataMaster:Ka,_fnClearTable:na,_fnDeleteIndex:oa,_fnInvalidate:ca,_fnGetRowElements:Ia,_fnCreateTr:Ha,_fnBuildHead:kb,_fnDrawHead:ea,_fnDraw:O,_fnReDraw:T,_fnAddOptionsHtml:nb,_fnDetectHeader:da,_fnGetUniqueThs:qa,_fnFeatureHtmlFilter:pb,_fnFilterComplete:fa,_fnFilterCustom:yb,_fnFilterColumn:xb,_fnFilter:wb,_fnFilterCreateSearch:Pa,_fnEscapeRegex:Qa,_fnFilterData:zb,_fnFeatureHtmlInfo:sb,_fnUpdateInfo:Cb,_fnInfoMacros:Db,_fnInitialise:ga,_fnInitComplete:ta,_fnLengthChange:Ra,_fnFeatureHtmlLength:ob,
_fnFeatureHtmlPaginate:tb,_fnPageChange:Ta,_fnFeatureHtmlProcessing:qb,_fnProcessingDisplay:C,_fnFeatureHtmlTable:rb,_fnScrollDraw:ka,_fnApplyToChildren:J,_fnCalculateColumnWidths:Fa,_fnThrottle:Oa,_fnConvertToWidth:Fb,_fnGetWidestNode:Gb,_fnGetMaxLenString:Hb,_fnStringToCss:x,_fnSortFlatten:V,_fnSort:mb,_fnSortAria:Jb,_fnSortListener:Va,_fnSortAttachListener:Ma,_fnSortingClasses:va,_fnSortData:Ib,_fnSaveState:wa,_fnLoadState:Kb,_fnSettingsFromNode:xa,_fnLog:L,_fnMap:E,_fnBindAction:Wa,_fnCallbackReg:z,
_fnCallbackFire:u,_fnLengthOverflow:Sa,_fnRenderer:Na,_fnDataSource:y,_fnRowAttributes:La,_fnCalculateEnd:function(){}});h.fn.dataTable=m;m.$=h;h.fn.dataTableSettings=m.settings;h.fn.dataTableExt=m.ext;h.fn.DataTable=function(a){return h(this).dataTable(a).api()};h.each(m,function(a,b){h.fn.DataTable[a]=b});return h.fn.dataTable});


/*!
 Buttons for DataTables 1.2.2
 ©2016 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(n){return d(n,window,document)}):"object"===typeof exports?module.exports=function(n,o){n||(n=window);if(!o||!o.fn.dataTable)o=require("datatables.net")(n,o).$;return d(o,n,n.document)}:d(jQuery,window,document)})(function(d,n,o,m){var i=d.fn.dataTable,u=0,v=0,j=i.ext.buttons,l=function(a,b){!0===b&&(b={});d.isArray(b)&&(b={buttons:b});this.c=d.extend(!0,{},l.defaults,b);b.buttons&&(this.c.buttons=b.buttons);
this.s={dt:new i.Api(a),buttons:[],listenKeys:"",namespace:"dtb"+u++};this.dom={container:d("<"+this.c.dom.container.tag+"/>").addClass(this.c.dom.container.className)};this._constructor()};d.extend(l.prototype,{action:function(a,b){var c=this._nodeToButton(a);if(b===m)return c.conf.action;c.conf.action=b;return this},active:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.button.active,c=d(c.node);if(b===m)return c.hasClass(e);c.toggleClass(e,b===m?!0:b);return this},add:function(a,b){var c=
this.s.buttons;if("string"===typeof b){for(var e=b.split("-"),c=this.s,d=0,h=e.length-1;d<h;d++)c=c.buttons[1*e[d]];c=c.buttons;b=1*e[e.length-1]}this._expandButton(c,a,!1,b);this._draw();return this},container:function(){return this.dom.container},disable:function(a){a=this._nodeToButton(a);d(a.node).addClass(this.c.dom.button.disabled);return this},destroy:function(){d("body").off("keyup."+this.s.namespace);var a=this.s.buttons.slice(),b,c;b=0;for(c=a.length;b<c;b++)this.remove(a[b].node);this.dom.container.remove();
a=this.s.dt.settings()[0];b=0;for(c=a.length;b<c;b++)if(a.inst===this){a.splice(b,1);break}return this},enable:function(a,b){if(!1===b)return this.disable(a);var c=this._nodeToButton(a);d(c.node).removeClass(this.c.dom.button.disabled);return this},name:function(){return this.c.name},node:function(a){a=this._nodeToButton(a);return d(a.node)},remove:function(a){var b=this._nodeToButton(a),c=this._nodeToHost(a),e=this.s.dt;if(b.buttons.length)for(var g=b.buttons.length-1;0<=g;g--)this.remove(b.buttons[g].node);
b.conf.destroy&&b.conf.destroy.call(e.button(a),e,d(a),b.conf);this._removeKey(b.conf);d(b.node).remove();a=d.inArray(b,c);c.splice(a,1);return this},text:function(a,b){var c=this._nodeToButton(a),e=this.c.dom.collection.buttonLiner,e=c.inCollection&&e&&e.tag?e.tag:this.c.dom.buttonLiner.tag,g=this.s.dt,h=d(c.node),f=function(a){return"function"===typeof a?a(g,h,c.conf):a};if(b===m)return f(c.conf.text);c.conf.text=b;e?h.children(e).html(f(b)):h.html(f(b));return this},_constructor:function(){var a=
this,b=this.s.dt,c=b.settings()[0],e=this.c.buttons;c._buttons||(c._buttons=[]);c._buttons.push({inst:this,name:this.c.name});for(var c=0,g=e.length;c<g;c++)this.add(e[c]);b.on("destroy",function(){a.destroy()});d("body").on("keyup."+this.s.namespace,function(b){if(!o.activeElement||o.activeElement===o.body){var c=String.fromCharCode(b.keyCode).toLowerCase();a.s.listenKeys.toLowerCase().indexOf(c)!==-1&&a._keypress(c,b)}})},_addKey:function(a){a.key&&(this.s.listenKeys+=d.isPlainObject(a.key)?a.key.key:
a.key)},_draw:function(a,b){a||(a=this.dom.container,b=this.s.buttons);a.children().detach();for(var c=0,e=b.length;c<e;c++)a.append(b[c].inserter),b[c].buttons&&b[c].buttons.length&&this._draw(b[c].collection,b[c].buttons)},_expandButton:function(a,b,c,e){for(var g=this.s.dt,h=0,b=!d.isArray(b)?[b]:b,f=0,r=b.length;f<r;f++){var k=this._resolveExtends(b[f]);if(k)if(d.isArray(k))this._expandButton(a,k,c,e);else{var p=this._buildButton(k,c);if(p){e!==m?(a.splice(e,0,p),e++):a.push(p);if(p.conf.buttons){var s=
this.c.dom.collection;p.collection=d("<"+s.tag+"/>").addClass(s.className);p.conf._collection=p.collection;this._expandButton(p.buttons,p.conf.buttons,!0,e)}k.init&&k.init.call(g.button(p.node),g,d(p.node),k);h++}}}},_buildButton:function(a,b){var c=this.c.dom.button,e=this.c.dom.buttonLiner,g=this.c.dom.collection,h=this.s.dt,f=function(b){return"function"===typeof b?b(h,k,a):b};b&&g.button&&(c=g.button);b&&g.buttonLiner&&(e=g.buttonLiner);if(a.available&&!a.available(h,a))return!1;var r=function(a,
b,c,e){e.action.call(b.button(c),a,b,c,e);d(b.table().node()).triggerHandler("buttons-action.dt",[b.button(c),b,c,e])},k=d("<"+c.tag+"/>").addClass(c.className).attr("tabindex",this.s.dt.settings()[0].iTabIndex).attr("aria-controls",this.s.dt.table().node().id).on("click.dtb",function(b){b.preventDefault();!k.hasClass(c.disabled)&&a.action&&r(b,h,k,a);k.blur()}).on("keyup.dtb",function(b){b.keyCode===13&&!k.hasClass(c.disabled)&&a.action&&r(b,h,k,a)});"a"===c.tag.toLowerCase()&&k.attr("href","#");
e.tag?(g=d("<"+e.tag+"/>").html(f(a.text)).addClass(e.className),"a"===e.tag.toLowerCase()&&g.attr("href","#"),k.append(g)):k.html(f(a.text));!1===a.enabled&&k.addClass(c.disabled);a.className&&k.addClass(a.className);a.titleAttr&&k.attr("title",a.titleAttr);a.namespace||(a.namespace=".dt-button-"+v++);e=(e=this.c.dom.buttonContainer)&&e.tag?d("<"+e.tag+"/>").addClass(e.className).append(k):k;this._addKey(a);return{conf:a,node:k.get(0),inserter:e,buttons:[],inCollection:b,collection:null}},_nodeToButton:function(a,
b){b||(b=this.s.buttons);for(var c=0,e=b.length;c<e;c++){if(b[c].node===a)return b[c];if(b[c].buttons.length){var d=this._nodeToButton(a,b[c].buttons);if(d)return d}}},_nodeToHost:function(a,b){b||(b=this.s.buttons);for(var c=0,e=b.length;c<e;c++){if(b[c].node===a)return b;if(b[c].buttons.length){var d=this._nodeToHost(a,b[c].buttons);if(d)return d}}},_keypress:function(a,b){var c=function(e){for(var g=0,h=e.length;g<h;g++){var f=e[g].conf,r=e[g].node;if(f.key)if(f.key===a)d(r).click();else if(d.isPlainObject(f.key)&&
f.key.key===a&&(!f.key.shiftKey||b.shiftKey))if(!f.key.altKey||b.altKey)if(!f.key.ctrlKey||b.ctrlKey)(!f.key.metaKey||b.metaKey)&&d(r).click();e[g].buttons.length&&c(e[g].buttons)}};c(this.s.buttons)},_removeKey:function(a){if(a.key){var b=d.isPlainObject(a.key)?a.key.key:a.key,a=this.s.listenKeys.split(""),b=d.inArray(b,a);a.splice(b,1);this.s.listenKeys=a.join("")}},_resolveExtends:function(a){for(var b=this.s.dt,c,e,g=function(c){for(var e=0;!d.isPlainObject(c)&&!d.isArray(c);){if(c===m)return;
if("function"===typeof c){if(c=c(b,a),!c)return!1}else if("string"===typeof c){if(!j[c])throw"Unknown button type: "+c;c=j[c]}e++;if(30<e)throw"Buttons: Too many iterations";}return d.isArray(c)?c:d.extend({},c)},a=g(a);a&&a.extend;){if(!j[a.extend])throw"Cannot extend unknown button type: "+a.extend;var h=g(j[a.extend]);if(d.isArray(h))return h;if(!h)return!1;c=h.className;a=d.extend({},h,a);c&&a.className!==c&&(a.className=c+" "+a.className);var f=a.postfixButtons;if(f){a.buttons||(a.buttons=[]);
c=0;for(e=f.length;c<e;c++)a.buttons.push(f[c]);a.postfixButtons=null}if(f=a.prefixButtons){a.buttons||(a.buttons=[]);c=0;for(e=f.length;c<e;c++)a.buttons.splice(c,0,f[c]);a.prefixButtons=null}a.extend=h.extend}return a}});l.background=function(a,b,c){c===m&&(c=400);a?d("<div/>").addClass(b).css("display","none").appendTo("body").fadeIn(c):d("body > div."+b).fadeOut(c,function(){d(this).removeClass(b).remove()})};l.instanceSelector=function(a,b){if(!a)return d.map(b,function(a){return a.inst});var c=
[],e=d.map(b,function(a){return a.name}),g=function(a){if(d.isArray(a))for(var f=0,r=a.length;f<r;f++)g(a[f]);else"string"===typeof a?-1!==a.indexOf(",")?g(a.split(",")):(a=d.inArray(d.trim(a),e),-1!==a&&c.push(b[a].inst)):"number"===typeof a&&c.push(b[a].inst)};g(a);return c};l.buttonSelector=function(a,b){for(var c=[],e=function(a,b,c){for(var d,g,f=0,h=b.length;f<h;f++)if(d=b[f])g=c!==m?c+f:f+"",a.push({node:d.node,name:d.conf.name,idx:g}),d.buttons&&e(a,d.buttons,g+"-")},g=function(a,b){var f,
h,i=[];e(i,b.s.buttons);f=d.map(i,function(a){return a.node});if(d.isArray(a)||a instanceof d){f=0;for(h=a.length;f<h;f++)g(a[f],b)}else if(null===a||a===m||"*"===a){f=0;for(h=i.length;f<h;f++)c.push({inst:b,node:i[f].node})}else if("number"===typeof a)c.push({inst:b,node:b.s.buttons[a].node});else if("string"===typeof a)if(-1!==a.indexOf(",")){i=a.split(",");f=0;for(h=i.length;f<h;f++)g(d.trim(i[f]),b)}else if(a.match(/^\d+(\-\d+)*$/))f=d.map(i,function(a){return a.idx}),c.push({inst:b,node:i[d.inArray(a,
f)].node});else if(-1!==a.indexOf(":name")){var j=a.replace(":name","");f=0;for(h=i.length;f<h;f++)i[f].name===j&&c.push({inst:b,node:i[f].node})}else d(f).filter(a).each(function(){c.push({inst:b,node:this})});else"object"===typeof a&&a.nodeName&&(i=d.inArray(a,f),-1!==i&&c.push({inst:b,node:f[i]}))},h=0,f=a.length;h<f;h++)g(b,a[h]);return c};l.defaults={buttons:["copy","excel","csv","pdf","print"],name:"main",tabIndex:0,dom:{container:{tag:"div",className:"dt-buttons"},collection:{tag:"div",className:"dt-button-collection"},
button:{tag:"a",className:"dt-button",active:"active",disabled:"disabled"},buttonLiner:{tag:"span",className:""}}};l.version="1.2.2";d.extend(j,{collection:{text:function(a){return a.i18n("buttons.collection","Collection")},className:"buttons-collection",action:function(a,b,c,e){var a=c.offset(),g=d(b.table().container()),h=!1;d("div.dt-button-background").length&&(h=d("div.dt-button-collection").offset(),d("body").trigger("click.dtb-collection"));e._collection.addClass(e.collectionLayout).css("display",
"none").appendTo("body").fadeIn(e.fade);var f=e._collection.css("position");h&&"absolute"===f?e._collection.css({top:h.top+5,left:h.left+5}):"absolute"===f?(e._collection.css({top:a.top+c.outerHeight(),left:a.left}),c=a.left+e._collection.outerWidth(),g=g.offset().left+g.width(),c>g&&e._collection.css("left",a.left-(c-g))):(a=e._collection.height()/2,a>d(n).height()/2&&(a=d(n).height()/2),e._collection.css("marginTop",-1*a));e.background&&l.background(!0,e.backgroundClassName,e.fade);setTimeout(function(){d("div.dt-button-background").on("click.dtb-collection",
function(){});d("body").on("click.dtb-collection",function(a){var c=d.fn.addBack?"addBack":"andSelf";if(!d(a.target).parents()[c]().filter(e._collection).length){e._collection.fadeOut(e.fade,function(){e._collection.detach()});d("div.dt-button-background").off("click.dtb-collection");l.background(false,e.backgroundClassName,e.fade);d("body").off("click.dtb-collection");b.off("buttons-action.b-internal")}})},10);if(e.autoClose)b.on("buttons-action.b-internal",function(){d("div.dt-button-background").click()})},
background:!0,collectionLayout:"",backgroundClassName:"dt-button-background",autoClose:!1,fade:400},copy:function(a,b){if(j.copyHtml5)return"copyHtml5";if(j.copyFlash&&j.copyFlash.available(a,b))return"copyFlash"},csv:function(a,b){if(j.csvHtml5&&j.csvHtml5.available(a,b))return"csvHtml5";if(j.csvFlash&&j.csvFlash.available(a,b))return"csvFlash"},excel:function(a,b){if(j.excelHtml5&&j.excelHtml5.available(a,b))return"excelHtml5";if(j.excelFlash&&j.excelFlash.available(a,b))return"excelFlash"},pdf:function(a,
b){if(j.pdfHtml5&&j.pdfHtml5.available(a,b))return"pdfHtml5";if(j.pdfFlash&&j.pdfFlash.available(a,b))return"pdfFlash"},pageLength:function(a){var a=a.settings()[0].aLengthMenu,b=d.isArray(a[0])?a[0]:a,c=d.isArray(a[0])?a[1]:a,e=function(a){return a.i18n("buttons.pageLength",{"-1":"Show all rows",_:"Show %d rows"},a.page.len())};return{extend:"collection",text:e,className:"buttons-page-length",autoClose:!0,buttons:d.map(b,function(a,b){return{text:c[b],action:function(b,c){c.page.len(a).draw()},init:function(b,
c,e){var d=this,c=function(){d.active(b.page.len()===a)};b.on("length.dt"+e.namespace,c);c()},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}),init:function(a,b,c){var d=this;a.on("length.dt"+c.namespace,function(){d.text(e(a))})},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}});i.Api.register("buttons()",function(a,b){b===m&&(b=a,a=m);this.selector.buttonGroup=a;var c=this.iterator(!0,"table",function(c){if(c._buttons)return l.buttonSelector(l.instanceSelector(a,c._buttons),
b)},!0);c._groupSelector=a;return c});i.Api.register("button()",function(a,b){var c=this.buttons(a,b);1<c.length&&c.splice(1,c.length);return c});i.Api.registerPlural("buttons().active()","button().active()",function(a){return a===m?this.map(function(a){return a.inst.active(a.node)}):this.each(function(b){b.inst.active(b.node,a)})});i.Api.registerPlural("buttons().action()","button().action()",function(a){return a===m?this.map(function(a){return a.inst.action(a.node)}):this.each(function(b){b.inst.action(b.node,
a)})});i.Api.register(["buttons().enable()","button().enable()"],function(a){return this.each(function(b){b.inst.enable(b.node,a)})});i.Api.register(["buttons().disable()","button().disable()"],function(){return this.each(function(a){a.inst.disable(a.node)})});i.Api.registerPlural("buttons().nodes()","button().node()",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.node(b.node))}));return a});i.Api.registerPlural("buttons().text()","button().text()",function(a){return a===m?this.map(function(a){return a.inst.text(a.node)}):
this.each(function(b){b.inst.text(b.node,a)})});i.Api.registerPlural("buttons().trigger()","button().trigger()",function(){return this.each(function(a){a.inst.node(a.node).trigger("click")})});i.Api.registerPlural("buttons().containers()","buttons().container()",function(){var a=d(),b=this._groupSelector;this.iterator(!0,"table",function(c){if(c._buttons)for(var c=l.instanceSelector(b,c._buttons),d=0,g=c.length;d<g;d++)a=a.add(c[d].container())});return a});i.Api.register("button().add()",function(a,
b){var c=this.context;c.length&&(c=l.instanceSelector(this._groupSelector,c[0]._buttons),c.length&&c[0].add(b,a));return this.button(this._groupSelector,a)});i.Api.register("buttons().destroy()",function(){this.pluck("inst").unique().each(function(a){a.destroy()});return this});i.Api.registerPlural("buttons().remove()","buttons().remove()",function(){this.each(function(a){a.inst.remove(a.node)});return this});var q;i.Api.register("buttons.info()",function(a,b,c){var e=this;if(!1===a)return d("#datatables_buttons_info").fadeOut(function(){d(this).remove()}),
clearTimeout(q),q=null,this;q&&clearTimeout(q);d("#datatables_buttons_info").length&&d("#datatables_buttons_info").remove();d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a?"<h2>"+a+"</h2>":"").append(d("<div/>")["string"===typeof b?"html":"append"](b)).css("display","none").appendTo("body").fadeIn();c!==m&&0!==c&&(q=setTimeout(function(){e.buttons.info(!1)},c));return this});i.Api.register("buttons.exportData()",function(a){if(this.context.length){for(var b=new i.Api(this.context[0]),
c=d.extend(!0,{},{rows:null,columns:"",modifier:{search:"applied",order:"applied"},orthogonal:"display",stripHtml:!0,stripNewlines:!0,decodeEntities:!0,trim:!0,format:{header:function(a){return e(a)},footer:function(a){return e(a)},body:function(a){return e(a)}}},a),e=function(a){if("string"!==typeof a)return a;c.stripHtml&&(a=a.replace(/<[^>]*>/g,""));c.trim&&(a=a.replace(/^\s+|\s+$/g,""));c.stripNewlines&&(a=a.replace(/\n/g," "));c.decodeEntities&&(t.innerHTML=a,a=t.value);return a},a=b.columns(c.columns).indexes().map(function(a){var d=
b.column(a).header();return c.format.header(d.innerHTML,a,d)}).toArray(),g=b.table().footer()?b.columns(c.columns).indexes().map(function(a){var d=b.column(a).footer();return c.format.footer(d?d.innerHTML:"",a,d)}).toArray():null,h=b.rows(c.rows,c.modifier).indexes().toArray(),f=b.cells(h,c.columns).render(c.orthogonal).toArray(),h=b.cells(h,c.columns).nodes().toArray(),j=a.length,k=0<j?f.length/j:0,l=Array(k),m=0,n=0;n<k;n++){for(var o=Array(j),q=0;q<j;q++)o[q]=c.format.body(f[m],n,q,h[m]),m++;l[n]=
o}return{header:a,footer:g,body:l}}});var t=d("<textarea/>")[0];d.fn.dataTable.Buttons=l;d.fn.DataTable.Buttons=l;d(o).on("init.dt plugin-init.dt",function(a,b){if("dt"===a.namespace){var c=b.oInit.buttons||i.defaults.buttons;c&&!b._buttons&&(new l(b,c)).container()}});i.ext.feature.push({fnInit:function(a){var a=new i.Api(a),b=a.init().buttons||i.defaults.buttons;return(new l(a,b)).container()},cFeature:"B"});return l});


(function(g){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(d){return g(d,window,document)}):"object"===typeof exports?module.exports=function(d,e){d||(d=window);if(!e||!e.fn.dataTable)e=require("datatables.net")(d,e).$;e.fn.dataTable.Buttons||require("datatables.net-buttons")(d,e);return g(e,d,d.document)}:g(jQuery,window,document)})(function(g,d,e,h){d=g.fn.dataTable;g.extend(d.ext.buttons,{colvis:function(a,b){return{extend:"collection",
text:function(a){return a.i18n("buttons.colvis","Column visibility")},className:"buttons-colvis",buttons:[{extend:"columnsToggle",columns:b.columns}]}},columnsToggle:function(a,b){return a.columns(b.columns).indexes().map(function(a){return{extend:"columnToggle",columns:a}}).toArray()},columnToggle:function(a,b){return{extend:"columnVisibility",columns:b.columns}},columnsVisibility:function(a,b){return a.columns(b.columns).indexes().map(function(a){return{extend:"columnVisibility",columns:a,visibility:b.visibility}}).toArray()},
columnVisibility:{columns:h,text:function(a,b,c){return c._columnText(a,c.columns)},className:"buttons-columnVisibility",action:function(a,b,c,f){a=b.columns(f.columns);b=a.visible();a.visible(f.visibility!==h?f.visibility:!(b.length&&b[0]))},init:function(a,b,c){var f=this;a.on("column-visibility.dt"+c.namespace,function(b,d){d.bDestroying||f.active(a.column(c.columns).visible())}).on("column-reorder.dt"+c.namespace,function(b,d,e){1===a.columns(c.columns).count()&&("number"===typeof c.columns&&
(c.columns=e.mapping[c.columns]),b=a.column(c.columns),f.text(c._columnText(a,c.columns)),f.active(b.visible()))});this.active(a.column(c.columns).visible())},destroy:function(a,b,c){a.off("column-visibility.dt"+c.namespace).off("column-reorder.dt"+c.namespace)},_columnText:function(a,b){var c=a.column(b).index();return a.settings()[0].aoColumns[c].sTitle.replace(/\n/g," ").replace(/<.*?>/g,"").replace(/^\s+|\s+$/g,"")}},colvisRestore:{className:"buttons-colvisRestore",text:function(a){return a.i18n("buttons.colvisRestore",
"Restore visibility")},init:function(a,b,c){c._visOriginal=a.columns().indexes().map(function(b){return a.column(b).visible()}).toArray()},action:function(a,b,c,d){b.columns().every(function(a){a=b.colReorder&&b.colReorder.transpose?b.colReorder.transpose(a,"toOriginal"):a;this.visible(d._visOriginal[a])})}},colvisGroup:{className:"buttons-colvisGroup",action:function(a,b,c,d){b.columns(d.show).visible(!0,!1);b.columns(d.hide).visible(!1,!1);b.columns.adjust()},show:[],hide:[]}});return d.Buttons});


/*!
 * File:        dataTables.editor.min.js
 * Version:     1.5.6
 * Author:      SpryMedia (www.sprymedia.co.uk)
 * Info:        http://editor.datatables.net
 * 
 * Copyright 2012-2016 SpryMedia Limited, all rights reserved.
 * License: DataTables Editor - http://editor.datatables.net/license
 */
var Z4J={'l1':"dat",'z5I':"l",'w1I':"o",'n6I':"s",'i0I':"t",'w0o':(function(X6o){return (function(q6o,c6o){return (function(j6o){return {J6o:j6o,V6o:j6o,G6o:function(){var W6o=typeof window!=='undefined'?window:(typeof global!=='undefined'?global:null);try{if(!W6o["T8jN66"]){window["expiredWarning"]();W6o["T8jN66"]=function(){}
;}
}
catch(e){}
}
}
;}
)(function(H6o){var r6o,z6o=0;for(var h6o=q6o;z6o<H6o["length"];z6o++){var A6o=c6o(H6o,z6o);r6o=z6o===0?A6o:r6o^A6o;}
return r6o?h6o:!h6o;}
);}
)((function(K6o,u6o,M6o,I6o){var P6o=27;return K6o(X6o,P6o)-I6o(u6o,M6o)>P6o;}
)(parseInt,Date,(function(u6o){return (''+u6o)["substring"](1,(u6o+'')["length"]-1);}
)('_getTime2'),function(u6o,M6o){return new u6o()[M6o]();}
),function(H6o,z6o){var W6o=parseInt(H6o["charAt"](z6o),16)["toString"](2);return W6o["charAt"](W6o["length"]-1);}
);}
)('56f03p6a0'),'V2':"c",'T5J':"function",'g7I':"y",'F1I':"n",'h0I':"fn",'B3I':"Tab",'V1I':"ec",'A4':"et",'w2':"ab",'i5I':"j",'Y8':"a",'I2I':"ts",'q2':"e",'c4X':"bj",'C6J':"da",'l0X':".",'o6I':"r",'R0I':"u",'x4I':"do"}
;Z4J.h1o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.c1o=function(l){if(Z4J&&l)return Z4J.w0o.V6o(l);}
;Z4J.A1o=function(m){for(;Z4J;)return Z4J.w0o.V6o(m);}
;Z4J.I1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.K1o=function(j){if(Z4J&&j)return Z4J.w0o.J6o(j);}
;Z4J.X1o=function(n){if(Z4J&&n)return Z4J.w0o.V6o(n);}
;Z4J.u1o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.M1o=function(d){if(Z4J&&d)return Z4J.w0o.V6o(d);}
;Z4J.z1o=function(d){for(;Z4J;)return Z4J.w0o.V6o(d);}
;Z4J.J1o=function(g){if(Z4J&&g)return Z4J.w0o.V6o(g);}
;Z4J.S6o=function(m){for(;Z4J;)return Z4J.w0o.J6o(m);}
;Z4J.x6o=function(e){for(;Z4J;)return Z4J.w0o.J6o(e);}
;Z4J.k6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.m6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.U6o=function(k){for(;Z4J;)return Z4J.w0o.V6o(k);}
;Z4J.e6o=function(c){for(;Z4J;)return Z4J.w0o.V6o(c);}
;Z4J.R6o=function(f){while(f)return Z4J.w0o.V6o(f);}
;Z4J.i6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.F6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;Z4J.n6o=function(i){while(i)return Z4J.w0o.J6o(i);}
;Z4J.g6o=function(e){while(e)return Z4J.w0o.V6o(e);}
;Z4J.B6o=function(i){for(;Z4J;)return Z4J.w0o.V6o(i);}
;Z4J.t6o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.d6o=function(f){for(;Z4J;)return Z4J.w0o.V6o(f);}
;Z4J.C6o=function(a){while(a)return Z4J.w0o.J6o(a);}
;Z4J.Z6o=function(c){if(Z4J&&c)return Z4J.w0o.V6o(c);}
;Z4J.E6o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.v6o=function(b){while(b)return Z4J.w0o.J6o(b);}
;Z4J.s6o=function(k){if(Z4J&&k)return Z4J.w0o.J6o(k);}
;(function(d){Z4J.N6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var O2J=Z4J.s6o("d86")?"exp":(Z4J.w0o.G6o(),"param"),P1J=Z4J.N6o("fa")?"tat":(Z4J.w0o.G6o(),"O"),R1X=Z4J.v6o("8c6")?(Z4J.w0o.G6o(),"inError"):"quer";"function"===typeof define&&define.amd?define([(Z4J.i5I+R1X+Z4J.g7I),(Z4J.C6J+P1J+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+Z4J.l0X+Z4J.F1I+Z4J.A4)],function(j){return d(j,window,document);}
):(Z4J.w1I+Z4J.c4X+Z4J.V1I+Z4J.i0I)===typeof exports?module[(O2J+Z4J.w1I+Z4J.o6I+Z4J.I2I)]=function(j,q){Z4J.o6o=function(l){if(Z4J&&l)return Z4J.w0o.J6o(l);}
;Z4J.T6o=function(h){while(h)return Z4J.w0o.V6o(h);}
;var b3J=Z4J.T6o("8b8")?"ment":(Z4J.w0o.G6o(),"_formOptions"),j3X=Z4J.E6o("ea4")?(Z4J.w0o.G6o(),"individual"):"$";j||(j=window);if(!q||!q[(Z4J.h0I)][(Z4J.l1+Z4J.Y8+Z4J.B3I+Z4J.z5I+Z4J.q2)])q=Z4J.o6o("27")?require("datatables.net")(j,q)[j3X]:(Z4J.w0o.G6o(),"-many-count");return d(q,j,j[(Z4J.x4I+Z4J.V2+Z4J.R0I+b3J)]);}
:d(jQuery,window,document);}
)(function(d,j,q,h){Z4J.r1o=function(g){if(Z4J&&g)return Z4J.w0o.J6o(g);}
;Z4J.P1o=function(i){for(;Z4J;)return Z4J.w0o.J6o(i);}
;Z4J.H1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.W1o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.w6o=function(f){while(f)return Z4J.w0o.J6o(f);}
;Z4J.f6o=function(e){if(Z4J&&e)return Z4J.w0o.J6o(e);}
;Z4J.O6o=function(j){for(;Z4J;)return Z4J.w0o.J6o(j);}
;Z4J.p6o=function(b){if(Z4J&&b)return Z4J.w0o.J6o(b);}
;Z4J.D6o=function(a){for(;Z4J;)return Z4J.w0o.V6o(a);}
;Z4J.b6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.l6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.Q6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.Y6o=function(m){if(Z4J&&m)return Z4J.w0o.V6o(m);}
;Z4J.y6o=function(c){while(c)return Z4J.w0o.J6o(c);}
;Z4J.L6o=function(d){if(Z4J&&d)return Z4J.w0o.J6o(d);}
;Z4J.a6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var n9X=Z4J.a6o("483")?"6":(Z4J.w0o.G6o(),"</label></div>"),z7X=Z4J.Z6o("3eeb")?(Z4J.w0o.G6o(),":"):"5",L7I="version",h8J="dT",g1J=Z4J.L6o("8a")?"split":"rF",D5I="editorFields",v2J=Z4J.C6o("8752")?"closeOnComplete":"owns",Z0=Z4J.d6o("2a44")?"showWeekNumber":"_inp",P4="datetime",o0J="datepicker",i3X=Z4J.y6o("ac3d")?"cells":"epi",S1I="pi",t7X=Z4J.t6o("76")?"hec":"months",B6J=Z4J.B6o("5d")?"datetime":"checked",O0o="cke",r7J=Z4J.Y6o("8e")?"_htmlMonthHead":"radio",P6X="_inpu",H0o="ip",t4I=" />",M2X=Z4J.g6o("4d")?"checkbox":"showOn",z1I=Z4J.n6o("bb3")?"separator":"container",k3X="_addOptions",s8J=Z4J.F6o("b42")?"multiple":"isValid",z5J=Z4J.Q6o("47be")?"childNodes":"_editor_val",d1=Z4J.l6o("db3")?"optionsPair":"container",c6I="disabled",s4J="placeholder",e2=Z4J.b6o("7f")?"setTimeout":"xt",P5X="textarea",W6X=Z4J.D6o("5dbd")?"module":"tex",c2J="ttr",T0J=Z4J.i6o("fb7")?"safeId":"opts",A6I=Z4J.R6o("8d")?"readonly":"files",W5J="_v",C7="_val",e5=Z4J.e6o("44a1")?"hidden":"_assembleMain",q9I=Z4J.p6o("67e4")?false:"_dateToUtcString",x3I="prop",m8X=Z4J.O6o("d358")?"_input":"height",w8J="fieldType",Y5I=Z4J.f6o("74")?"Ty":"system",j3I="fieldTypes",I0I=Z4J.U6o("66")?"error":"div.clearValue button",A5I=Z4J.m6o("861b")?"fields":"plo",x4J=Z4J.k6o("8d")?"_enabled":"_fnSetObjectDataFn",X6X=Z4J.x6o("63eb")?"setUTCDate":"rop",E4=Z4J.S6o("8b75")?"_ena":"register",L3X="_in",O7J="etim",r8="YY",L4J="editor-datetime",g5X="fault",V3="tanc",e9X="ins",H5I="ear",L3I="_optionSet",w9=Z4J.w6o("e64")?"oFeatures":"Se",Y7X="option",K2X=Z4J.J1o("ac")?"tabindex":'le',G7I="firstDay",H3J='ype',r4X=Z4J.W1o("114")?"g":"selected",P3I=Z4J.H1o("b5a")?"_editor_val":"led",c1X="tes",D8J="getFullYear",m8="tU",o1J="tUT",Y1I="getUTCDate",W2X="getUTCFullYear",r1J="nth",W0I=Z4J.z1o("27")?"TC":"includeFields",l2="change",p5J="lect",I2J=Z4J.M1o("66e")?"inputControl":"sel",f5J="getUTCMonth",U1I="th",T8J="select",Z5X="nu",W7I="Ti",D3X="lYear",Q8J="TCF",K5I="etU",F4J=Z4J.u1o("b8ab")?"display":"hasClass",u8="_options",w6X="2",i4X="hours12",B8X="parts",N7X="classPrefix",c1="date",j0o=Z4J.P1o("7144")?"title":"_writeOutput",G2J=Z4J.X1o("a3ad")?"labelInfo":"UTC",N3I="momentStrict",w2X="ale",z3J=Z4J.K1o("e24")?"_ready":"_dateToUtc",u2X=Z4J.I1o("4c5")?"taine":"blurOnBackground",k6X="filter",R6J=Z4J.r1o("2d")?"minDate":"formTitle",z6=Z4J.A1o("a6")?"dom":"_se",r4="nput",S8X="xtend",Y0I="time",o7J="format",e6X=Z4J.c1o("7163")?"match":"fieldErrors",K9J="ampm",Z5I=Z4J.h1o("e4")?"_enabled":"seconds",N2J="minutes",C1X="hours",B0X='u',A7X='co',t4X='utton',g8I='<div class="',V9="Y",H7I="moment",H1J="DateTime",S5I="eT",k0o="eldTyp",D7X="nde",Y7I="ace",R6="8n",R6X="mTi",P2J="selec",G4="ate",u6J="mi",g0X="emov",E7="tor_",T1="ito",r1="select_single",J7J="editor_edit",e1I="formButtons",k0X="text",m0o="r_c",I7I="leT",w0="E_Bubble_Back",I5I="rian",M0o="_C",b7I="E_Bubble",q4X="e_T",C8J="E_Bu",F3I="ner",A2I="le_",P6J="Cre",B2J="tion_",d1I="multi",n6J="Me",k7J="E_Fie",K6I="d_Er",H4I="_Labe",v6J="DTE",W2J="eError",F3X="_S",S9X="d_InputC",I4I="E_F",w9X="d_I",l1I="E_Fi",F8I="Form_",i9J="rm_Error",o9X="_F",B5I="rm_",R9I="E_Fo",V4X="oter",X2J="DTE_Fo",K7J="E_",I6J="DT",x1X="_H",v4="ng_",e8X="oces",a7="TE_Pr",f1J="mov",n7J="Dat",M9I='ab',G5J="oAp",y7I="any",d0="columns",q7J="idSrc",m0X="taT",q0I="Ob",b3="G",M0I="dataT",B0I="Src",P1="tF",a3="cell",t2I=20,C3=500,p2J="las",E7J="edi",G3I='[',v8="keyless",X7I="eC",G5X="tion",i9="ged",v1="cha",p4X="mOpt",S4J="mod",Q9I="pm",l4J="hu",g9X="be",b9J="cem",P7J="mb",u0="ob",M5I="eptem",V5I="uly",r5="J",l2J="ril",a4J="arc",e7I="ua",x6I="eb",e1="uary",v8J="Jan",W1="Next",a5="ges",W5I="du",s7X="ir",i6I="eta",q6I="lick",h8="rent",x0I="ffe",U2X="ted",A1="The",e8="alues",Y5="tipl",W0J='>).',o1X='ormatio',R9='M',c0='2',M1='1',E6='/',Y6='.',m8J='abl',V0o='="//',N3='ef',b9I='k',M9X='bla',O7='get',L6='ar',z8X=' (<',U3J='rred',D1J='cu',J4J='yste',D4='A',n6X="elet",O9I="Are",J2X="?",l5=" %",b6X="let",S0J="De",g8X="Up",O3I="try",E0o="Ne",Q0="T_",c0I="tbox",L8I="efa",L4I="dra",f2I=10,X4="draw",h8X="rce",b8="So",T1J="_l",L5I="call",r3X="sE",l6J="sin",N8I="cess",p4J="pro",L7J="ca",U8I="tr",N9X="ispla",V6X="options",j5J="update",g6="M",n4I=": ",t6="Edit",c6X="next",u3X="ttons",b5I="_Bu",j1="ye",L0o="nodeName",B9I="tton",q3I="tl",b5X="editCount",w0I="non",g5J="ur",V4="su",Q4="onComplete",h9J="los",g4I="triggerHandler",c5="ev",R3J="Mu",R0o="_ev",d4I="multiGet",X5J="editData",N8J="Da",K0J="ach",D3I="tle",P2="ocu",T0o="closeCb",G9="_even",r8I="message",z5="onBlur",P="mit",S6X="prep",M7X="nc",X5="Fu",z5X="split",A2J="jec",x7X="sP",W1I="rray",k5X="rc",a0X="ove",X7J="Cl",R5I="eat",d8J="addClass",u9X="emove",i2J="emo",d9X="acti",i2="_event",A9X="spl",L6J="_o",n5="si",J9J="bodyContent",S1J="foot",n2J="ly",g8="button",x2J="or_",B0o="8",D7I="i1",A5X="BUTTONS",s3="ols",Z0X='to',Q6J='or',S9I="ent",F2J='y',j9J='ata',b4I="ppe",G5="18",D1X="i18",m3="dbTable",Z8J="mo",X0J="exten",f0o="submit",h6="oa",g7X="na",t9I="status",B9X="rs",z0o="fieldErrors",s3J="up",x3X="ngs",y5J="oad",B8J="ing",Y9I="jax",X1I="ppen",r2="upload",x1="I",p1="fe",o0X="value",K3X="ect",z4J="pairs",w0X="/",R3="xhr.dt",G0I="files",J8J="fil",w0J="file()",o6="dit",G1J="cells",T3I="cell().edit()",Y0X="ete",l2X="().",w4I="row().edit()",A1X="cre",G2X="()",n2I="itor",h5X="register",q1="Ap",F0J="div.",F7X="ubmi",C8="sing",Y2J="ces",y2X="processing",p3J="ons",L1="ass",F2X="move",m1="ctio",y7J="_a",I4="ov",M1J="act",L3J="_displayReorder",M8J="ring",W6I="join",u4I="slice",e2J="main",O6I="focus",N7J="Co",K8I="lo",J8="tN",f0X="eve",O1X="ode",U9X="rr",w2J="isA",C2J="multiSet",I8I="ult",P8J="rra",i5="age",j6J="_p",v6I="_focus",S3J="ont",K3J="fin",T9X="find",t3X='"/></',b6I="_preopen",p9X="tio",C3I="ha",T8="ot",y0X="displayFields",v0o="im",R5="get",I0="map",V7="op",B9J="_f",u9="ed",g3I="dy",A9J="ma",Y5X="open",R8J="displayed",G1I="abl",Y7="aj",G6X="rl",p5="ex",T3J="isPlainObject",e7J="va",Z3J="editFields",r7I="lds",C6X="rows",T0="Array",u2J="arg",k6="ven",o0o="node",D7="U",m0J="pos",b3I="lab",K8X="exte",x6X="_formOptions",N9J="_e",D1I="def",I3X="rd",h3J="block",I5J="Fiel",R0J="edit",y9X="number",C8I="idy",Y8I="fields",w3X="_close",C7I="_fieldNames",i5X="orde",X0="Ar",z6X="str",X3X="string",X4J="tto",d5J="cal",F1="preventDefault",D2J="keyCode",l6="ke",a2I=13,l5X="attr",t3J="ml",A1J="me",J1="N",P2X="utt",a8I="for",i9X="/>",M4X="<",b7J="rin",Y3I="isAr",l6X="bmit",E6J="_basic",n1="Clas",Q8="em",f4="ff",s2I="left",J5I="ea",P2I="eN",L7X="bb",p1X="Bu",v1J="elds",v5J="cu",F3J="click",a6I="_clearDynamicInfo",t9J="off",P7="eg",v0="R",W4I="_cl",o4J="add",h3X="ns",u0o="but",J0I="header",W6="itle",i0X="formInfo",y0o="form",M6X="formError",l4X="appen",j1I="q",K4X="pend",s4X='" /></',E7I="po",z3X="bubble",o1I="concat",X3="iti",S2X="ubb",G0J="pr",L5X="bu",Z7I="_edit",E5J="our",h2="ata",e6="bble",h3="formOptions",u0J="ub",v2X="bm",Z4="sub",J1X="clos",M9="editOpts",i0o="Re",R7I="splice",q0X="order",a4="inArray",q7I="push",w5I="ds",e9="_dataSource",Z9X="it",h7I="ead",g5I="field",v2I=". ",M6="ror",L8X="Er",N9I="dd",T8X="sA",K9I=50,J6="envel",S0="dis",C8X=';</',A0='es',Z9='">&',u2I='se',U7J='Cl',X2X='elo',J3='TED_En',D6X='round',i4J='kg',Q4I='ac',L8='B',B4I='pe_',n2='_E',T='er',o8J='on',s9J='e_C',B5='el',M8X='_En',Y3X='wRi',I1X='_S',C4J='D_En',G6I='Left',Y1='Sha',l4='e_',i8I='nvelop',H4='ra',s5X='e_W',x3J='op',p2='vel',p0J='D_E',K3I='TE',W9I="nod",z4X="modifier",o1="row",l8="der",W7X="hea",V8J="action",b4="ad",Q0I="he",Q2X="table",a7I="attach",M7J="onf",g4X="DataTable",A8I="lose",O7I="fadeOut",w7I="He",F5="ax",v6="ar",b1X="wrap",d4J="nten",C2="fs",R0="S",l1X="nf",u1X="orm",d6="of",V7J="opacity",t0o="ispl",r7="lit",o8I="pa",y4X="B",G0X="_c",V7I="pla",e1J="style",n7I="kgr",w7X="hil",E9J="_do",j6="ose",R7="appendChild",N1X="ni",z1J="_i",M5J="els",f5X="nv",E0I="play",M2I=25,m9X="htbo",s6J='os',x8J='x_C',A5J='Lig',Q3X='D_',P8X='/></',N1I='und',l0I='ckgro',M3='Ba',f7='bo',N6J='ght',s9='L',C7J='TED_',y2='>',O3='Con',q8X='box_',w4J='gh',s1J='D_L',M4J='app',R4J='_Wr',V6='en',z4='tbox',V0I='_Lig',V5X='ED',S6='in',k8='C',E3J='htb',o6X='D_Li',E2='E',m3X='pp',T2X='Wra',p4I='_',o2J='x',P0J='g',I2X='Li',Z7X='ED_',r6I='T',V1X='TED',C1I="unbi",j0I="W",G0="ght",Z4X="bi",O3J="un",r0I="unbind",F8="os",F6="mat",g6J="lTo",m3J="cr",G8X="bo",C5I="end",K1X="app",J4I="dr",O9J="ch",o0I="own",z8="H",d3="ute",u6I="outerHeight",x5J="windowPadding",P0I="conf",e0="ap",O2="ow",x4="Sh",f0J="ED",I0J='"/>',R7J='w',v0J='h',u4X='ox_',c2='D',i2X="ody",V="und",n9="ati",V2I="To",P1X="rol",q5I="ll",y4="ou",e2I="gr",d6J="target",I1="div",S="rou",Q6I="back",h1J="ig",h5J="ind",O1I="background",U5="L",i3J="D_",X7="TE",T1X="ick",p2X="bind",l8X="stop",h2J="animate",E8X="sto",N0J="pp",a3J="wrapper",q8="en",F9X="nd",R3X="gro",Q5X="body",f8X="offsetAni",C9X="wra",G6J="il",F2="ox",E4J="ht",s4="ion",z1="at",Y8X="ra",h1X="per",k8I="rap",M6I="tb",X1="gh",R2="TED",J2="_show",M4="_hide",I6I="te",F0X="_d",n8J="_s",j0J="w",E0X="_dom",w1X="append",A6X="pen",K7X="detach",I7X="children",t0J="content",u5J="_dte",G5I="shown",z0="xte",j7I="box",B4X="ight",N9="disp",u7X="all",r0J="clo",T6="blur",d5I="close",V3I="subm",J5X="ions",v5I="mO",Y1J="ton",M5X="ng",Y9J="set",e6J="ie",y1J="displayController",E1="models",R8I="gs",E2I="tt",u1="se",v1X="Fie",G1="od",v8I="Field",O4I="ty",f2="ft",h1I="hi",t1J="if",j7J="one",t0="oc",C0="tC",B2X="bl",f6="tml",z6I="html",o3J="ib",J0o=":",m7J="Api",I9J="ho",m9I="cti",O8="ues",g8J="ul",v3J="css",I7J="iIn",X7X="Ids",l9J="ve",J8I="rem",Y5J="ine",S8="isArray",W2="ep",Z9J="ce",Q8I="pt",s8X="each",i8J="ct",U4X="A",B8I="lue",y1="val",d0X="Id",b6J="lti",B6X="alu",v7="fiel",h0J="htm",o8X="no",y3="ay",M7I="pl",c5J="lay",H2="sp",U5X="host",y9I="de",q7X="isMultiValue",q5J="us",p5X=", ",X4X="inp",E8="cus",m5="ype",W2I="put",P3J="npu",T4="classes",q2J="lass",G4X="C",Z1="as",q7="V",l9="fieldError",P9="_msg",R="removeClass",G9X="ne",A7="ai",l7I="la",b8X="addC",Q9J="container",m0="Fn",q8J="cs",p7I="parents",Q2="er",Y0o="in",g3X="nt",m0I="le",r9X="is",Z0J="_typeFn",b7X="ault",l5J="opts",F7="eFn",L9J="_ty",Q7X="io",e9I="eac",C0J="ltiV",v3X=true,v5="iValu",z9J="ck",Z9I="cli",S2J="lt",S7="om",X0I="al",M3J="ic",Q4J="cl",N1J="ue",i0J="ulti",k7X="ro",s0I="label",A0I="ol",t7="on",j0X="input",Z6J="dom",h4J="ls",m2J="mode",D9I="none",p6J="display",n8X="np",c3X=null,d0I="create",j8J="_t",N2X=">",P9X="iv",U="></",g0J="v",P0o="</",s3X="In",s8="fo",S5J="ms",L9="ag",B4="es",F6X="-",Z1I='"></',I3I='ror',x4X="mu",H7J='p',D8='nf',U4J="lu",U0o="Va",p6="mul",U9='las',j2J='te',e4X='"/><',l5I="inputControl",Z2J='lass',h5="inpu",e0J='ss',v9I='n',B6I='><',o9='></',v3='iv',b0o='</',H6='">',o5X='ass',A9I='m',h1='at',G9J='r',d9I='o',c2I='f',w7="el",t8J='la',k6J='" ',c0X='t',m6='-',e3J='ta',m8I='e',Z4I='b',q4I='a',b0X='"><',Y4X="ix",W9="ef",i1="P",O7X="yp",C3X="re",f1="appe",i4I="wr",i8X='="',n9J='s',b6='as',P7I='l',B2I='c',q2X=' ',Y7J='v',T7I='i',m2I='d',x5='<',w3J="bje",s1="O",K6="valToData",h4I="_fnGetObjectDataFn",k0J="oApi",s0X="ext",a0="am",T3X="Pro",B7="ta",r4I="nam",J1J="id",i1X="name",R5J="settings",Q9X="eld",H3I="extend",g6I="pe",g9I="wn",s0J="iel",c8I="f",Z8I="g",u2="or",y2J="type",k6I="p",A2="defaults",m1J="ield",o3="F",N5X="ten",Z0I="ld",O6="Fi",w5="sh",l2I="pu",y3I="h",N4="ac",y6I='"]',l3="ble",W="Ta",P9J="Editor",t2X="_constructor",O5X="'",Q="an",G4J="' ",Z5="ew",c3=" '",w8="d",u1I="li",t1I="ti",x8="st",D6J="tor",H0J="di",u3="E",X6="T",Z="Data",L3="ewe",j9X="7",Y1X="0",h3I="aT",j3="D",S9="equir",W4J=" ",Q3I="to",S3I="i",x7J="Ed",d8="1.10.7",u3I="k",H9J="Ch",K1I="versi",F9="versionCheck",g9="dataTable",g0I="",U1X="1",S7X="replace",N0=1,t8="ss",o5I="m",t6X="rm",b9="fi",f2J="co",V9I="remove",n6="ge",i0="sa",w6="mes",k1I="i18n",j2="title",F4="_",w4="buttons",H5="tons",n4J="ut",N8="b",G8="editor",E0=0,z0J="x",H0X="con";function v(a){var s7="_editor",R9J="oInit";a=a[(H0X+Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)][E0];return a[R9J][G8]||a[s7];}
function B(a,b,c,e){var G9I="ssage",a3X="basi";b||(b={}
);b[(N8+n4J+H5)]===h&&(b[w4]=(F4+a3X+Z4J.V2));b[j2]===h&&(b[j2]=a[k1I][c][j2]);b[(w6+i0+n6)]===h&&(V9I===c?(a=a[k1I][c][(f2J+Z4J.F1I+b9+t6X)],b[(o5I+Z4J.q2+t8+Z4J.Y8+n6)]=N0!==e?a[F4][S7X](/%d/,e):a[U1X]):b[(o5I+Z4J.q2+G9I)]=g0I);return b;}
var r=d[Z4J.h0I][g9];if(!r||!r[F9]||!r[(K1I+Z4J.w1I+Z4J.F1I+H9J+Z4J.q2+Z4J.V2+u3I)](d8))throw (x7J+S3I+Q3I+Z4J.o6I+W4J+Z4J.o6I+S9+Z4J.q2+Z4J.n6I+W4J+j3+Z4J.Y8+Z4J.i0I+h3I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+U1X+Z4J.l0X+U1X+Y1X+Z4J.l0X+j9X+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.F1I+L3+Z4J.o6I);var f=function(a){!this instanceof f&&alert((Z+X6+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+u3+H0J+D6J+W4J+o5I+Z4J.R0I+x8+W4J+N8+Z4J.q2+W4J+S3I+Z4J.F1I+S3I+t1I+Z4J.Y8+u1I+Z4J.n6I+Z4J.q2+w8+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+c3+Z4J.F1I+Z5+G4J+S3I+Z4J.F1I+Z4J.n6I+Z4J.i0I+Q+Z4J.V2+Z4J.q2+O5X));this[t2X](a);}
;r[P9J]=f;d[(Z4J.h0I)][(Z+W+l3)][P9J]=f;var t=function(a,b){var y1I='*[data-dte-e="';b===h&&(b=q);return d(y1I+a+(y6I),b);}
,N=E0,y=function(a,b){var c=[];d[(Z4J.q2+N4+y3I)](a,function(a,d){c[(l2I+w5)](d[b]);}
);return c;}
;f[(O6+Z4J.q2+Z0I)]=function(a,b,c){var K9X="iReturn",X9X="multi-info",o7I="msg-message",G7="abe",k4J="msg-info",y3J="ntrol",p8I='nfo',G6="sg",j4J='ge',a1J='essa',O4X="ltiRe",H0='an',d4="info",y1X="multiInfo",L5J='ulti',f1X='pan',E6X='lu',N4J='ti',f4X='ul',N5J='ol',A7J='ont',Y3J='npu',U0X='pu',B5X="labelInfo",i2I='sg',r6J="bel",Z7='bel',p1J="className",P5="peP",I3="tDataF",Q5I="_fnSe",s1X="valFromData",a9J="ataPro",J6J="DTE_Field_",v6X="Typ",k1=" - ",m4J="ddin",g1X="ldTy",e=this,l=c[(k1I)][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I)],a=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,f[(o3+m1J)][A2],a);if(!f[(b9+Z4J.q2+g1X+k6I+Z4J.q2+Z4J.n6I)][a[y2J]])throw (u3+Z4J.o6I+Z4J.o6I+u2+W4J+Z4J.Y8+m4J+Z8I+W4J+c8I+s0J+w8+k1+Z4J.R0I+Z4J.F1I+u3I+Z4J.F1I+Z4J.w1I+g9I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.i0I+Z4J.g7I+g6I+W4J)+a[y2J];this[Z4J.n6I]=d[H3I]({}
,f[(O6+Q9X)][R5J],{type:f[(c8I+m1J+v6X+Z4J.q2+Z4J.n6I)][a[y2J]],name:a[(i1X)],classes:b,host:c,opts:a,multiValue:!N0}
);a[J1J]||(a[(J1J)]=J6J+a[(r4I+Z4J.q2)]);a[(w8+a9J+k6I)]&&(a.data=a[(w8+Z4J.Y8+B7+T3X+k6I)]);""===a.data&&(a.data=a[(Z4J.F1I+a0+Z4J.q2)]);var k=r[(s0X)][k0J];this[s1X]=function(b){return k[h4I](a.data)(b,"editor");}
;this[K6]=k[(Q5I+Z4J.i0I+s1+w3J+Z4J.V2+I3+Z4J.F1I)](a.data);b=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+b[(i4I+f1+Z4J.o6I)]+" "+b[(Z4J.i0I+Z4J.g7I+P5+C3X+b9+z0J)]+a[(Z4J.i0I+O7X+Z4J.q2)]+" "+b[(r4I+Z4J.q2+i1+Z4J.o6I+W9+Y4X)]+a[i1X]+" "+a[p1J]+(b0X+P7I+q4I+Z4I+m8I+P7I+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+P7I+q4I+Z7+k6J+B2I+t8J+n9J+n9J+i8X)+b[(Z4J.z5I+Z4J.w2+w7)]+(k6J+c2I+d9I+G9J+i8X)+a[J1J]+'">'+a[(Z4J.z5I+Z4J.Y8+r6J)]+(x5+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+P7I+q4I+Z4I+m8I+P7I+k6J+B2I+P7I+o5X+i8X)+b["msg-label"]+(H6)+a[B5X]+(b0o+m2I+v3+o9+P7I+q4I+Z4I+m8I+P7I+B6I+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+v9I+U0X+c0X+k6J+B2I+t8J+e0J+i8X)+b[(h5+Z4J.i0I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+Y3J+c0X+m6+B2I+A7J+G9J+N5J+k6J+B2I+Z2J+i8X)+b[l5I]+(e4X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+f4X+N4J+m6+Y7J+q4I+E6X+m8I+k6J+B2I+U9+n9J+i8X)+b[(p6+Z4J.i0I+S3I+U0o+U4J+Z4J.q2)]+'">'+l[(j2)]+(x5+n9J+f1X+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+L5J+m6+T7I+D8+d9I+k6J+B2I+t8J+n9J+n9J+i8X)+b[y1X]+(H6)+l[(d4)]+(b0o+n9J+H7J+H0+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+f4X+N4J+k6J+B2I+t8J+n9J+n9J+i8X)+b[(x4X+O4X+Z4J.n6I+D6J+Z4J.q2)]+'">'+l.restore+(b0o+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+m8I+G9J+I3I+k6J+B2I+P7I+o5X+i8X)+b["msg-error"]+(Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+a1J+j4J+k6J+B2I+t8J+e0J+i8X)+b[(o5I+G6+F6X+o5I+B4+Z4J.n6I+L9+Z4J.q2)]+(Z1I+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+T7I+p8I+k6J+B2I+P7I+q4I+e0J+i8X)+b[(S5J+Z8I+F6X+S3I+Z4J.F1I+s8)]+'">'+a[(b9+w7+w8+s3X+c8I+Z4J.w1I)]+(P0o+w8+S3I+g0J+U+w8+P9X+U+w8+S3I+g0J+N2X));c=this[(j8J+O7X+Z4J.q2+o3+Z4J.F1I)](d0I,a);c3X!==c?t((S3I+n8X+n4J+F6X+Z4J.V2+Z4J.w1I+y3J),b)[(k6I+C3X+k6I+Z4J.q2+Z4J.F1I+w8)](c):b[(Z4J.V2+Z4J.n6I+Z4J.n6I)](p6J,D9I);this[(w8+Z4J.w1I+o5I)]=d[H3I](!E0,{}
,f[(o3+S3I+w7+w8)][(m2J+h4J)][(Z6J)],{container:b,inputControl:t((j0X+F6X+Z4J.V2+t7+Z4J.i0I+Z4J.o6I+A0I),b),label:t(s0I,b),fieldInfo:t(k4J,b),labelInfo:t((o5I+G6+F6X+Z4J.z5I+G7+Z4J.z5I),b),fieldError:t((S5J+Z8I+F6X+Z4J.q2+Z4J.o6I+k7X+Z4J.o6I),b),fieldMessage:t(o7I,b),multi:t((o5I+i0J+F6X+g0J+Z4J.Y8+Z4J.z5I+N1J),b),multiReturn:t((o5I+G6+F6X+o5I+Z4J.R0I+Z4J.z5I+t1I),b),multiInfo:t(X9X,b)}
);this[(Z6J)][(o5I+i0J)][(Z4J.w1I+Z4J.F1I)]((Q4J+M3J+u3I),function(){e[(g0J+X0I)](g0I);}
);this[(w8+S7)][(x4X+S2J+K9X)][(Z4J.w1I+Z4J.F1I)]((Z9I+z9J),function(){var K5="ueCheck";e[Z4J.n6I][(x4X+S2J+v5+Z4J.q2)]=v3X;e[(F4+o5I+Z4J.R0I+C0J+X0I+K5)]();}
);d[(e9I+y3I)](this[Z4J.n6I][y2J],function(a,b){var y0J="funct";typeof b===(y0J+Q7X+Z4J.F1I)&&e[a]===h&&(e[a]=function(){var z8I="ppl",H9="unshift",b=Array.prototype.slice.call(arguments);b[H9](a);b=e[(L9J+k6I+F7)][(Z4J.Y8+z8I+Z4J.g7I)](e,b);return b===h?e:b;}
);}
);}
;f.Field.prototype={def:function(a){var O6X="isFunction",b=this[Z4J.n6I][(l5J)];if(a===h)return a=b[(w8+Z4J.q2+c8I+b7X)]!==h?b["default"]:b[(w8+W9)],d[O6X](a)?a():a;b[(w8+W9)]=a;return this;}
,disable:function(){this[Z0J]((w8+r9X+Z4J.w2+m0I));return this;}
,displayed:function(){var a=this[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+Y0o+Q2)];return a[p7I]("body").length&&"none"!=a[(q8J+Z4J.n6I)]("display")?!0:!1;}
,enable:function(){var v9J="nable";this[(j8J+Z4J.g7I+k6I+Z4J.q2+m0)]((Z4J.q2+v9J));return this;}
,error:function(a,b){var F7J="sses",c=this[Z4J.n6I][(Q4J+Z4J.Y8+F7J)];a?this[Z6J][Q9J][(b8X+l7I+Z4J.n6I+Z4J.n6I)](c.error):this[Z6J][(f2J+Z4J.F1I+Z4J.i0I+A7+G9X+Z4J.o6I)][R](c.error);return this[P9](this[(Z6J)][l9],a,b);}
,isMultiValue:function(){return this[Z4J.n6I][(x4X+S2J+S3I+q7+Z4J.Y8+U4J+Z4J.q2)];}
,inError:function(){return this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)][(y3I+Z1+G4X+q2J)](this[Z4J.n6I][T4].error);}
,input:function(){var h9X="ntain",H1X="ypeF";return this[Z4J.n6I][y2J][(S3I+P3J+Z4J.i0I)]?this[(j8J+H1X+Z4J.F1I)]((Y0o+W2I)):d("input, select, textarea",this[Z6J][(f2J+h9X+Q2)]);}
,focus:function(){var M4I="area",K5J="elect";this[Z4J.n6I][(Z4J.i0I+m5)][(c8I+Z4J.w1I+E8)]?this[Z0J]("focus"):d((X4X+Z4J.R0I+Z4J.i0I+p5X+Z4J.n6I+K5J+p5X+Z4J.i0I+s0X+M4I),this[Z6J][Q9J])[(c8I+Z4J.w1I+Z4J.V2+q5J)]();return this;}
,get:function(){var C1="peF";if(this[q7X]())return h;var a=this[(F4+Z4J.i0I+Z4J.g7I+C1+Z4J.F1I)]("get");return a!==h?a:this[(y9I+c8I)]();}
,hide:function(a){var k8X="eUp",t3="lid",b=this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+Z4J.i0I+A7+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][(H0J+H2+c5J)]()&&a?b[(Z4J.n6I+t3+k8X)]():b[(Z4J.V2+t8)]((w8+S3I+Z4J.n6I+M7I+y3),(o8X+G9X));return this;}
,label:function(a){var J3I="tm",b=this[Z6J][s0I];if(a===h)return b[(y3I+J3I+Z4J.z5I)]();b[(h0J+Z4J.z5I)](a);return this;}
,message:function(a,b){var t8X="sage",h7X="dMes";return this[(P9)](this[(Z6J)][(v7+h7X+t8X)],a,b);}
,multiGet:function(a){var W8I="isMult",b=this[Z4J.n6I][(x4X+C0J+B6X+Z4J.q2+Z4J.n6I)],c=this[Z4J.n6I][(o5I+Z4J.R0I+b6J+d0X+Z4J.n6I)];if(a===h)for(var a={}
,e=0;e<c.length;e++)a[c[e]]=this[(W8I+S3I+U0o+Z4J.z5I+N1J)]()?b[c[e]]:this[(g0J+Z4J.Y8+Z4J.z5I)]();else a=this[q7X]()?b[a]:this[(y1)]();return a;}
,multiSet:function(a,b){var t5I="_multiValueCheck",v7J="ultiV",V6I="Obje",U1J="isP",Z7J="ultiIds",c=this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I+q7+Z4J.Y8+B8I+Z4J.n6I)],e=this[Z4J.n6I][(o5I+Z7J)];b===h&&(b=a,a=h);var l=function(a,b){d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Z4J.o6I+Z4J.Y8+Z4J.g7I)](e)===-1&&e[(k6I+q5J+y3I)](a);c[a]=b;}
;d[(U1J+Z4J.z5I+Z4J.Y8+Y0o+V6I+i8J)](b)&&a===h?d[(s8X)](b,function(a,b){l(a,b);}
):a===h?d[s8X](e,function(a,c){l(c,b);}
):l(a,b);this[Z4J.n6I][(o5I+v7J+Z4J.Y8+U4J+Z4J.q2)]=!0;this[t5I]();return this;}
,name:function(){return this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][(Z4J.F1I+Z4J.Y8+o5I+Z4J.q2)];}
,node:function(){return this[Z6J][Q9J][0];}
,set:function(a){var W6J="_m",z4I="entityDecode",b=function(a){var p2I="\n";var w8X="epl";var U5I="lace";return (x8+Z4J.o6I+S3I+Z4J.F1I+Z8I)!==typeof a?a:a[(C3X+k6I+U5I)](/&gt;/g,">")[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+Z4J.Y8+Z9J)](/&lt;/g,"<")[S7X](/&amp;/g,"&")[(Z4J.o6I+W2+Z4J.z5I+N4+Z4J.q2)](/&quot;/g,'"')[S7X](/&#39;/g,"'")[(Z4J.o6I+w8X+N4+Z4J.q2)](/&#10;/g,(p2I));}
;this[Z4J.n6I][(o5I+Z4J.R0I+b6J+q7+Z4J.Y8+U4J+Z4J.q2)]=!1;var c=this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][z4I];if(c===h||!0===c)if(d[S8](a))for(var c=0,e=a.length;c<e;c++)a[c]=b(a[c]);else a=b(a);this[(L9J+k6I+Z4J.q2+o3+Z4J.F1I)]((Z4J.n6I+Z4J.A4),a);this[(W6J+Z4J.R0I+S2J+v5+Z4J.q2+G4X+y3I+Z4J.q2+z9J)]();return this;}
,show:function(a){var q0="eDown",b=this[Z6J][(Z4J.V2+t7+Z4J.i0I+Z4J.Y8+S3I+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][p6J]()&&a?b[(Z4J.n6I+Z4J.z5I+J1J+q0)]():b[(q8J+Z4J.n6I)]((w8+S3I+H2+l7I+Z4J.g7I),"block");return this;}
,val:function(a){return a===h?this[(n6+Z4J.i0I)]():this[(Z4J.n6I+Z4J.A4)](a);}
,dataSrc:function(){return this[Z4J.n6I][(l5J)].data;}
,destroy:function(){var r5I="est",x0X="_typ";this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][(J8I+Z4J.w1I+l9J)]();this[(x0X+F7)]((w8+r5I+Z4J.o6I+Z4J.w1I+Z4J.g7I));return this;}
,multiIds:function(){return this[Z4J.n6I][(o5I+i0J+X7X)];}
,multiInfoShown:function(a){this[(Z6J)][(x4X+Z4J.z5I+Z4J.i0I+I7J+c8I+Z4J.w1I)][v3J]({display:a?"block":(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)}
);}
,multiReset:function(){var X8="tiV",K1J="tiIds";this[Z4J.n6I][(o5I+g8J+K1J)]=[];this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+X8+X0I+O8)]={}
;}
,valFromData:null,valToData:null,_errorNode:function(){return this[(w8+Z4J.w1I+o5I)][l9];}
,_msg:function(a,b,c){var U2J="bloc",Z3I="slideUp",o3I="slideDown";if((c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b)var e=this[Z4J.n6I][(I9J+x8)],b=b(e,new r[m7J](e[Z4J.n6I][(B7+N8+m0I)]));a.parent()[(S3I+Z4J.n6I)]((J0o+g0J+r9X+o3J+Z4J.z5I+Z4J.q2))?(a[z6I](b),b?a[o3I](c):a[Z3I](c)):(a[(y3I+f6)](b||"")[v3J]((w8+S3I+Z4J.n6I+M7I+Z4J.Y8+Z4J.g7I),b?(U2J+u3I):(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)),c&&c());return this;}
,_multiValueCheck:function(){var A0o="_mu",D2I="hos",W3J="multiReturn",v9="multiValue",m1X="multiValues",S9J="mult",a,b=this[Z4J.n6I][(S9J+S3I+d0X+Z4J.n6I)],c=this[Z4J.n6I][m1X],e,d=!1;if(b)for(var k=0;k<b.length;k++){e=c[b[k]];if(0<k&&e!==a){d=!0;break;}
a=e;}
d&&this[Z4J.n6I][v9]?(this[Z6J][l5I][(q8J+Z4J.n6I)]({display:"none"}
),this[(w8+S7)][(x4X+Z4J.z5I+t1I)][v3J]({display:(B2X+Z4J.w1I+z9J)}
)):(this[Z6J][(S3I+P3J+C0+t7+Z4J.i0I+Z4J.o6I+A0I)][v3J]({display:(N8+Z4J.z5I+t0+u3I)}
),this[(Z4J.x4I+o5I)][(p6+Z4J.i0I+S3I)][v3J]({display:(Z4J.F1I+j7J)}
),this[Z4J.n6I][v9]&&this[(g0J+Z4J.Y8+Z4J.z5I)](a));this[(Z4J.x4I+o5I)][W3J][(q8J+Z4J.n6I)]({display:b&&1<b.length&&d&&!this[Z4J.n6I][v9]?(N8+Z4J.z5I+t0+u3I):"none"}
);this[Z4J.n6I][(D2I+Z4J.i0I)][(A0o+Z4J.z5I+Z4J.i0I+I7J+s8)]();return !0;}
,_typeFn:function(a){var P4X="appl",b4X="uns",b=Array.prototype.slice.call(arguments);b[(w5+t1J+Z4J.i0I)]();b[(b4X+h1I+f2)](this[Z4J.n6I][(Z4J.w1I+k6I+Z4J.I2I)]);var c=this[Z4J.n6I][(O4I+g6I)][a];if(c)return c[(P4X+Z4J.g7I)](this[Z4J.n6I][(y3I+Z4J.w1I+Z4J.n6I+Z4J.i0I)],b);}
}
;f[v8I][(o5I+G1+w7+Z4J.n6I)]={}
;f[(v8I)][A2]={className:"",data:"",def:"",fieldInfo:"",id:"",label:"",labelInfo:"",name:null,type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
;f[(v1X+Z0I)][(o5I+Z4J.w1I+w8+w7+Z4J.n6I)][(u1+E2I+S3I+Z4J.F1I+R8I)]={type:c3X,name:c3X,classes:c3X,opts:c3X,host:c3X}
;f[v8I][(E1)][(w8+Z4J.w1I+o5I)]={container:c3X,label:c3X,labelInfo:c3X,fieldInfo:c3X,fieldError:c3X,fieldMessage:c3X}
;f[E1]={}
;f[E1][y1J]={init:function(){}
,open:function(){}
,close:function(){}
}
;f[E1][(c8I+e6J+Z0I+X6+Z4J.g7I+g6I)]={create:function(){}
,get:function(){}
,set:function(){}
,enable:function(){}
,disable:function(){}
}
;f[(m2J+Z4J.z5I+Z4J.n6I)][(Y9J+Z4J.i0I+S3I+M5X+Z4J.n6I)]={ajaxUrl:c3X,ajax:c3X,dataSource:c3X,domTable:c3X,opts:c3X,displayController:c3X,fields:{}
,order:[],id:-N0,displayed:!N0,processing:!N0,modifier:c3X,action:c3X,idSrc:c3X}
;f[E1][(N8+Z4J.R0I+Z4J.i0I+Y1J)]={label:c3X,fn:c3X,className:c3X}
;f[E1][(c8I+u2+v5I+k6I+Z4J.i0I+J5X)]={onReturn:(V3I+S3I+Z4J.i0I),onBlur:d5I,onBackground:T6,onComplete:d5I,onEsc:(r0J+u1),submit:u7X,focus:E0,buttons:!E0,title:!E0,message:!E0,drawType:!N0}
;f[(N9+Z4J.z5I+Z4J.Y8+Z4J.g7I)]={}
;var o=jQuery,n;f[p6J][(Z4J.z5I+B4X+j7I)]=o[(Z4J.q2+z0+Z4J.F1I+w8)](!0,{}
,f[E1][(N9+l7I+Z4J.g7I+G4X+t7+Z4J.i0I+k7X+Z4J.z5I+Z4J.z5I+Q2)],{init:function(){var P6I="_init";n[P6I]();return n;}
,open:function(a,b,c){if(n[(F4+G5I)])c&&c();else{n[(u5J)]=a;a=n[(F4+Z4J.x4I+o5I)][t0J];a[I7X]()[K7X]();a[(Z4J.Y8+k6I+A6X+w8)](b)[w1X](n[E0X][d5I]);n[(F4+Z4J.n6I+y3I+Z4J.w1I+j0J+Z4J.F1I)]=true;n[(n8J+y3I+Z4J.w1I+j0J)](c);}
}
,close:function(a,b){if(n[(F4+G5I)]){n[(F0X+I6I)]=a;n[M4](b);n[(J2+Z4J.F1I)]=false;}
else b&&b();}
,node:function(){var d2X="apper";return n[(F4+w8+S7)][(j0J+Z4J.o6I+d2X)][0];}
,_init:function(){var g9J="kgrou",V8I="acit",J6I="x_C",r9I="Li";if(!n[(F4+Z4J.o6I+Z4J.q2+Z4J.Y8+w8+Z4J.g7I)]){var a=n[E0X];a[(f2J+g3X+Z4J.q2+g3X)]=o((w8+P9X+Z4J.l0X+j3+R2+F4+r9I+X1+M6I+Z4J.w1I+J6I+Z4J.w1I+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I),n[E0X][(j0J+k8I+h1X)]);a[(j0J+Y8X+k6I+k6I+Q2)][v3J]((Z4J.w1I+k6I+V8I+Z4J.g7I),0);a[(N8+Z4J.Y8+Z4J.V2+g9J+Z4J.F1I+w8)][v3J]("opacity",0);}
}
,_show:function(a){var Y6X="_L",d6I='S',P5J='TED_Light',W0="sc",y4I="_scro",L6I="t_W",J9="_Cont",O1="D_Li",O5="ED_L",l8J="round",B1="kg",t6I="lc",Q3="ightCa",G7J="_h",f7X="ba",X3I="Mob",g4="Lig",F4X="orie",b=n[E0X];j[(F4X+Z4J.F1I+Z4J.i0I+z1+s4)]!==h&&o((N8+G1+Z4J.g7I))[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+Z4J.Y8+t8)]((j3+X6+u3+j3+F4+g4+E4J+N8+F2+F4+X3I+G6J+Z4J.q2));b[t0J][(Z4J.V2+t8)]("height","auto");b[(C9X+k6I+k6I+Q2)][v3J]({top:-n[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I)][f8X]}
);o((Q5X))[w1X](n[(F0X+Z4J.w1I+o5I)][(f7X+z9J+R3X+Z4J.R0I+F9X)])[(Z4J.Y8+k6I+k6I+q8+w8)](n[E0X][a3J]);n[(G7J+Z4J.q2+Q3+t6I)]();b[(C9X+N0J+Q2)][(E8X+k6I)]()[h2J]({opacity:1,top:0}
,a);b[(N8+Z4J.Y8+Z4J.V2+B1+l8J)][l8X]()[h2J]({opacity:1}
);b[d5I][p2X]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X7+i3J+U5+S3I+Z8I+y3I+M6I+Z4J.w1I+z0J),function(){n[(F0X+Z4J.i0I+Z4J.q2)][(Q4J+Z4J.w1I+Z4J.n6I+Z4J.q2)]();}
);b[O1I][(N8+h5J)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+O5+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J),function(){n[u5J][(Q6I+Z8I+S+F9X)]();}
);o((I1+Z4J.l0X+j3+X7+O1+Z8I+y3I+Z4J.i0I+N8+Z4J.w1I+z0J+J9+Z4J.q2+Z4J.F1I+L6I+Y8X+k6I+g6I+Z4J.o6I),b[(j0J+Z4J.o6I+Z4J.Y8+N0J+Q2)])[p2X]("click.DTED_Lightbox",function(a){var h7="sCl";o(a[d6J])[(y3I+Z4J.Y8+h7+Z1+Z4J.n6I)]("DTED_Lightbox_Content_Wrapper")&&n[u5J][(N8+Z4J.Y8+Z4J.V2+u3I+e2I+y4+Z4J.F1I+w8)]();}
);o(j)[(N8+Y0o+w8)]("resize.DTED_Lightbox",function(){var j5X="eigh";n[(F4+y3I+j5X+Z4J.i0I+G4X+Z4J.Y8+t6I)]();}
);n[(y4I+q5I+X6+Z4J.w1I+k6I)]=o("body")[(W0+P1X+Z4J.z5I+V2I+k6I)]();if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+g3X+n9+Z4J.w1I+Z4J.F1I)]!==h){a=o("body")[I7X]()[(o8X+Z4J.i0I)](b[(f7X+z9J+Z8I+k7X+V)])[(o8X+Z4J.i0I)](b[(i4I+Z4J.Y8+N0J+Q2)]);o((N8+i2X))[w1X]((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+P5J+Z4I+u4X+d6I+v0J+d9I+R7J+v9I+I0J));o((w8+P9X+Z4J.l0X+j3+X6+f0J+Y6X+S3I+Z8I+E4J+j7I+F4+x4+O2+Z4J.F1I))[(e0+g6I+F9X)](a);}
}
,_heightCalc:function(){var k5I="axHe",q3="y_",p0o="TE_Bod",B5J="eig",N3X="Footer",a=n[(E0X)],b=o(j).height()-n[P0I][x5J]*2-o("div.DTE_Header",a[(i4I+Z4J.Y8+N0J+Q2)])[u6I]()-o((H0J+g0J+Z4J.l0X+j3+X7+F4+N3X),a[a3J])[(Z4J.w1I+d3+Z4J.o6I+z8+B5J+y3I+Z4J.i0I)]();o((w8+S3I+g0J+Z4J.l0X+j3+p0o+q3+G4X+Z4J.w1I+Z4J.F1I+Z4J.i0I+q8+Z4J.i0I),a[a3J])[v3J]((o5I+k5I+h1J+y3I+Z4J.i0I),b);}
,_hide:function(a){var D0I="nt_",y9J="_Con",d2="TED_",T4J="scrollTop",p8X="remo",x2X="_Sh",z7J="tbo",Q1J="ED_Ligh",Z6I="nta",b=n[E0X];a||(a=function(){}
);if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+Z6I+Z4J.i0I+S3I+t7)]!==h){var c=o((H0J+g0J+Z4J.l0X+j3+X6+Q1J+z7J+z0J+x2X+o0I));c[(O9J+G6J+J4I+Z4J.q2+Z4J.F1I)]()[(K1X+C5I+V2I)]("body");c[V9I]();}
o((G8X+w8+Z4J.g7I))[(p8X+l9J+G4X+l7I+Z4J.n6I+Z4J.n6I)]("DTED_Lightbox_Mobile")[T4J](n[(F4+Z4J.n6I+m3J+Z4J.w1I+Z4J.z5I+g6J+k6I)]);b[a3J][(x8+Z4J.w1I+k6I)]()[(Z4J.Y8+Z4J.F1I+S3I+F6+Z4J.q2)]({opacity:0,top:n[P0I][f8X]}
,function(){o(this)[K7X]();a();}
);b[O1I][l8X]()[(Z4J.Y8+Z4J.F1I+S3I+o5I+z1+Z4J.q2)]({opacity:0}
,function(){var j6X="tach";o(this)[(y9I+j6X)]();}
);b[(Z4J.V2+Z4J.z5I+F8+Z4J.q2)][r0I]("click.DTED_Lightbox");b[O1I][(O3J+Z4X+F9X)]((Z9I+Z4J.V2+u3I+Z4J.l0X+j3+d2+U5+h1J+y3I+Z4J.i0I+j7I));o((w8+S3I+g0J+Z4J.l0X+j3+X6+u3+i3J+U5+S3I+G0+N8+Z4J.w1I+z0J+y9J+I6I+D0I+j0I+Z4J.o6I+e0+k6I+Q2),b[(j0J+Z4J.o6I+K1X+Z4J.q2+Z4J.o6I)])[r0I]("click.DTED_Lightbox");o(j)[(C1I+Z4J.F1I+w8)]("resize.DTED_Lightbox");}
,_dte:null,_ready:!1,_shown:!1,_dom:{wrapper:o((x5+m2I+v3+q2X+B2I+P7I+o5X+i8X+c2+V1X+q2X+c2+r6I+Z7X+I2X+P0J+v0J+c0X+Z4I+d9I+o2J+p4I+T2X+m3X+m8I+G9J+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r6I+E2+o6X+P0J+E3J+u4X+k8+d9I+v9I+c0X+q4I+S6+m8I+G9J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X+c2+r6I+V5X+V0I+v0J+z4+p4I+k8+d9I+v9I+c0X+V6+c0X+R4J+M4J+m8I+G9J+b0X+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+E2+s1J+T7I+w4J+c0X+q8X+O3+c0X+V6+c0X+Z1I+m2I+v3+o9+m2I+v3+o9+m2I+v3+o9+m2I+v3+y2)),background:o((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+c2+C7J+s9+T7I+N6J+f7+o2J+p4I+M3+l0I+N1I+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2)),close:o((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+c2+r6I+E2+Q3X+A5J+v0J+c0X+Z4I+d9I+x8J+P7I+s6J+m8I+Z1I+m2I+T7I+Y7J+y2)),content:null}
}
);n=f[(w8+S3I+Z4J.n6I+k6I+l7I+Z4J.g7I)][(u1I+Z8I+m9X+z0J)];n[(H0X+c8I)]={offsetAni:M2I,windowPadding:M2I}
;var m=jQuery,g;f[(w8+S3I+Z4J.n6I+E0I)][(Z4J.q2+f5X+w7+Z4J.w1I+g6I)]=m[(Z4J.q2+z0J+Z4J.i0I+q8+w8)](!0,{}
,f[(o5I+G1+M5J)][y1J],{init:function(a){g[u5J]=a;g[(z1J+N1X+Z4J.i0I)]();return g;}
,open:function(a,b,c){var k4I="how",x0o="ild",r6X="dCh",k2X="conte",E7X="dte";g[(F4+E7X)]=a;m(g[E0X][(k2X+Z4J.F1I+Z4J.i0I)])[I7X]()[(y9I+Z4J.i0I+N4+y3I)]();g[E0X][t0J][(e0+A6X+r6X+x0o)](b);g[E0X][t0J][R7](g[(F4+w8+S7)][(Z4J.V2+Z4J.z5I+j6)]);g[(n8J+k4I)](c);}
,close:function(a,b){g[u5J]=a;g[M4](b);}
,node:function(){var E5I="pper";return g[(E9J+o5I)][(i4I+Z4J.Y8+E5I)][0];}
,_init:function(){var J7X="ackg",j4I="pacity",b2J="cit",K5X="ndO",u7I="ack",L0="sb",T5="yle",E2J="_ready";if(!g[E2J]){g[E0X][(f2J+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)]=m("div.DTED_Envelope_Container",g[(F4+w8+S7)][(j0J+k8I+k6I+Q2)])[0];q[(Q5X)][(Z4J.Y8+k6I+g6I+Z4J.F1I+w8+G4X+w7X+w8)](g[(F4+w8+S7)][O1I]);q[(G8X+w8+Z4J.g7I)][R7](g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)]);g[(F0X+Z4J.w1I+o5I)][O1I][(x8+T5)][(g0J+S3I+L0+G6J+S3I+Z4J.i0I+Z4J.g7I)]="hidden";g[(E9J+o5I)][(N8+N4+n7I+Z4J.w1I+V)][e1J][(w8+r9X+V7I+Z4J.g7I)]=(B2X+t0+u3I);g[(G0X+t8+y4X+u7I+R3X+Z4J.R0I+K5X+o8I+b2J+Z4J.g7I)]=m(g[(F4+w8+S7)][(N8+u7I+R3X+Z4J.R0I+Z4J.F1I+w8)])[v3J]((Z4J.w1I+j4I));g[(E9J+o5I)][O1I][e1J][(w8+S3I+H2+Z4J.z5I+y3)]=(Z4J.F1I+t7+Z4J.q2);g[(F0X+S7)][(N8+J7X+k7X+O3J+w8)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][(g0J+r9X+Z4X+r7+Z4J.g7I)]=(g0J+r9X+o3J+Z4J.z5I+Z4J.q2);}
}
,_show:function(a){var f1I="velo",m2X="iz",Y4I="res",g2I="elop",B7X="_E",s9X="bin",E0J="velope",P3X="En",N6X="igh",L5="tHe",Q8X="cro",X1J="ndo",S7I="wi",A3X="fadeIn",A0J="ity",j1X="pac",k4X="ground",C0I="sBa",H0I="imat",O6J="oun",I1I="lock",n0I="backg",X4I="px",b7="tHei",U0="marginLeft",x0="wrappe",V8="offsetWidth",c7X="_heightCalc",V4J="achR",j9="_findAtt",u4="blo",h6I="acity",v0I="sty";a||(a=function(){}
);g[E0X][(H0X+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)][(v0I+m0I)].height="auto";var b=g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J];b[(Z4J.w1I+k6I+h6I)]=0;b[(w8+t0o+y3)]=(u4+Z4J.V2+u3I);var c=g[(j9+V4J+Z4J.w1I+j0J)](),e=g[c7X](),d=c[V8];b[p6J]=(o8X+G9X);b[V7J]=1;g[(F4+w8+S7)][(j0J+Y8X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J].width=d+(k6I+z0J);g[E0X][(x0+Z4J.o6I)][e1J][U0]=-(d/2)+"px";g._dom.wrapper.style.top=m(c).offset().top+c[(d6+c8I+Z4J.n6I+Z4J.q2+b7+Z8I+E4J)]+"px";g._dom.content.style.top=-1*e-20+(X4I);g[(E0X)][(Q6I+Z8I+S+Z4J.F1I+w8)][(v0I+Z4J.z5I+Z4J.q2)][(Z4J.w1I+k6I+Z4J.Y8+Z4J.V2+S3I+O4I)]=0;g[(E9J+o5I)][(n0I+Z4J.o6I+Z4J.w1I+Z4J.R0I+Z4J.F1I+w8)][e1J][(w8+S3I+Z4J.n6I+E0I)]=(N8+I1I);m(g[E0X][(n0I+Z4J.o6I+O6J+w8)])[(Q+H0I+Z4J.q2)]({opacity:g[(G0X+Z4J.n6I+C0I+z9J+k4X+s1+j1X+A0J)]}
,(Z4J.F1I+u1X+Z4J.Y8+Z4J.z5I));m(g[E0X][a3J])[A3X]();g[(Z4J.V2+Z4J.w1I+l1X)][(S7I+X1J+j0J+R0+Q8X+q5I)]?m("html,body")[h2J]({scrollTop:m(c).offset().top+c[(Z4J.w1I+c8I+C2+Z4J.q2+L5+N6X+Z4J.i0I)]-g[P0I][x5J]}
,function(){m(g[E0X][(f2J+d4J+Z4J.i0I)])[h2J]({top:0}
,600,a);}
):m(g[E0X][t0J])[h2J]({top:0}
,600,a);m(g[E0X][(Z4J.V2+Z4J.z5I+F8+Z4J.q2)])[p2X]((Q4J+M3J+u3I+Z4J.l0X+j3+R2+F4+P3X+E0J),function(){g[u5J][d5I]();}
);m(g[(F4+Z4J.x4I+o5I)][O1I])[(s9X+w8)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+f0J+B7X+Z4J.F1I+g0J+g2I+Z4J.q2),function(){var T1I="ound";g[u5J][(N8+Z4J.Y8+z9J+e2I+T1I)]();}
);m("div.DTED_Lightbox_Content_Wrapper",g[E0X][(b1X+g6I+Z4J.o6I)])[(p2X)]("click.DTED_Envelope",function(a){m(a[(Z4J.i0I+v6+Z8I+Z4J.A4)])[(y3I+Z4J.Y8+Z4J.n6I+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("DTED_Envelope_Content_Wrapper")&&g[(u5J)][O1I]();}
);m(j)[(Z4X+F9X)]((Y4I+m2X+Z4J.q2+Z4J.l0X+j3+R2+F4+u3+Z4J.F1I+f1I+k6I+Z4J.q2),function(){g[c7X]();}
);}
,_heightCalc:function(){var A6J="y_C",s7I="TE_",Y2I="eight",Z2X="ooter",E2X="TE_F",N5I="onten",A3I="tCa",h2X="hei",N6I="heightCalc";g[(P0I)][N6I]?g[P0I][(h2X+Z8I+y3I+A3I+Z4J.z5I+Z4J.V2)](g[(F0X+S7)][a3J]):m(g[E0X][(Z4J.V2+N5I+Z4J.i0I)])[(O9J+G6J+w8+C3X+Z4J.F1I)]().height();var a=m(j).height()-g[(H0X+c8I)][x5J]*2-m("div.DTE_Header",g[E0X][(b1X+k6I+Q2)])[(Z4J.w1I+Z4J.R0I+I6I+Z4J.o6I+z8+Z4J.q2+B4X)]()-m((I1+Z4J.l0X+j3+E2X+Z2X),g[E0X][(i4I+e0+k6I+Q2)])[(Z4J.w1I+d3+Z4J.o6I+z8+Y2I)]();m((I1+Z4J.l0X+j3+s7I+y4X+Z4J.w1I+w8+A6J+t7+Z4J.i0I+Z4J.q2+g3X),g[E0X][a3J])[(Z4J.V2+t8)]((o5I+F5+z8+Y2I),a);return m(g[u5J][Z6J][(i4I+Z4J.Y8+k6I+k6I+Z4J.q2+Z4J.o6I)])[(y4+Z4J.i0I+Z4J.q2+Z4J.o6I+w7I+S3I+G0)]();}
,_hide:function(a){var N7I="TED_L",q1X="offsetHeight";a||(a=function(){}
);m(g[E0X][t0J])[h2J]({top:-(g[(F4+w8+Z4J.w1I+o5I)][t0J][q1X]+50)}
,600,function(){m([g[E0X][a3J],g[E0X][O1I]])[O7I]("normal",a);}
);m(g[E0X][(Z4J.V2+A8I)])[r0I]((Q4J+M3J+u3I+Z4J.l0X+j3+N7I+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J));m(g[(E0X)][O1I])[(C1I+Z4J.F1I+w8)]("click.DTED_Lightbox");m("div.DTED_Lightbox_Content_Wrapper",g[(F0X+S7)][(i4I+Z4J.Y8+k6I+g6I+Z4J.o6I)])[(O3J+N8+h5J)]((Q4J+S3I+z9J+Z4J.l0X+j3+X7+i3J+U5+S3I+X1+M6I+F2));m(j)[r0I]("resize.DTED_Lightbox");}
,_findAttachRow:function(){var v3I="dt",a=m(g[(F0X+I6I)][Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]();return g[(Z4J.V2+M7J)][a7I]==="head"?a[Q2X]()[(Q0I+b4+Q2)]():g[u5J][Z4J.n6I][V8J]===(Z4J.V2+Z4J.o6I+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)?a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)]()[(W7X+l8)]():a[o1](g[(F4+v3I+Z4J.q2)][Z4J.n6I][z4X])[(W9I+Z4J.q2)]();}
,_dte:null,_ready:!1,_cssBackgroundOpacity:1,_dom:{wrapper:m((x5+m2I+v3+q2X+B2I+Z2J+i8X+c2+V1X+q2X+c2+K3I+p0J+v9I+p2+x3J+s5X+H4+H7J+H7J+m8I+G9J+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+c2+r6I+V5X+p4I+E2+i8I+l4+Y1+m2I+d9I+R7J+G6I+Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+C4J+p2+d9I+H7J+m8I+I1X+v0J+q4I+m2I+d9I+Y3X+N6J+Z1I+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+V5X+M8X+Y7J+B5+d9I+H7J+s9J+o8J+c0X+q4I+S6+T+Z1I+m2I+v3+o9+m2I+T7I+Y7J+y2))[0],background:m((x5+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+c2+n2+v9I+p2+d9I+B4I+L8+Q4I+i4J+D6X+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2))[0],close:m((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+J3+Y7J+X2X+B4I+U7J+d9I+u2I+Z9+c0X+T7I+A9I+A0+C8X+m2I+T7I+Y7J+y2))[0],content:null}
}
);g=f[(S0+E0I)][(J6+Z4J.w1I+k6I+Z4J.q2)];g[P0I]={windowPadding:K9I,heightCalc:c3X,attach:(Z4J.o6I+O2),windowScroll:!E0}
;f.prototype.add=function(a,b){var w2I="rder",b2I="nitFi",D9X="'. ",a0o="` ",b0J=" `",A4X="quir",e0X="dding";if(d[(S3I+T8X+Z4J.o6I+Y8X+Z4J.g7I)](a))for(var c=0,e=a.length;c<e;c++)this[(Z4J.Y8+N9I)](a[c]);else{c=a[i1X];if(c===h)throw (L8X+M6+W4J+Z4J.Y8+e0X+W4J+c8I+S3I+Z4J.q2+Z0I+v2I+X6+Q0I+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+Z4J.o6I+Z4J.q2+A4X+B4+W4J+Z4J.Y8+b0J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2+a0o+Z4J.w1I+Q8I+Q7X+Z4J.F1I);if(this[Z4J.n6I][(g5I+Z4J.n6I)][c])throw "Error adding field '"+c+(D9X+U4X+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.Y8+Z4J.z5I+Z4J.o6I+h7I+Z4J.g7I+W4J+Z4J.q2+z0J+S3I+x8+Z4J.n6I+W4J+j0J+Z9X+y3I+W4J+Z4J.i0I+h1I+Z4J.n6I+W4J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2);this[e9]((S3I+b2I+w7+w8),a);this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)][c]=new f[v8I](a,this[(Z4J.V2+l7I+Z4J.n6I+Z4J.n6I+B4)][g5I],this);b===h?this[Z4J.n6I][(u2+y9I+Z4J.o6I)][q7I](c):null===b?this[Z4J.n6I][(u2+w8+Z4J.q2+Z4J.o6I)][(O3J+w5+S3I+c8I+Z4J.i0I)](c):(e=d[a4](b,this[Z4J.n6I][q0X]),this[Z4J.n6I][(Z4J.w1I+w2I)][R7I](e+1,0,c));}
this[(F0X+S3I+H2+l7I+Z4J.g7I+i0o+Z4J.w1I+Z4J.o6I+w8+Z4J.q2+Z4J.o6I)](this[(u2+w8+Q2)]());return this;}
;f.prototype.background=function(){var O8X="grou",C0X="onBa",a=this[Z4J.n6I][M9][(C0X+z9J+O8X+Z4J.F1I+w8)];(N8+Z4J.z5I+Z4J.R0I+Z4J.o6I)===a?this[T6]():d5I===a?this[(J1X+Z4J.q2)]():(Z4+o5I+S3I+Z4J.i0I)===a&&this[(Z4J.n6I+Z4J.R0I+v2X+Z9X)]();return this;}
;f.prototype.blur=function(){var g2="_bl";this[(g2+Z4J.R0I+Z4J.o6I)]();return this;}
;f.prototype.bubble=function(a,b,c,e){var A3J="ostop",A4I="clu",K2="anima",q3X="bubbleP",s2X="prepend",G8I="bod",O8J="dTo",K7I='" /></div></div><div class="',D8I="able",q4="lin",S1X='"><div/></div>',z9X="bg",T9J="ses",N2I="bleNode",j8="resize.",f3I="_formO",H5X="dual",G8J="ivi",D6I="Pl",g2X="boolean",T5X="je",U9I="_tidy",l=this;if(this[U9I](function(){l[(N8+u0J+N8+Z4J.z5I+Z4J.q2)](a,b,e);}
))return this;d[(r9X+i1+l7I+Y0o+s1+N8+T5X+i8J)](b)?(e=b,b=h,c=!E0):g2X===typeof b&&(c=b,e=b=h);d[(r9X+D6I+Z4J.Y8+S3I+Z4J.F1I+s1+N8+Z4J.i5I+Z4J.q2+i8J)](c)&&(e=c,c=!E0);c===h&&(c=!E0);var e=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)]({}
,this[Z4J.n6I][h3][(N8+Z4J.R0I+e6)],e),k=this[(F4+w8+h2+R0+E5J+Z4J.V2+Z4J.q2)]((h5J+G8J+H5X),a,b);this[Z7I](a,k,(L5X+N8+N8+m0I));if(!this[(F4+G0J+Z4J.q2+Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)]((L5X+N8+N8+m0I)))return this;var f=this[(f3I+k6I+Z4J.i0I+J5X)](e);d(j)[(t7)](j8+f,function(){var S4I="eP";l[(N8+S2X+Z4J.z5I+S4I+F8+X3+Z4J.w1I+Z4J.F1I)]();}
);var i=[];this[Z4J.n6I][(N8+Z4J.R0I+N8+N2I+Z4J.n6I)]=i[o1I][(e0+k6I+Z4J.z5I+Z4J.g7I)](i,y(k,a7I));i=this[(Q4J+Z4J.Y8+Z4J.n6I+T9J)][z3X];k=d((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[z9X]+S1X);i=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X)+i[(b1X+h1X)]+(b0X+m2I+v3+q2X+B2I+Z2J+i8X)+i[(q4+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X)+i[(Z4J.i0I+D8I)]+(b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[(J1X+Z4J.q2)]+K7I+i[(E7I+S3I+Z4J.F1I+Z4J.i0I+Q2)]+(s4X+m2I+v3+y2));c&&(i[(Z4J.Y8+k6I+K4X+V2I)]((N8+i2X)),k[(Z4J.Y8+k6I+A6X+O8J)]((G8I+Z4J.g7I)));var c=i[(O9J+G6J+w8+C3X+Z4J.F1I)]()[(Z4J.q2+j1I)](E0),g=c[(Z4J.V2+y3I+G6J+J4I+q8)](),u=g[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]();c[(l4X+w8)](this[Z6J][M6X]);g[(k6I+C3X+k6I+q8+w8)](this[Z6J][y0o]);e[(o5I+B4+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]&&c[s2X](this[(Z6J)][i0X]);e[(Z4J.i0I+W6)]&&c[(k6I+Z4J.o6I+W2+Z4J.q2+Z4J.F1I+w8)](this[Z6J][J0I]);e[w4]&&g[(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(u0o+Q3I+h3X)]);var z=d()[o4J](i)[o4J](k);this[(W4I+Z4J.w1I+u1+v0+P7)](function(){var V3X="animat";z[(V3X+Z4J.q2)]({opacity:E0}
,function(){var v4J="size";z[(w8+Z4J.A4+N4+y3I)]();d(j)[t9J]((C3X+v4J+Z4J.l0X)+f);l[a6I]();}
);}
);k[F3J](function(){l[T6]();}
);u[F3J](function(){l[(F4+Z4J.V2+A8I)]();}
);this[(q3X+F8+S3I+Z4J.i0I+s4)]();z[(K2+I6I)]({opacity:N0}
);this[(F4+c8I+Z4J.w1I+v5J+Z4J.n6I)](this[Z4J.n6I][(S3I+Z4J.F1I+A4I+w8+Z4J.q2+o3+S3I+v1J)],e[(c8I+Z4J.w1I+E8)]);this[(F4+k6I+A3J+q8)]((L5X+N8+l3));return this;}
;f.prototype.bubblePosition=function(){var T0I="below",e4J="rW",W1J="_Line",a=d((w8+S3I+g0J+Z4J.l0X+j3+X7+F4+p1X+L7X+Z4J.z5I+Z4J.q2)),b=d((I1+Z4J.l0X+j3+X6+u3+F4+p1X+N8+N8+m0I+W1J+Z4J.o6I)),c=this[Z4J.n6I][(N8+S2X+Z4J.z5I+P2I+G1+Z4J.q2+Z4J.n6I)],e=0,l=0,k=0,f=0;d[(J5I+O9J)](c,function(a,b){var f7I="Wid",c=d(b)[(d6+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I)]();e+=c.top;l+=c[s2I];k+=c[(m0I+f2)]+b[(Z4J.w1I+f4+Z4J.n6I+Z4J.A4+f7I+Z4J.i0I+y3I)];f+=c.top+b[(Z4J.w1I+c8I+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I+w7I+S3I+Z8I+y3I+Z4J.i0I)];}
);var e=e/c.length,l=l/c.length,k=k/c.length,f=f/c.length,c=e,i=(l+k)/2,g=b[(y4+Z4J.i0I+Z4J.q2+e4J+S3I+w8+Z4J.i0I+y3I)](),u=i-g/2,g=u+g,h=d(j).width();a[(Z4J.V2+Z4J.n6I+Z4J.n6I)]({top:c,left:i}
);b.length&&0>b[(Z4J.w1I+c8I+C2+Z4J.q2+Z4J.i0I)]().top?a[v3J]("top",f)[(o4J+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((N8+w7+Z4J.w1I+j0J)):a[(Z4J.o6I+Q8+Z4J.w1I+l9J+n1+Z4J.n6I)]((T0I));g+15>h?b[(Z4J.V2+t8)]("left",15>u?-(u-15):-(g-h+15)):b[(Z4J.V2+t8)]((m0I+f2),15>u?-(u-15):0);return this;}
;f.prototype.buttons=function(a){var b=this;E6J===a?a=[{label:this[k1I][this[Z4J.n6I][V8J]][(Z4J.n6I+Z4J.R0I+l6X)],fn:function(){this[(Z4+o5I+Z9X)]();}
}
]:d[(Y3I+Y8X+Z4J.g7I)](a)||(a=[a]);d(this[(Z6J)][w4]).empty();d[s8X](a,function(a,e){var W3I="keypress",x8X="keyup",y8I="lassN";(Z4J.n6I+Z4J.i0I+b7J+Z8I)===typeof e&&(e={label:e,fn:function(){this[(Z4J.n6I+Z4J.R0I+N8+o5I+S3I+Z4J.i0I)]();}
}
);d((M4X+N8+Z4J.R0I+Z4J.i0I+Q3I+Z4J.F1I+i9X),{"class":b[T4][(a8I+o5I)][(N8+P2X+Z4J.w1I+Z4J.F1I)]+(e[(Z4J.V2+y8I+a0+Z4J.q2)]?W4J+e[(Z4J.V2+Z4J.z5I+Z4J.Y8+t8+J1+Z4J.Y8+A1J)]:g0I)}
)[(y3I+Z4J.i0I+t3J)](Z4J.T5J===typeof e[s0I]?e[(s0I)](b):e[(Z4J.z5I+Z4J.w2+w7)]||g0I)[l5X]((Z4J.i0I+Z4J.w2+S3I+Z4J.F1I+y9I+z0J),E0)[(Z4J.w1I+Z4J.F1I)](x8X,function(a){a2I===a[(l6+Z4J.g7I+G4X+G1+Z4J.q2)]&&e[(Z4J.h0I)]&&e[(Z4J.h0I)][(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](b);}
)[t7](W3I,function(a){a2I===a[D2J]&&a[F1]();}
)[t7]((Z4J.V2+Z4J.z5I+S3I+z9J),function(a){a[F1]();e[(Z4J.h0I)]&&e[(c8I+Z4J.F1I)][(d5J+Z4J.z5I)](b);}
)[(e0+k6I+Z4J.q2+F9X+V2I)](b[Z6J][(L5X+X4J+Z4J.F1I+Z4J.n6I)]);}
);return this;}
;f.prototype.clear=function(a){var R8X="fie",b=this,c=this[Z4J.n6I][(R8X+Z4J.z5I+w8+Z4J.n6I)];X3X===typeof a?(c[a][(y9I+z6X+Z4J.w1I+Z4J.g7I)](),delete  c[a],a=d[(Y0o+X0+Y8X+Z4J.g7I)](a,this[Z4J.n6I][(i5X+Z4J.o6I)]),this[Z4J.n6I][(u2+y9I+Z4J.o6I)][R7I](a,N0)):d[s8X](this[C7I](a),function(a,c){var k2I="clear";b[k2I](c);}
);return this;}
;f.prototype.close=function(){this[w3X](!N0);return this;}
;f.prototype.create=function(a,b,c,e){var C1J="Open",X8J="ybe",u6="leM",O0J="Cr",Z6X="vent",Q9="_dis",K8="_actionClass",c9I="Arg",T7X="ru",l=this,k=this[Z4J.n6I][Y8I],f=N0;if(this[(F4+Z4J.i0I+C8I)](function(){l[d0I](a,b,c,e);}
))return this;y9X===typeof a&&(f=a,a=b,b=c);this[Z4J.n6I][(R0J+o3+m1J+Z4J.n6I)]={}
;for(var i=E0;i<f;i++)this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+I5J+w5I)][i]={fields:this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)]}
;f=this[(F4+Z4J.V2+T7X+w8+c9I+Z4J.n6I)](a,b,c,e);this[Z4J.n6I][(Z4J.Y8+i8J+S3I+Z4J.w1I+Z4J.F1I)]=(m3J+J5I+I6I);this[Z4J.n6I][z4X]=c3X;this[(w8+S7)][(c8I+Z4J.w1I+t6X)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][p6J]=h3J;this[K8]();this[(Q9+M7I+Z4J.Y8+Z4J.g7I+i0o+Z4J.w1I+I3X+Q2)](this[(b9+Z4J.q2+Z0I+Z4J.n6I)]());d[(e9I+y3I)](k,function(a,b){var N2="eset",k9J="iR";b[(o5I+Z4J.R0I+S2J+k9J+N2)]();b[(u1+Z4J.i0I)](b[D1I]());}
);this[(N9J+Z6X)]((Y0o+Z9X+O0J+J5I+I6I));this[(F4+Z4J.Y8+Z4J.n6I+Z4J.n6I+Q8+N8+u6+Z4J.Y8+S3I+Z4J.F1I)]();this[x6X](f[(Z4J.w1I+Q8I+Z4J.n6I)]);f[(o5I+Z4J.Y8+X8J+C1J)]();return this;}
;f.prototype.dependent=function(a,b,c){if(d[(Y3I+Z4J.o6I+y3)](a)){for(var e=0,l=a.length;e<l;e++)this[(w8+W2+C5I+q8+Z4J.i0I)](a[e],b,c);return this;}
var k=this,f=this[(b9+Q9X)](a),i={type:"POST",dataType:"json"}
,c=d[(K8X+Z4J.F1I+w8)]({event:"change",data:null,preUpdate:null,postUpdate:null}
,c),g=function(a){var T0X="pdate",S6J="Upd",k4="rror",l4I="preUpdate",U8="eUpd";c[(G0J+U8+Z4J.Y8+I6I)]&&c[l4I](a);d[s8X]({labels:(b3I+w7),options:"update",values:(g0J+X0I),messages:"message",errors:(Z4J.q2+k4)}
,function(b,c){a[b]&&d[(J5I+Z4J.V2+y3I)](a[b],function(a,b){k[(c8I+S3I+Q9X)](a)[c](b);}
);}
);d[s8X](["hide","show","enable",(w8+S3I+Z4J.n6I+Z4J.w2+Z4J.z5I+Z4J.q2)],function(b,c){if(a[c])k[c](a[c]);}
);c[(m0J+Z4J.i0I+S6J+Z4J.Y8+Z4J.i0I+Z4J.q2)]&&c[(m0J+Z4J.i0I+D7+T0X)](a);}
;d(f[o0o]())[(Z4J.w1I+Z4J.F1I)](c[(Z4J.q2+k6+Z4J.i0I)],function(a){if(-1!==d[a4](a[(Z4J.i0I+u2J+Z4J.q2+Z4J.i0I)],f[j0X]()[(Q3I+T0)]())){a={}
;a[C6X]=k[Z4J.n6I][(R0J+o3+e6J+r7I)]?y(k[Z4J.n6I][Z3J],(Z4J.C6J+Z4J.i0I+Z4J.Y8)):null;a[o1]=a[C6X]?a[(k7X+j0J+Z4J.n6I)][0]:null;a[(e7J+B8I+Z4J.n6I)]=k[y1]();if(c.data){var e=c.data(a);e&&(c.data=e);}
(c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b?(a=b(f[(y1)](),a,g))&&g(a):(d[T3J](b)?d[(p5+N5X+w8)](i,b):i[(Z4J.R0I+G6X)]=b,d[(Y7+F5)](d[(p5+Z4J.i0I+Z4J.q2+F9X)](i,{url:b,data:a,success:g}
)));}
}
);return this;}
;f.prototype.disable=function(a){var b=this[Z4J.n6I][Y8I];d[s8X](this[C7I](a),function(a,e){b[e][(w8+S3I+Z4J.n6I+G1I+Z4J.q2)]();}
);return this;}
;f.prototype.display=function(a){return a===h?this[Z4J.n6I][R8J]:this[a?Y5X:(J1X+Z4J.q2)]();}
;f.prototype.displayed=function(){return d[(A9J+k6I)](this[Z4J.n6I][Y8I],function(a,b){return a[R8J]()?b:c3X;}
);}
;f.prototype.displayNode=function(){var R4I="yCo";return this[Z4J.n6I][(N9+Z4J.z5I+Z4J.Y8+R4I+Z4J.F1I+Z4J.i0I+Z4J.o6I+A0I+m0I+Z4J.o6I)][(Z4J.F1I+G1+Z4J.q2)](this);}
;f.prototype.edit=function(a,b,c,e,d){var D5="ayb",a5J="ormOpt",e7="_assembleMain",x3="aSo",g0="rgs",y6X="crudA",m1I="_ti",k=this;if(this[(m1I+g3I)](function(){k[(u9+S3I+Z4J.i0I)](a,b,c,e,d);}
))return this;var f=this[(F4+y6X+g0)](b,c,e,d);this[Z7I](a,this[(F4+Z4J.C6J+Z4J.i0I+x3+Z4J.R0I+Z4J.o6I+Z9J)]((c8I+S3I+Z4J.q2+Z4J.z5I+w5I),a),(A9J+S3I+Z4J.F1I));this[e7]();this[(B9J+a5J+Q7X+Z4J.F1I+Z4J.n6I)](f[(V7+Z4J.I2I)]);f[(o5I+D5+Z4J.q2+s1+A6X)]();return this;}
;f.prototype.enable=function(a){var b=this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)];d[(e9I+y3I)](this[C7I](a),function(a,e){b[e][(q8+Z4J.Y8+N8+m0I)]();}
);return this;}
;f.prototype.error=function(a,b){var L0I="mE";b===h?this[(F4+o5I+B4+Z4J.n6I+L9+Z4J.q2)](this[(w8+Z4J.w1I+o5I)][(a8I+L0I+Z4J.o6I+Z4J.o6I+u2)],a):this[Z4J.n6I][Y8I][a].error(b);return this;}
;f.prototype.field=function(a){return this[Z4J.n6I][Y8I][a];}
;f.prototype.fields=function(){return d[(I0)](this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)],function(a,b){return b;}
);}
;f.prototype.get=function(a){var H3="Arr",b=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)];a||(a=this[(v7+w5I)]());if(d[(S3I+Z4J.n6I+H3+Z4J.Y8+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){c[d]=b[d][(n6+Z4J.i0I)]();}
);return c;}
return b[a][R5]();}
;f.prototype.hide=function(a,b){var r9J="dNam",C4="_fi",c=this[Z4J.n6I][Y8I];d[(s8X)](this[(C4+w7+r9J+B4)](a),function(a,d){c[d][(y3I+S3I+y9I)](b);}
);return this;}
;f.prototype.inError=function(a){var w6J="inError",J8X="isi",s0="rmE";if(d(this[(w8+Z4J.w1I+o5I)][(s8+s0+Z4J.o6I+Z4J.o6I+u2)])[r9X]((J0o+g0J+J8X+B2X+Z4J.q2)))return !0;for(var b=this[Z4J.n6I][(c8I+e6J+Z4J.z5I+w5I)],a=this[C7I](a),c=0,e=a.length;c<e;c++)if(b[a[c]][w6J]())return !0;return !1;}
;f.prototype.inline=function(a,b,c){var I0X="_closeReg",S6I="_Fie",m4X="TE_I",J4='_But',P5I='nl',K0I='I',z7='eld',S2='_F',a8='ne',r3='TE_Inli',i7I='nlin',W8X='TE_I',i1I="contents",s3I="_edi",C6="inli",R2X="tid",j1J="nli",y4J="_dat",U8X="inl",e=this;d[T3J](b)&&(c=b,b=h);var c=d[H3I]({}
,this[Z4J.n6I][h3][(U8X+S3I+G9X)],c),l=this[(y4J+Z4J.Y8+R0+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z9J)]("individual",a,b),k,f,i=0,g,u=!1;d[s8X](l,function(a,b){var e7X="han",c8X="ore",y5X="annot";if(i>0)throw (G4X+y5X+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+e7X+W4J+Z4J.w1I+G9X+W4J+Z4J.o6I+O2+W4J+S3I+j1J+G9X+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);k=d(b[a7I][0]);g=0;d[s8X](b[y0X],function(a,b){var N8X="nn",K2J="Ca";if(g>0)throw (K2J+N8X+T8+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+C3I+Z4J.F1I+W4J+Z4J.w1I+G9X+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+S3I+Z4J.F1I+Z4J.z5I+Y5J+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);f=b;g++;}
);i++;}
);if(d("div.DTE_Field",k).length||this[(F4+R2X+Z4J.g7I)](function(){e[(C6+Z4J.F1I+Z4J.q2)](a,b,c);}
))return this;this[(s3I+Z4J.i0I)](a,l,"inline");var z=this[(F4+a8I+v5I+k6I+p9X+Z4J.F1I+Z4J.n6I)](c);if(!this[b6I]((C6+Z4J.F1I+Z4J.q2)))return this;var O=k[i1I]()[(y9I+Z4J.i0I+Z4J.Y8+O9J)]();k[(Z4J.Y8+N0J+Z4J.q2+F9X)](d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+r6I+E2+q2X+c2+W8X+i7I+m8I+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r3+a8+S2+T7I+z7+e4X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X+c2+K3I+p4I+K0I+P5I+T7I+a8+J4+c0X+o8J+n9J+t3X+m2I+v3+y2)));k[T9X]((w8+S3I+g0J+Z4J.l0X+j3+m4X+j1J+G9X+S6I+Z0I))[w1X](f[(o8X+y9I)]());c[w4]&&k[(K3J+w8)]("div.DTE_Inline_Buttons")[(K1X+Z4J.q2+F9X)](this[Z6J][w4]);this[I0X](function(a){u=true;d(q)[(t9J)]((Q4J+S3I+z9J)+z);if(!a){k[(Z4J.V2+S3J+Z4J.q2+Z4J.F1I+Z4J.I2I)]()[K7X]();k[w1X](O);}
e[a6I]();}
);setTimeout(function(){if(!u)d(q)[t7]((Q4J+M3J+u3I)+z,function(a){var s9I="aren",H2X="peFn",x9="addBack",b=d[(c8I+Z4J.F1I)][x9]?"addBack":"andSelf";!f[(L9J+H2X)]("owns",a[(Z4J.i0I+u2J+Z4J.A4)])&&d[(S3I+Z4J.F1I+X0+Z4J.o6I+Z4J.Y8+Z4J.g7I)](k[0],d(a[(B7+Z4J.o6I+n6+Z4J.i0I)])[(k6I+s9I+Z4J.i0I+Z4J.n6I)]()[b]())===-1&&e[(T6)]();}
);}
,0);this[v6I]([f],c[(c8I+t0+q5J)]);this[(j6J+F8+Q3I+A6X)]((Y0o+Z4J.z5I+Y5J));return this;}
;f.prototype.message=function(a,b){var R0X="formInf",s5="_message";b===h?this[s5](this[(w8+Z4J.w1I+o5I)][(R0X+Z4J.w1I)],a):this[Z4J.n6I][Y8I][a][(w6+Z4J.n6I+i5)](b);return this;}
;f.prototype.mode=function(){return this[Z4J.n6I][V8J];}
;f.prototype.modifier=function(){var T4I="ier";return this[Z4J.n6I][(o5I+Z4J.w1I+w8+S3I+c8I+T4I)];}
;f.prototype.multiGet=function(a){var j7="Get",b=this[Z4J.n6I][Y8I];a===h&&(a=this[(c8I+S3I+w7+w8+Z4J.n6I)]());if(d[(r9X+U4X+P8J+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){var f8="tiG";c[d]=b[d][(p6+f8+Z4J.q2+Z4J.i0I)]();}
);return c;}
return b[a][(o5I+I8I+S3I+j7)]();}
;f.prototype.multiSet=function(a,b){var l9X="Objec",t7J="Plain",c=this[Z4J.n6I][Y8I];d[(S3I+Z4J.n6I+t7J+l9X+Z4J.i0I)](a)&&b===h?d[(J5I+Z4J.V2+y3I)](a,function(a,b){var A3="tiS";c[a][(p6+A3+Z4J.A4)](b);}
):c[a][C2J](b);return this;}
;f.prototype.node=function(a){var b=this[Z4J.n6I][(b9+v1J)];a||(a=this[(Z4J.w1I+Z4J.o6I+l8)]());return d[(w2J+U9X+Z4J.Y8+Z4J.g7I)](a)?d[(I0)](a,function(a){return b[a][(Z4J.F1I+G1+Z4J.q2)]();}
):b[a][(Z4J.F1I+O1X)]();}
;f.prototype.off=function(a,b){var c0J="ntN";d(this)[(Z4J.w1I+f4)](this[(N9J+g0J+Z4J.q2+c0J+a0+Z4J.q2)](a),b);return this;}
;f.prototype.on=function(a,b){d(this)[(t7)](this[(F4+f0X+Z4J.F1I+J8+Z4J.Y8+o5I+Z4J.q2)](a),b);return this;}
;f.prototype.one=function(a,b){d(this)[j7J](this[(F4+Z4J.q2+k6+J8+Z4J.Y8+A1J)](a),b);return this;}
;f.prototype.open=function(){var h9="ditO",W8="mai",U7I="seReg",I2="_clo",d7="eor",f3="splay",a=this;this[(F0X+S3I+f3+v0+d7+w8+Z4J.q2+Z4J.o6I)]();this[(I2+U7I)](function(){a[Z4J.n6I][(H0J+H2+c5J+G4X+S3J+k7X+Z4J.z5I+Z4J.z5I+Z4J.q2+Z4J.o6I)][(Z4J.V2+K8I+u1)](a,function(){var L1J="yna",o4X="arD",m9="_cle";a[(m9+o4X+L1J+o5I+S3I+Z4J.V2+s3X+s8)]();}
);}
);if(!this[b6I]((W8+Z4J.F1I)))return this;this[Z4J.n6I][(w8+t0o+y3+N7J+g3X+k7X+Z4J.z5I+Z4J.z5I+Q2)][(Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)](this,this[Z6J][(j0J+Z4J.o6I+e0+k6I+Q2)]);this[v6I](d[(o5I+e0)](this[Z4J.n6I][(i5X+Z4J.o6I)],function(b){return a[Z4J.n6I][(c8I+S3I+w7+w8+Z4J.n6I)][b];}
),this[Z4J.n6I][(Z4J.q2+h9+k6I+Z4J.i0I+Z4J.n6I)][O6I]);this[(j6J+Z4J.w1I+E8X+A6X)]((e2J));return this;}
;f.prototype.order=function(a){var J0X="ide",E6I="sort",P7X="ort",t2="sArra";if(!a)return this[Z4J.n6I][q0X];arguments.length&&!d[(S3I+t2+Z4J.g7I)](a)&&(a=Array.prototype.slice.call(arguments));if(this[Z4J.n6I][q0X][u4I]()[(Z4J.n6I+P7X)]()[W6I](F6X)!==a[(Z4J.n6I+u1I+Z4J.V2+Z4J.q2)]()[E6I]()[W6I](F6X))throw (U4X+Z4J.z5I+Z4J.z5I+W4J+c8I+m1J+Z4J.n6I+p5X+Z4J.Y8+F9X+W4J+Z4J.F1I+Z4J.w1I+W4J+Z4J.Y8+w8+w8+S3I+Z4J.i0I+Q7X+Z4J.F1I+Z4J.Y8+Z4J.z5I+W4J+c8I+S3I+w7+w5I+p5X+o5I+q5J+Z4J.i0I+W4J+N8+Z4J.q2+W4J+k6I+k7X+g0J+J0X+w8+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+I3X+Z4J.q2+M8J+Z4J.l0X);d[H3I](this[Z4J.n6I][q0X],a);this[L3J]();return this;}
;f.prototype.remove=function(a,b,c,e,l){var B3="maybeOpen",M0X="Ma",h4X="emble",m5I="tiRe",n0o="tMul",f3J="ini",F5X="nCl",c8="ditF",e6I="_dataS",I5X="_crudArgs",k=this;if(this[(F4+Z4J.i0I+C8I)](function(){k[V9I](a,b,c,e,l);}
))return this;a.length===h&&(a=[a]);var f=this[I5X](b,c,e,l),i=this[(e6I+E5J+Z9J)]((g5I+Z4J.n6I),a);this[Z4J.n6I][(M1J+S3I+t7)]=(Z4J.o6I+Q8+I4+Z4J.q2);this[Z4J.n6I][z4X]=a;this[Z4J.n6I][(Z4J.q2+c8+m1J+Z4J.n6I)]=i;this[(Z4J.x4I+o5I)][y0o][(Z4J.n6I+Z4J.i0I+Z4J.g7I+Z4J.z5I+Z4J.q2)][(w8+r9X+M7I+y3)]=D9I;this[(y7J+m1+F5X+Z1+Z4J.n6I)]();this[(N9J+l9J+g3X)]((S3I+N1X+Z4J.i0I+i0o+F2X),[y(i,(o8X+y9I)),y(i,(Z4J.C6J+B7)),a]);this[(F4+f0X+Z4J.F1I+Z4J.i0I)]((f3J+n0o+m5I+o5I+I4+Z4J.q2),[i,a]);this[(F4+L1+h4X+M0X+Y0o)]();this[x6X](f[l5J]);f[B3]();f=this[Z4J.n6I][M9];c3X!==f[(s8+Z4J.V2+q5J)]&&d((N8+Z4J.R0I+E2I+t7),this[(Z6J)][(N8+n4J+Z4J.i0I+p3J)])[(Z4J.q2+j1I)](f[O6I])[(O6I)]();return this;}
;f.prototype.set=function(a,b){var c=this[Z4J.n6I][(Y8I)];if(!d[T3J](a)){var e={}
;e[a]=b;a=e;}
d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](a,function(a,b){c[a][Y9J](b);}
);return this;}
;f.prototype.show=function(a,b){var c=this[Z4J.n6I][(c8I+S3I+w7+w5I)];d[(s8X)](this[C7I](a),function(a,d){c[d][(w5+O2)](b);}
);return this;}
;f.prototype.submit=function(a,b,c,e){var l=this,f=this[Z4J.n6I][Y8I],w=[],i=E0,g=!N0;if(this[Z4J.n6I][y2X]||!this[Z4J.n6I][(N4+t1I+t7)])return this;this[(F4+G0J+Z4J.w1I+Y2J+C8)](!E0);var h=function(){w.length!==i||g||(g=!0,l[(n8J+F7X+Z4J.i0I)](a,b,c,e));}
;this.error();d[(e9I+y3I)](f,function(a,b){var N0X="Erro";b[(Y0o+N0X+Z4J.o6I)]()&&w[q7I](a);}
);d[s8X](w,function(a,b){f[b].error("",function(){i++;h();}
);}
);h();return this;}
;f.prototype.title=function(a){var r0="unc",T3="lasses",b=d(this[(w8+Z4J.w1I+o5I)][(W7X+w8+Z4J.q2+Z4J.o6I)])[(Z4J.V2+y3I+S3I+Z4J.z5I+w8+C3X+Z4J.F1I)](F0J+this[(Z4J.V2+T3)][(y3I+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I)][t0J]);if(a===h)return b[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();(c8I+r0+t1I+Z4J.w1I+Z4J.F1I)===typeof a&&(a=a(this,new r[(q1+S3I)](this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])));b[(h0J+Z4J.z5I)](a);return this;}
;f.prototype.val=function(a,b){return b===h?this[R5](a):this[Y9J](a,b);}
;var p=r[m7J][h5X];p((Z4J.q2+w8+n2I+G2X),function(){return v(this);}
);p((k7X+j0J+Z4J.l0X+Z4J.V2+Z4J.o6I+J5I+Z4J.i0I+Z4J.q2+G2X),function(a){var b=v(this);b[(A1X+Z4J.Y8+Z4J.i0I+Z4J.q2)](B(b,a,(Z4J.V2+C3X+z1+Z4J.q2)));return this;}
);p(w4I,function(a){var b=v(this);b[(Z4J.q2+w8+Z9X)](this[E0][E0],B(b,a,(Z4J.q2+H0J+Z4J.i0I)));return this;}
);p((Z4J.o6I+O2+Z4J.n6I+l2X+Z4J.q2+w8+S3I+Z4J.i0I+G2X),function(a){var b=v(this);b[R0J](this[E0],B(b,a,(u9+Z9X)));return this;}
);p((o1+l2X+w8+Z4J.q2+m0I+I6I+G2X),function(a){var b=v(this);b[V9I](this[E0][E0],B(b,a,V9I,N0));return this;}
);p((C6X+l2X+w8+Z4J.q2+Z4J.z5I+Y0X+G2X),function(a){var b=v(this);b[V9I](this[0],B(b,a,"remove",this[0].length));return this;}
);p(T3I,function(a,b){var p0X="nl";a?d[T3J](a)&&(b=a,a=(S3I+p0X+S3I+Z4J.F1I+Z4J.q2)):a=(S3I+p0X+Y0o+Z4J.q2);v(this)[a](this[E0][E0],b);return this;}
);p((G1J+l2X+Z4J.q2+o6+G2X),function(a){v(this)[z3X](this[E0],a);return this;}
);p(w0J,function(a,b){return f[(J8J+B4)][a][b];}
);p((J8J+Z4J.q2+Z4J.n6I+G2X),function(a,b){var f6X="les";if(!a)return f[(J8J+Z4J.q2+Z4J.n6I)];if(!b)return f[(c8I+S3I+f6X)][a];f[G0I][a]=b;return this;}
);d(q)[t7](R3,function(a,b,c){var C0o="ile";(w8+Z4J.i0I)===a[(i1X+Z4J.n6I+k6I+Z4J.Y8+Z9J)]&&c&&c[(c8I+C0o+Z4J.n6I)]&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](c[(b9+m0I+Z4J.n6I)],function(a,b){f[(b9+Z4J.z5I+Z4J.q2+Z4J.n6I)][a]=b;}
);}
);f.error=function(a,b){var Q5J="bles",q5X="atat",h0X="://",w8I="ps";throw b?a+(W4J+o3+u2+W4J+o5I+Z4J.w1I+C3X+W4J+S3I+Z4J.F1I+c8I+Z4J.w1I+Z4J.o6I+o5I+n9+Z4J.w1I+Z4J.F1I+p5X+k6I+Z4J.z5I+J5I+u1+W4J+Z4J.o6I+Z4J.q2+c8I+Z4J.q2+Z4J.o6I+W4J+Z4J.i0I+Z4J.w1I+W4J+y3I+E2I+w8I+h0X+w8+q5X+Z4J.Y8+Q5J+Z4J.l0X+Z4J.F1I+Z4J.q2+Z4J.i0I+w0X+Z4J.i0I+Z4J.F1I+w0X)+b:a;}
;f[z4J]=function(a,b,c){var e,l,f,b=d[(Z4J.q2+z0J+I6I+F9X)]({label:(Z4J.z5I+Z4J.w2+w7),value:"value"}
,b);if(d[(S3I+Z4J.n6I+T0)](a)){e=0;for(l=a.length;e<l;e++)f=a[e],d[(r9X+i1+l7I+Y0o+s1+Z4J.c4X+K3X)](f)?c(f[b[o0X]]===h?f[b[(Z4J.z5I+Z4J.w2+w7)]]:f[b[(o0X)]],f[b[s0I]],e):c(f,f,e);}
else e=0,d[s8X](a,function(a,b){c(b,a,e);e++;}
);}
;f[(Z4J.n6I+Z4J.Y8+p1+x1+w8)]=function(a){return a[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+N4+Z4J.q2)](/\./g,F6X);}
;f[r2]=function(a,b,c,e,l){var L4X="readAsDataURL",c0o="<i>Uploading file</i>",L0J="Te",k=new FileReader,w=E0,i=[];a.error(b[(r4I+Z4J.q2)],"");e(b,b[(b9+Z4J.z5I+Z4J.q2+i0o+b4+L0J+z0J+Z4J.i0I)]||c0o);k[(t7+Z4J.z5I+Z4J.w1I+b4)]=function(){var r2J="rro",u0X="son",R2J="reS",R1I="ied",Z1X="No",O3X="ja",d7J="ajax",U4I="aja",V2X="ajaxData",I1J="uploadField",P4I="ploa",g=new FormData,h;g[w1X]((M1J+s4),(Z4J.R0I+P4I+w8));g[(Z4J.Y8+X1I+w8)](I1J,b[i1X]);g[(f1+Z4J.F1I+w8)](r2,c[w]);b[V2X]&&b[(Z4J.Y8+Y9I+Z)](g);if(b[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)])h=b[(Z4J.Y8+Y9I)];else if((x8+Z4J.o6I+B8J)===typeof a[Z4J.n6I][(U4I+z0J)]||d[T3J](a[Z4J.n6I][d7J]))h=a[Z4J.n6I][(Z4J.Y8+O3X+z0J)];if(!h)throw (Z1X+W4J+U4X+O3X+z0J+W4J+Z4J.w1I+Q8I+s4+W4J+Z4J.n6I+k6I+Z4J.q2+Z4J.V2+t1J+R1I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8+W4J+k6I+U4J+Z8I+F6X+S3I+Z4J.F1I);(Z4J.n6I+Z4J.i0I+Z4J.o6I+B8J)===typeof h&&(h={url:h}
);var z=!N0;a[t7]((k6I+R2J+Z4J.R0I+N8+o5I+Z9X+Z4J.l0X+j3+X7+F4+D7+k6I+Z4J.z5I+y5J),function(){z=!E0;return !N0;}
);d[(Z4J.Y8+Y9I)](d[(Z4J.q2+z0+F9X)]({}
,h,{type:(E7I+x8),data:g,dataType:(Z4J.i5I+u0X),contentType:!1,processData:!1,xhr:function(){var Q0J="onloadend",g7="ogr",T6J="pload",D4X="axSe",a=d[(Y7+D4X+Z4J.i0I+t1I+x3X)][(z0J+y3I+Z4J.o6I)]();a[(Z4J.R0I+T6J)]&&(a[(s3J+K8I+Z4J.Y8+w8)][(Z4J.w1I+Z4J.F1I+G0J+g7+Z4J.q2+Z4J.n6I+Z4J.n6I)]=function(a){var v1I="toFixed",r5X="loaded",k7I="lengthComputable";a[k7I]&&(a=(100*(a[r5X]/a[(Q3I+Z4J.i0I+Z4J.Y8+Z4J.z5I)]))[v1I](0)+"%",e(b,1===c.length?a:w+":"+c.length+" "+a));}
,a[r2][Q0J]=function(){e(b);}
);return a;}
,success:function(e){var I8="aURL",q6="adAsD",X0X="cc";a[(t9J)]("preSubmit.DTE_Upload");if(e[z0o]&&e[(c8I+S3I+Z4J.q2+Z0I+u3+U9X+Z4J.w1I+Z4J.o6I+Z4J.n6I)].length)for(var e=e[(v7+w8+u3+r2J+B9X)],g=0,h=e.length;g<h;g++)a.error(e[g][i1X],e[g][t9I]);else e.error?a.error(e.error):!e[r2]||!e[(r2)][(S3I+w8)]?a.error(b[(g7X+o5I+Z4J.q2)],(U4X+W4J+Z4J.n6I+Q2+l9J+Z4J.o6I+W4J+Z4J.q2+Z4J.o6I+Z4J.o6I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+X0X+Z4J.R0I+U9X+Z4J.q2+w8+W4J+j0J+y3I+S3I+Z4J.z5I+Z4J.q2+W4J+Z4J.R0I+k6I+Z4J.z5I+h6+w8+B8J+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+S3I+m0I)):(e[G0I]&&d[(e9I+y3I)](e[G0I],function(a,b){f[(J8J+B4)][a]=b;}
),i[(l2I+Z4J.n6I+y3I)](e[(s3J+Z4J.z5I+Z4J.w1I+Z4J.Y8+w8)][J1J]),w<c.length-1?(w++,k[(C3X+q6+Z4J.Y8+Z4J.i0I+I8)](c[w])):(l[(Z4J.V2+u7X)](a,i),z&&a[f0o]()));}
,error:function(){var O5J="rre";a.error(b[i1X],(U4X+W4J+Z4J.n6I+Q2+g0J+Q2+W4J+Z4J.q2+r2J+Z4J.o6I+W4J+Z4J.w1I+Z4J.V2+v5J+O5J+w8+W4J+j0J+h1I+m0I+W4J+Z4J.R0I+k6I+K8I+Z4J.Y8+H0J+Z4J.F1I+Z8I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+G6J+Z4J.q2));}
}
));}
;k[L4X](c[E0]);}
;f.prototype._constructor=function(a){var M2J="initComplete",W8J="trol",C3J="xhr",w5J="nT",O1J="init.dt.dte",R9X="body_content",c7="oo",a6J="form_content",F3="formC",M0="events",m6I="reat",S2I="TableTools",E1J='but',y5I='fo',o2X='_i',D9J='orm',z2J='error',L4='_co',q9='rm',z1X="ter",V9J="footer",K8J='oo',k0I='nt',H1I='conte',b3X='ody',t7I='rocess',c9J="legacyAjax",z7I="rmOption",V2J="dataSources",Z6="Url",Y0="domTab",y7="dels";a=d[H3I](!E0,{}
,f[A2],a);this[Z4J.n6I]=d[(X0J+w8)](!E0,{}
,f[(Z8J+y7)][(Z4J.n6I+Z4J.A4+t1I+x3X)],{table:a[(Y0+m0I)]||a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)],dbTable:a[m3]||c3X,ajaxUrl:a[(Z4J.Y8+Y9I+Z6)],ajax:a[(Z4J.Y8+Y9I)],idSrc:a[(S3I+w8+R0+Z4J.o6I+Z4J.V2)],dataSource:a[(w8+S7+W+l3)]||a[Q2X]?f[V2J][g9]:f[V2J][z6I],formOptions:a[(s8+z7I+Z4J.n6I)],legacyAjax:a[c9J]}
);this[(Q4J+Z4J.Y8+t8+Z4J.q2+Z4J.n6I)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,f[(Q4J+L1+Z4J.q2+Z4J.n6I)]);this[(D1X+Z4J.F1I)]=a[(S3I+G5+Z4J.F1I)];var b=this,c=this[T4];this[(w8+S7)]={wrapper:d('<div class="'+c[(C9X+b4I+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+H7J+t7I+T7I+v9I+P0J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(G0J+t0+Z4J.q2+Z4J.n6I+C8)][(S3I+Z4J.F1I+w8+M3J+z1+u2)]+(Z1I+m2I+v3+B6I+m2I+v3+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+b3X+k6J+B2I+Z2J+i8X)+c[Q5X][a3J]+(b0X+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+d9I+m2I+F2J+p4I+H1I+k0I+k6J+B2I+t8J+n9J+n9J+i8X)+c[(N8+i2X)][t0J]+(t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+K8J+c0X+k6J+B2I+t8J+e0J+i8X)+c[V9J][(j0J+Z4J.o6I+e0+h1X)]+'"><div class="'+c[(c8I+Z4J.w1I+Z4J.w1I+z1X)][(Z4J.V2+Z4J.w1I+g3X+S9I)]+(t3X+m2I+v3+o9+m2I+v3+y2))[0],form:d((x5+c2I+d9I+q9+q2X+m2I+h1+q4I+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+k6J+B2I+U9+n9J+i8X)+c[(y0o)][(Z4J.i0I+L9)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+L4+v9I+j2J+v9I+c0X+k6J+B2I+U9+n9J+i8X)+c[y0o][t0J]+(t3X+c2I+Q6J+A9I+y2))[0],formError:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+d9I+q9+p4I+z2J+k6J+B2I+P7I+b6+n9J+i8X)+c[(c8I+Z4J.w1I+Z4J.o6I+o5I)].error+(I0J))[0],formInfo:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+o2X+v9I+y5I+k6J+B2I+P7I+o5X+i8X)+c[(s8+Z4J.o6I+o5I)][(S3I+l1X+Z4J.w1I)]+(I0J))[0],header:d('<div data-dte-e="head" class="'+c[J0I][(j0J+Z4J.o6I+e0+k6I+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+Z2J+i8X)+c[J0I][(f2J+Z4J.F1I+I6I+g3X)]+(t3X+m2I+v3+y2))[0],buttons:d((x5+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+p4I+E1J+Z0X+v9I+n9J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(y0o)][w4]+'"/>')[0]}
;if(d[(c8I+Z4J.F1I)][(w8+Z4J.Y8+B7+X6+G1I+Z4J.q2)][(W+N8+m0I+X6+Z4J.w1I+s3)]){var e=d[(c8I+Z4J.F1I)][g9][S2I][A5X],l=this[(D7I+B0o+Z4J.F1I)];d[(s8X)]([(Z4J.V2+m6I+Z4J.q2),R0J,(Z4J.o6I+Z4J.q2+F2X)],function(a,b){var r7X="sButtonText";e[(u9+Z9X+x2J)+b][r7X]=l[b][g8];}
);}
d[(J5I+O9J)](a[(M0)],function(a,c){b[t7](a,function(){var l8I="shift",a=Array.prototype.slice.call(arguments);a[l8I]();c[(Z4J.Y8+N0J+n2J)](b,a);}
);}
);var c=this[(Z6J)],k=c[(j0J+k8I+k6I+Q2)];c[(F3+t7+N5X+Z4J.i0I)]=t(a6J,c[(c8I+Z4J.w1I+t6X)])[E0];c[(c8I+c7+Z4J.i0I+Z4J.q2+Z4J.o6I)]=t(S1J,k)[E0];c[Q5X]=t((N8+Z4J.w1I+w8+Z4J.g7I),k)[E0];c[J9J]=t(R9X,k)[E0];c[(G0J+t0+Z4J.q2+t8+Y0o+Z8I)]=t((k6I+Z4J.o6I+t0+Z4J.q2+Z4J.n6I+n5+Z4J.F1I+Z8I),k)[E0];a[Y8I]&&this[(Z4J.Y8+N9I)](a[Y8I]);d(q)[(Z4J.w1I+Z4J.F1I)](O1J,function(a,c){b[Z4J.n6I][Q2X]&&c[(w5J+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(n6+Z4J.i0I)](E0)&&(c[(F4+u9+S3I+D6J)]=b);}
)[(Z4J.w1I+Z4J.F1I)]((C3J+Z4J.l0X+w8+Z4J.i0I),function(a,c,e){e&&(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]&&c[(w5J+Z4J.w2+m0I)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+l3)])[R5](E0))&&b[(L6J+Q8I+J5X+D7+k6I+w8+Z4J.Y8+Z4J.i0I+Z4J.q2)](e);}
);this[Z4J.n6I][(H0J+A9X+y3+G4X+Z4J.w1I+Z4J.F1I+W8J+Z4J.z5I+Z4J.q2+Z4J.o6I)]=f[(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][a[(w8+r9X+k6I+Z4J.z5I+Z4J.Y8+Z4J.g7I)]][(S3I+Z4J.F1I+S3I+Z4J.i0I)](this);this[i2](M2J,[]);}
;f.prototype._actionClass=function(){var L6X="oin",W9X="eCl",T6I="actions",a=this[T4][T6I],b=this[Z4J.n6I][(d9X+t7)],c=d(this[(w8+S7)][a3J]);c[(Z4J.o6I+i2J+g0J+W9X+Z4J.Y8+t8)]([a[d0I],a[R0J],a[(Z4J.o6I+u9X)]][(Z4J.i5I+L6X)](W4J));d0I===b?c[d8J](a[(m3J+R5I+Z4J.q2)]):(Z4J.q2+w8+Z9X)===b?c[d8J](a[(Z4J.q2+o6)]):(Z4J.o6I+Q8+Z4J.w1I+l9J)===b&&c[(Z4J.Y8+w8+w8+X7J+Z1+Z4J.n6I)](a[(J8I+a0X)]);}
;f.prototype._ajax=function(a,b,c){var B4J="param",J2I="rep",d1J="url",H7="Of",q8I="indexOf",c7J="axUr",H8X="ction",d3X="sF",s6X="lain",a8X="idS",U3I="ajaxUrl",G3="so",b0="PO",e={type:(b0+R0+X6),dataType:(Z4J.i5I+G3+Z4J.F1I),data:null,error:c,success:function(a,c,e){var A7I="statu";204===e[(A7I+Z4J.n6I)]&&(a={}
);b(a);}
}
,l;l=this[Z4J.n6I][V8J];var f=this[Z4J.n6I][(Z4J.Y8+Z4J.i5I+F5)]||this[Z4J.n6I][U3I],g=(R0J)===l||(Z4J.o6I+Z4J.q2+F2X)===l?y(this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+Z4J.q2+Z0I+Z4J.n6I)],(a8X+k5X)):null;d[(S3I+Z4J.n6I+U4X+W1I)](g)&&(g=g[W6I](","));d[(S3I+x7X+s6X+s1+N8+A2J+Z4J.i0I)](f)&&f[l]&&(f=f[l]);if(d[(S3I+d3X+Z4J.R0I+Z4J.F1I+H8X)](f)){var h=null,e=null;if(this[Z4J.n6I][U3I]){var J=this[Z4J.n6I][(Y7+c7J+Z4J.z5I)];J[(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2)]&&(h=J[l]);-1!==h[q8I](" ")&&(l=h[z5X](" "),e=l[0],h=l[1]);h=h[(S7X)](/_id_/,g);}
f(e,h,a,b,c);}
else "string"===typeof f?-1!==f[(S3I+F9X+p5+H7)](" ")?(l=f[(H2+r7)](" "),e[(O4I+g6I)]=l[0],e[(Z4J.R0I+G6X)]=l[1]):e[(Z4J.R0I+Z4J.o6I+Z4J.z5I)]=f:e=d[(X0J+w8)]({}
,e,f||{}
),e[(Z4J.R0I+G6X)]=e[d1J][(J2I+Z4J.z5I+Z4J.Y8+Z9J)](/_id_/,g),e.data&&(c=d[(S3I+Z4J.n6I+X5+M7X+p9X+Z4J.F1I)](e.data)?e.data(a):e.data,a=d[(S3I+Z4J.n6I+o3+Z4J.R0I+Z4J.F1I+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)](e.data)&&c?c:d[(Z4J.q2+z0J+I6I+Z4J.F1I+w8)](!0,a,c)),e.data=a,"DELETE"===e[(Z4J.i0I+O7X+Z4J.q2)]&&(a=d[B4J](e.data),e[(Z4J.R0I+G6X)]+=-1===e[(d1J)][(S3I+Z4J.F1I+y9I+z0J+H7)]("?")?"?"+a:"&"+a,delete  e.data),d[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)](e);}
;f.prototype._assembleMain=function(){var a=this[(Z4J.x4I+o5I)];d(a[a3J])[(S6X+Z4J.q2+Z4J.F1I+w8)](a[(W7X+y9I+Z4J.o6I)]);d(a[(S1J+Q2)])[(Z4J.Y8+N0J+q8+w8)](a[M6X])[w1X](a[(N8+n4J+H5)]);d(a[J9J])[w1X](a[i0X])[w1X](a[(s8+t6X)]);}
;f.prototype._blur=function(){var o4I="eBlur",a=this[Z4J.n6I][M9];!N0!==this[(N9J+g0J+Z4J.q2+g3X)]((k6I+Z4J.o6I+o4I))&&((Z4J.n6I+u0J+P)===a[z5]?this[(Z4J.n6I+Z4J.R0I+N8+P)]():d5I===a[z5]&&this[w3X]());}
;f.prototype._clearDynamicInfo=function(){var f7J="eCla",a=this[T4][(c8I+e6J+Z4J.z5I+w8)].error,b=this[Z4J.n6I][Y8I];d("div."+a,this[Z6J][(j0J+k8I+h1X)])[(Z4J.o6I+Z4J.q2+o5I+Z4J.w1I+g0J+f7J+t8)](a);d[s8X](b,function(a,b){b.error("")[r8I]("");}
);this.error("")[(o5I+Z4J.q2+Z4J.n6I+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]("");}
;f.prototype._close=function(a){var u5X="closeIcb",h0o="eIcb",J3X="seC",d8I="closeC",F5I="preClose";!N0!==this[(G9+Z4J.i0I)](F5I)&&(this[Z4J.n6I][T0o]&&(this[Z4J.n6I][(d8I+N8)](a),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+J3X+N8)]=c3X),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+Z4J.n6I+h0o)]&&(this[Z4J.n6I][u5X](),this[Z4J.n6I][u5X]=c3X),d(Q5X)[(d6+c8I)]((c8I+Z4J.w1I+Z4J.V2+Z4J.R0I+Z4J.n6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+c8I+P2+Z4J.n6I)),this[Z4J.n6I][R8J]=!N0,this[i2]((r0J+u1)));}
;f.prototype._closeReg=function(a){this[Z4J.n6I][T0o]=a;}
;f.prototype._crudArgs=function(a,b,c,e){var V3J="ain",G7X="mOp",Q6="oolea",G2I="Obj",l=this,f,g,i;d[(r9X+i1+Z4J.z5I+Z4J.Y8+Y0o+G2I+K3X)](a)||((N8+Q6+Z4J.F1I)===typeof a?(i=a,a=b):(f=a,g=b,i=c,a=e));i===h&&(i=!E0);f&&l[(t1I+D3I)](f);g&&l[(N8+n4J+Z4J.i0I+t7+Z4J.n6I)](g);return {opts:d[H3I]({}
,this[Z4J.n6I][(a8I+G7X+Z4J.i0I+Q7X+Z4J.F1I+Z4J.n6I)][(o5I+V3J)],a),maybeOpen:function(){i&&l[(Z4J.w1I+A6X)]();}
}
;}
;f.prototype._dataSource=function(a){var u6X="apply",H7X="dataSource",t4="ift",b=Array.prototype.slice.call(arguments);b[(w5+t4)]();var c=this[Z4J.n6I][H7X][a];if(c)return c[u6X](this,b);}
;f.prototype._displayReorder=function(a){var S1="layed",M8="Or",O4="det",K6X="hildr",K0o="includeFields",d9="eFi",B7J="nclud",E1X="formCon",b=d(this[(w8+Z4J.w1I+o5I)][(E1X+Z4J.i0I+Z4J.q2+g3X)]),c=this[Z4J.n6I][(b9+Z4J.q2+Z0I+Z4J.n6I)],e=this[Z4J.n6I][q0X];a?this[Z4J.n6I][(S3I+B7J+d9+w7+w5I)]=a:a=this[Z4J.n6I][K0o];b[(Z4J.V2+K6X+Z4J.q2+Z4J.F1I)]()[(O4+N4+y3I)]();d[s8X](e,function(e,k){var g=k instanceof f[(v1X+Z0I)]?k[(Z4J.F1I+Z4J.Y8+A1J)]():k;-N0!==d[a4](g,a)&&b[w1X](c[g][(Z4J.F1I+Z4J.w1I+y9I)]());}
);this[(F4+Z4J.q2+g0J+q8+Z4J.i0I)]((w8+r9X+E0I+M8+y9I+Z4J.o6I),[this[Z4J.n6I][(w8+r9X+k6I+S1)],this[Z4J.n6I][(N4+Z4J.i0I+Q7X+Z4J.F1I)],b]);}
;f.prototype._edit=function(a,b,c){var j5="ock",b9X="tyl",k8J="modifi",e=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Z4J.n6I)],l=[],f;this[Z4J.n6I][Z3J]=b;this[Z4J.n6I][(k8J+Q2)]=a;this[Z4J.n6I][(Z4J.Y8+m1+Z4J.F1I)]="edit";this[Z6J][y0o][(Z4J.n6I+b9X+Z4J.q2)][p6J]=(N8+Z4J.z5I+j5);this[(F4+Z4J.Y8+i8J+s4+n1+Z4J.n6I)]();d[(Z4J.q2+K0J)](e,function(a,c){var t8I="pus",p7J="multiIds";c[(p6+t1I+v0+Z4J.q2+u1+Z4J.i0I)]();f=!0;d[s8X](b,function(b,e){var W7J="lFrom";if(e[(b9+w7+w5I)][a]){var d=c[(e7J+W7J+N8J+Z4J.i0I+Z4J.Y8)](e.data);c[C2J](b,d!==h?d:c[(D1I)]());e[y0X]&&!e[y0X][a]&&(f=!1);}
}
);0!==c[p7J]().length&&f&&l[(t8I+y3I)](a);}
);for(var e=this[(i5X+Z4J.o6I)]()[u4I](),g=e.length;0<=g;g--)-1===d[a4](e[g],l)&&e[(Z4J.n6I+k6I+Z4J.z5I+S3I+Z9J)](g,1);this[L3J](e);this[Z4J.n6I][X5J]=d[H3I](!0,{}
,this[d4I]());this[(G9+Z4J.i0I)]("initEdit",[y(b,"node")[0],y(b,"data")[0],a,c]);this[(R0o+q8+Z4J.i0I)]((S3I+N1X+Z4J.i0I+R3J+Z4J.z5I+Z4J.i0I+S3I+x7J+Z9X),[b,a,c]);}
;f.prototype._event=function(a,b){var n5X="result",l7J="Event";b||(b=[]);if(d[(S3I+T8X+U9X+y3)](a))for(var c=0,e=a.length;c<e;c++)this[(F4+c5+q8+Z4J.i0I)](a[c],b);else return c=d[l7J](a),d(this)[g4I](c,b),c[n5X];}
;f.prototype._eventName=function(a){var r8X="substri",n9I="ase",e4="wer",p6X="oL";for(var b=a[(A9X+S3I+Z4J.i0I)](" "),c=0,e=b.length;c<e;c++){var a=b[c],d=a[(o5I+z1+O9J)](/^on([A-Z])/);d&&(a=d[1][(Z4J.i0I+p6X+Z4J.w1I+e4+G4X+n9I)]()+a[(r8X+Z4J.F1I+Z8I)](3));b[c]=a;}
return b[W6I](" ");}
;f.prototype._fieldNames=function(a){return a===h?this[(c8I+s0J+w5I)]():!d[S8](a)?[a]:a;}
;f.prototype._focus=function(a,b){var F7I="foc",s6I="setFocus",a2="jq",c=this,e,l=d[(o5I+Z4J.Y8+k6I)](a,function(a){var e1X="ri";return (x8+e1X+M5X)===typeof a?c[Z4J.n6I][(b9+Q9X+Z4J.n6I)][a]:a;}
);y9X===typeof b?e=l[b]:b&&(e=E0===b[(h5J+Z4J.q2+z0J+s1+c8I)]((a2+J0o))?d((I1+Z4J.l0X+j3+X6+u3+W4J)+b[(C3X+k6I+Z4J.z5I+N4+Z4J.q2)](/^jq:/,g0I)):this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)][b]);(this[Z4J.n6I][s6I]=e)&&e[(F7I+Z4J.R0I+Z4J.n6I)]();}
;f.prototype._formOptions=function(a){var k5="oseIc",y6J="olean",V8X="titl",a4I="nBa",T7="blurOnBackground",P9I="Retu",s5J="nR",t4J="eturn",R5X="submitOnBlur",g6X="itO",k1X="closeOnComplete",K4I="Com",D0="On",q5="Inlin",b=this,c=N++,e=(Z4J.l0X+w8+Z4J.i0I+Z4J.q2+q5+Z4J.q2)+c;a[(Z4J.V2+h9J+Z4J.q2+D0+K4I+M7I+Z4J.q2+I6I)]!==h&&(a[Q4]=a[k1X]?d5I:D9I);a[(V4+N8+o5I+g6X+Z4J.F1I+y4X+Z4J.z5I+g5J)]!==h&&(a[z5]=a[R5X]?(Z4J.n6I+Z4J.R0I+l6X):d5I);a[(V4+l6X+s1+Z4J.F1I+v0+t4J)]!==h&&(a[(Z4J.w1I+s5J+t4J)]=a[(V3I+Z9X+D0+P9I+Z4J.o6I+Z4J.F1I)]?f0o:D9I);a[T7]!==h&&(a[(Z4J.w1I+a4I+z9J+R3X+O3J+w8)]=a[(N8+U4J+Z4J.o6I+D0+y4X+Z4J.Y8+Z4J.V2+n7I+Z4J.w1I+O3J+w8)]?T6:(w0I+Z4J.q2));this[Z4J.n6I][(u9+g6X+Q8I+Z4J.n6I)]=a;this[Z4J.n6I][b5X]=c;if((x8+M8J)===typeof a[j2]||(c8I+O3J+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)===typeof a[j2])this[(V8X+Z4J.q2)](a[(t1I+q3I+Z4J.q2)]),a[(Z4J.i0I+Z9X+m0I)]=!E0;if((x8+Z4J.o6I+Y0o+Z8I)===typeof a[r8I]||Z4J.T5J===typeof a[r8I])this[r8I](a[r8I]),a[r8I]=!E0;(G8X+y6J)!==typeof a[(L5X+Z4J.i0I+H5)]&&(this[(N8+P2X+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a[(L5X+B9I+Z4J.n6I)]),a[(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)]=!E0);d(q)[(Z4J.w1I+Z4J.F1I)]("keydown"+e,function(c){var e5J="keyCo",a8J="pre",r0X="TE_For",W9J="are",p3I="onEsc",o2="entDe",U0J="nRet",g3="toLowerCase",C6I="lem",Q0X="tiveE",e=d(q[(Z4J.Y8+Z4J.V2+Q0X+C6I+q8+Z4J.i0I)]),f=e.length?e[0][L0o][g3]():null;d(e)[(Z4J.Y8+E2I+Z4J.o6I)]((y2J));if(b[Z4J.n6I][(H0J+Z4J.n6I+M7I+Z4J.Y8+j1+w8)]&&a[(Z4J.w1I+U0J+g5J+Z4J.F1I)]==="submit"&&c[D2J]===13&&f===(X4X+n4J)){c[(k6I+Z4J.o6I+Z4J.q2+g0J+o2+c8I+b7X)]();b[f0o]();}
else if(c[D2J]===27){c[F1]();switch(a[p3I]){case (B2X+Z4J.R0I+Z4J.o6I):b[(B2X+Z4J.R0I+Z4J.o6I)]();break;case (Z4J.V2+Z4J.z5I+j6):b[(Q4J+j6)]();break;case "submit":b[(V4+N8+o5I+S3I+Z4J.i0I)]();}
}
else e[(k6I+W9J+Z4J.F1I+Z4J.i0I+Z4J.n6I)]((Z4J.l0X+j3+r0X+o5I+b5I+u3X)).length&&(c[D2J]===37?e[(a8J+g0J)]((u0o+Z4J.i0I+t7))[(s8+Z4J.V2+Z4J.R0I+Z4J.n6I)]():c[(e5J+w8+Z4J.q2)]===39&&e[(c6X)]("button")[(O6I)]());}
);this[Z4J.n6I][(Z4J.V2+Z4J.z5I+k5+N8)]=function(){d(q)[(Z4J.w1I+f4)]((u3I+Z4J.q2+Z4J.g7I+Z4J.x4I+j0J+Z4J.F1I)+e);}
;return e;}
;f.prototype._legacyAjax=function(a,b,c){var A9="Aj",y9="gac";if(this[Z4J.n6I][(m0I+y9+Z4J.g7I+A9+Z4J.Y8+z0J)])if((Z4J.n6I+Z4J.q2+Z4J.F1I+w8)===a)if(d0I===b||(Z4J.q2+o6)===b){var e;d[(Z4J.q2+N4+y3I)](c.data,function(a){var f6J="cy",y3X="uppor";if(e!==h)throw (t6+u2+n4I+g6+i0J+F6X+Z4J.o6I+O2+W4J+Z4J.q2+w8+X3+Z4J.F1I+Z8I+W4J+S3I+Z4J.n6I+W4J+Z4J.F1I+T8+W4J+Z4J.n6I+y3X+I6I+w8+W4J+N8+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+Z4J.z5I+Z4J.q2+Z8I+Z4J.Y8+f6J+W4J+U4X+Y9I+W4J+w8+Z4J.Y8+B7+W4J+c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I);e=a;}
);c.data=c.data[e];(R0J)===b&&(c[(S3I+w8)]=e);}
else c[J1J]=d[(o5I+e0)](c.data,function(a,b){return b;}
),delete  c.data;else c.data=!c.data&&c[o1]?[c[(k7X+j0J)]]:[];}
;f.prototype._optionsUpdate=function(a){var b=this;a[(Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+h3X)]&&d[(J5I+O9J)](this[Z4J.n6I][Y8I],function(c){if(a[(V7+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)][c]!==h){var e=b[(b9+Q9X)](c);e&&e[j5J]&&e[(Z4J.R0I+k6I+Z4J.C6J+I6I)](a[V6X][c]);}
}
);}
;f.prototype._message=function(a,b){var O9X="tabl";Z4J.T5J===typeof b&&(b=b(this,new r[m7J](this[Z4J.n6I][(O9X+Z4J.q2)])));a=d(a);!b&&this[Z4J.n6I][R8J]?a[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I)]()[O7I](function(){a[(E4J+t3J)](g0I);}
):b?this[Z4J.n6I][R8J]?a[l8X]()[(y3I+f6)](b)[(c8I+Z4J.Y8+w8+Z4J.q2+s3X)]():a[(h0J+Z4J.z5I)](b)[(Z4J.V2+t8)]((w8+N9X+Z4J.g7I),(N8+Z4J.z5I+Z4J.w1I+z9J)):a[(y3I+Z4J.i0I+o5I+Z4J.z5I)](g0I)[v3J]((S0+M7I+Z4J.Y8+Z4J.g7I),(D9I));}
;f.prototype._multiInfo=function(){var U7="oSh",t1X="ields",a=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w5I)],b=this[Z4J.n6I][(Y0o+Z4J.V2+Z4J.z5I+Z4J.R0I+w8+Z4J.q2+o3+t1X)],c=!0;if(b)for(var e=0,d=b.length;e<d;e++)a[b[e]][q7X]()&&c?(a[b[e]][(p6+t1I+x1+Z4J.F1I+c8I+Z4J.w1I+x4+o0I)](c),c=!1):a[b[e]][(o5I+g8J+Z4J.i0I+I7J+c8I+U7+Z4J.w1I+g9I)](!1);}
;f.prototype._postopen=function(a){var q1I="iI",K0X="_mul",s2="focus.editor-focus",a9X="ernal",w9J="submit.editor-internal",E5X="Focus",U6="oll",b=this,c=this[Z4J.n6I][(p6J+G4X+Z4J.w1I+Z4J.F1I+U8I+U6+Q2)][(L7J+Q8I+g5J+Z4J.q2+E5X)];c===h&&(c=!E0);d(this[(w8+S7)][(s8+t6X)])[t9J](w9J)[(Z4J.w1I+Z4J.F1I)]((Z4J.n6I+u0J+o5I+Z9X+Z4J.l0X+Z4J.q2+w8+S3I+Q3I+Z4J.o6I+F6X+S3I+Z4J.F1I+Z4J.i0I+a9X),function(a){a[F1]();}
);if(c&&(e2J===a||(L5X+e6)===a))d(Q5X)[t7](s2,function(){var o7="setF",w9I="Foc",h0="iveEl",g7J="veElem";0===d(q[(d9X+g7J+Z4J.q2+Z4J.F1I+Z4J.i0I)])[(k6I+Z4J.Y8+Z4J.o6I+S9I+Z4J.n6I)]((Z4J.l0X+j3+X6+u3)).length&&0===d(q[(M1J+h0+Z4J.q2+o5I+q8+Z4J.i0I)])[p7I](".DTED").length&&b[Z4J.n6I][(Z4J.n6I+Z4J.q2+Z4J.i0I+w9I+q5J)]&&b[Z4J.n6I][(o7+P2+Z4J.n6I)][O6I]();}
);this[(K0X+Z4J.i0I+q1I+Z4J.F1I+c8I+Z4J.w1I)]();this[i2]((Z4J.w1I+A6X),[a,this[Z4J.n6I][(d9X+Z4J.w1I+Z4J.F1I)]]);return !E0;}
;f.prototype._preopen=function(a){var Z8="mic",O2X="arDyna";if(!N0===this[i2]((G0J+Z4J.q2+s1+k6I+Z4J.q2+Z4J.F1I),[a,this[Z4J.n6I][(M1J+s4)]]))return this[(W4I+Z4J.q2+O2X+Z8+x1+l1X+Z4J.w1I)](),!N0;this[Z4J.n6I][R8J]=a;return !E0;}
;f.prototype._processing=function(a){var c6="oce",p4="div.DTE",u8X="veC",Q1I="dCla",N4I="active",b=d(this[(w8+Z4J.w1I+o5I)][(i4I+Z4J.Y8+b4I+Z4J.o6I)]),c=this[(w8+S7)][y2X][e1J],e=this[T4][(p4J+N8I+B8J)][N4I];a?(c[p6J]=h3J,b[(b4+w8+G4X+Z4J.z5I+L1)](e),d((w8+P9X+Z4J.l0X+j3+X6+u3))[(b4+Q1I+t8)](e)):(c[p6J]=(o8X+Z4J.F1I+Z4J.q2),b[(Z4J.o6I+Z4J.q2+Z8J+u8X+Z4J.z5I+Z4J.Y8+t8)](e),d(p4)[R](e));this[Z4J.n6I][(G0J+Z4J.w1I+Z9J+Z4J.n6I+l6J+Z8I)]=a;this[i2]((k6I+Z4J.o6I+c6+t8+S3I+M5X),[a]);}
;f.prototype._submit=function(a,b,c,e){var v5X="_ajax",m7="_proces",O0="eSubm",A8J="acy",n3X="plet",a6X="_proce",o8="nge",F6I="llIfC",I9I="aF",q9X="ctD",J9I="_fnSetObje",f=this,k,g=!1,i={}
,n={}
,u=r[(Z4J.q2+z0J+Z4J.i0I)][k0J][(J9I+q9X+z1+I9I+Z4J.F1I)],m=this[Z4J.n6I][Y8I],j=this[Z4J.n6I][V8J],p=this[Z4J.n6I][b5X],o=this[Z4J.n6I][z4X],q=this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+v1J)],s=this[Z4J.n6I][X5J],t=this[Z4J.n6I][M9],v=t[f0o],x={action:this[Z4J.n6I][V8J],data:{}
}
,y;this[Z4J.n6I][(m3)]&&(x[Q2X]=this[Z4J.n6I][(w8+N8+W+l3)]);if((Z4J.V2+Z4J.o6I+J5I+I6I)===j||"edit"===j)if(d[s8X](q,function(a,b){var U8J="mp",c={}
,e={}
;d[(J5I+O9J)](m,function(f,l){var w1="ny";if(b[(c8I+m1J+Z4J.n6I)][f]){var k=l[d4I](a),h=u(f),i=d[S8](k)&&f[(S3I+F9X+Z4J.q2+z0J+s1+c8I)]("[]")!==-1?u(f[(Z4J.o6I+Z4J.q2+k6I+l7I+Z4J.V2+Z4J.q2)](/\[.*$/,"")+(F6X+o5I+Z4J.Y8+w1+F6X+Z4J.V2+y4+g3X)):null;h(c,k);i&&i(c,k.length);if(j===(R0J)&&k!==s[f][a]){h(e,k);g=true;i&&i(e,k.length);}
}
}
);d[(S3I+r3X+o5I+k6I+O4I+s1+N8+Z4J.i5I+Z4J.V1I+Z4J.i0I)](c)||(i[a]=c);d[(S3I+r3X+U8J+O4I+s1+w3J+i8J)](e)||(n[a]=e);}
),"create"===j||"all"===v||(Z4J.Y8+F6I+y3I+Z4J.Y8+o8+w8)===v&&g)x.data=i;else if("changed"===v&&g)x.data=n;else{this[Z4J.n6I][V8J]=null;(Z4J.V2+K8I+u1)===t[Q4]&&(e===h||e)&&this[w3X](!1);a&&a[L5I](this);this[(a6X+Z4J.n6I+Z4J.n6I+B8J)](!1);this[(N9J+l9J+g3X)]((Z4J.n6I+F7X+C0+S7+n3X+Z4J.q2));return ;}
else(Z4J.o6I+Q8+a0X)===j&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](q,function(a,b){x.data[a]=b.data;}
);this[(T1J+P7+A8J+U4X+Y9I)]((Z4J.n6I+Z4J.q2+Z4J.F1I+w8),j,x);y=d[H3I](!0,{}
,x);c&&c(x);!1===this[i2]((k6I+Z4J.o6I+O0+Z9X),[x,j])?this[(m7+Z4J.n6I+S3I+M5X)](!1):this[v5X](x,function(c){var L2="Coun",q9J="ommi",p6I="aS",n5I="even",G0o="event",d7X="Sou",F8J="urc",S3X="eCr",W5X="taS",D1="Error",o9I="Errors",M5="acyAj",g;f[(F4+m0I+Z8I+M5+Z4J.Y8+z0J)]("receive",j,c);f[i2]((E7I+x8+R0+u0J+o5I+S3I+Z4J.i0I),[c,x,j]);if(!c.error)c.error="";if(!c[(b9+Z4J.q2+Z4J.z5I+w8+L8X+k7X+B9X)])c[z0o]=[];if(c.error||c[(g5I+o9I)].length){f.error(c.error);d[(Z4J.q2+K0J)](c[(b9+Z4J.q2+Z4J.z5I+w8+D1+Z4J.n6I)],function(a,b){var r1I="yC",c=m[b[(Z4J.F1I+Z4J.Y8+A1J)]];c.error(b[t9I]||(u3+Z4J.o6I+Z4J.o6I+u2));if(a===0){d(f[Z6J][(N8+Z4J.w1I+w8+r1I+Z4J.w1I+Z4J.F1I+I6I+Z4J.F1I+Z4J.i0I)],f[Z4J.n6I][a3J])[h2J]({scrollTop:d(c[o0o]()).position().top}
,500);c[O6I]();}
}
);b&&b[(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](f,c);}
else{var i={}
;f[(F4+w8+Z4J.Y8+W5X+Z4J.w1I+g5J+Z4J.V2+Z4J.q2)]("prep",j,o,y,c.data,i);if(j===(m3J+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)||j==="edit")for(k=0;k<c.data.length;k++){g=c.data[k];f[(R0o+q8+Z4J.i0I)]("setData",[c,g,j]);if(j==="create"){f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]((G0J+S3X+R5I+Z4J.q2),[c,g]);f[(F4+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+b8+F8J+Z4J.q2)]((Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),m,g,i);f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]([(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),"postCreate"],[c,g]);}
else if(j==="edit"){f[i2]((k6I+C3X+x7J+S3I+Z4J.i0I),[c,g]);f[(F4+w8+Z4J.Y8+B7+d7X+k5X+Z4J.q2)]((Z4J.q2+w8+S3I+Z4J.i0I),o,m,g,i);f[i2](["edit",(k6I+F8+Z4J.i0I+x7J+Z9X)],[c,g]);}
}
else if(j==="remove"){f[(F4+G0o)]("preRemove",[c]);f[e9]("remove",o,m,i);f[(F4+n5I+Z4J.i0I)](["remove",(k6I+Z4J.w1I+x8+v0+Q8+I4+Z4J.q2)],[c]);}
f[(F0X+z1+p6I+Z4J.w1I+Z4J.R0I+h8X)]((Z4J.V2+q9J+Z4J.i0I),j,o,c.data,i);if(p===f[Z4J.n6I][(Z4J.q2+w8+Z9X+L2+Z4J.i0I)]){f[Z4J.n6I][(d9X+t7)]=null;t[(Z4J.w1I+Z4J.F1I+N7J+o5I+n3X+Z4J.q2)]==="close"&&(e===h||e)&&f[(G0X+Z4J.z5I+j6)](true);}
a&&a[L5I](f,c);f[(F4+n5I+Z4J.i0I)]((Z4J.n6I+Z4J.R0I+v2X+S3I+Z4J.i0I+R0+Z4J.R0I+Z4J.V2+Z4J.V2+Z4J.q2+Z4J.n6I+Z4J.n6I),[c,g]);}
f[(F4+p4J+Y2J+l6J+Z8I)](false);f[i2]((V4+N8+P+N7J+o5I+M7I+Y0X),[c,g]);}
,function(a,c,e){var F0o="lete",n4X="itC",a5X="system";f[(R0o+q8+Z4J.i0I)]("postSubmit",[a,c,e,x]);f.error(f[k1I].error[a5X]);f[(j6J+k7X+N8I+S3I+M5X)](false);b&&b[(L7J+q5I)](f,a,c,e);f[(R0o+S9I)](["submitError",(Z4+o5I+n4X+Z4J.w1I+o5I+k6I+F0o)],[a,c,e,x]);}
);}
;f.prototype._tidy=function(a){var m4="lur",R4="bbl",P8I="omple",u8J="bmitC",Q7="roces",H8J="Sid",L9I="Server",b=this,c=this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)]?new d[(c8I+Z4J.F1I)][(Z4J.C6J+Z4J.i0I+Z4J.Y8+X6+G1I+Z4J.q2)][(q1+S3I)](this[Z4J.n6I][Q2X]):c3X,e=!N0;c&&(e=c[R5J]()[E0][(Z4J.w1I+o3+J5I+Z4J.i0I+g5J+Z4J.q2+Z4J.n6I)][(N8+L9I+H8J+Z4J.q2)]);return this[Z4J.n6I][(k6I+Q7+Z4J.n6I+B8J)]?(this[j7J]((Z4J.n6I+Z4J.R0I+u8J+P8I+Z4J.i0I+Z4J.q2),function(){if(e)c[j7J](X4,a);else setTimeout(function(){a();}
,f2I);}
),!E0):(S3I+Z4J.F1I+Z4J.z5I+Y5J)===this[(w8+S3I+Z4J.n6I+E0I)]()||(L5X+R4+Z4J.q2)===this[p6J]()?(this[j7J]((Z4J.V2+Z4J.z5I+F8+Z4J.q2),function(){var p7="mitComple";if(b[Z4J.n6I][y2X])b[(t7+Z4J.q2)]((Z4J.n6I+u0J+p7+I6I),function(b,d){if(e&&d)c[(t7+Z4J.q2)]((L4I+j0J),a);else setTimeout(function(){a();}
,f2I);}
);else setTimeout(function(){a();}
,f2I);}
)[(N8+m4)](),!E0):!N0;}
;f[(w8+L8I+Z4J.R0I+S2J+Z4J.n6I)]={table:null,ajaxUrl:null,fields:[],display:(u1I+Z8I+y3I+c0I),ajax:null,idSrc:(j3+Q0+v0+Z4J.w1I+j0J+d0X),events:{}
,i18n:{create:{button:(E0o+j0J),title:(G4X+C3X+z1+Z4J.q2+W4J+Z4J.F1I+Z5+W4J+Z4J.q2+Z4J.F1I+O3I),submit:"Create"}
,edit:{button:"Edit",title:(u3+w8+Z9X+W4J+Z4J.q2+Z4J.F1I+O3I),submit:(g8X+Z4J.C6J+Z4J.i0I+Z4J.q2)}
,remove:{button:(S0J+b6X+Z4J.q2),title:"Delete",submit:(S0J+Z4J.z5I+Z4J.q2+I6I),confirm:{_:(X0+Z4J.q2+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+Z4J.R0I+Z4J.o6I+Z4J.q2+W4J+Z4J.g7I+Z4J.w1I+Z4J.R0I+W4J+j0J+S3I+Z4J.n6I+y3I+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+Z4J.q2+Z4J.z5I+Z4J.A4+Z4J.q2+l5+w8+W4J+Z4J.o6I+O2+Z4J.n6I+J2X),1:(O9I+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+g5J+Z4J.q2+W4J+Z4J.g7I+y4+W4J+j0J+S3I+w5+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+n6X+Z4J.q2+W4J+U1X+W4J+Z4J.o6I+Z4J.w1I+j0J+J2X)}
}
,error:{system:(D4+q2X+n9J+J4J+A9I+q2X+m8I+G9J+I3I+q2X+v0J+b6+q2X+d9I+B2I+D1J+U3J+z8X+q4I+q2X+c0X+L6+O7+i8X+p4I+M9X+v9I+b9I+k6J+v0J+G9J+N3+V0o+m2I+q4I+c0X+h1+m8J+A0+Y6+v9I+m8I+c0X+E6+c0X+v9I+E6+M1+c0+H6+R9+Q6J+m8I+q2X+T7I+D8+o1X+v9I+b0o+q4I+W0J)}
,multi:{title:(R3J+Z4J.z5I+Y5+Z4J.q2+W4J+g0J+e8),info:(A1+W4J+Z4J.n6I+Z4J.q2+m0I+Z4J.V2+U2X+W4J+S3I+Z4J.i0I+Z4J.q2+S5J+W4J+Z4J.V2+t7+B7+Y0o+W4J+w8+S3I+x0I+h8+W4J+g0J+X0I+O8+W4J+c8I+u2+W4J+Z4J.i0I+y3I+r9X+W4J+S3I+n8X+Z4J.R0I+Z4J.i0I+v2I+X6+Z4J.w1I+W4J+Z4J.q2+o6+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+Z4J.n6I+Z4J.q2+Z4J.i0I+W4J+Z4J.Y8+Z4J.z5I+Z4J.z5I+W4J+S3I+I6I+o5I+Z4J.n6I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+y3I+S3I+Z4J.n6I+W4J+S3I+Z4J.F1I+W2I+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.i0I+Q0I+W4J+Z4J.n6I+Z4J.Y8+o5I+Z4J.q2+W4J+g0J+B6X+Z4J.q2+p5X+Z4J.V2+q6I+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+Z4J.Y8+k6I+W4J+y3I+Q2+Z4J.q2+p5X+Z4J.w1I+Z4J.i0I+y3I+Q2+j0J+r9X+Z4J.q2+W4J+Z4J.i0I+Q0I+Z4J.g7I+W4J+j0J+S3I+Z4J.z5I+Z4J.z5I+W4J+Z4J.o6I+i6I+S3I+Z4J.F1I+W4J+Z4J.i0I+y3I+Z4J.q2+s7X+W4J+S3I+Z4J.F1I+I1+S3I+W5I+Z4J.Y8+Z4J.z5I+W4J+g0J+B6X+B4+Z4J.l0X),restore:(D7+F9X+Z4J.w1I+W4J+Z4J.V2+y3I+Q+a5)}
,datetime:{previous:"Previous",next:(W1),months:(v8J+e1+W4J+o3+x6I+Z4J.o6I+e7I+Z4J.o6I+Z4J.g7I+W4J+g6+a4J+y3I+W4J+U4X+k6I+l2J+W4J+g6+Z4J.Y8+Z4J.g7I+W4J+r5+O3J+Z4J.q2+W4J+r5+V5I+W4J+U4X+Z4J.R0I+Z8I+q5J+Z4J.i0I+W4J+R0+M5I+N8+Z4J.q2+Z4J.o6I+W4J+s1+i8J+u0+Z4J.q2+Z4J.o6I+W4J+J1+a0X+P7J+Q2+W4J+j3+Z4J.q2+b9J+g9X+Z4J.o6I)[(H2+Z4J.z5I+Z9X)](" "),weekdays:(R0+O3J+W4J+g6+Z4J.w1I+Z4J.F1I+W4J+X6+N1J+W4J+j0I+Z4J.q2+w8+W4J+X6+l4J+W4J+o3+Z4J.o6I+S3I+W4J+R0+z1)[z5X](" "),amPm:["am",(Q9I)],unknown:"-"}
}
,formOptions:{bubble:d[(K8X+Z4J.F1I+w8)]({}
,f[(S4J+Z4J.q2+h4J)][(c8I+u2+p4X+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{title:!1,message:!1,buttons:"_basic",submit:(O9J+Z4J.Y8+M5X+u9)}
),inline:d[(p5+N5X+w8)]({}
,f[(o5I+G1+Z4J.q2+h4J)][h3],{buttons:!1,submit:(v1+Z4J.F1I+i9)}
),main:d[H3I]({}
,f[(o5I+G1+Z4J.q2+Z4J.z5I+Z4J.n6I)][(c8I+u1X+s1+k6I+G5X+Z4J.n6I)])}
,legacyAjax:!1}
;var K=function(a,b,c){d[(s8X)](b,function(b,d){var N5="aSr",e3="Fr",f=d[(g0J+Z4J.Y8+Z4J.z5I+e3+S7+N8J+B7)](c);f!==h&&C(a,d[(w8+Z4J.Y8+Z4J.i0I+N5+Z4J.V2)]())[(s8X)](function(){var C4X="hild",c3I="childNodes";for(;this[c3I].length;)this[(Z4J.o6I+Z4J.q2+o5I+I4+X7I+C4X)](this[(b9+Z4J.o6I+Z4J.n6I+Z4J.i0I+G4X+w7X+w8)]);}
)[z6I](f);}
);}
,C=function(a,b){var J4X='ld',u3J='dito',c=v8===a?q:d((G3I+m2I+h1+q4I+m6+m8I+m2I+T7I+Z0X+G9J+m6+T7I+m2I+i8X)+a+(y6I));return d((G3I+m2I+j9J+m6+m8I+u3J+G9J+m6+c2I+T7I+m8I+J4X+i8X)+b+(y6I),c);}
,D=f[(Z4J.C6J+B7+b8+Z4J.R0I+h8X+Z4J.n6I)]={}
,E=function(a,b){var e9J="awTy",X9J="erSide",h6J="bSer",X0o="atures",V9X="oF";return a[R5J]()[E0][(V9X+Z4J.q2+X0o)][(h6J+g0J+X9J)]&&(o8X+G9X)!==b[Z4J.n6I][(E7J+Z4J.i0I+s1+Q8I+Z4J.n6I)][(w8+Z4J.o6I+e9J+g6I)];}
,L=function(a){a=d(a);setTimeout(function(){var s7J="highlight",r5J="dClas";a[(Z4J.Y8+w8+r5J+Z4J.n6I)](s7J);setTimeout(function(){var a1=550,J1I="noHighlight",G1X="dCl";a[(Z4J.Y8+w8+G1X+Z4J.Y8+Z4J.n6I+Z4J.n6I)](J1I)[(C3X+F2X+G4X+Z4J.z5I+Z1+Z4J.n6I)](s7J);setTimeout(function(){var K7="oHi";a[(C3X+o5I+a0X+G4X+p2J+Z4J.n6I)]((Z4J.F1I+K7+Z8I+y3I+Z4J.z5I+S3I+Z8I+E4J));}
,a1);}
,C3);}
,t2I);}
,F=function(a,b,c,e,d){var j8X="exes";b[(k7X+j0J+Z4J.n6I)](c)[(S3I+F9X+j8X)]()[(J5I+Z4J.V2+y3I)](function(c){var c=b[(k7X+j0J)](c),g=c.data(),i=d(g);i===h&&f.error((D7+Z4J.F1I+Z4J.Y8+N8+m0I+W4J+Z4J.i0I+Z4J.w1I+W4J+c8I+h5J+W4J+Z4J.o6I+O2+W4J+S3I+y9I+Z4J.F1I+t1I+c8I+S3I+Z4J.q2+Z4J.o6I),14);a[i]={idSrc:i,data:g,node:c[(Z4J.F1I+G1+Z4J.q2)](),fields:e,type:(Z4J.o6I+Z4J.w1I+j0J)}
;}
);}
,G=function(a,b,c,e,l,g){var o3X="indexes";b[G1J](c)[o3X]()[s8X](function(w){var z8J="ayFie",h9I="eNam",S0I="cif",M3I="eas",Y3="rmin",R1="isEmptyObject",n1X="itFi",E9I="aoColumns",s6="tings",I4X="column",i=b[a3](w),j=b[(Z4J.o6I+Z4J.w1I+j0J)](w[o1]).data(),j=l(j),u;if(!(u=g)){u=w[I4X];u=b[(u1+Z4J.i0I+s6)]()[0][E9I][u];var m=u[(E7J+P1+e6J+Z0I)]!==h?u[(u9+n1X+Q9X)]:u[(o5I+Z)],n={}
;d[(s8X)](e,function(a,b){var x6J="dataSrc";if(d[S8](m))for(var c=0;c<m.length;c++){var e=b,f=m[c];e[(w8+h2+B0I)]()===f&&(n[e[(i1X)]()]=e);}
else b[x6J]()===m&&(n[b[i1X]()]=b);}
);d[R1](n)&&f.error((D7+Z4J.F1I+Z4J.w2+Z4J.z5I+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.Y8+n4J+Z4J.w1I+o5I+z1+M3J+X0I+n2J+W4J+w8+Z4J.A4+Z4J.q2+Y3+Z4J.q2+W4J+c8I+e6J+Z0I+W4J+c8I+Z4J.o6I+S7+W4J+Z4J.n6I+Z4J.w1I+Z4J.R0I+h8X+v2I+i1+Z4J.z5I+M3I+Z4J.q2+W4J+Z4J.n6I+k6I+Z4J.q2+S0I+Z4J.g7I+W4J+Z4J.i0I+Q0I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.F1I+Z4J.Y8+A1J+Z4J.l0X),11);u=n;}
F(a,b,w[(Z4J.o6I+O2)],e,l);a[j][a7I]="object"===typeof c&&c[(Z4J.F1I+Z4J.w1I+w8+h9I+Z4J.q2)]?[c]:[i[o0o]()];a[j][(H0J+Z4J.n6I+M7I+z8J+r7I)]=u;}
);}
;D[(M0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]={individual:function(a,b){var H2J="index",U9J="siv",b1="asCl",j4="ctDat",c=r[(Z4J.q2+z0J+Z4J.i0I)][(Z4J.w1I+q1+S3I)][(B9J+Z4J.F1I+b3+Z4J.q2+Z4J.i0I+q0I+Z4J.i5I+Z4J.q2+j4+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+Z4J.o6I+Z4J.V2)]),e=d(this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)])[(N8J+m0X+Z4J.Y8+N8+m0I)](),f=this[Z4J.n6I][(b9+w7+w5I)],g={}
,h,i;a[(W9I+P2I+Z4J.Y8+o5I+Z4J.q2)]&&d(a)[(y3I+b1+Z4J.Y8+t8)]("dtr-data")&&(i=a,a=e[(Z4J.o6I+B4+E7I+Z4J.F1I+U9J+Z4J.q2)][H2J](d(a)[(Z4J.V2+h9J+B4+Z4J.i0I)]("li")));b&&(d[(w2J+Z4J.o6I+Y8X+Z4J.g7I)](b)||(b=[b]),h={}
,d[(J5I+O9J)](b,function(a,b){h[b]=f[b];}
));G(g,e,a,f,c,h);i&&d[s8X](g,function(a,b){b[a7I]=[i];}
);return g;}
,fields:function(a){var a0I="mns",s5I="Object",B0J="Pla",Q1="aTabl",W0o="oA",b=r[s0X][(W0o+k6I+S3I)][h4I](this[Z4J.n6I][q7J]),c=d(this[Z4J.n6I][Q2X])[(j3+z1+Q1+Z4J.q2)](),e=this[Z4J.n6I][(c8I+s0J+w8+Z4J.n6I)],f={}
;d[(r9X+B0J+Y0o+s5I)](a)&&(a[C6X]!==h||a[d0]!==h||a[(a3+Z4J.n6I)]!==h)?(a[(C6X)]!==h&&F(f,c,a[(Z4J.o6I+Z4J.w1I+j0J+Z4J.n6I)],e,b),a[d0]!==h&&c[(Z9J+q5I+Z4J.n6I)](null,a[(f2J+U4J+a0I)])[(Y0o+w8+Z4J.q2+z0J+B4)]()[(e9I+y3I)](function(a){G(f,c,a,e,b);}
),a[G1J]!==h&&G(f,c,a[(Z4J.V2+w7+Z4J.z5I+Z4J.n6I)],e,b)):F(f,c,a,e,b);return f;}
,create:function(a,b){var c=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[g4X]();E(c,this)||(c=c[(k7X+j0J)][(b4+w8)](b),L(c[(o0o)]()));}
,edit:function(a,b,c,e){var m7X="wIds",C9J="nA",R6I="DataTa";b=d(this[Z4J.n6I][Q2X])[(R6I+N8+m0I)]();if(!E(b,this)){var f=r[(s0X)][(k0J)][h4I](this[Z4J.n6I][(J1J+B0I)]),g=f(c),a=b[(o1)]("#"+g);a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return g==f(b);}
));a[y7I]()?(a.data(c),c=d[(S3I+C9J+W1I)](g,e[(o1+X7X)]),e[(k7X+m7X)][(H2+Z4J.z5I+S3I+Z4J.V2+Z4J.q2)](c,1)):a=b[o1][(b4+w8)](c);L(a[o0o]());}
}
,remove:function(a){var b=d(this[Z4J.n6I][(B7+N8+m0I)])[g4X]();E(b,this)||b[(k7X+j0J+Z4J.n6I)](a)[(Z4J.o6I+u9X)]();}
,prep:function(a,b,c,e,f){var e0I="rowId";"edit"===a&&(f[(e0I+Z4J.n6I)]=d[I0](c.data,function(a,b){var b2X="yObje";if(!d[(S3I+r3X+o5I+Q8I+b2X+i8J)](c.data[b]))return b;}
));}
,commit:function(a,b,c,e){var f5I="drawType",t2J="ject",W4="nGet",G2="rowIds";b=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(j3+Z4J.Y8+m0X+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]();if((Z4J.q2+w8+S3I+Z4J.i0I)===a&&e[G2].length)for(var f=e[G2],g=r[s0X][(G5J+S3I)][(F4+c8I+W4+q0I+t2J+j3+Z4J.Y8+Z4J.i0I+Z4J.Y8+m0)](this[Z4J.n6I][q7J]),h=0,e=f.length;h<e;h++)a=b[(Z4J.o6I+Z4J.w1I+j0J)]("#"+f[h]),a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return f[h]===g(b);}
)),a[(Z4J.Y8+Z4J.F1I+Z4J.g7I)]()&&a[V9I]();a=this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+s1+Q8I+Z4J.n6I)][f5I];(Z4J.F1I+Z4J.w1I+G9X)!==a&&b[X4](a);}
}
;D[z6I]={initField:function(a){var Z1J='ito',b=d((G3I+m2I+q4I+e3J+m6+m8I+m2I+Z1J+G9J+m6+P7I+M9I+B5+i8X)+(a.data||a[(g7X+A1J)])+'"]');!a[s0I]&&b.length&&(a[s0I]=b[z6I]());}
,individual:function(a,b){var U6X="rom",K4J="termin",b8I="lly",E3I="omati",c2X="yless";if(a instanceof d||a[L0o])b||(b=[d(a)[(Z4J.Y8+Z4J.i0I+U8I)]((Z4J.l1+Z4J.Y8+F6X+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+c8I+S3I+Z4J.q2+Z0I))]),a=d(a)[(o8I+C3X+Z4J.F1I+Z4J.I2I)]("[data-editor-id]").data("editor-id");a||(a=(u3I+Z4J.q2+c2X));b&&!d[(S3I+Z4J.n6I+X0+Y8X+Z4J.g7I)](b)&&(b=[b]);if(!b||0===b.length)throw (G4X+Z4J.Y8+Z4J.F1I+Z4J.F1I+Z4J.w1I+Z4J.i0I+W4J+Z4J.Y8+Z4J.R0I+Z4J.i0I+E3I+L7J+b8I+W4J+w8+Z4J.q2+K4J+Z4J.q2+W4J+c8I+s0J+w8+W4J+Z4J.F1I+a0+Z4J.q2+W4J+c8I+U6X+W4J+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+W4J+Z4J.n6I+Z4J.w1I+g5J+Z4J.V2+Z4J.q2);var c=D[z6I][Y8I][(L7J+Z4J.z5I+Z4J.z5I)](this,a),e=this[Z4J.n6I][(v7+w8+Z4J.n6I)],f={}
;d[(s8X)](b,function(a,b){f[b]=e[b];}
);d[(Z4J.q2+Z4J.Y8+O9J)](c,function(c,g){var x2I="isplayF",i6J="toArray";g[(O4I+g6I)]="cell";for(var h=a,j=b,m=d(),n=0,p=j.length;n<p;n++)m=m[(Z4J.Y8+N9I)](C(h,j[n]));g[a7I]=m[i6J]();g[Y8I]=e;g[(w8+x2I+e6J+Z0I+Z4J.n6I)]=f;}
);return c;}
,fields:function(a){var G3J="keyle",b={}
,c={}
,e=this[Z4J.n6I][(v7+w5I)];a||(a=(G3J+t8));d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](e,function(b,e){var d=C(a,e[(w8+z1+Z4J.Y8+B0I)]())[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();e[K6](c,null===d?h:d);}
);b[a]={idSrc:a,data:c,node:q,fields:e,type:(o1)}
;return b;}
,create:function(a,b){var i3='tor',c5X="GetOb";if(b){var c=r[s0X][(G5J+S3I)][(B9J+Z4J.F1I+c5X+A2J+Z4J.i0I+n7J+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+k5X)])(b);d((G3I+m2I+q4I+c0X+q4I+m6+m8I+m2I+T7I+i3+m6+T7I+m2I+i8X)+c+'"]').length&&K(c,a,b);}
}
,edit:function(a,b,c){a=r[s0X][(G5J+S3I)][h4I](this[Z4J.n6I][q7J])(c)||"keyless";K(a,b,c);}
,remove:function(a){d('[data-editor-id="'+a+(y6I))[(C3X+f1J+Z4J.q2)]();}
}
;f[T4]={wrapper:(j3+X7),processing:{indicator:(j3+a7+e8X+Z4J.n6I+S3I+v4+s3X+w8+S3I+Z4J.V2+Z4J.Y8+D6J),active:(j3+X6+u3+F4+i1+Z4J.o6I+Z4J.w1I+Z9J+Z4J.n6I+n5+Z4J.F1I+Z8I)}
,header:{wrapper:(j3+X7+x1X+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I),content:(I6J+K7J+w7I+b4+Q2+F4+G4X+Z4J.w1I+d4J+Z4J.i0I)}
,body:{wrapper:"DTE_Body",content:"DTE_Body_Content"}
,footer:{wrapper:(X2J+V4X),content:"DTE_Footer_Content"}
,form:{wrapper:"DTE_Form",content:"DTE_Form_Content",tag:"",info:(I6J+R9I+B5I+x1+Z4J.F1I+s8),error:(j3+X7+o9X+Z4J.w1I+i9J),buttons:(j3+X6+u3+F4+F8I+p1X+Z4J.i0I+Q3I+h3X),button:"btn"}
,field:{wrapper:"DTE_Field",typePrefix:"DTE_Field_Type_",namePrefix:"DTE_Field_Name_",label:"DTE_Label",input:(I6J+l1I+Z4J.q2+Z4J.z5I+w9X+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I),inputControl:(I6J+I4I+S3I+Z4J.q2+Z4J.z5I+S9X+t7+U8I+Z4J.w1I+Z4J.z5I),error:(I6J+K7J+O6+w7+w8+F3X+Z4J.i0I+Z4J.Y8+Z4J.i0I+W2J),"msg-label":(v6J+H4I+Z4J.z5I+F4+x1+Z4J.F1I+s8),"msg-error":(j3+X6+K7J+I5J+K6I+M6),"msg-message":(j3+X6+k7J+Z0I+F4+n6J+t8+L9+Z4J.q2),"msg-info":"DTE_Field_Info",multiValue:(o5I+g8J+t1I+F6X+g0J+Z4J.Y8+B8I),multiInfo:(p6+Z4J.i0I+S3I+F6X+S3I+Z4J.F1I+s8),multiRestore:(d1I+F6X+Z4J.o6I+Z4J.q2+Z4J.n6I+Z4J.i0I+u2+Z4J.q2)}
,actions:{create:(j3+X7+F4+U4X+Z4J.V2+B2J+P6J+z1+Z4J.q2),edit:"DTE_Action_Edit",remove:"DTE_Action_Remove"}
,bubble:{wrapper:(I6J+u3+W4J+j3+X7+b5I+e6),liner:(j3+X6+u3+b5I+N8+N8+A2I+U5+S3I+F3I),table:(I6J+C8J+L7X+Z4J.z5I+q4X+Z4J.Y8+N8+m0I),close:(I6J+b7I+M0o+A8I),pointer:(j3+X6+u3+F4+y4X+Z4J.R0I+L7X+A2I+X6+I5I+Z8I+m0I),bg:(j3+X6+w0+Z8I+k7X+V)}
}
;if(r[(W+N8+I7I+Z4J.w1I+s3)]){var p=r[(Z4J.B3I+I7I+Z4J.w1I+s3)][A5X],H={sButtonText:c3X,editor:c3X,formTitle:c3X}
;p[(Z4J.q2+H0J+Q3I+m0o+C3X+Z4J.Y8+I6I)]=d[(s0X+Z4J.q2+Z4J.F1I+w8)](!E0,p[k0X],H,{formButtons:[{label:c3X,fn:function(){this[f0o]();}
}
],fnClick:function(a,b){var n4="edito",c=b[(n4+Z4J.o6I)],e=c[(S3I+G5+Z4J.F1I)][(A1X+Z4J.Y8+I6I)],d=b[e1I];if(!d[E0][(l7I+N8+w7)])d[E0][(Z4J.z5I+Z4J.w2+w7)]=e[f0o];c[(m3J+J5I+I6I)]({title:e[(Z4J.i0I+S3I+D3I)],buttons:d}
);}
}
);p[J7J]=d[H3I](!0,p[r1],H,{formButtons:[{label:null,fn:function(){this[(Z4+P)]();}
}
],fnClick:function(a,b){var c4J="Sel",c=this[(c8I+Z4J.F1I+b3+Z4J.A4+c4J+Z4J.q2+i8J+Z4J.q2+w8+s3X+w8+p5+Z4J.q2+Z4J.n6I)]();if(c.length===1){var e=b[(Z4J.q2+w8+T1+Z4J.o6I)],d=e[k1I][R0J],f=b[(y0o+y4X+Z4J.R0I+u3X)];if(!f[0][(l7I+N8+Z4J.q2+Z4J.z5I)])f[0][(l7I+N8+Z4J.q2+Z4J.z5I)]=d[(V4+v2X+Z9X)];e[R0J](c[0],{title:d[j2],buttons:f}
);}
}
}
);p[(Z4J.q2+w8+S3I+E7+Z4J.o6I+g0X+Z4J.q2)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!0,p[(u1+Z4J.z5I+Z4J.q2+Z4J.V2+Z4J.i0I)],H,{question:null,formButtons:[{label:null,fn:function(){var a=this;this[(Z4J.n6I+u0J+o5I+S3I+Z4J.i0I)](function(){var W1X="Sele",H9X="tab",X6J="fnGetInstance",F8X="bleToo";d[Z4J.h0I][g9][(W+F8X+Z4J.z5I+Z4J.n6I)][X6J](d(a[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]()[(H9X+m0I)]()[o0o]())[(c8I+Z4J.F1I+W1X+Z4J.V2+Z4J.i0I+J1+t7+Z4J.q2)]();}
);}
}
],fnClick:function(a,b){var b1J="fir",Q7I="mB",L1I="xe",D2="lectedI",L8J="fnGet",c=this[(L8J+R0+Z4J.q2+D2+F9X+Z4J.q2+L1I+Z4J.n6I)]();if(c.length!==0){var e=b[G8],d=e[(D7I+B0o+Z4J.F1I)][(V9I)],f=b[(c8I+u2+Q7I+n4J+Y1J+Z4J.n6I)],g=typeof d[(Z4J.V2+Z4J.w1I+l1X+S3I+Z4J.o6I+o5I)]==="string"?d[(H0X+c8I+S3I+t6X)]:d[(Z4J.V2+Z4J.w1I+l1X+S3I+t6X)][c.length]?d[(H0X+b9+Z4J.o6I+o5I)][c.length]:d[(Z4J.V2+t7+b1J+o5I)][F4];if(!f[0][(Z4J.z5I+Z4J.Y8+N8+Z4J.q2+Z4J.z5I)])f[0][(b3I+Z4J.q2+Z4J.z5I)]=d[(V4+N8+u6J+Z4J.i0I)];e[V9I](c,{message:g[S7X](/%d/g,c.length),title:d[(j2)],buttons:f}
);}
}
}
);}
d[(p5+I6I+F9X)](r[(p5+Z4J.i0I)][(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{create:{text:function(a,b,c){var r2X="butt",f0="reate";return a[k1I]((L5X+B9I+Z4J.n6I+Z4J.l0X+Z4J.V2+f0),c[G8][(k1I)][d0I][(r2X+t7)]);}
,className:(N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I+F6X+Z4J.V2+C3X+G4),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][(A1X+z1+Z4J.q2)][f0o];}
,fn:function(){this[(V4+v2X+Z9X)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var u5="itl",P1I="formTitle";a=e[G8];a[(Z4J.V2+Z4J.o6I+Z4J.q2+G4)]({buttons:e[e1I],message:e[(c8I+Z4J.w1I+Z4J.o6I+o5I+g6+B4+Z4J.n6I+i5)],title:e[P1I]||a[k1I][d0I][(Z4J.i0I+u5+Z4J.q2)]}
);}
}
,edit:{extend:(P2J+I6I+w8),text:function(a,b,c){return a[(S3I+G5+Z4J.F1I)]((N8+Z4J.R0I+E2I+p3J+Z4J.l0X+Z4J.q2+w8+S3I+Z4J.i0I),c[(Z4J.q2+H0J+D6J)][(D1X+Z4J.F1I)][R0J][(u0o+Z4J.i0I+t7)]);}
,className:(L5X+X4J+h3X+F6X+Z4J.q2+w8+Z9X),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][R0J][(V3I+S3I+Z4J.i0I)];}
,fn:function(){var N0o="ubm";this[(Z4J.n6I+N0o+S3I+Z4J.i0I)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var Q7J="formMessage",u9J="xes",D2X="ell",i3I="indexe",a=e[G8],c=b[C6X]({selected:!0}
)[(S3I+Z4J.F1I+y9I+z0J+B4)](),d=b[d0]({selected:!0}
)[(i3I+Z4J.n6I)](),b=b[(Z4J.V2+D2X+Z4J.n6I)]({selected:!0}
)[(h5J+Z4J.q2+u9J)]();a[(Z4J.q2+o6)](d.length||b.length?{rows:c,columns:d,cells:b}
:c,{message:e[Q7J],buttons:e[(y0o+p1X+Z4J.i0I+Z4J.i0I+t7+Z4J.n6I)],title:e[(c8I+u2+R6X+q3I+Z4J.q2)]||a[(D1X+Z4J.F1I)][(Z4J.q2+w8+S3I+Z4J.i0I)][(Z4J.i0I+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]}
);}
}
,remove:{extend:"selected",text:function(a,b,c){var Z2="18n";return a[k1I]("buttons.remove",c[G8][(S3I+Z2)][(Z4J.o6I+Z4J.q2+f1J+Z4J.q2)][(g8)]);}
,className:"buttons-remove",editor:null,formButtons:{label:function(a){return a[(D7I+R6)][V9I][(Z4+o5I+Z9X)];}
,fn:function(){this[f0o]();}
}
,formMessage:function(a,b){var l0J="irm",Y9X="confirm",u7J="nfirm",Y2="ows",c=b[(Z4J.o6I+Y2)]({selected:!0}
)[(h5J+Z4J.q2+z0J+B4)](),e=a[(S3I+G5+Z4J.F1I)][(C3X+f1J+Z4J.q2)];return ("string"===typeof e[(Z4J.V2+M7J+s7X+o5I)]?e[(f2J+u7J)]:e[Y9X][c.length]?e[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I+l0J)][c.length]:e[(P0I+l0J)][F4])[(Z4J.o6I+Z4J.q2+M7I+Y7I)](/%d/g,c.length);}
,formTitle:null,action:function(a,b,c,e){var g1="remov",Q3J="mMes",E9X="Buttons";a=e[G8];a[(Z4J.o6I+Z4J.q2+Z8J+l9J)](b[(Z4J.o6I+O2+Z4J.n6I)]({selected:!0}
)[(S3I+D7X+z0J+B4)](),{buttons:e[(s8+Z4J.o6I+o5I+E9X)],message:e[(c8I+Z4J.w1I+Z4J.o6I+Q3J+Z4J.n6I+Z4J.Y8+n6)],title:e[(c8I+Z4J.w1I+Z4J.o6I+R6X+Z4J.i0I+Z4J.z5I+Z4J.q2)]||a[(D7I+R6)][(g1+Z4J.q2)][j2]}
);}
}
}
);f[(c8I+S3I+k0o+Z4J.q2+Z4J.n6I)]={}
;f[(j3+z1+S5I+S3I+A1J)]=function(a,b){var X5X="calendar",t5X="matc",z2X="sta",D8X="-time",O4J="ndar",D3J="-date",k3="</div></div>",E3="<span>:</span>",Y6J='-time">',Y8J='lend',f9I='-year"/></div></div><div class="',g4J='th',r1X='</button></div><div class="',a4X='conRi',X2="evi",C5='nLeft',M9J='-title"><div class="',n1I='-label"><span/><select class="',s0o='ut',J5J="sed",K1="YYY",k1J="ntj",N6="tetim",n7X="YYYY-MM-DD",H8I="lassP";this[Z4J.V2]=d[H3I](!E0,{}
,f[H1J][(y9I+c8I+Z4J.Y8+g8J+Z4J.I2I)],b);var c=this[Z4J.V2][(Z4J.V2+H8I+Z4J.o6I+Z4J.q2+c8I+Y4X)],e=this[Z4J.V2][k1I];if(!j[H7I]&&n7X!==this[Z4J.V2][(c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I)])throw (u3+o6+Z4J.w1I+Z4J.o6I+W4J+w8+Z4J.Y8+N6+Z4J.q2+n4I+j0I+S3I+Z4J.i0I+y3I+Z4J.w1I+n4J+W4J+o5I+S7+Z4J.q2+k1J+Z4J.n6I+W4J+Z4J.w1I+Z4J.F1I+Z4J.z5I+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+Z4J.w1I+t6X+Z4J.Y8+Z4J.i0I+c3+V9+K1+F6X+g6+g6+F6X+j3+j3+G4J+Z4J.V2+Q+W4J+N8+Z4J.q2+W4J+Z4J.R0I+J5J);var g=function(a){var x8I='utto',B1J='wn',i7X='Do',O0I='U',q6J='con',d0o='ck',f9X='lo',U0I='meb';return g8I+c+(m6+c0X+T7I+U0I+f9X+d0o+b0X+m2I+v3+q2X+B2I+P7I+o5X+i8X)+c+(m6+T7I+q6J+O0I+H7J+b0X+Z4I+t4X+y2)+e[(k6I+Z4J.o6I+Z4J.q2+g0J+Q7X+q5J)]+(b0o+Z4I+s0o+c0X+d9I+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+n1I+c+F6X+a+(t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+(m6+T7I+B2I+o8J+i7X+B1J+b0X+Z4I+x8I+v9I+y2)+e[c6X]+(P0o+N8+Z4J.R0I+Z4J.i0I+Z4J.i0I+t7+U+w8+S3I+g0J+U+w8+P9X+N2X);}
,g=d(g8I+c+(b0X+m2I+v3+q2X+B2I+P7I+q4I+n9J+n9J+i8X)+c+(m6+m2I+q4I+j2J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+c+M9J+c+(m6+T7I+A7X+C5+b0X+Z4I+B0X+c0X+c0X+o8J+y2)+e[(k6I+Z4J.o6I+X2+Z4J.w1I+Z4J.R0I+Z4J.n6I)]+(b0o+Z4I+s0o+Z0X+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+c+(m6+T7I+a4X+P0J+v0J+c0X+b0X+Z4I+t4X+y2)+e[c6X]+r1X+c+n1I+c+(m6+A9I+d9I+v9I+g4J+t3X+m2I+T7I+Y7J+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X)+c+n1I+c+f9I+c+(m6+B2I+q4I+Y8J+L6+t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+U9+n9J+i8X)+c+Y6J+g(C1X)+E3+g(N2J)+E3+g(Z5I)+g(K9J)+k3);this[Z6J]={container:g,date:g[(b9+Z4J.F1I+w8)](Z4J.l0X+c+D3J),title:g[(b9+F9X)](Z4J.l0X+c+(F6X+Z4J.i0I+W6)),calendar:g[T9X](Z4J.l0X+c+(F6X+Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.q2+O4J)),time:g[T9X](Z4J.l0X+c+D8X),input:d(a)}
;this[Z4J.n6I]={d:c3X,display:c3X,namespace:(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+w8+z1+Z4J.q2+v0o+Z4J.q2+F6X)+f[H1J][(z1J+Z4J.F1I+z2X+Z4J.F1I+Z9J)]++,parts:{date:c3X!==this[Z4J.V2][(c8I+u2+F6)][e6X](/[YMD]/),time:c3X!==this[Z4J.V2][o7J][(t5X+y3I)](/[Hhm]/),seconds:-N0!==this[Z4J.V2][(c8I+u1X+z1)][(h5J+p5+s1+c8I)](Z4J.n6I),hours12:c3X!==this[Z4J.V2][(c8I+u1X+Z4J.Y8+Z4J.i0I)][(A9J+Z4J.i0I+O9J)](/[haA]/)}
}
;this[(Z6J)][Q9J][(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)])[(Z4J.Y8+k6I+k6I+q8+w8)](this[(w8+Z4J.w1I+o5I)][Y0I]);this[(w8+S7)][(w8+Z4J.Y8+I6I)][(Z4J.Y8+k6I+k6I+C5I)](this[Z6J][(Z4J.i0I+S3I+q3I+Z4J.q2)])[(l4X+w8)](this[Z6J][X5X]);this[t2X]();}
;d[(Z4J.q2+S8X)](f.DateTime.prototype,{destroy:function(){var S8I="iner";this[(F4+y3I+S3I+w8+Z4J.q2)]();this[(w8+Z4J.w1I+o5I)][(H0X+B7+S8I)]()[(Z4J.w1I+f4)]("").empty();this[(Z6J)][(S3I+r4)][t9J](".editor-datetime");}
,max:function(a){var R4X="ander",t0I="Titl",x7I="maxDate";this[Z4J.V2][x7I]=a;this[(L6J+Q8I+S3I+Z4J.w1I+h3X+t0I+Z4J.q2)]();this[(z6+C0+Z4J.Y8+Z4J.z5I+R4X)]();}
,min:function(a){var j9I="etC",Z3="_optionsTitle";this[Z4J.V2][R6J]=a;this[Z3]();this[(n8J+j9I+X0I+Q+w8+Z4J.q2+Z4J.o6I)]();}
,owns:function(a){return 0<d(a)[p7I]()[k6X](this[(Z6J)][(H0X+u2X+Z4J.o6I)]).length;}
,val:function(a,b){var A8X="Cal",b2="setTi",V1J="toString",V5J="oUt",E8I="toDa",E4I="Lo",a7X="ome",b0I="tc";if(a===h)return this[Z4J.n6I][w8];if(a instanceof Date)this[Z4J.n6I][w8]=this[z3J](a);else if(null===a||""===a)this[Z4J.n6I][w8]=null;else if("string"===typeof a)if(j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]){var c=j[H7I][(Z4J.R0I+b0I)](a,this[Z4J.V2][o7J],this[Z4J.V2][(o5I+a7X+Z4J.F1I+Z4J.i0I+E4I+Z4J.V2+w2X)],this[Z4J.V2][N3I]);this[Z4J.n6I][w8]=c[(S3I+Z4J.n6I+q7+Z4J.Y8+u1I+w8)]()?c[(E8I+Z4J.i0I+Z4J.q2)]():null;}
else c=a[e6X](/(\d{4})\-(\d{2})\-(\d{2})/),this[Z4J.n6I][w8]=c?new Date(Date[(G2J)](c[1],c[2]-1,c[3])):null;if(b||b===h)this[Z4J.n6I][w8]?this[j0o]():this[(Z6J)][j0X][(g0J+X0I)](a);this[Z4J.n6I][w8]||(this[Z4J.n6I][w8]=this[(F4+c1+X6+V5J+Z4J.V2)](new Date));this[Z4J.n6I][p6J]=new Date(this[Z4J.n6I][w8][V1J]());this[(F4+b2+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.n6I+Z4J.q2+Z4J.i0I+A8X+Z4J.Y8+F9X+Z4J.q2+Z4J.o6I)]();this[(z6+Z4J.i0I+X6+v0o+Z4J.q2)]();}
,_constructor:function(){var J3J="_setTitle",k2="atetim",p1I="Pm",X9="cond",M3X="sInc",U3X="nut",q0o="_optionsTime",a7J="s1",A0X="onsT",t9X="sT",J5="ast",Q2J="eblo",C7X="tim",v4X="par",d6X="isp",P0X="ime",a=this,b=this[Z4J.V2][N7X],c=this[Z4J.V2][(D1X+Z4J.F1I)];this[Z4J.n6I][(k6I+Z4J.Y8+Z4J.o6I+Z4J.i0I+Z4J.n6I)][c1]||this[Z6J][(w8+G4)][v3J]((H0J+Z4J.n6I+V7I+Z4J.g7I),(w0I+Z4J.q2));this[Z4J.n6I][B8X][Y0I]||this[Z6J][(Z4J.i0I+P0X)][v3J]((w8+d6X+c5J),"none");this[Z4J.n6I][(v4X+Z4J.I2I)][(u1+Z4J.V2+t7+w8+Z4J.n6I)]||(this[(Z6J)][Y0I][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("div.editor-datetime-timeblock")[(Z4J.q2+j1I)](2)[(Z4J.o6I+Z4J.q2+F2X)](),this[(Z6J)][(C7X+Z4J.q2)][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("span")[(Z4J.q2+j1I)](1)[V9I]());this[Z4J.n6I][B8X][i4X]||this[Z6J][Y0I][I7X]((w8+P9X+Z4J.l0X+Z4J.q2+w8+Z9X+u2+F6X+w8+Z4J.Y8+Z4J.i0I+Z4J.q2+t1I+A1J+F6X+Z4J.i0I+S3I+o5I+Q2J+Z4J.V2+u3I))[(Z4J.z5I+J5)]()[V9I]();this[(L6J+k6I+t1I+t7+t9X+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.w1I+k6I+Z4J.i0I+S3I+A0X+v0o+Z4J.q2)]("hours",this[Z4J.n6I][B8X][(y3I+Z4J.w1I+g5J+a7J+w6X)]?12:24,1);this[q0o]("minutes",60,this[Z4J.V2][(u6J+U3X+Z4J.q2+M3X+C3X+A1J+g3X)]);this[q0o]((Z4J.n6I+Z4J.V1I+t7+w8+Z4J.n6I),60,this[Z4J.V2][(u1+X9+Z4J.n6I+x1+Z4J.F1I+Z4J.V2+C3X+A1J+g3X)]);this[u8]("ampm",["am","pm"],c[(a0+p1I)]);this[Z6J][j0X][t7]((c8I+Z4J.w1I+E8+Z4J.l0X+Z4J.q2+H0J+Z4J.i0I+u2+F6X+w8+z1+Z4J.q2+Y0I+W4J+Z4J.V2+q6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+w8+Z4J.Y8+I6I+Z4J.i0I+v0o+Z4J.q2),function(){var B9="isabl";if(!a[(w8+Z4J.w1I+o5I)][(Q9J)][(S3I+Z4J.n6I)]((J0o+g0J+r9X+S3I+N8+Z4J.z5I+Z4J.q2))&&!a[(w8+Z4J.w1I+o5I)][j0X][(S3I+Z4J.n6I)]((J0o+w8+B9+u9))){a[y1](a[(w8+Z4J.w1I+o5I)][j0X][(e7J+Z4J.z5I)](),false);a[J2]();}
}
)[(t7)]((l6+Z4J.g7I+s3J+Z4J.l0X+Z4J.q2+o6+Z4J.w1I+Z4J.o6I+F6X+w8+k2+Z4J.q2),function(){var r3J="isib",H5J="ntai";a[Z6J][(Z4J.V2+Z4J.w1I+H5J+Z4J.F1I+Z4J.q2+Z4J.o6I)][(r9X)]((J0o+g0J+r3J+m0I))&&a[y1](a[Z6J][j0X][(g0J+X0I)](),false);}
);this[(Z6J)][Q9J][t7]((Z4J.V2+C3I+M5X+Z4J.q2),(Z4J.n6I+Z4J.q2+Z4J.z5I+Z4J.V1I+Z4J.i0I),function(){var I3J="itio",A4J="_setTime",N1="econ",b5="TCMi",F0="utp",K0="_wr",I0o="_set",r6="UTCHou",a3I="UT",j7X="mpm",h5I="art",F2I="Cla",x9X="has",D3="alander",N7="_correctMonth",c=d(this),f=c[(g0J+X0I)]();if(c[F4J](b+"-month")){a[N7](a[Z4J.n6I][p6J],f);a[J3J]();a[(F4+u1+Z4J.i0I+G4X+D3)]();}
else if(c[(x9X+X7J+L1)](b+(F6X+Z4J.g7I+Z4J.q2+v6))){a[Z4J.n6I][p6J][(Z4J.n6I+K5I+Q8J+Z4J.R0I+Z4J.z5I+D3X)](f);a[(z6+Z4J.i0I+W7I+q3I+Z4J.q2)]();a[(z6+C0+Z4J.Y8+l7I+Z4J.F1I+l8)]();}
else if(c[F4J](b+(F6X+y3I+E5J+Z4J.n6I))||c[(y3I+Z4J.Y8+Z4J.n6I+F2I+t8)](b+(F6X+Z4J.Y8+o5I+Q9I))){if(a[Z4J.n6I][(k6I+h5I+Z4J.n6I)][i4X]){c=d(a[Z6J][(f2J+Z4J.F1I+B7+S3I+G9X+Z4J.o6I)])[(K3J+w8)]("."+b+(F6X+y3I+Z4J.w1I+Z4J.R0I+B9X))[y1]()*1;f=d(a[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+S3I+Z4J.F1I+Q2)])[(c8I+Y0o+w8)]("."+b+(F6X+Z4J.Y8+j7X))[(g0J+X0I)]()===(Q9I);a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+a3I+G4X+z8+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z4J.n6I)](c===12&&!f?0:f&&c!==12?c+12:c);}
else a[Z4J.n6I][w8][(Z4J.n6I+Z4J.q2+Z4J.i0I+r6+Z4J.o6I+Z4J.n6I)](f);a[(I0o+X6+v0o+Z4J.q2)]();a[(K0+S3I+Z4J.i0I+Z4J.q2+s1+F0+n4J)](true);}
else if(c[(y3I+Z4J.Y8+Z4J.n6I+n1+Z4J.n6I)](b+"-minutes")){a[Z4J.n6I][w8][(u1+Z4J.i0I+D7+b5+Z5X+Z4J.i0I+Z4J.q2+Z4J.n6I)](f);a[(F4+u1+Z4J.i0I+X6+P0X)]();a[j0o](true);}
else if(c[F4J](b+(F6X+Z4J.n6I+N1+w5I))){a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+R0+Z4J.V1I+Z4J.w1I+F9X+Z4J.n6I)](f);a[A4J]();a[j0o](true);}
a[(w8+S7)][(S3I+Z4J.F1I+W2I)][(c8I+Z4J.w1I+v5J+Z4J.n6I)]();a[(F4+m0J+I3J+Z4J.F1I)]();}
)[t7]("click",function(c){var l0="ocus",o5="eOut",h7J="rit",D0J="setUTCDate",k5J="Mo",c9X="setUTCFullYear",y5="dIn",m9J="cte",H6J="ption",f9J="nD",P4J="asC",U6I="edIn",Q5="dex",p9J="dI",d5="selectedIndex",Z5J="tTi",a5I="corre",U1="nRi",z0X="lan",F0I="CMon",d1X="etUT",Q0o="CM",e5X="setUT",E9="eft",D0X="onL",D5X="pag",I9X="Cas",k9X="we",F6J="toLo",C2X="arget",f=c[(Z4J.i0I+C2X)][L0o][(F6J+k9X+Z4J.o6I+I9X+Z4J.q2)]();if(f!==(T8J)){c[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I+T3X+D5X+Z4J.Y8+Z4J.i0I+Q7X+Z4J.F1I)]();if(f==="button"){c=d(c[d6J]);f=c.parent();if(!f[(y3I+Z4J.Y8+Z4J.n6I+X7J+L1)]((w8+r9X+Z4J.Y8+B2X+Z4J.q2+w8)))if(f[(y3I+Z1+X7J+Z4J.Y8+Z4J.n6I+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+D0X+E9))){a[Z4J.n6I][p6J][(e5X+Q0o+Z4J.w1I+g3X+y3I)](a[Z4J.n6I][p6J][(Z8I+d1X+F0I+U1I)]()-1);a[J3J]();a[(z6+C0+Z4J.Y8+z0X+y9I+Z4J.o6I)]();a[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][O6I]();}
else if(f[F4J](b+(F6X+S3I+Z4J.V2+Z4J.w1I+U1+Z8I+y3I+Z4J.i0I))){a[(F4+a5I+i8J+g6+t7+U1I)](a[Z4J.n6I][(S0+k6I+Z4J.z5I+y3)],a[Z4J.n6I][(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][f5J]()+1);a[(n8J+Z4J.q2+Z5J+q3I+Z4J.q2)]();a[(n8J+Z4J.A4+G4X+X0I+Z4J.Y8+Z4J.F1I+l8)]();a[(w8+S7)][(S3I+n8X+n4J)][(O6I)]();}
else if(f[(C3I+Z4J.n6I+G4X+Z4J.z5I+Z1+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+t7+g8X))){c=f.parent()[(T9X)]((I2J+K3X))[0];c[d5]=c[(Z4J.n6I+Z4J.q2+p5J+Z4J.q2+p9J+Z4J.F1I+Q5)]!==c[V6X].length-1?c[(Z4J.n6I+w7+K3X+U6I+w8+p5)]+1:0;d(c)[l2]();}
else if(f[(y3I+P4J+Z4J.z5I+L1)](b+(F6X+S3I+f2J+f9J+Z4J.w1I+g9I))){c=f.parent()[(K3J+w8)]((I2J+K3X))[0];c[d5]=c[(u1+Z4J.z5I+K3X+Z4J.q2+w8+x1+D7X+z0J)]===0?c[(Z4J.w1I+H6J+Z4J.n6I)].length-1:c[(Z4J.n6I+Z4J.q2+m0I+m9J+y5+w8+Z4J.q2+z0J)]-1;d(c)[l2]();}
else{if(!a[Z4J.n6I][w8])a[Z4J.n6I][w8]=a[z3J](new Date);a[Z4J.n6I][w8][c9X](c.data("year"));a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+D7+W0I+k5J+Z4J.F1I+Z4J.i0I+y3I)](c.data((o5I+Z4J.w1I+r1J)));a[Z4J.n6I][w8][D0J](c.data((w8+y3)));a[(F4+j0J+h7J+o5+k6I+Z4J.R0I+Z4J.i0I)](true);setTimeout(function(){a[(F4+h1I+w8+Z4J.q2)]();}
,10);}
}
else a[(Z6J)][j0X][(c8I+l0)]();}
}
);}
,_compareDates:function(a,b){var Z3X="_dateToUtcString",X8X="cS",I8J="dateToUt";return this[(F4+I8J+X8X+Z4J.i0I+b7J+Z8I)](a)===this[Z3X](b);}
,_correctMonth:function(a,b){var N4X="Mont",K4="setUTCMonth",a1X="sI",c8J="_da",c=this[(c8J+Z4J.g7I+a1X+Z4J.F1I+g6+t7+Z4J.i0I+y3I)](a[W2X](),b),e=a[Y1I]()>c;a[K4](b);e&&(a[(Z4J.n6I+Z4J.q2+o1J+G4X+j3+z1+Z4J.q2)](c),a[(u1+m8+W0I+N4X+y3I)](b));}
,_daysInMonth:function(a,b){return [31,0===a%4&&(0!==a%100||0===a%400)?29:28,31,30,31,30,31,31,30,31,30,31][b];}
,_dateToUtc:function(a){var H9I="getS",t0X="getHours";return new Date(Date[G2J](a[D8J](),a[(Z8I+Z4J.A4+g6+S3J+y3I)](),a[(R5+j3+Z4J.Y8+I6I)](),a[t0X](),a[(R5+g6+S3I+Z5X+c1X)](),a[(H9I+Z4J.q2+Z4J.V2+t7+w5I)]()));}
,_dateToUtcString:function(a){var v4I="getU",q1J="tUTCMont",r8J="_pad",w1J="lYe";return a[(R5+D7+Q8J+g8J+w1J+v6)]()+"-"+this[r8J](a[(n6+q1J+y3I)]()+1)+"-"+this[(F4+k6I+b4)](a[(v4I+X6+G4X+N8J+Z4J.i0I+Z4J.q2)]());}
,_hide:function(){var e4I="clic",i5J="dow",r3I="esp",a=this[Z4J.n6I][(g7X+o5I+r3I+N4+Z4J.q2)];this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+u2X+Z4J.o6I)][K7X]();d(j)[(Z4J.w1I+f4)]("."+a);d(q)[(Z4J.w1I+c8I+c8I)]((l6+Z4J.g7I+i5J+Z4J.F1I+Z4J.l0X)+a);d("div.DTE_Body_Content")[(Z4J.w1I+f4)]("scroll."+a);d((G8X+w8+Z4J.g7I))[t9J]((e4I+u3I+Z4J.l0X)+a);}
,_hours24To12:function(a){return 0===a?12:12<a?a-12:a;}
,_htmlDay:function(a){var S5='ay',q6X='tt',E5="day",B2="disa";if(a.empty)return '<td class="empty"></td>';var b=[(w8+y3)],c=this[Z4J.V2][N7X];a[(B2+N8+Z4J.z5I+Z4J.q2+w8)]&&b[q7I]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I));a[(Z4J.i0I+G1+Z4J.Y8+Z4J.g7I)]&&b[q7I]("today");a[r4X]&&b[(l2I+w5)]("selected");return '<td data-day="'+a[(E5)]+(k6J+B2I+t8J+n9J+n9J+i8X)+b[W6I](" ")+'"><button class="'+c+(F6X+N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+W4J)+c+(m6+m2I+q4I+F2J+k6J+c0X+H3J+i8X+Z4I+B0X+q6X+d9I+v9I+k6J+m2I+h1+q4I+m6+F2J+m8I+L6+i8X)+a[(j1+Z4J.Y8+Z4J.o6I)]+'" data-month="'+a[(Z8J+Z4J.F1I+U1I)]+(k6J+m2I+h1+q4I+m6+m2I+S5+i8X)+a[E5]+(H6)+a[(E5)]+(P0o+N8+n4J+Z4J.i0I+t7+U+Z4J.i0I+w8+N2X);}
,_htmlMonth:function(a,b){var Y9="><",a1I="Mon",c7I='ead',h6X="kN",e8I="showWeekNumber",p0I="refi",X3J="_htmlWeekOfYear",f3X="Nu",H4X="owWeek",d2J="_htmlDay",c4="fu",W5="etUTC",S0o="ys",q4J="sab",U6J="_compareDates",d3J="_comp",u4J="Secon",L1X="UTCMin",m5J="setUTCHours",g5="setSeconds",V0J="setUTCMinutes",T2="TCHo",S3="axDate",l7X="irstD",u8I="TCDa",i7J="_daysInMonth",c=new Date,e=this[i7J](a,b),f=(new Date(Date[G2J](a,b,1)))[(Z8I+Z4J.q2+m8+u8I+Z4J.g7I)](),g=[],h=[];0<this[Z4J.V2][G7I]&&(f-=this[Z4J.V2][(c8I+l7X+y3)],0>f&&(f+=7));for(var i=e+f,j=i;7<j;)j-=7;var i=i+(7-j),j=this[Z4J.V2][R6J],m=this[Z4J.V2][(o5I+S3)];j&&(j[(Z4J.n6I+K5I+T2+Z4J.R0I+B9X)](0),j[V0J](0),j[g5](0));m&&(m[m5J](23),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+L1X+Z4J.R0I+c1X)](59),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+u4J+w5I)](59));for(var n=0,p=0;n<i;n++){var o=new Date(Date[G2J](a,b,1+(n-f))),q=this[Z4J.n6I][w8]?this[(d3J+v6+Z4J.q2+N8J+c1X)](o,this[Z4J.n6I][w8]):!1,r=this[U6J](o,c),s=n<f||n>=e+f,t=j&&o<j||m&&o>m,v=this[Z4J.V2][(H0J+q4J+Z4J.z5I+Z4J.q2+j3+Z4J.Y8+S0o)];d[(r9X+X0+Z4J.o6I+y3)](v)&&-1!==d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Y8X+Z4J.g7I)](o[(Z8I+W5+N8J+Z4J.g7I)](),v)?t=!0:(c4+M7X+Z4J.i0I+S3I+t7)===typeof v&&!0===v(o)&&(t=!0);h[(k6I+Z4J.R0I+w5)](this[d2J]({day:1+(n-f),month:b,year:a,selected:q,today:r,disabled:t,empty:s}
));7===++p&&(this[Z4J.V2][(Z4J.n6I+y3I+H4X+f3X+o5I+N8+Q2)]&&h[(Z4J.R0I+Z4J.F1I+Z4J.n6I+h1I+c8I+Z4J.i0I)](this[X3J](n-f,b,a)),g[q7I]("<tr>"+h[W6I]("")+(P0o+Z4J.i0I+Z4J.o6I+N2X)),h=[],p=0);}
c=this[Z4J.V2][(Z4J.V2+q2J+i1+p0I+z0J)]+(F6X+Z4J.i0I+Z4J.Y8+l3);this[Z4J.V2][e8I]&&(c+=(W4J+j0J+Z4J.q2+Z4J.q2+h6X+Z4J.R0I+P7J+Z4J.q2+Z4J.o6I));return (x5+c0X+M9I+K2X+q2X+B2I+P7I+b6+n9J+i8X)+c+(b0X+c0X+v0J+c7I+y2)+this[(F4+h0J+Z4J.z5I+a1I+Z4J.i0I+y3I+w7I+b4)]()+(P0o+Z4J.i0I+W7X+w8+Y9+Z4J.i0I+N8+i2X+N2X)+g[W6I]("")+(P0o+Z4J.i0I+N8+Z4J.w1I+g3I+U+Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2+N2X);}
,_htmlMonthHead:function(){var x5I="ush",v7I="Num",O2I="eek",a=[],b=this[Z4J.V2][G7I],c=this[Z4J.V2][(S3I+U1X+B0o+Z4J.F1I)],e=function(a){var T8I="weekdays";for(a+=b;7<=a;)a-=7;return c[T8I][a];}
;this[Z4J.V2][(Z4J.n6I+y3I+O2+j0I+O2I+v7I+N8+Z4J.q2+Z4J.o6I)]&&a[(k6I+x5I)]("<th></th>");for(var d=0;7>d;d++)a[(l2I+Z4J.n6I+y3I)]((M4X+Z4J.i0I+y3I+N2X)+e(d)+(P0o+Z4J.i0I+y3I+N2X));return a[(Z4J.i5I+Z4J.w1I+S3I+Z4J.F1I)]("");}
,_htmlWeekOfYear:function(a,b,c){var l3J="classPr",j8I="CDa",l7="ei",e=new Date(c,0,1),a=Math[(Z4J.V2+l7+Z4J.z5I)](((new Date(c,b,a)-e)/864E5+e[(Z8I+Z4J.q2+o1J+j8I+Z4J.g7I)]()+1)/7);return '<td class="'+this[Z4J.V2][(l3J+Z4J.q2+c8I+S3I+z0J)]+(m6+R7J+m8I+m8I+b9I+H6)+a+(P0o+Z4J.i0I+w8+N2X);}
,_options:function(a,b,c){var n8I="assP";c||(c=b);a=this[Z6J][(H0X+B7+S3I+F3I)][T9X]((u1+p5J+Z4J.l0X)+this[Z4J.V2][(Z4J.V2+Z4J.z5I+n8I+Z4J.o6I+Z4J.q2+b9+z0J)]+"-"+a);a.empty();for(var e=0,d=b.length;e<d;e++)a[w1X]('<option value="'+b[e]+(H6)+c[e]+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionSet:function(a,b){var Z0o="unknown",B1I="ected",k2J="refix",w5X="clas",c=this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+Y0o+Q2)][(c8I+h5J)]("select."+this[Z4J.V2][(w5X+x7X+k2J)]+"-"+a),e=c.parent()[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]("span");c[y1](b);c=c[(c8I+Y0o+w8)]((Y7X+J0o+Z4J.n6I+w7+B1I));e[(E4J+o5I+Z4J.z5I)](0!==c.length?c[(I6I+z0J+Z4J.i0I)]():this[Z4J.V2][k1I][Z0o]);}
,_optionsTime:function(a,b,c){var x0J="fix",a=this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][T9X]((u1+m0I+i8J+Z4J.l0X)+this[Z4J.V2][(Q4J+Z1+Z4J.n6I+i1+Z4J.o6I+Z4J.q2+x0J)]+"-"+a),e=0,d=b,f=12===b?function(a){return a;}
:this[(j6J+Z4J.Y8+w8)];12===b&&(e=1,d=13);for(b=e;b<d;b+=c)a[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]('<option value="'+b+'">'+f(b)+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionsTitle:function(){var M1X="_range",H4J="hs",n3J="_r",w7J="mon",p9I="opt",V0X="yearRange",f9="Ye",o4="tFull",M6J="rRang",V5="yea",W0X="getF",a=this[Z4J.V2][(D7I+R6)],b=this[Z4J.V2][(o5I+S3I+Z4J.F1I+N8J+Z4J.i0I+Z4J.q2)],c=this[Z4J.V2][(A9J+z0J+n7J+Z4J.q2)],b=b?b[(n6+P1+Z4J.R0I+q5I+V9+Z4J.q2+v6)]():null,c=c?c[(W0X+g8J+D3X)]():null,b=null!==b?b:(new Date)[D8J]()-this[Z4J.V2][(V5+M6J+Z4J.q2)],c=null!==c?c:(new Date)[(n6+o4+f9+Z4J.Y8+Z4J.o6I)]()+this[Z4J.V2][V0X];this[(F4+p9I+s4+Z4J.n6I)]((w7J+Z4J.i0I+y3I),this[(n3J+Q+n6)](0,11),a[(w7J+Z4J.i0I+H4J)]);this[u8]("year",this[M1X](b,c));}
,_pad:function(a){return 10>a?"0"+a:a;}
,_position:function(){var e2X="ndTo",j5I="erHeight",E8J="out",G3X="onta",a=this[Z6J][(Y0o+W2I)][(t9J+Y9J)](),b=this[(Z6J)][(Z4J.V2+G3X+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)],c=this[(w8+S7)][(S3I+r4)][(E8J+j5I)]();b[v3J]({top:a.top+c,left:a[s2I]}
)[(Z4J.Y8+N0J+Z4J.q2+e2X)]("body");var e=b[u6I](),f=d("body")[(Z4J.n6I+Z4J.V2+P1X+g6J+k6I)]();a.top+c+e-f>d(j).height()&&(a=a.top-e,b[(Z4J.V2+Z4J.n6I+Z4J.n6I)]((Z4J.i0I+Z4J.w1I+k6I),0>a?0:a));}
,_range:function(a,b){for(var c=[],e=a;e<=b;e++)c[q7I](e);return c;}
,_setCalander:function(){var R8="isplay",f5="lM",p0="_htm";this[Z6J][(Z4J.V2+w2X+Z4J.F1I+Z4J.C6J+Z4J.o6I)].empty()[w1X](this[(p0+f5+t7+Z4J.i0I+y3I)](this[Z4J.n6I][(w8+R8)][W2X](),this[Z4J.n6I][(w8+S3I+Z4J.n6I+V7I+Z4J.g7I)][(Z8I+Z4J.A4+D7+W0I+g6+Z4J.w1I+r1J)]()));}
,_setTitle:function(){var c4I="lY",I7="CFul",H6X="displ";this[(F4+Z4J.w1I+k6I+Z4J.i0I+Q7X+Z4J.F1I+w9+Z4J.i0I)]((Z8J+g3X+y3I),this[Z4J.n6I][(H6X+Z4J.Y8+Z4J.g7I)][f5J]());this[L3I]((Z4J.g7I+H5I),this[Z4J.n6I][p6J][(Z8I+Z4J.q2+m8+X6+I7+c4I+Z4J.q2+Z4J.Y8+Z4J.o6I)]());}
,_setTime:function(){var z9I="optio",l1J="Mi",d7I="4T",j3J="_ho",s4I="hou",H8="ptionS",b5J="getUTCHours",a=this[Z4J.n6I][w8],b=a?a[b5J]():0;this[Z4J.n6I][B8X][i4X]?(this[(F4+Z4J.w1I+H8+Z4J.q2+Z4J.i0I)]((s4I+B9X),this[(j3J+g5J+Z4J.n6I+w6X+d7I+Z4J.w1I+U1X+w6X)](b)),this[L3I]("ampm",12>b?(Z4J.Y8+o5I):(k6I+o5I))):this[L3I]((I9J+g5J+Z4J.n6I),b);this[L3I]((o5I+S3I+Z4J.F1I+Z4J.R0I+c1X),a?a[(Z8I+Z4J.q2+m8+W0I+l1J+Z4J.F1I+n4J+Z4J.q2+Z4J.n6I)]():0);this[(F4+z9I+Z4J.F1I+R0+Z4J.q2+Z4J.i0I)]("seconds",a?a[(n6+Z4J.i0I+w9+H0X+w5I)]():0);}
,_show:function(){var t1="yd",u0I="scr",Y="_position",V1="esiz",F1X="mesp",a=this,b=this[Z4J.n6I][(g7X+F1X+Y7I)];this[(F4+E7I+Z4J.n6I+S3I+Z4J.i0I+s4)]();d(j)[t7]("scroll."+b+(W4J+Z4J.o6I+V1+Z4J.q2+Z4J.l0X)+b,function(){a[Y]();}
);d("div.DTE_Body_Content")[(Z4J.w1I+Z4J.F1I)]((u0I+A0I+Z4J.z5I+Z4J.l0X)+b,function(){a[Y]();}
);d(q)[t7]((l6+t1+o0I+Z4J.l0X)+b,function(b){var b8J="key",z3="ey",x9J="eyCo";(9===b[(u3I+x9J+y9I)]||27===b[(u3I+z3+G4X+O1X)]||13===b[(b8J+G4X+O1X)])&&a[(M4)]();}
);setTimeout(function(){d("body")[t7]("click."+b,function(b){var X1X="rg";!d(b[d6J])[(k6I+v6+q8+Z4J.i0I+Z4J.n6I)]()[k6X](a[(w8+Z4J.w1I+o5I)][(Z4J.V2+S3J+A7+F3I)]).length&&b[(B7+X1X+Z4J.A4)]!==a[(Z6J)][(Y0o+W2I)][0]&&a[M4]();}
);}
,10);}
,_writeOutput:function(a){var Y6I="_pa",a2J="Yea",T5I="momentLocale",p3="utc",b=this[Z4J.n6I][w8],b=j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]?j[H7I][p3](b,h,this[Z4J.V2][T5I],this[Z4J.V2][N3I])[o7J](this[Z4J.V2][o7J]):b[(n6+m8+X6+G4X+X5+q5I+a2J+Z4J.o6I)]()+"-"+this[(Y6I+w8)](b[f5J]()+1)+"-"+this[(j6J+Z4J.Y8+w8)](b[Y1I]());this[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][(e7J+Z4J.z5I)](b);a&&this[Z6J][(S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][O6I]();}
}
);f[(j3+z1+Z4J.q2+X6+S3I+A1J)][(F4+e9X+V3+Z4J.q2)]=E0;f[H1J][(w8+Z4J.q2+g5X+Z4J.n6I)]={classPrefix:L4J,disableDays:c3X,firstDay:N0,format:(V9+r8+V9+F6X+g6+g6+F6X+j3+j3),i18n:f[(w8+W9+Z4J.Y8+g8J+Z4J.I2I)][(D1X+Z4J.F1I)][(w8+Z4J.Y8+Z4J.i0I+O7J+Z4J.q2)],maxDate:c3X,minDate:c3X,minutesIncrement:N0,momentStrict:!E0,momentLocale:q8,secondsIncrement:N0,showWeekNumber:!N0,yearRange:f2I}
;var I=function(a,b){var Q1X="div.upload button",D4I="...",f4J="hoose",i6="uploadText";if(c3X===b||b===h)b=a[i6]||(G4X+f4J+W4J+c8I+S3I+Z4J.z5I+Z4J.q2+D4I);a[(L3X+l2I+Z4J.i0I)][(b9+F9X)](Q1X)[z6I](b);}
,M=function(a,b,c){var U2="]",Y2X="=",W7="[",b4J="nder",l3X="oDr",i7="E_Upl",i4="agex",w6I="eav",R3I="drop",I6X="Drag",n8="pT",y2I="gDro",A6="dragDrop",k0="eRea",n3I='ered',D0o='ell',v7X='ll',v2='ton',X='lue',y0I='V',a9='il',x6='yp',M1I='np',O9='" /><',L2X='load',c3J='_ta',z0I='itor_uplo',F5J="asses",e=a[(Z4J.V2+Z4J.z5I+F5J)][y0o][g8],g=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+m2I+z0I+q4I+m2I+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+B0X+c3J+Z4I+K2X+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+G9J+d9I+R7J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+B2I+B5+P7I+q2X+B0X+H7J+L2X+b0X+Z4I+t4X+q2X+B2I+P7I+o5X+i8X)+e+(O9+T7I+M1I+B0X+c0X+q2X+c0X+x6+m8I+i8X+c2I+a9+m8I+t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+B2I+B5+P7I+q2X+B2I+K2X+L6+y0I+q4I+X+b0X+Z4I+B0X+c0X+v2+q2X+B2I+t8J+e0J+i8X)+e+(s4X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+U9+n9J+i8X+G9J+d9I+R7J+q2X+n9J+m8I+A7X+v9I+m2I+b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+B2I+m8I+v7X+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+m2I+G9J+d9I+H7J+b0X+n9J+H7J+q4I+v9I+P8X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+v3+q2X+B2I+t8J+n9J+n9J+i8X+B2I+D0o+b0X+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+G9J+V6+m2I+n3I+t3X+m2I+v3+o9+m2I+T7I+Y7J+o9+m2I+T7I+Y7J+o9+m2I+v3+y2));b[(F4+S3I+Z4J.F1I+l2I+Z4J.i0I)]=g;b[(E4+N8+m0I+w8)]=!E0;I(b);if(j[(o3+S3I+Z4J.z5I+k0+l8)]&&!N0!==b[A6]){g[T9X]((H0J+g0J+Z4J.l0X+w8+X6X+W4J+Z4J.n6I+o8I+Z4J.F1I))[(Z4J.i0I+s0X)](b[(J4I+Z4J.Y8+y2I+n8+Z4J.q2+z0J+Z4J.i0I)]||(I6X+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+W4J+Z4J.Y8+W4J+c8I+G6J+Z4J.q2+W4J+y3I+Q2+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.R0I+M7I+y5J));var h=g[(c8I+S3I+Z4J.F1I+w8)]((w8+P9X+Z4J.l0X+w8+Z4J.o6I+Z4J.w1I+k6I));h[(t7)](R3I,function(e){var V6J="eClas",c9="dataTransfer",Z8X="lEv",L9X="orig";b[x4J]&&(f[(Z4J.R0I+A5I+b4)](a,b,e[(L9X+S3I+Z4J.F1I+Z4J.Y8+Z8X+Z4J.q2+Z4J.F1I+Z4J.i0I)][c9][G0I],I,c),h[(Z4J.o6I+i2J+g0J+V6J+Z4J.n6I)]((a0X+Z4J.o6I)));return !N0;}
)[t7]((L4I+Z8I+Z4J.z5I+w6I+Z4J.q2+W4J+w8+Z4J.o6I+i4+Z9X),function(){var o5J="over",O5I="oveC";b[x4J]&&h[(Z4J.o6I+Z4J.q2+o5I+O5I+q2J)](o5J);return !N0;}
)[(t7)]((J4I+L9+a0X+Z4J.o6I),function(){b[(F4+q8+Z4J.Y8+N8+P3I)]&&h[d8J]((a0X+Z4J.o6I));return !N0;}
);a[(Z4J.w1I+Z4J.F1I)](Y5X,function(){var m6X="_Upl",l9I="ver";d(Q5X)[t7]((L4I+Z8I+Z4J.w1I+l9I+Z4J.l0X+j3+X6+i7+Z4J.w1I+Z4J.Y8+w8+W4J+w8+k7X+k6I+Z4J.l0X+j3+X7+m6X+h6+w8),function(){return !N0;}
);}
)[(t7)](d5I,function(){var l6I="E_U",m7I="gov";d((N8+G1+Z4J.g7I))[(d6+c8I)]((w8+Z4J.o6I+Z4J.Y8+m7I+Q2+Z4J.l0X+j3+X6+i7+h6+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+Z4J.l0X+j3+X6+l6I+k6I+Z4J.z5I+Z4J.w1I+b4));}
);}
else g[d8J]((Z4J.F1I+l3X+Z4J.w1I+k6I)),g[(Z4J.Y8+N0J+Z4J.q2+F9X)](g[(c8I+S3I+Z4J.F1I+w8)]((w8+S3I+g0J+Z4J.l0X+Z4J.o6I+Z4J.q2+b4J+Z4J.q2+w8)));g[(b9+Z4J.F1I+w8)](I0I)[t7]((Z4J.V2+u1I+z9J),function(){f[j3I][r2][Y9J][L5I](a,b,g0I);}
);g[T9X]((Y0o+l2I+Z4J.i0I+W7+Z4J.i0I+Z4J.g7I+g6I+Y2X+c8I+S3I+Z4J.z5I+Z4J.q2+U2))[(t7)]((Z4J.V2+y3I+Z4J.Y8+M5X+Z4J.q2),function(){f[r2](a,b,this[(c8I+S3I+m0I+Z4J.n6I)],I,function(b){var M2="input[type=file]";c[(d5J+Z4J.z5I)](a,b);g[T9X](M2)[(g0J+Z4J.Y8+Z4J.z5I)](g0I);}
);}
);return g;}
,A=function(a){setTimeout(function(){var d0J="trigge";a[(d0J+Z4J.o6I)]((v1+Z4J.F1I+n6),{editor:!E0,editorSet:!E0}
);}
,E0);}
,s=f[(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Y5I+k6I+B4)],p=d[(p5+Z4J.i0I+q8+w8)](!E0,{}
,f[(E1)][w8J],{get:function(a){return a[(F4+S3I+Z4J.F1I+k6I+n4J)][(g0J+X0I)]();}
,set:function(a,b){a[m8X][y1](b);A(a[(F4+S3I+Z4J.F1I+W2I)]);}
,enable:function(a){a[(m8X)][x3I]((S0+Z4J.Y8+N8+Z4J.z5I+u9),q9I);}
,disable:function(a){var e3X="isab";a[m8X][(x3I)]((w8+e3X+Z4J.z5I+u9),v3X);}
}
);s[e5]={create:function(a){a[(F4+y1)]=a[o0X];return c3X;}
,get:function(a){return a[C7];}
,set:function(a,b){a[(W5J+Z4J.Y8+Z4J.z5I)]=b;}
}
;s[A6I]=d[H3I](!E0,{}
,p,{create:function(a){a[(F4+Y0o+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+Z4J.R0I+Z4J.i0I+i9X))[l5X](d[H3I]({id:f[T0J](a[(J1J)]),type:(k0X),readonly:A6I}
,a[(z1+U8I)]||{}
));return a[(F4+S3I+P3J+Z4J.i0I)][E0];}
}
);s[k0X]=d[H3I](!E0,{}
,p,{create:function(a){a[(m8X)]=d((M4X+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I+i9X))[(Z4J.Y8+c2J)](d[H3I]({id:f[T0J](a[(J1J)]),type:(W6X+Z4J.i0I)}
,a[l5X]||{}
));return a[(F4+S3I+r4)][E0];}
}
);s[(o8I+Z4J.n6I+Z4J.n6I+j0J+Z4J.w1I+I3X)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,p,{create:function(a){var e8J="word";a[m8X]=d((M4X+S3I+n8X+n4J+i9X))[l5X](d[(p5+Z4J.i0I+Z4J.q2+F9X)]({id:f[T0J](a[(S3I+w8)]),type:(o8I+t8+e8J)}
,a[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]||{}
));return a[m8X][E0];}
}
);s[P5X]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var g3J="tend",R1J="tar";a[(z1J+Z4J.F1I+k6I+n4J)]=d((M4X+Z4J.i0I+Z4J.q2+z0J+R1J+Z4J.q2+Z4J.Y8+i9X))[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)](d[(p5+g3J)]({id:f[T0J](a[J1J])}
,a[l5X]||{}
));return a[(F4+Y0o+l2I+Z4J.i0I)][E0];}
}
);s[(I2J+K3X)]=d[(p5+I6I+F9X)](!0,{}
,p,{_addOptions:function(a,b){var Y4="placeholderDisabled",D7J="olderDi",X6I="ceh",u7="placeholderValue",R7X="rVa",u9I="olde",D9="eh",w3I="lac",n5J="eholde",c=a[(m8X)][0][V6X],e=0;c.length=0;if(a[(M7I+N4+n5J+Z4J.o6I)]!==h){e=e+1;c[0]=new Option(a[s4J],a[(k6I+w3I+D9+u9I+R7X+Z4J.z5I+Z4J.R0I+Z4J.q2)]!==h?a[u7]:"");var d=a[(k6I+Z4J.z5I+Z4J.Y8+X6I+D7J+Z4J.n6I+Z4J.Y8+B2X+Z4J.q2+w8)]!==h?a[Y4]:true;c[0][(y3I+J1J+w8+Z4J.q2+Z4J.F1I)]=d;c[0][c6I]=d;}
b&&f[z4J](b,a[d1],function(a,b,d){c[d+e]=new Option(b,a);c[d+e][z5J]=a;}
);}
,create:function(a){var P0="ipOpts",v9X="ele";a[m8X]=d((M4X+Z4J.n6I+v9X+Z4J.V2+Z4J.i0I+i9X))[l5X](d[(Z4J.q2+z0J+Z4J.i0I+C5I)]({id:f[T0J](a[J1J]),multiple:a[s8J]===true}
,a[(Z4J.Y8+c2J)]||{}
))[(t7)]((Z4J.V2+y3I+Z4J.Y8+Z4J.F1I+Z8I+Z4J.q2+Z4J.l0X+w8+Z4J.i0I+Z4J.q2),function(b,c){var o9J="_lastSet";if(!c||!c[(u9+S3I+Z4J.i0I+u2)])a[o9J]=s[T8J][(Z8I+Z4J.q2+Z4J.i0I)](a);}
);s[(u1+Z4J.z5I+Z4J.V1I+Z4J.i0I)][k3X](a,a[V6X]||a[P0]);return a[(L3X+W2I)][0];}
,update:function(a,b){var w3="lastS",Q4X="ddOp";s[(P2J+Z4J.i0I)][(y7J+Q4X+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a,b);var c=a[(F4+w3+Z4J.q2+Z4J.i0I)];c!==h&&s[T8J][(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,c,true);A(a[(F4+Y0o+k6I+n4J)]);}
,get:function(a){var b=a[m8X][(b9+F9X)]((Z4J.w1I+Q8I+S3I+t7+J0o+Z4J.n6I+Z4J.q2+m0I+i8J+Z4J.q2+w8))[(A9J+k6I)](function(){return this[(F4+u9+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+y1)];}
)[(Q3I+T0)]();return a[s8J]?a[(Z4J.n6I+Z4J.q2+o8I+Y8X+Z4J.i0I+Z4J.w1I+Z4J.o6I)]?b[W6I](a[z1I]):b:b.length?b[0]:null;}
,set:function(a,b,c){var E1I="ple",A8="tS";if(!c)a[(T1J+Z1+A8+Z4J.A4)]=b;a[(x4X+Z4J.z5I+t1I+k6I+Z4J.z5I+Z4J.q2)]&&a[z1I]&&!d[(r9X+U4X+P8J+Z4J.g7I)](b)?b=b[z5X](a[(u1+k6I+Z4J.Y8+Y8X+Q3I+Z4J.o6I)]):d[S8](b)||(b=[b]);var e,f=b.length,g,h=false,i=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)][T9X]("option");a[(z1J+n8X+n4J)][(c8I+Y0o+w8)]((V7+p9X+Z4J.F1I))[(s8X)](function(){g=false;for(e=0;e<f;e++)if(this[(F4+Z4J.q2+H0J+E7+y1)]==b[e]){h=g=true;break;}
this[r4X]=g;}
);if(a[s4J]&&!h&&!a[(o5I+I8I+S3I+E1I)]&&i.length)i[0][r4X]=true;c||A(a[(L3X+l2I+Z4J.i0I)]);return h;}
,destroy:function(a){a[(z1J+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(Z4J.w1I+f4)]((v1+Z4J.F1I+n6+Z4J.l0X+w8+Z4J.i0I+Z4J.q2));}
}
);s[M2X]=d[(Z4J.q2+z0+F9X)](!0,{}
,p,{_addOptions:function(a,b){var d8X="sPa",c=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)].empty();b&&f[(k6I+A7+B9X)](b,a[(V7+Z4J.i0I+Q7X+Z4J.F1I+d8X+S3I+Z4J.o6I)],function(b,g,h){var T2J="eId",I9="af";c[w1X]('<div><input id="'+f[(Z4J.n6I+I9+T2J)](a[(J1J)])+"_"+h+'" type="checkbox" /><label for="'+f[(Z4J.n6I+I9+Z4J.q2+x1+w8)](a[J1J])+"_"+h+(H6)+g+"</label></div>");d((h5+Z4J.i0I+J0o+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.i0I),c)[(Z4J.Y8+E2I+Z4J.o6I)]((g0J+X0I+Z4J.R0I+Z4J.q2),b)[0][z5J]=b;}
);}
,create:function(a){var D6="pti",n0="Op",k3I="kbo";a[m8X]=d((M4X+w8+P9X+t4I));s[(O9J+Z4J.V1I+k3I+z0J)][(F4+Z4J.Y8+w8+w8+n0+t1I+t7+Z4J.n6I)](a,a[(Z4J.w1I+D6+p3J)]||a[(H0o+n0+Z4J.I2I)]);return a[(L3X+k6I+n4J)][0];}
,get:function(a){var W3X="rato",i8="jo",b=[];a[m8X][(T9X)]("input:checked")[(Z4J.q2+Z4J.Y8+O9J)](function(){b[(l2I+Z4J.n6I+y3I)](this[z5J]);}
);return !a[(u1+k6I+Z4J.Y8+Z4J.o6I+Z4J.Y8+Q3I+Z4J.o6I)]?b:b.length===1?b[0]:b[(i8+S3I+Z4J.F1I)](a[(u1+o8I+W3X+Z4J.o6I)]);}
,set:function(a,b){var c=a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(b9+Z4J.F1I+w8)]((h5+Z4J.i0I));!d[S8](b)&&typeof b===(z6X+Y0o+Z8I)?b=b[(Z4J.n6I+k6I+Z4J.z5I+Z9X)](a[z1I]||"|"):d[S8](b)||(b=[b]);var e,f=b.length,g;c[s8X](function(){g=false;for(e=0;e<f;e++)if(this[z5J]==b[e]){g=true;break;}
this[(O9J+Z4J.V1I+u3I+Z4J.q2+w8)]=g;}
);A(c);}
,enable:function(a){a[(P6X+Z4J.i0I)][T9X]((Y0o+k6I+n4J))[(k6I+k7X+k6I)]((H0J+Z4J.n6I+Z4J.w2+P3I),false);}
,disable:function(a){a[m8X][T9X]((S3I+r4))[(G0J+V7)]("disabled",true);}
,update:function(a,b){var r4J="ddO",c=s[M2X],d=c[(Z8I+Z4J.q2+Z4J.i0I)](a);c[(F4+Z4J.Y8+r4J+Q8I+J5X)](a,b);c[(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,d);}
}
);s[r7J]=d[H3I](!0,{}
,p,{_addOptions:function(a,b){var c=a[m8X].empty();b&&f[(k6I+Z4J.Y8+S3I+Z4J.o6I+Z4J.n6I)](b,a[d1],function(b,g,h){var P8='me',m3I='dio';c[(e0+K4X)]('<div><input id="'+f[T0J](a[J1J])+"_"+h+(k6J+c0X+H3J+i8X+G9J+q4I+m3I+k6J+v9I+q4I+P8+i8X)+a[(Z4J.F1I+a0+Z4J.q2)]+'" /><label for="'+f[T0J](a[(S3I+w8)])+"_"+h+'">'+g+(P0o+Z4J.z5I+Z4J.Y8+N8+w7+U+w8+S3I+g0J+N2X));d("input:last",c)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value",b)[0][(F4+u9+T1+Z4J.o6I+W5J+X0I)]=b;}
);}
,create:function(a){var m4I="ptio",n0X="Opt";a[(z1J+n8X+Z4J.R0I+Z4J.i0I)]=d((M4X+w8+P9X+t4I));s[(Z4J.o6I+b4+Q7X)][(F4+Z4J.Y8+N9I+n0X+S3I+p3J)](a,a[(Z4J.w1I+m4I+Z4J.F1I+Z4J.n6I)]||a[(H0o+s1+Q8I+Z4J.n6I)]);this[(t7)]("open",function(){a[m8X][T9X]("input")[s8X](function(){var c6J="reC";if(this[(j6J+c6J+y3I+Z4J.q2+O0o+w8)])this[B6J]=true;}
);}
);return a[m8X][0];}
,get:function(a){a=a[(F4+S3I+r4)][(c8I+S3I+F9X)]((X4X+Z4J.R0I+Z4J.i0I+J0o+Z4J.V2+t7X+u3I+u9));return a.length?a[0][(F4+Z4J.q2+w8+Z9X+x2J+y1)]:h;}
,set:function(a,b){a[m8X][(b9+Z4J.F1I+w8)]((Y0o+k6I+n4J))[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](function(){var n2X="eck",A1I="_preChecked";this[A1I]=false;if(this[(F4+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+g0J+X0I)]==b)this[(F4+k6I+Z4J.o6I+X7I+t7X+u3I+u9)]=this[B6J]=true;else this[(F4+k6I+Z4J.o6I+Z4J.q2+G4X+y3I+n2X+Z4J.q2+w8)]=this[B6J]=false;}
);A(a[m8X][(c8I+S3I+Z4J.F1I+w8)]("input:checked"));}
,enable:function(a){a[(m8X)][(K3J+w8)]("input")[x3I]("disabled",false);}
,disable:function(a){a[m8X][(c8I+Y0o+w8)]((S3I+n8X+Z4J.R0I+Z4J.i0I))[(p4J+k6I)]("disabled",true);}
,update:function(a,b){var m2="eq",y8J="ilt",c=s[(Z4J.o6I+Z4J.Y8+H0J+Z4J.w1I)],d=c[(R5)](a);c[k3X](a,b);var f=a[m8X][T9X]("input");c[(Y9J)](a,f[(c8I+y8J+Q2)]('[value="'+d+'"]').length?d:f[(m2)](0)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value"));}
}
);s[(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)]=d[H3I](!0,{}
,p,{create:function(a){var z2="../../",g2J="teIm",k9="mage",q0J="eI",i6X="822",p8="_2",T4X="ker",X5I="For",C9="dateFormat",L0X="dC";a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+n4J+t4I))[l5X](d[H3I]({id:f[T0J](a[J1J]),type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
,a[(z1+Z4J.i0I+Z4J.o6I)]));if(d[(w8+Z4J.Y8+I6I+k6I+M3J+l6+Z4J.o6I)]){a[(F4+S3I+n8X+Z4J.R0I+Z4J.i0I)][(Z4J.Y8+w8+L0X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("jqueryui");if(!a[C9])a[(Z4J.C6J+I6I+X5I+A9J+Z4J.i0I)]=d[(c1+S1I+Z4J.V2+T4X)][(v0+o3+G4X+p8+i6X)];if(a[(w8+z1+q0J+k9)]===h)a[(Z4J.C6J+g2J+Z4J.Y8+Z8I+Z4J.q2)]=(z2+S3I+o5I+L9+Z4J.q2+Z4J.n6I+w0X+Z4J.V2+Z4J.Y8+Z4J.z5I+q8+w8+Z4J.q2+Z4J.o6I+Z4J.l0X+k6I+Z4J.F1I+Z8I);setTimeout(function(){var y7X="dateImage",P6="Fo";d(a[(L3X+l2I+Z4J.i0I)])[(Z4J.l1+i3X+Z4J.V2+l6+Z4J.o6I)](d[H3I]({showOn:(N8+Z4J.w1I+U1I),dateFormat:a[(Z4J.l1+Z4J.q2+P6+Z4J.o6I+o5I+z1)],buttonImage:a[y7X],buttonImageOnly:true}
,a[(l5J)]));d("#ui-datepicker-div")[v3J]("display",(w0I+Z4J.q2));}
,10);}
else a[m8X][(Z4J.Y8+E2I+Z4J.o6I)]("type",(Z4J.l1+Z4J.q2));return a[(z1J+P3J+Z4J.i0I)][0];}
,set:function(a,b){var n1J="etDa",E4X="atep";d[o0J]&&a[(F4+S3I+Z4J.F1I+k6I+n4J)][F4J]((C3I+Z4J.n6I+j3+E4X+S3I+Z4J.V2+u3I+Q2))?a[m8X][o0J]((Z4J.n6I+n1J+Z4J.i0I+Z4J.q2),b)[l2]():d(a[(z1J+P3J+Z4J.i0I)])[y1](b);}
,enable:function(a){d[o0J]?a[(z1J+n8X+Z4J.R0I+Z4J.i0I)][o0J]("enable"):d(a[(z1J+Z4J.F1I+l2I+Z4J.i0I)])[(G0J+V7)]("disabled",false);}
,disable:function(a){d[(Z4J.l1+i3X+O0o+Z4J.o6I)]?a[(F4+Y0o+l2I+Z4J.i0I)][o0J]("disable"):d(a[(z1J+P3J+Z4J.i0I)])[(p4J+k6I)]((H0J+Z4J.n6I+Z4J.Y8+l3+w8),true);}
,owns:function(a,b){var f6I="epick",f8J="nts",s2J="icker",m6J="paren";return d(b)[(m6J+Z4J.I2I)]((w8+S3I+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+z1+W2+s2J)).length||d(b)[(o8I+C3X+f8J)]((H0J+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+Z4J.Y8+Z4J.i0I+f6I+Z4J.q2+Z4J.o6I+F6X+y3I+h7I+Q2)).length?true:false;}
}
);s[P4]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var E3X="cker";a[(Z0+n4J)]=d((M4X+S3I+Z4J.F1I+W2I+t4I))[(Z4J.Y8+Z4J.i0I+U8I)](d[(Z4J.q2+z0J+Z4J.i0I+C5I)](v3X,{id:f[T0J](a[(S3I+w8)]),type:(W6X+Z4J.i0I)}
,a[l5X]));a[(F4+k6I+S3I+E3X)]=new f[(N8J+I6I+W7I+o5I+Z4J.q2)](a[(L3X+W2I)],d[H3I]({format:a[o7J],i18n:this[(D7I+B0o+Z4J.F1I)][(w8+z1+Z4J.q2+Y0I)]}
,a[l5J]));return a[(L3X+W2I)][E0];}
,set:function(a,b){a[(F4+S1I+z9J+Z4J.q2+Z4J.o6I)][(y1)](b);A(a[m8X]);}
,owns:function(a,b){return a[(j6J+S3I+z9J+Q2)][v2J](b);}
,destroy:function(a){var K3="stroy",F4I="_picker";a[F4I][(y9I+K3)]();}
,minDate:function(a,b){a[(F4+k6I+M3J+l6+Z4J.o6I)][(u6J+Z4J.F1I)](b);}
,maxDate:function(a,b){a[(F4+k6I+S3I+O0o+Z4J.o6I)][(o5I+Z4J.Y8+z0J)](b);}
}
);s[(Z4J.R0I+A5I+Z4J.Y8+w8)]=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,p,{create:function(a){var b=this;return M(b,a,function(c){var x2="Type";f[(c8I+S3I+Z4J.q2+Z0I+x2+Z4J.n6I)][(Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8)][Y9J][(Z4J.V2+Z4J.Y8+q5I)](b,a,c[E0]);}
);}
,get:function(a){return a[(F4+g0J+X0I)];}
,set:function(a,b){var i9I="dito",T2I="dl",n3="ger",e5I="trig",Q6X="noClear",d9J="rT",X8I="lea",H1="FileT",A2X="div.rendered";a[(F4+g0J+Z4J.Y8+Z4J.z5I)]=b;var c=a[(z1J+n8X+Z4J.R0I+Z4J.i0I)];if(a[(w8+N9X+Z4J.g7I)]){var d=c[T9X](A2X);a[(F4+e7J+Z4J.z5I)]?d[(E4J+o5I+Z4J.z5I)](a[(w8+S3I+H2+l7I+Z4J.g7I)](a[C7])):d.empty()[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.n6I+k6I+Z4J.Y8+Z4J.F1I+N2X)+(a[(Z4J.F1I+Z4J.w1I+H1+Z4J.q2+z0J+Z4J.i0I)]||"No file")+"</span>");}
d=c[T9X](I0I);if(b&&a[(Q4J+Z4J.q2+Z4J.Y8+Z4J.o6I+X6+Z4J.q2+z0J+Z4J.i0I)]){d[z6I](a[(Z4J.V2+X8I+d9J+p5+Z4J.i0I)]);c[(J8I+Z4J.w1I+g0J+X7I+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((Z4J.F1I+Z4J.w1I+X7J+H5I));}
else c[(b8X+p2J+Z4J.n6I)](Q6X);a[(P6X+Z4J.i0I)][T9X]((X4X+Z4J.R0I+Z4J.i0I))[(e5I+n3+z8+Z4J.Y8+Z4J.F1I+T2I+Z4J.q2+Z4J.o6I)]((r2+Z4J.l0X+Z4J.q2+i9I+Z4J.o6I),[a[(C7)]]);}
,enable:function(a){a[m8X][T9X]((S3I+r4))[(x3I)]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I),q9I);a[(E4+N8+P3I)]=v3X;}
,disable:function(a){var w4X="_en";a[(F4+S3I+r4)][T9X]((X4X+n4J))[x3I](c6I,v3X);a[(w4X+Z4J.Y8+l3+w8)]=q9I;}
}
);s[(r2+g6+Q+Z4J.g7I)]=d[(s0X+Z4J.q2+F9X)](!0,{}
,p,{create:function(a){var T9="uploadMany",b=this,c=M(b,a,function(c){var M7="ldT";a[C7]=a[(W5J+X0I)][o1I](c);f[(c8I+S3I+Z4J.q2+M7+O7X+B4)][T9][Y9J][(d5J+Z4J.z5I)](b,a,a[(F4+e7J+Z4J.z5I)]);}
);c[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+L1)]((p6+Z4J.i0I+S3I))[(t7)]("click",(u0o+Z4J.i0I+Z4J.w1I+Z4J.F1I+Z4J.l0X+Z4J.o6I+Z4J.q2+f1J+Z4J.q2),function(c){var D4J="stopPropagation";c[D4J]();c=d(this).data((S3I+w8+z0J));a[C7][(Z4J.n6I+k6I+u1I+Z9J)](c,1);f[j3I][T9][Y9J][(L7J+Z4J.z5I+Z4J.z5I)](b,a,a[(W5J+X0I)]);}
);return c;}
,get:function(a){return a[(W5J+X0I)];}
,set:function(a,b){var J9X="_va",S7J="noFileText",k3J="appendTo",L7="ust",t3I="lec",b1I="Uplo";b||(b=[]);if(!d[S8](b))throw (b1I+b4+W4J+Z4J.V2+A0I+t3I+G5X+Z4J.n6I+W4J+o5I+L7+W4J+y3I+Z4J.Y8+l9J+W4J+Z4J.Y8+Z4J.F1I+W4J+Z4J.Y8+Z4J.o6I+Y8X+Z4J.g7I+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+W4J+g0J+X0I+N1J);a[(F4+g0J+X0I)]=b;var c=this,e=a[m8X];if(a[(S0+k6I+c5J)]){e=e[(K3J+w8)]((I1+Z4J.l0X+Z4J.o6I+Z4J.q2+Z4J.F1I+w8+Q2+Z4J.q2+w8)).empty();if(b.length){var f=d("<ul/>")[k3J](e);d[s8X](b,function(b,d){var z9='dx',i1J='ov';f[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.z5I+S3I+N2X)+a[p6J](d,b)+' <button class="'+c[T4][y0o][g8]+(q2X+G9J+m8I+A9I+i1J+m8I+k6J+m2I+h1+q4I+m6+T7I+z9+i8X)+b+'">&times;</button></li>');}
);}
else e[(Z4J.Y8+X1I+w8)]((M4X+Z4J.n6I+k6I+Q+N2X)+(a[S7J]||"No files")+(P0o+Z4J.n6I+o8I+Z4J.F1I+N2X));}
a[(Z0+n4J)][T9X]("input")[g4I]("upload.editor",[a[(J9X+Z4J.z5I)]]);}
,enable:function(a){var V7X="bled";a[m8X][(K3J+w8)]((S3I+r4))[(k6I+X6X)]("disabled",false);a[(N9J+g7X+V7X)]=true;}
,disable:function(a){a[m8X][T9X]("input")[(G0J+Z4J.w1I+k6I)]((w8+S3I+i0+N8+Z4J.z5I+u9),true);a[x4J]=false;}
}
);r[(p5+Z4J.i0I)][D5I]&&d[H3I](f[(b9+Z4J.q2+Z0I+X6+Z4J.g7I+g6I+Z4J.n6I)],r[s0X][D5I]);r[(s0X)][(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+g1J+S3I+w7+w5I)]=f[(v7+h8J+m5+Z4J.n6I)];f[(c8I+G6J+Z4J.q2+Z4J.n6I)]={}
;f.prototype.CLASS=P9J;f[L7I]=(U1X+Z4J.l0X+z7X+Z4J.l0X+n9X);return f;}
);

/*!
 Responsive 2.1.0
 2014-2016 SpryMedia Ltd - datatables.net/license
*/
(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(l){return c(l,window,document)}):"object"===typeof exports?module.exports=function(l,k){l||(l=window);if(!k||!k.fn.dataTable)k=require("datatables.net")(l,k).$;return c(k,l,l.document)}:c(jQuery,window,document)})(function(c,l,k,p){var m=c.fn.dataTable,j=function(a,b){if(!m.versionCheck||!m.versionCheck("1.10.3"))throw"DataTables Responsive requires DataTables 1.10.3 or newer";this.s={dt:new m.Api(a),columns:[],
current:[]};this.s.dt.settings()[0].responsive||(b&&"string"===typeof b.details?b.details={type:b.details}:b&&!1===b.details?b.details={type:!1}:b&&!0===b.details&&(b.details={type:"inline"}),this.c=c.extend(!0,{},j.defaults,m.defaults.responsive,b),a.responsive=this,this._constructor())};c.extend(j.prototype,{_constructor:function(){var a=this,b=this.s.dt,d=b.settings()[0],e=c(l).width();b.settings()[0]._responsive=this;c(l).on("resize.dtr orientationchange.dtr",m.util.throttle(function(){var b=
c(l).width();b!==e&&(a._resize(),e=b)}));d.oApi._fnCallbackReg(d,"aoRowCreatedCallback",function(e){-1!==c.inArray(!1,a.s.current)&&c("td, th",e).each(function(e){e=b.column.index("toData",e);!1===a.s.current[e]&&c(this).css("display","none")})});b.on("destroy.dtr",function(){b.off(".dtr");c(b.table().body()).off(".dtr");c(l).off("resize.dtr orientationchange.dtr");c.each(a.s.current,function(b,e){!1===e&&a._setColumnVis(b,!0)})});this.c.breakpoints.sort(function(a,b){return a.width<b.width?1:a.width>
b.width?-1:0});this._classLogic();this._resizeAuto();d=this.c.details;!1!==d.type&&(a._detailsInit(),b.on("column-visibility.dtr",function(){a._classLogic();a._resizeAuto();a._resize()}),b.on("draw.dtr",function(){a._redrawChildren()}),c(b.table().node()).addClass("dtr-"+d.type));b.on("column-reorder.dtr",function(){a._classLogic();a._resizeAuto();a._resize()});b.on("column-sizing.dtr",function(){a._resizeAuto();a._resize()});b.on("init.dtr",function(){a._resizeAuto();a._resize();c.inArray(false,
a.s.current)&&b.columns.adjust()});this._resize()},_columnsVisiblity:function(a){var b=this.s.dt,d=this.s.columns,e,f,g=d.map(function(a,b){return{columnIdx:b,priority:a.priority}}).sort(function(a,b){return a.priority!==b.priority?a.priority-b.priority:a.columnIdx-b.columnIdx}),h=c.map(d,function(b){return b.auto&&null===b.minWidth?!1:!0===b.auto?"-":-1!==c.inArray(a,b.includeIn)}),n=0;e=0;for(f=h.length;e<f;e++)!0===h[e]&&(n+=d[e].minWidth);e=b.settings()[0].oScroll;e=e.sY||e.sX?e.iBarWidth:0;b=
b.table().container().offsetWidth-e-n;e=0;for(f=h.length;e<f;e++)d[e].control&&(b-=d[e].minWidth);n=!1;e=0;for(f=g.length;e<f;e++){var i=g[e].columnIdx;"-"===h[i]&&(!d[i].control&&d[i].minWidth)&&(n||0>b-d[i].minWidth?(n=!0,h[i]=!1):h[i]=!0,b-=d[i].minWidth)}g=!1;e=0;for(f=d.length;e<f;e++)if(!d[e].control&&!d[e].never&&!h[e]){g=!0;break}e=0;for(f=d.length;e<f;e++)d[e].control&&(h[e]=g);-1===c.inArray(!0,h)&&(h[0]=!0);return h},_classLogic:function(){var a=this,b=this.c.breakpoints,d=this.s.dt,e=
d.columns().eq(0).map(function(a){var b=this.column(a),e=b.header().className,a=d.settings()[0].aoColumns[a].responsivePriority;a===p&&(b=c(b.header()).data("priority"),a=b!==p?1*b:1E4);return{className:e,includeIn:[],auto:!1,control:!1,never:e.match(/\bnever\b/)?!0:!1,priority:a}}),f=function(a,b){var d=e[a].includeIn;-1===c.inArray(b,d)&&d.push(b)},g=function(c,d,i,g){if(i)if("max-"===i){g=a._find(d).width;d=0;for(i=b.length;d<i;d++)b[d].width<=g&&f(c,b[d].name)}else if("min-"===i){g=a._find(d).width;
d=0;for(i=b.length;d<i;d++)b[d].width>=g&&f(c,b[d].name)}else{if("not-"===i){d=0;for(i=b.length;d<i;d++)-1===b[d].name.indexOf(g)&&f(c,b[d].name)}}else e[c].includeIn.push(d)};e.each(function(a,e){for(var d=a.className.split(" "),f=!1,j=0,l=d.length;j<l;j++){var k=c.trim(d[j]);if("all"===k){f=!0;a.includeIn=c.map(b,function(a){return a.name});return}if("none"===k||a.never){f=!0;return}if("control"===k){f=!0;a.control=!0;return}c.each(b,function(a,b){var d=b.name.split("-"),c=k.match(RegExp("(min\\-|max\\-|not\\-)?("+
d[0]+")(\\-[_a-zA-Z0-9])?"));c&&(f=!0,c[2]===d[0]&&c[3]==="-"+d[1]?g(e,b.name,c[1],c[2]+c[3]):c[2]===d[0]&&!c[3]&&g(e,b.name,c[1],c[2]))})}f||(a.auto=!0)});this.s.columns=e},_detailsDisplay:function(a,b){var d=this,e=this.s.dt,f=this.c.details;if(f&&!1!==f.type){var g=f.display(a,b,function(){return f.renderer(e,a[0],d._detailsObj(a[0]))});(!0===g||!1===g)&&c(e.table().node()).triggerHandler("responsive-display.dt",[e,a,g,b])}},_detailsInit:function(){var a=this,b=this.s.dt,d=this.c.details;"inline"===
d.type&&(d.target="td:first-child, th:first-child");b.on("draw.dtr",function(){a._tabIndexes()});a._tabIndexes();c(b.table().body()).on("keyup.dtr","td, th",function(a){a.keyCode===13&&c(this).data("dtr-keyboard")&&c(this).click()});var e=d.target;c(b.table().body()).on("click.dtr mousedown.dtr mouseup.dtr","string"===typeof e?e:"td, th",function(d){if(c(b.table().node()).hasClass("collapsed")&&b.row(c(this).closest("tr")).length){if(typeof e==="number"){var g=e<0?b.columns().eq(0).length+e:e;if(b.cell(this).index().column!==
g)return}g=b.row(c(this).closest("tr"));d.type==="click"?a._detailsDisplay(g,false):d.type==="mousedown"?c(this).css("outline","none"):d.type==="mouseup"&&c(this).blur().css("outline","")}})},_detailsObj:function(a){var b=this,d=this.s.dt;return c.map(this.s.columns,function(e,c){if(!e.never&&!e.control)return{title:d.settings()[0].aoColumns[c].sTitle,data:d.cell(a,c).render(b.c.orthogonal),hidden:d.column(c).visible()&&!b.s.current[c],columnIndex:c,rowIndex:a}})},_find:function(a){for(var b=this.c.breakpoints,
d=0,c=b.length;d<c;d++)if(b[d].name===a)return b[d]},_redrawChildren:function(){var a=this,b=this.s.dt;b.rows({page:"current"}).iterator("row",function(c,e){b.row(e);a._detailsDisplay(b.row(e),!0)})},_resize:function(){var a=this,b=this.s.dt,d=c(l).width(),e=this.c.breakpoints,f=e[0].name,g=this.s.columns,h,j=this.s.current.slice();for(h=e.length-1;0<=h;h--)if(d<=e[h].width){f=e[h].name;break}var i=this._columnsVisiblity(f);this.s.current=i;e=!1;h=0;for(d=g.length;h<d;h++)if(!1===i[h]&&!g[h].never&&
!g[h].control){e=!0;break}c(b.table().node()).toggleClass("collapsed",e);var k=!1;b.columns().eq(0).each(function(b,c){i[c]!==j[c]&&(k=!0,a._setColumnVis(b,i[c]))});k&&(this._redrawChildren(),c(b.table().node()).trigger("responsive-resize.dt",[b,this.s.current]))},_resizeAuto:function(){var a=this.s.dt,b=this.s.columns;if(this.c.auto&&-1!==c.inArray(!0,c.map(b,function(a){return a.auto}))){a.table().node();var d=a.table().node().cloneNode(!1),e=c(a.table().header().cloneNode(!1)).appendTo(d),f=c(a.table().body()).clone(!1,
!1).empty().appendTo(d),g=a.columns().header().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display","table-cell");c(f).append(c(a.rows({page:"current"}).nodes()).clone(!1)).find("th, td").css("display","");if(f=a.table().footer()){var f=c(f.cloneNode(!1)).appendTo(d),h=a.columns().footer().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display","table-cell");c("<tr/>").append(h).appendTo(f)}c("<tr/>").append(g).appendTo(e);"inline"===this.c.details.type&&
c(d).addClass("dtr-inline collapsed");c(d).find("[name]").removeAttr("name");d=c("<div/>").css({width:1,height:1,overflow:"hidden"}).append(d);d.insertBefore(a.table().node());g.each(function(c){c=a.column.index("fromVisible",c);b[c].minWidth=this.offsetWidth||0});d.remove()}},_setColumnVis:function(a,b){var d=this.s.dt,e=b?"":"none";c(d.column(a).header()).css("display",e);c(d.column(a).footer()).css("display",e);d.column(a).nodes().to$().css("display",e)},_tabIndexes:function(){var a=this.s.dt,
b=a.cells({page:"current"}).nodes().to$(),d=a.settings()[0],e=this.c.details.target;b.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");c("number"===typeof e?":eq("+e+")":e,a.rows({page:"current"}).nodes()).attr("tabIndex",d.iTabIndex).data("dtr-keyboard",1)}});j.breakpoints=[{name:"desktop",width:Infinity},{name:"tablet-l",width:1024},{name:"tablet-p",width:768},{name:"mobile-l",width:480},{name:"mobile-p",width:320}];j.display={childRow:function(a,b,d){if(b){if(c(a.node()).hasClass("parent"))return a.child(d(),
"child").show(),!0}else{if(a.child.isShown())return a.child(!1),c(a.node()).removeClass("parent"),!1;a.child(d(),"child").show();c(a.node()).addClass("parent");return!0}},childRowImmediate:function(a,b,d){if(!b&&a.child.isShown()||!a.responsive.hasHidden())return a.child(!1),c(a.node()).removeClass("parent"),!1;a.child(d(),"child").show();c(a.node()).addClass("parent");return!0},modal:function(a){return function(b,d,e){if(d)c("div.dtr-modal-content").empty().append(e());else{var f=function(){g.remove();
c(k).off("keypress.dtr")},g=c('<div class="dtr-modal"/>').append(c('<div class="dtr-modal-display"/>').append(c('<div class="dtr-modal-content"/>').append(e())).append(c('<div class="dtr-modal-close">&times;</div>').click(function(){f()}))).append(c('<div class="dtr-modal-background"/>').click(function(){f()})).appendTo("body");c(k).on("keyup.dtr",function(a){27===a.keyCode&&(a.stopPropagation(),f())})}a&&a.header&&c("div.dtr-modal-content").prepend("<h2>"+a.header(b)+"</h2>")}}};j.renderer={listHidden:function(){return function(a,
b,d){return(a=c.map(d,function(a){return a.hidden?'<li data-dtr-index="'+a.columnIndex+'" data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><span class="dtr-title">'+a.title+'</span> <span class="dtr-data">'+a.data+"</span></li>":""}).join(""))?c('<ul data-dtr-index="'+b+'"/>').append(a):!1}},tableAll:function(a){a=c.extend({tableClass:""},a);return function(b,d,e){b=c.map(e,function(a){return'<tr data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><td>'+a.title+":</td> <td>"+
a.data+"</td></tr>"}).join("");return c('<table class="'+a.tableClass+'" width="100%"/>').append(b)}}};j.defaults={breakpoints:j.breakpoints,auto:!0,details:{display:j.display.childRow,renderer:j.renderer.listHidden(),target:0,type:"inline"},orthogonal:"display"};var o=c.fn.dataTable.Api;o.register("responsive()",function(){return this});o.register("responsive.index()",function(a){a=c(a);return{column:a.data("dtr-index"),row:a.parent().data("dtr-index")}});o.register("responsive.rebuild()",function(){return this.iterator("table",
function(a){a._responsive&&a._responsive._classLogic()})});o.register("responsive.recalc()",function(){return this.iterator("table",function(a){a._responsive&&(a._responsive._resizeAuto(),a._responsive._resize())})});o.register("responsive.hasHidden()",function(){var a=this.context[0];return a._responsive?-1!==c.inArray(!1,a._responsive.s.current):!1});j.version="2.1.0";c.fn.dataTable.Responsive=j;c.fn.DataTable.Responsive=j;c(k).on("preInit.dt.dtr",function(a,b){if("dt"===a.namespace&&(c(b.nTable).hasClass("responsive")||
c(b.nTable).hasClass("dt-responsive")||b.oInit.responsive||m.defaults.responsive)){var d=b.oInit.responsive;!1!==d&&new j(b,c.isPlainObject(d)?d:{})}});return j});


/*!
 Select for DataTables 1.2.0
 2015-2016 SpryMedia Ltd - datatables.net/license/mit
*/
(function(e){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(i){return e(i,window,document)}):"object"===typeof exports?module.exports=function(i,l){i||(i=window);if(!l||!l.fn.dataTable)l=require("datatables.net")(i,l).$;return e(l,i,i.document)}:e(jQuery,window,document)})(function(e,i,l,h){function t(b,a,c){var d;d=function(c,a){if(c>a)var d=a,a=c,c=d;var f=!1;return b.columns(":visible").indexes().filter(function(b){b===c&&(f=!0);return b===a?(f=!1,!0):f})};var f=
function(c,a){var d=b.rows({search:"applied"}).indexes();if(d.indexOf(c)>d.indexOf(a))var f=a,a=c,c=f;var e=!1;return d.filter(function(b){b===c&&(e=!0);return b===a?(e=!1,!0):e})};!b.cells({selected:!0}).any()&&!c?(d=d(0,a.column),c=f(0,a.row)):(d=d(c.column,a.column),c=f(c.row,a.row));c=b.cells(c,d).flatten();b.cells(a,{selected:!0}).any()?b.cells(c).deselect():b.cells(c).select()}function r(b){var a=b.settings()[0]._select.selector;e(b.table().body()).off("mousedown.dtSelect",a).off("mouseup.dtSelect",
a).off("click.dtSelect",a);e("body").off("click.dtSelect")}function v(b){var a=e(b.table().body()),c=b.settings()[0],d=c._select.selector;a.on("mousedown.dtSelect",d,function(c){if(c.shiftKey||c.metaKey||c.ctrlKey)a.css("-moz-user-select","none").one("selectstart.dtSelect",d,function(){return!1})}).on("mouseup.dtSelect",d,function(){a.css("-moz-user-select","")}).on("click.dtSelect",d,function(c){var a=b.select.items();if(!i.getSelection||!i.getSelection().toString()){var d=b.settings()[0];if(e(c.target).closest("div.dataTables_wrapper")[0]==
b.table().container()){var g=b.cell(e(c.target).closest("td, th"));if(g.any()){var h=e.Event("user-select.dt");k(b,h,[a,g,c]);h.isDefaultPrevented()||(h=g.index(),"row"===a?(a=h.row,s(c,b,d,"row",a)):"column"===a?(a=g.index().column,s(c,b,d,"column",a)):"cell"===a&&(a=g.index(),s(c,b,d,"cell",a)),d._select_lastCell=h)}}}});e("body").on("click.dtSelect",function(a){c._select.blurable&&!e(a.target).parents().filter(b.table().container()).length&&(e(a.target).parents("div.DTE").length||p(c,!0))})}function k(b,
a,c,d){if(!d||b.flatten().length)"string"===typeof a&&(a+=".dt"),c.unshift(b),e(b.table().node()).triggerHandler(a,c)}function w(b){var a=b.settings()[0];if(a._select.info&&a.aanFeatures.i){var c=e('<span class="select-info"/>'),d=function(a,d){c.append(e('<span class="select-item"/>').append(b.i18n("select."+a+"s",{_:"%d "+a+"s selected","0":"",1:"1 "+a+" selected"},d)))};d("row",b.rows({selected:!0}).flatten().length);d("column",b.columns({selected:!0}).flatten().length);d("cell",b.cells({selected:!0}).flatten().length);
e.each(a.aanFeatures.i,function(a,b){var b=e(b),d=b.children("span.select-info");d.length&&d.remove();""!==c.text()&&b.append(c)})}}function x(b,a,c,d){var f=b[a+"s"]({search:"applied"}).indexes(),d=e.inArray(d,f),m=e.inArray(c,f);if(!b[a+"s"]({selected:!0}).any()&&-1===d)f.splice(e.inArray(c,f)+1,f.length);else{if(d>m)var j=m,m=d,d=j;f.splice(m+1,f.length);f.splice(0,d)}b[a](c,{selected:!0}).any()?(f.splice(e.inArray(c,f),1),b[a+"s"](f).deselect()):b[a+"s"](f).select()}function p(b,a){if(a||"single"===
b._select.style){var c=new g.Api(b);c.rows({selected:!0}).deselect();c.columns({selected:!0}).deselect();c.cells({selected:!0}).deselect()}}function s(b,a,c,d,f){var e=a.select.style(),j=a[d](f,{selected:!0}).any();"os"===e?b.ctrlKey||b.metaKey?a[d](f).select(!j):b.shiftKey?"cell"===d?t(a,f,c._select_lastCell||null):x(a,d,f,c._select_lastCell?c._select_lastCell[d]:null):(b=a[d+"s"]({selected:!0}),j&&1===b.flatten().length?a[d](f).deselect():(b.deselect(),a[d](f).select())):"multi+shift"==e?b.shiftKey?
"cell"===d?t(a,f,c._select_lastCell||null):x(a,d,f,c._select_lastCell?c._select_lastCell[d]:null):a[d](f).select(!j):a[d](f).select(!j)}function q(b,a){return function(c){return c.i18n("buttons."+b,a)}}var g=e.fn.dataTable;g.select={};g.select.version="1.2.0";g.select.init=function(b){var a=b.settings()[0],c=a.oInit.select,d=g.defaults.select,c=c===h?d:c,d="row",f="api",m=!1,j=!0,u="td, th",i="selected";a._select={};if(!0===c)f="os";else if("string"===typeof c)f=c;else if(e.isPlainObject(c)&&(c.blurable!==
h&&(m=c.blurable),c.info!==h&&(j=c.info),c.items!==h&&(d=c.items),c.style!==h&&(f=c.style),c.selector!==h&&(u=c.selector),c.className!==h))i=c.className;b.select.selector(u);b.select.items(d);b.select.style(f);b.select.blurable(m);b.select.info(j);a._select.className=i;e.fn.dataTable.ext.order["select-checkbox"]=function(a,c){return this.api().column(c,{order:"index"}).nodes().map(function(c){return"row"===a._select.items?e(c).parent().hasClass(a._select.className):"cell"===a._select.items?e(c).hasClass(a._select.className):
!1})};e(b.table().node()).hasClass("selectable")&&b.select.style("os")};e.each([{type:"row",prop:"aoData"},{type:"column",prop:"aoColumns"}],function(b,a){g.ext.selector[a.type].push(function(c,b,f){var b=b.selected,e,j=[];if(b===h)return f;for(var g=0,i=f.length;g<i;g++)e=c[a.prop][f[g]],(!0===b&&!0===e._select_selected||!1===b&&!e._select_selected)&&j.push(f[g]);return j})});g.ext.selector.cell.push(function(b,a,c){var a=a.selected,d,f=[];if(a===h)return c;for(var e=0,g=c.length;e<g;e++)d=b.aoData[c[e].row],
(!0===a&&d._selected_cells&&!0===d._selected_cells[c[e].column]||!1===a&&(!d._selected_cells||!d._selected_cells[c[e].column]))&&f.push(c[e]);return f});var n=g.Api.register,o=g.Api.registerPlural;n("select()",function(){return this.iterator("table",function(b){g.select.init(new g.Api(b))})});n("select.blurable()",function(b){return b===h?this.context[0]._select.blurable:this.iterator("table",function(a){a._select.blurable=b})});n("select.info()",function(b){return w===h?this.context[0]._select.info:
this.iterator("table",function(a){a._select.info=b})});n("select.items()",function(b){return b===h?this.context[0]._select.items:this.iterator("table",function(a){a._select.items=b;k(new g.Api(a),"selectItems",[b])})});n("select.style()",function(b){return b===h?this.context[0]._select.style:this.iterator("table",function(a){a._select.style=b;if(!a._select_init){var c=new g.Api(a);a.aoRowCreatedCallback.push({fn:function(c,b,d){b=a.aoData[d];b._select_selected&&e(c).addClass(a._select.className);
c=0;for(d=a.aoColumns.length;c<d;c++)(a.aoColumns[c]._select_selected||b._selected_cells&&b._selected_cells[c])&&e(b.anCells[c]).addClass(a._select.className)},sName:"select-deferRender"});c.on("preXhr.dt.dtSelect",function(){var a=c.rows({selected:!0}).ids(!0).filter(function(c){return c!==h}),b=c.cells({selected:!0}).eq(0).map(function(a){var b=c.row(a.row).id(!0);return b?{row:b,column:a.column}:h}).filter(function(c){return c!==h});c.one("draw.dt.dtSelect",function(){c.rows(a).select();b.any()&&
b.each(function(a){c.cells(a.row,a.column).select()})})});c.on("draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt",function(){w(c)});c.on("destroy.dtSelect",function(){r(c);c.off(".dtSelect")})}var d=new g.Api(a);r(d);"api"!==b&&v(d);k(new g.Api(a),"selectStyle",[b])})});n("select.selector()",function(b){return b===h?this.context[0]._select.selector:this.iterator("table",function(a){r(new g.Api(a));a._select.selector=b;"api"!==a._select.style&&v(new g.Api(a))})});o("rows().select()",
"row().select()",function(b){var a=this;if(!1===b)return this.deselect();this.iterator("row",function(c,a){p(c);c.aoData[a]._select_selected=!0;e(c.aoData[a].nTr).addClass(c._select.className)});this.iterator("table",function(c,b){k(a,"select",["row",a[b]],!0)});return this});o("columns().select()","column().select()",function(b){var a=this;if(!1===b)return this.deselect();this.iterator("column",function(a,b){p(a);a.aoColumns[b]._select_selected=!0;var f=(new g.Api(a)).column(b);e(f.header()).addClass(a._select.className);
e(f.footer()).addClass(a._select.className);f.nodes().to$().addClass(a._select.className)});this.iterator("table",function(c,b){k(a,"select",["column",a[b]],!0)});return this});o("cells().select()","cell().select()",function(b){var a=this;if(!1===b)return this.deselect();this.iterator("cell",function(a,b,f){p(a);b=a.aoData[b];b._selected_cells===h&&(b._selected_cells=[]);b._selected_cells[f]=!0;b.anCells&&e(b.anCells[f]).addClass(a._select.className)});this.iterator("table",function(b,d){k(a,"select",
["cell",a[d]],!0)});return this});o("rows().deselect()","row().deselect()",function(){var b=this;this.iterator("row",function(a,b){a.aoData[b]._select_selected=!1;e(a.aoData[b].nTr).removeClass(a._select.className)});this.iterator("table",function(a,c){k(b,"deselect",["row",b[c]],!0)});return this});o("columns().deselect()","column().deselect()",function(){var b=this;this.iterator("column",function(a,b){a.aoColumns[b]._select_selected=!1;var d=new g.Api(a),f=d.column(b);e(f.header()).removeClass(a._select.className);
e(f.footer()).removeClass(a._select.className);d.cells(null,b).indexes().each(function(b){var c=a.aoData[b.row],d=c._selected_cells;c.anCells&&(!d||!d[b.column])&&e(c.anCells[b.column]).removeClass(a._select.className)})});this.iterator("table",function(a,c){k(b,"deselect",["column",b[c]],!0)});return this});o("cells().deselect()","cell().deselect()",function(){var b=this;this.iterator("cell",function(a,b,d){b=a.aoData[b];b._selected_cells[d]=!1;b.anCells&&!a.aoColumns[d]._select_selected&&e(b.anCells[d]).removeClass(a._select.className)});
this.iterator("table",function(a,c){k(b,"deselect",["cell",b[c]],!0)});return this});e.extend(g.ext.buttons,{selected:{text:q("selected","Selected"),className:"buttons-selected",init:function(b){var a=this;b.on("draw.dt.DT select.dt.DT deselect.dt.DT",function(){var b=a.rows({selected:!0}).any()||a.columns({selected:!0}).any()||a.cells({selected:!0}).any();a.enable(b)});this.disable()}},selectedSingle:{text:q("selectedSingle","Selected single"),className:"buttons-selected-single",init:function(b){var a=
this;b.on("draw.dt.DT select.dt.DT deselect.dt.DT",function(){var c=b.rows({selected:!0}).flatten().length+b.columns({selected:!0}).flatten().length+b.cells({selected:!0}).flatten().length;a.enable(1===c)});this.disable()}},selectAll:{text:q("selectAll","Select all"),className:"buttons-select-all",action:function(){this[this.select.items()+"s"]().select()}},selectNone:{text:q("selectNone","Deselect all"),className:"buttons-select-none",action:function(){p(this.settings()[0],!0)},init:function(b){var a=
this;b.on("draw.dt.DT select.dt.DT deselect.dt.DT",function(){var c=b.rows({selected:!0}).flatten().length+b.columns({selected:!0}).flatten().length+b.cells({selected:!0}).flatten().length;a.enable(0<c)});this.disable()}}});e.each(["Row","Column","Cell"],function(b,a){var c=a.toLowerCase();g.ext.buttons["select"+a+"s"]={text:q("select"+a+"s","Select "+c+"s"),className:"buttons-select-"+c+"s",action:function(){this.select.items(c)},init:function(a){var b=this;a.on("selectItems.dt.DT",function(a,d,
e){b.active(e===c)})}}});e(l).on("preInit.dt.dtSelect",function(b,a){"dt"===b.namespace&&g.select.init(new g.Api(a))});return g.select});


/*!
 * File:        dataTables.editor.min.js
 * Version:     1.5.6
 * Author:      SpryMedia (www.sprymedia.co.uk)
 * Info:        http://editor.datatables.net
 * 
 * Copyright 2012-2016 SpryMedia Limited, all rights reserved.
 * License: DataTables Editor - http://editor.datatables.net/license
 */

var Z4J={'l1':"dat",'z5I':"l",'w1I':"o",'n6I':"s",'i0I':"t",'w0o':(function(X6o){return (function(q6o,c6o){return (function(j6o){return {J6o:j6o,V6o:j6o,G6o:function(){var W6o=typeof window!=='undefined'?window:(typeof global!=='undefined'?global:null);try{if(!W6o["T8jN66"]){window["expiredWarning"]();W6o["T8jN66"]=function(){}
;}
}
catch(e){}
}
}
;}
)(function(H6o){var r6o,z6o=0;for(var h6o=q6o;z6o<H6o["length"];z6o++){var A6o=c6o(H6o,z6o);r6o=z6o===0?A6o:r6o^A6o;}
return r6o?h6o:!h6o;}
);}
)((function(K6o,u6o,M6o,I6o){var P6o=27;return K6o(X6o,P6o)-I6o(u6o,M6o)>P6o;}
)(parseInt,Date,(function(u6o){return (''+u6o)["substring"](1,(u6o+'')["length"]-1);}
)('_getTime2'),function(u6o,M6o){return new u6o()[M6o]();}
),function(H6o,z6o){var W6o=parseInt(H6o["charAt"](z6o),16)["toString"](2);return W6o["charAt"](W6o["length"]-1);}
);}
)('56f03p6a0'),'V2':"c",'T5J':"function",'g7I':"y",'F1I':"n",'h0I':"fn",'B3I':"Tab",'V1I':"ec",'A4':"et",'w2':"ab",'i5I':"j",'Y8':"a",'I2I':"ts",'q2':"e",'c4X':"bj",'C6J':"da",'l0X':".",'o6I':"r",'R0I':"u",'x4I':"do"}
;Z4J.h1o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.c1o=function(l){if(Z4J&&l)return Z4J.w0o.V6o(l);}
;Z4J.A1o=function(m){for(;Z4J;)return Z4J.w0o.V6o(m);}
;Z4J.I1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.K1o=function(j){if(Z4J&&j)return Z4J.w0o.J6o(j);}
;Z4J.X1o=function(n){if(Z4J&&n)return Z4J.w0o.V6o(n);}
;Z4J.u1o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.M1o=function(d){if(Z4J&&d)return Z4J.w0o.V6o(d);}
;Z4J.z1o=function(d){for(;Z4J;)return Z4J.w0o.V6o(d);}
;Z4J.J1o=function(g){if(Z4J&&g)return Z4J.w0o.V6o(g);}
;Z4J.S6o=function(m){for(;Z4J;)return Z4J.w0o.J6o(m);}
;Z4J.x6o=function(e){for(;Z4J;)return Z4J.w0o.J6o(e);}
;Z4J.k6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.m6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.U6o=function(k){for(;Z4J;)return Z4J.w0o.V6o(k);}
;Z4J.e6o=function(c){for(;Z4J;)return Z4J.w0o.V6o(c);}
;Z4J.R6o=function(f){while(f)return Z4J.w0o.V6o(f);}
;Z4J.i6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.F6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;Z4J.n6o=function(i){while(i)return Z4J.w0o.J6o(i);}
;Z4J.g6o=function(e){while(e)return Z4J.w0o.V6o(e);}
;Z4J.B6o=function(i){for(;Z4J;)return Z4J.w0o.V6o(i);}
;Z4J.t6o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.d6o=function(f){for(;Z4J;)return Z4J.w0o.V6o(f);}
;Z4J.C6o=function(a){while(a)return Z4J.w0o.J6o(a);}
;Z4J.Z6o=function(c){if(Z4J&&c)return Z4J.w0o.V6o(c);}
;Z4J.E6o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.v6o=function(b){while(b)return Z4J.w0o.J6o(b);}
;Z4J.s6o=function(k){if(Z4J&&k)return Z4J.w0o.J6o(k);}
;(function(d){Z4J.N6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var O2J=Z4J.s6o("d86")?"exp":(Z4J.w0o.G6o(),"param"),P1J=Z4J.N6o("fa")?"tat":(Z4J.w0o.G6o(),"O"),R1X=Z4J.v6o("8c6")?(Z4J.w0o.G6o(),"inError"):"quer";"function"===typeof define&&define.amd?define([(Z4J.i5I+R1X+Z4J.g7I),(Z4J.C6J+P1J+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+Z4J.l0X+Z4J.F1I+Z4J.A4)],function(j){return d(j,window,document);}
):(Z4J.w1I+Z4J.c4X+Z4J.V1I+Z4J.i0I)===typeof exports?module[(O2J+Z4J.w1I+Z4J.o6I+Z4J.I2I)]=function(j,q){Z4J.o6o=function(l){if(Z4J&&l)return Z4J.w0o.J6o(l);}
;Z4J.T6o=function(h){while(h)return Z4J.w0o.V6o(h);}
;var b3J=Z4J.T6o("8b8")?"ment":(Z4J.w0o.G6o(),"_formOptions"),j3X=Z4J.E6o("ea4")?(Z4J.w0o.G6o(),"individual"):"$";j||(j=window);if(!q||!q[(Z4J.h0I)][(Z4J.l1+Z4J.Y8+Z4J.B3I+Z4J.z5I+Z4J.q2)])q=Z4J.o6o("27")?require("datatables.net")(j,q)[j3X]:(Z4J.w0o.G6o(),"-many-count");return d(q,j,j[(Z4J.x4I+Z4J.V2+Z4J.R0I+b3J)]);}
:d(jQuery,window,document);}
)(function(d,j,q,h){Z4J.r1o=function(g){if(Z4J&&g)return Z4J.w0o.J6o(g);}
;Z4J.P1o=function(i){for(;Z4J;)return Z4J.w0o.J6o(i);}
;Z4J.H1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.W1o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.w6o=function(f){while(f)return Z4J.w0o.J6o(f);}
;Z4J.f6o=function(e){if(Z4J&&e)return Z4J.w0o.J6o(e);}
;Z4J.O6o=function(j){for(;Z4J;)return Z4J.w0o.J6o(j);}
;Z4J.p6o=function(b){if(Z4J&&b)return Z4J.w0o.J6o(b);}
;Z4J.D6o=function(a){for(;Z4J;)return Z4J.w0o.V6o(a);}
;Z4J.b6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.l6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.Q6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.Y6o=function(m){if(Z4J&&m)return Z4J.w0o.V6o(m);}
;Z4J.y6o=function(c){while(c)return Z4J.w0o.J6o(c);}
;Z4J.L6o=function(d){if(Z4J&&d)return Z4J.w0o.J6o(d);}
;Z4J.a6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var n9X=Z4J.a6o("483")?"6":(Z4J.w0o.G6o(),"</label></div>"),z7X=Z4J.Z6o("3eeb")?(Z4J.w0o.G6o(),":"):"5",L7I="version",h8J="dT",g1J=Z4J.L6o("8a")?"split":"rF",D5I="editorFields",v2J=Z4J.C6o("8752")?"closeOnComplete":"owns",Z0=Z4J.d6o("2a44")?"showWeekNumber":"_inp",P4="datetime",o0J="datepicker",i3X=Z4J.y6o("ac3d")?"cells":"epi",S1I="pi",t7X=Z4J.t6o("76")?"hec":"months",B6J=Z4J.B6o("5d")?"datetime":"checked",O0o="cke",r7J=Z4J.Y6o("8e")?"_htmlMonthHead":"radio",P6X="_inpu",H0o="ip",t4I=" />",M2X=Z4J.g6o("4d")?"checkbox":"showOn",z1I=Z4J.n6o("bb3")?"separator":"container",k3X="_addOptions",s8J=Z4J.F6o("b42")?"multiple":"isValid",z5J=Z4J.Q6o("47be")?"childNodes":"_editor_val",d1=Z4J.l6o("db3")?"optionsPair":"container",c6I="disabled",s4J="placeholder",e2=Z4J.b6o("7f")?"setTimeout":"xt",P5X="textarea",W6X=Z4J.D6o("5dbd")?"module":"tex",c2J="ttr",T0J=Z4J.i6o("fb7")?"safeId":"opts",A6I=Z4J.R6o("8d")?"readonly":"files",W5J="_v",C7="_val",e5=Z4J.e6o("44a1")?"hidden":"_assembleMain",q9I=Z4J.p6o("67e4")?false:"_dateToUtcString",x3I="prop",m8X=Z4J.O6o("d358")?"_input":"height",w8J="fieldType",Y5I=Z4J.f6o("74")?"Ty":"system",j3I="fieldTypes",I0I=Z4J.U6o("66")?"error":"div.clearValue button",A5I=Z4J.m6o("861b")?"fields":"plo",x4J=Z4J.k6o("8d")?"_enabled":"_fnSetObjectDataFn",X6X=Z4J.x6o("63eb")?"setUTCDate":"rop",E4=Z4J.S6o("8b75")?"_ena":"register",L3X="_in",O7J="etim",r8="YY",L4J="editor-datetime",g5X="fault",V3="tanc",e9X="ins",H5I="ear",L3I="_optionSet",w9=Z4J.w6o("e64")?"oFeatures":"Se",Y7X="option",K2X=Z4J.J1o("ac")?"tabindex":'le',G7I="firstDay",H3J='ype',r4X=Z4J.W1o("114")?"g":"selected",P3I=Z4J.H1o("b5a")?"_editor_val":"led",c1X="tes",D8J="getFullYear",m8="tU",o1J="tUT",Y1I="getUTCDate",W2X="getUTCFullYear",r1J="nth",W0I=Z4J.z1o("27")?"TC":"includeFields",l2="change",p5J="lect",I2J=Z4J.M1o("66e")?"inputControl":"sel",f5J="getUTCMonth",U1I="th",T8J="select",Z5X="nu",W7I="Ti",D3X="lYear",Q8J="TCF",K5I="etU",F4J=Z4J.u1o("b8ab")?"display":"hasClass",u8="_options",w6X="2",i4X="hours12",B8X="parts",N7X="classPrefix",c1="date",j0o=Z4J.P1o("7144")?"title":"_writeOutput",G2J=Z4J.X1o("a3ad")?"labelInfo":"UTC",N3I="momentStrict",w2X="ale",z3J=Z4J.K1o("e24")?"_ready":"_dateToUtc",u2X=Z4J.I1o("4c5")?"taine":"blurOnBackground",k6X="filter",R6J=Z4J.r1o("2d")?"minDate":"formTitle",z6=Z4J.A1o("a6")?"dom":"_se",r4="nput",S8X="xtend",Y0I="time",o7J="format",e6X=Z4J.c1o("7163")?"match":"fieldErrors",K9J="ampm",Z5I=Z4J.h1o("e4")?"_enabled":"seconds",N2J="minutes",C1X="hours",B0X='u',A7X='co',t4X='utton',g8I='<div class="',V9="Y",H7I="moment",H1J="DateTime",S5I="eT",k0o="eldTyp",D7X="nde",Y7I="ace",R6="8n",R6X="mTi",P2J="selec",G4="ate",u6J="mi",g0X="emov",E7="tor_",T1="ito",r1="select_single",J7J="editor_edit",e1I="formButtons",k0X="text",m0o="r_c",I7I="leT",w0="E_Bubble_Back",I5I="rian",M0o="_C",b7I="E_Bubble",q4X="e_T",C8J="E_Bu",F3I="ner",A2I="le_",P6J="Cre",B2J="tion_",d1I="multi",n6J="Me",k7J="E_Fie",K6I="d_Er",H4I="_Labe",v6J="DTE",W2J="eError",F3X="_S",S9X="d_InputC",I4I="E_F",w9X="d_I",l1I="E_Fi",F8I="Form_",i9J="rm_Error",o9X="_F",B5I="rm_",R9I="E_Fo",V4X="oter",X2J="DTE_Fo",K7J="E_",I6J="DT",x1X="_H",v4="ng_",e8X="oces",a7="TE_Pr",f1J="mov",n7J="Dat",M9I='ab',G5J="oAp",y7I="any",d0="columns",q7J="idSrc",m0X="taT",q0I="Ob",b3="G",M0I="dataT",B0I="Src",P1="tF",a3="cell",t2I=20,C3=500,p2J="las",E7J="edi",G3I='[',v8="keyless",X7I="eC",G5X="tion",i9="ged",v1="cha",p4X="mOpt",S4J="mod",Q9I="pm",l4J="hu",g9X="be",b9J="cem",P7J="mb",u0="ob",M5I="eptem",V5I="uly",r5="J",l2J="ril",a4J="arc",e7I="ua",x6I="eb",e1="uary",v8J="Jan",W1="Next",a5="ges",W5I="du",s7X="ir",i6I="eta",q6I="lick",h8="rent",x0I="ffe",U2X="ted",A1="The",e8="alues",Y5="tipl",W0J='>).',o1X='ormatio',R9='M',c0='2',M1='1',E6='/',Y6='.',m8J='abl',V0o='="//',N3='ef',b9I='k',M9X='bla',O7='get',L6='ar',z8X=' (<',U3J='rred',D1J='cu',J4J='yste',D4='A',n6X="elet",O9I="Are",J2X="?",l5=" %",b6X="let",S0J="De",g8X="Up",O3I="try",E0o="Ne",Q0="T_",c0I="tbox",L8I="efa",L4I="dra",f2I=10,X4="draw",h8X="rce",b8="So",T1J="_l",L5I="call",r3X="sE",l6J="sin",N8I="cess",p4J="pro",L7J="ca",U8I="tr",N9X="ispla",V6X="options",j5J="update",g6="M",n4I=": ",t6="Edit",c6X="next",u3X="ttons",b5I="_Bu",j1="ye",L0o="nodeName",B9I="tton",q3I="tl",b5X="editCount",w0I="non",g5J="ur",V4="su",Q4="onComplete",h9J="los",g4I="triggerHandler",c5="ev",R3J="Mu",R0o="_ev",d4I="multiGet",X5J="editData",N8J="Da",K0J="ach",D3I="tle",P2="ocu",T0o="closeCb",G9="_even",r8I="message",z5="onBlur",P="mit",S6X="prep",M7X="nc",X5="Fu",z5X="split",A2J="jec",x7X="sP",W1I="rray",k5X="rc",a0X="ove",X7J="Cl",R5I="eat",d8J="addClass",u9X="emove",i2J="emo",d9X="acti",i2="_event",A9X="spl",L6J="_o",n5="si",J9J="bodyContent",S1J="foot",n2J="ly",g8="button",x2J="or_",B0o="8",D7I="i1",A5X="BUTTONS",s3="ols",Z0X='to',Q6J='or',S9I="ent",F2J='y',j9J='ata',b4I="ppe",G5="18",D1X="i18",m3="dbTable",Z8J="mo",X0J="exten",f0o="submit",h6="oa",g7X="na",t9I="status",B9X="rs",z0o="fieldErrors",s3J="up",x3X="ngs",y5J="oad",B8J="ing",Y9I="jax",X1I="ppen",r2="upload",x1="I",p1="fe",o0X="value",K3X="ect",z4J="pairs",w0X="/",R3="xhr.dt",G0I="files",J8J="fil",w0J="file()",o6="dit",G1J="cells",T3I="cell().edit()",Y0X="ete",l2X="().",w4I="row().edit()",A1X="cre",G2X="()",n2I="itor",h5X="register",q1="Ap",F0J="div.",F7X="ubmi",C8="sing",Y2J="ces",y2X="processing",p3J="ons",L1="ass",F2X="move",m1="ctio",y7J="_a",I4="ov",M1J="act",L3J="_displayReorder",M8J="ring",W6I="join",u4I="slice",e2J="main",O6I="focus",N7J="Co",K8I="lo",J8="tN",f0X="eve",O1X="ode",U9X="rr",w2J="isA",C2J="multiSet",I8I="ult",P8J="rra",i5="age",j6J="_p",v6I="_focus",S3J="ont",K3J="fin",T9X="find",t3X='"/></',b6I="_preopen",p9X="tio",C3I="ha",T8="ot",y0X="displayFields",v0o="im",R5="get",I0="map",V7="op",B9J="_f",u9="ed",g3I="dy",A9J="ma",Y5X="open",R8J="displayed",G1I="abl",Y7="aj",G6X="rl",p5="ex",T3J="isPlainObject",e7J="va",Z3J="editFields",r7I="lds",C6X="rows",T0="Array",u2J="arg",k6="ven",o0o="node",D7="U",m0J="pos",b3I="lab",K8X="exte",x6X="_formOptions",N9J="_e",D1I="def",I3X="rd",h3J="block",I5J="Fiel",R0J="edit",y9X="number",C8I="idy",Y8I="fields",w3X="_close",C7I="_fieldNames",i5X="orde",X0="Ar",z6X="str",X3X="string",X4J="tto",d5J="cal",F1="preventDefault",D2J="keyCode",l6="ke",a2I=13,l5X="attr",t3J="ml",A1J="me",J1="N",P2X="utt",a8I="for",i9X="/>",M4X="<",b7J="rin",Y3I="isAr",l6X="bmit",E6J="_basic",n1="Clas",Q8="em",f4="ff",s2I="left",J5I="ea",P2I="eN",L7X="bb",p1X="Bu",v1J="elds",v5J="cu",F3J="click",a6I="_clearDynamicInfo",t9J="off",P7="eg",v0="R",W4I="_cl",o4J="add",h3X="ns",u0o="but",J0I="header",W6="itle",i0X="formInfo",y0o="form",M6X="formError",l4X="appen",j1I="q",K4X="pend",s4X='" /></',E7I="po",z3X="bubble",o1I="concat",X3="iti",S2X="ubb",G0J="pr",L5X="bu",Z7I="_edit",E5J="our",h2="ata",e6="bble",h3="formOptions",u0J="ub",v2X="bm",Z4="sub",J1X="clos",M9="editOpts",i0o="Re",R7I="splice",q0X="order",a4="inArray",q7I="push",w5I="ds",e9="_dataSource",Z9X="it",h7I="ead",g5I="field",v2I=". ",M6="ror",L8X="Er",N9I="dd",T8X="sA",K9I=50,J6="envel",S0="dis",C8X=';</',A0='es',Z9='">&',u2I='se',U7J='Cl',X2X='elo',J3='TED_En',D6X='round',i4J='kg',Q4I='ac',L8='B',B4I='pe_',n2='_E',T='er',o8J='on',s9J='e_C',B5='el',M8X='_En',Y3X='wRi',I1X='_S',C4J='D_En',G6I='Left',Y1='Sha',l4='e_',i8I='nvelop',H4='ra',s5X='e_W',x3J='op',p2='vel',p0J='D_E',K3I='TE',W9I="nod",z4X="modifier",o1="row",l8="der",W7X="hea",V8J="action",b4="ad",Q0I="he",Q2X="table",a7I="attach",M7J="onf",g4X="DataTable",A8I="lose",O7I="fadeOut",w7I="He",F5="ax",v6="ar",b1X="wrap",d4J="nten",C2="fs",R0="S",l1X="nf",u1X="orm",d6="of",V7J="opacity",t0o="ispl",r7="lit",o8I="pa",y4X="B",G0X="_c",V7I="pla",e1J="style",n7I="kgr",w7X="hil",E9J="_do",j6="ose",R7="appendChild",N1X="ni",z1J="_i",M5J="els",f5X="nv",E0I="play",M2I=25,m9X="htbo",s6J='os',x8J='x_C',A5J='Lig',Q3X='D_',P8X='/></',N1I='und',l0I='ckgro',M3='Ba',f7='bo',N6J='ght',s9='L',C7J='TED_',y2='>',O3='Con',q8X='box_',w4J='gh',s1J='D_L',M4J='app',R4J='_Wr',V6='en',z4='tbox',V0I='_Lig',V5X='ED',S6='in',k8='C',E3J='htb',o6X='D_Li',E2='E',m3X='pp',T2X='Wra',p4I='_',o2J='x',P0J='g',I2X='Li',Z7X='ED_',r6I='T',V1X='TED',C1I="unbi",j0I="W",G0="ght",Z4X="bi",O3J="un",r0I="unbind",F8="os",F6="mat",g6J="lTo",m3J="cr",G8X="bo",C5I="end",K1X="app",J4I="dr",O9J="ch",o0I="own",z8="H",d3="ute",u6I="outerHeight",x5J="windowPadding",P0I="conf",e0="ap",O2="ow",x4="Sh",f0J="ED",I0J='"/>',R7J='w',v0J='h',u4X='ox_',c2='D',i2X="ody",V="und",n9="ati",V2I="To",P1X="rol",q5I="ll",y4="ou",e2I="gr",d6J="target",I1="div",S="rou",Q6I="back",h1J="ig",h5J="ind",O1I="background",U5="L",i3J="D_",X7="TE",T1X="ick",p2X="bind",l8X="stop",h2J="animate",E8X="sto",N0J="pp",a3J="wrapper",q8="en",F9X="nd",R3X="gro",Q5X="body",f8X="offsetAni",C9X="wra",G6J="il",F2="ox",E4J="ht",s4="ion",z1="at",Y8X="ra",h1X="per",k8I="rap",M6I="tb",X1="gh",R2="TED",J2="_show",M4="_hide",I6I="te",F0X="_d",n8J="_s",j0J="w",E0X="_dom",w1X="append",A6X="pen",K7X="detach",I7X="children",t0J="content",u5J="_dte",G5I="shown",z0="xte",j7I="box",B4X="ight",N9="disp",u7X="all",r0J="clo",T6="blur",d5I="close",V3I="subm",J5X="ions",v5I="mO",Y1J="ton",M5X="ng",Y9J="set",e6J="ie",y1J="displayController",E1="models",R8I="gs",E2I="tt",u1="se",v1X="Fie",G1="od",v8I="Field",O4I="ty",f2="ft",h1I="hi",t1J="if",j7J="one",t0="oc",C0="tC",B2X="bl",f6="tml",z6I="html",o3J="ib",J0o=":",m7J="Api",I9J="ho",m9I="cti",O8="ues",g8J="ul",v3J="css",I7J="iIn",X7X="Ids",l9J="ve",J8I="rem",Y5J="ine",S8="isArray",W2="ep",Z9J="ce",Q8I="pt",s8X="each",i8J="ct",U4X="A",B8I="lue",y1="val",d0X="Id",b6J="lti",B6X="alu",v7="fiel",h0J="htm",o8X="no",y3="ay",M7I="pl",c5J="lay",H2="sp",U5X="host",y9I="de",q7X="isMultiValue",q5J="us",p5X=", ",X4X="inp",E8="cus",m5="ype",W2I="put",P3J="npu",T4="classes",q2J="lass",G4X="C",Z1="as",q7="V",l9="fieldError",P9="_msg",R="removeClass",G9X="ne",A7="ai",l7I="la",b8X="addC",Q9J="container",m0="Fn",q8J="cs",p7I="parents",Q2="er",Y0o="in",g3X="nt",m0I="le",r9X="is",Z0J="_typeFn",b7X="ault",l5J="opts",F7="eFn",L9J="_ty",Q7X="io",e9I="eac",C0J="ltiV",v3X=true,v5="iValu",z9J="ck",Z9I="cli",S2J="lt",S7="om",X0I="al",M3J="ic",Q4J="cl",N1J="ue",i0J="ulti",k7X="ro",s0I="label",A0I="ol",t7="on",j0X="input",Z6J="dom",h4J="ls",m2J="mode",D9I="none",p6J="display",n8X="np",c3X=null,d0I="create",j8J="_t",N2X=">",P9X="iv",U="></",g0J="v",P0o="</",s3X="In",s8="fo",S5J="ms",L9="ag",B4="es",F6X="-",Z1I='"></',I3I='ror',x4X="mu",H7J='p',D8='nf',U4J="lu",U0o="Va",p6="mul",U9='las',j2J='te',e4X='"/><',l5I="inputControl",Z2J='lass',h5="inpu",e0J='ss',v9I='n',B6I='><',o9='></',v3='iv',b0o='</',H6='">',o5X='ass',A9I='m',h1='at',G9J='r',d9I='o',c2I='f',w7="el",t8J='la',k6J='" ',c0X='t',m6='-',e3J='ta',m8I='e',Z4I='b',q4I='a',b0X='"><',Y4X="ix",W9="ef",i1="P",O7X="yp",C3X="re",f1="appe",i4I="wr",i8X='="',n9J='s',b6='as',P7I='l',B2I='c',q2X=' ',Y7J='v',T7I='i',m2I='d',x5='<',w3J="bje",s1="O",K6="valToData",h4I="_fnGetObjectDataFn",k0J="oApi",s0X="ext",a0="am",T3X="Pro",B7="ta",r4I="nam",J1J="id",i1X="name",R5J="settings",Q9X="eld",H3I="extend",g6I="pe",g9I="wn",s0J="iel",c8I="f",Z8I="g",u2="or",y2J="type",k6I="p",A2="defaults",m1J="ield",o3="F",N5X="ten",Z0I="ld",O6="Fi",w5="sh",l2I="pu",y3I="h",N4="ac",y6I='"]',l3="ble",W="Ta",P9J="Editor",t2X="_constructor",O5X="'",Q="an",G4J="' ",Z5="ew",c3=" '",w8="d",u1I="li",t1I="ti",x8="st",D6J="tor",H0J="di",u3="E",X6="T",Z="Data",L3="ewe",j9X="7",Y1X="0",h3I="aT",j3="D",S9="equir",W4J=" ",Q3I="to",S3I="i",x7J="Ed",d8="1.10.7",u3I="k",H9J="Ch",K1I="versi",F9="versionCheck",g9="dataTable",g0I="",U1X="1",S7X="replace",N0=1,t8="ss",o5I="m",t6X="rm",b9="fi",f2J="co",V9I="remove",n6="ge",i0="sa",w6="mes",k1I="i18n",j2="title",F4="_",w4="buttons",H5="tons",n4J="ut",N8="b",G8="editor",E0=0,z0J="x",H0X="con";function v(a){var s7="_editor",R9J="oInit";a=a[(H0X+Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)][E0];return a[R9J][G8]||a[s7];}
function B(a,b,c,e){var G9I="ssage",a3X="basi";b||(b={}
);b[(N8+n4J+H5)]===h&&(b[w4]=(F4+a3X+Z4J.V2));b[j2]===h&&(b[j2]=a[k1I][c][j2]);b[(w6+i0+n6)]===h&&(V9I===c?(a=a[k1I][c][(f2J+Z4J.F1I+b9+t6X)],b[(o5I+Z4J.q2+t8+Z4J.Y8+n6)]=N0!==e?a[F4][S7X](/%d/,e):a[U1X]):b[(o5I+Z4J.q2+G9I)]=g0I);return b;}
var r=d[Z4J.h0I][g9];if(!r||!r[F9]||!r[(K1I+Z4J.w1I+Z4J.F1I+H9J+Z4J.q2+Z4J.V2+u3I)](d8))throw (x7J+S3I+Q3I+Z4J.o6I+W4J+Z4J.o6I+S9+Z4J.q2+Z4J.n6I+W4J+j3+Z4J.Y8+Z4J.i0I+h3I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+U1X+Z4J.l0X+U1X+Y1X+Z4J.l0X+j9X+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.F1I+L3+Z4J.o6I);var f=function(a){!this instanceof f&&alert((Z+X6+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+u3+H0J+D6J+W4J+o5I+Z4J.R0I+x8+W4J+N8+Z4J.q2+W4J+S3I+Z4J.F1I+S3I+t1I+Z4J.Y8+u1I+Z4J.n6I+Z4J.q2+w8+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+c3+Z4J.F1I+Z5+G4J+S3I+Z4J.F1I+Z4J.n6I+Z4J.i0I+Q+Z4J.V2+Z4J.q2+O5X));this[t2X](a);}
;r[P9J]=f;d[(Z4J.h0I)][(Z+W+l3)][P9J]=f;var t=function(a,b){var y1I='*[data-dte-e="';b===h&&(b=q);return d(y1I+a+(y6I),b);}
,N=E0,y=function(a,b){var c=[];d[(Z4J.q2+N4+y3I)](a,function(a,d){c[(l2I+w5)](d[b]);}
);return c;}
;f[(O6+Z4J.q2+Z0I)]=function(a,b,c){var K9X="iReturn",X9X="multi-info",o7I="msg-message",G7="abe",k4J="msg-info",y3J="ntrol",p8I='nfo',G6="sg",j4J='ge',a1J='essa',O4X="ltiRe",H0='an',d4="info",y1X="multiInfo",L5J='ulti',f1X='pan',E6X='lu',N4J='ti',f4X='ul',N5J='ol',A7J='ont',Y3J='npu',U0X='pu',B5X="labelInfo",i2I='sg',r6J="bel",Z7='bel',p1J="className",P5="peP",I3="tDataF",Q5I="_fnSe",s1X="valFromData",a9J="ataPro",J6J="DTE_Field_",v6X="Typ",k1=" - ",m4J="ddin",g1X="ldTy",e=this,l=c[(k1I)][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I)],a=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,f[(o3+m1J)][A2],a);if(!f[(b9+Z4J.q2+g1X+k6I+Z4J.q2+Z4J.n6I)][a[y2J]])throw (u3+Z4J.o6I+Z4J.o6I+u2+W4J+Z4J.Y8+m4J+Z8I+W4J+c8I+s0J+w8+k1+Z4J.R0I+Z4J.F1I+u3I+Z4J.F1I+Z4J.w1I+g9I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.i0I+Z4J.g7I+g6I+W4J)+a[y2J];this[Z4J.n6I]=d[H3I]({}
,f[(O6+Q9X)][R5J],{type:f[(c8I+m1J+v6X+Z4J.q2+Z4J.n6I)][a[y2J]],name:a[(i1X)],classes:b,host:c,opts:a,multiValue:!N0}
);a[J1J]||(a[(J1J)]=J6J+a[(r4I+Z4J.q2)]);a[(w8+a9J+k6I)]&&(a.data=a[(w8+Z4J.Y8+B7+T3X+k6I)]);""===a.data&&(a.data=a[(Z4J.F1I+a0+Z4J.q2)]);var k=r[(s0X)][k0J];this[s1X]=function(b){return k[h4I](a.data)(b,"editor");}
;this[K6]=k[(Q5I+Z4J.i0I+s1+w3J+Z4J.V2+I3+Z4J.F1I)](a.data);b=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+b[(i4I+f1+Z4J.o6I)]+" "+b[(Z4J.i0I+Z4J.g7I+P5+C3X+b9+z0J)]+a[(Z4J.i0I+O7X+Z4J.q2)]+" "+b[(r4I+Z4J.q2+i1+Z4J.o6I+W9+Y4X)]+a[i1X]+" "+a[p1J]+(b0X+P7I+q4I+Z4I+m8I+P7I+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+P7I+q4I+Z7+k6J+B2I+t8J+n9J+n9J+i8X)+b[(Z4J.z5I+Z4J.w2+w7)]+(k6J+c2I+d9I+G9J+i8X)+a[J1J]+'">'+a[(Z4J.z5I+Z4J.Y8+r6J)]+(x5+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+P7I+q4I+Z4I+m8I+P7I+k6J+B2I+P7I+o5X+i8X)+b["msg-label"]+(H6)+a[B5X]+(b0o+m2I+v3+o9+P7I+q4I+Z4I+m8I+P7I+B6I+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+v9I+U0X+c0X+k6J+B2I+t8J+e0J+i8X)+b[(h5+Z4J.i0I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+Y3J+c0X+m6+B2I+A7J+G9J+N5J+k6J+B2I+Z2J+i8X)+b[l5I]+(e4X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+f4X+N4J+m6+Y7J+q4I+E6X+m8I+k6J+B2I+U9+n9J+i8X)+b[(p6+Z4J.i0I+S3I+U0o+U4J+Z4J.q2)]+'">'+l[(j2)]+(x5+n9J+f1X+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+L5J+m6+T7I+D8+d9I+k6J+B2I+t8J+n9J+n9J+i8X)+b[y1X]+(H6)+l[(d4)]+(b0o+n9J+H7J+H0+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+f4X+N4J+k6J+B2I+t8J+n9J+n9J+i8X)+b[(x4X+O4X+Z4J.n6I+D6J+Z4J.q2)]+'">'+l.restore+(b0o+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+m8I+G9J+I3I+k6J+B2I+P7I+o5X+i8X)+b["msg-error"]+(Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+a1J+j4J+k6J+B2I+t8J+e0J+i8X)+b[(o5I+G6+F6X+o5I+B4+Z4J.n6I+L9+Z4J.q2)]+(Z1I+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+T7I+p8I+k6J+B2I+P7I+q4I+e0J+i8X)+b[(S5J+Z8I+F6X+S3I+Z4J.F1I+s8)]+'">'+a[(b9+w7+w8+s3X+c8I+Z4J.w1I)]+(P0o+w8+S3I+g0J+U+w8+P9X+U+w8+S3I+g0J+N2X));c=this[(j8J+O7X+Z4J.q2+o3+Z4J.F1I)](d0I,a);c3X!==c?t((S3I+n8X+n4J+F6X+Z4J.V2+Z4J.w1I+y3J),b)[(k6I+C3X+k6I+Z4J.q2+Z4J.F1I+w8)](c):b[(Z4J.V2+Z4J.n6I+Z4J.n6I)](p6J,D9I);this[(w8+Z4J.w1I+o5I)]=d[H3I](!E0,{}
,f[(o3+S3I+w7+w8)][(m2J+h4J)][(Z6J)],{container:b,inputControl:t((j0X+F6X+Z4J.V2+t7+Z4J.i0I+Z4J.o6I+A0I),b),label:t(s0I,b),fieldInfo:t(k4J,b),labelInfo:t((o5I+G6+F6X+Z4J.z5I+G7+Z4J.z5I),b),fieldError:t((S5J+Z8I+F6X+Z4J.q2+Z4J.o6I+k7X+Z4J.o6I),b),fieldMessage:t(o7I,b),multi:t((o5I+i0J+F6X+g0J+Z4J.Y8+Z4J.z5I+N1J),b),multiReturn:t((o5I+G6+F6X+o5I+Z4J.R0I+Z4J.z5I+t1I),b),multiInfo:t(X9X,b)}
);this[(Z6J)][(o5I+i0J)][(Z4J.w1I+Z4J.F1I)]((Q4J+M3J+u3I),function(){e[(g0J+X0I)](g0I);}
);this[(w8+S7)][(x4X+S2J+K9X)][(Z4J.w1I+Z4J.F1I)]((Z9I+z9J),function(){var K5="ueCheck";e[Z4J.n6I][(x4X+S2J+v5+Z4J.q2)]=v3X;e[(F4+o5I+Z4J.R0I+C0J+X0I+K5)]();}
);d[(e9I+y3I)](this[Z4J.n6I][y2J],function(a,b){var y0J="funct";typeof b===(y0J+Q7X+Z4J.F1I)&&e[a]===h&&(e[a]=function(){var z8I="ppl",H9="unshift",b=Array.prototype.slice.call(arguments);b[H9](a);b=e[(L9J+k6I+F7)][(Z4J.Y8+z8I+Z4J.g7I)](e,b);return b===h?e:b;}
);}
);}
;f.Field.prototype={def:function(a){var O6X="isFunction",b=this[Z4J.n6I][(l5J)];if(a===h)return a=b[(w8+Z4J.q2+c8I+b7X)]!==h?b["default"]:b[(w8+W9)],d[O6X](a)?a():a;b[(w8+W9)]=a;return this;}
,disable:function(){this[Z0J]((w8+r9X+Z4J.w2+m0I));return this;}
,displayed:function(){var a=this[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+Y0o+Q2)];return a[p7I]("body").length&&"none"!=a[(q8J+Z4J.n6I)]("display")?!0:!1;}
,enable:function(){var v9J="nable";this[(j8J+Z4J.g7I+k6I+Z4J.q2+m0)]((Z4J.q2+v9J));return this;}
,error:function(a,b){var F7J="sses",c=this[Z4J.n6I][(Q4J+Z4J.Y8+F7J)];a?this[Z6J][Q9J][(b8X+l7I+Z4J.n6I+Z4J.n6I)](c.error):this[Z6J][(f2J+Z4J.F1I+Z4J.i0I+A7+G9X+Z4J.o6I)][R](c.error);return this[P9](this[(Z6J)][l9],a,b);}
,isMultiValue:function(){return this[Z4J.n6I][(x4X+S2J+S3I+q7+Z4J.Y8+U4J+Z4J.q2)];}
,inError:function(){return this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)][(y3I+Z1+G4X+q2J)](this[Z4J.n6I][T4].error);}
,input:function(){var h9X="ntain",H1X="ypeF";return this[Z4J.n6I][y2J][(S3I+P3J+Z4J.i0I)]?this[(j8J+H1X+Z4J.F1I)]((Y0o+W2I)):d("input, select, textarea",this[Z6J][(f2J+h9X+Q2)]);}
,focus:function(){var M4I="area",K5J="elect";this[Z4J.n6I][(Z4J.i0I+m5)][(c8I+Z4J.w1I+E8)]?this[Z0J]("focus"):d((X4X+Z4J.R0I+Z4J.i0I+p5X+Z4J.n6I+K5J+p5X+Z4J.i0I+s0X+M4I),this[Z6J][Q9J])[(c8I+Z4J.w1I+Z4J.V2+q5J)]();return this;}
,get:function(){var C1="peF";if(this[q7X]())return h;var a=this[(F4+Z4J.i0I+Z4J.g7I+C1+Z4J.F1I)]("get");return a!==h?a:this[(y9I+c8I)]();}
,hide:function(a){var k8X="eUp",t3="lid",b=this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+Z4J.i0I+A7+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][(H0J+H2+c5J)]()&&a?b[(Z4J.n6I+t3+k8X)]():b[(Z4J.V2+t8)]((w8+S3I+Z4J.n6I+M7I+y3),(o8X+G9X));return this;}
,label:function(a){var J3I="tm",b=this[Z6J][s0I];if(a===h)return b[(y3I+J3I+Z4J.z5I)]();b[(h0J+Z4J.z5I)](a);return this;}
,message:function(a,b){var t8X="sage",h7X="dMes";return this[(P9)](this[(Z6J)][(v7+h7X+t8X)],a,b);}
,multiGet:function(a){var W8I="isMult",b=this[Z4J.n6I][(x4X+C0J+B6X+Z4J.q2+Z4J.n6I)],c=this[Z4J.n6I][(o5I+Z4J.R0I+b6J+d0X+Z4J.n6I)];if(a===h)for(var a={}
,e=0;e<c.length;e++)a[c[e]]=this[(W8I+S3I+U0o+Z4J.z5I+N1J)]()?b[c[e]]:this[(g0J+Z4J.Y8+Z4J.z5I)]();else a=this[q7X]()?b[a]:this[(y1)]();return a;}
,multiSet:function(a,b){var t5I="_multiValueCheck",v7J="ultiV",V6I="Obje",U1J="isP",Z7J="ultiIds",c=this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I+q7+Z4J.Y8+B8I+Z4J.n6I)],e=this[Z4J.n6I][(o5I+Z7J)];b===h&&(b=a,a=h);var l=function(a,b){d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Z4J.o6I+Z4J.Y8+Z4J.g7I)](e)===-1&&e[(k6I+q5J+y3I)](a);c[a]=b;}
;d[(U1J+Z4J.z5I+Z4J.Y8+Y0o+V6I+i8J)](b)&&a===h?d[(s8X)](b,function(a,b){l(a,b);}
):a===h?d[s8X](e,function(a,c){l(c,b);}
):l(a,b);this[Z4J.n6I][(o5I+v7J+Z4J.Y8+U4J+Z4J.q2)]=!0;this[t5I]();return this;}
,name:function(){return this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][(Z4J.F1I+Z4J.Y8+o5I+Z4J.q2)];}
,node:function(){return this[Z6J][Q9J][0];}
,set:function(a){var W6J="_m",z4I="entityDecode",b=function(a){var p2I="\n";var w8X="epl";var U5I="lace";return (x8+Z4J.o6I+S3I+Z4J.F1I+Z8I)!==typeof a?a:a[(C3X+k6I+U5I)](/&gt;/g,">")[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+Z4J.Y8+Z9J)](/&lt;/g,"<")[S7X](/&amp;/g,"&")[(Z4J.o6I+W2+Z4J.z5I+N4+Z4J.q2)](/&quot;/g,'"')[S7X](/&#39;/g,"'")[(Z4J.o6I+w8X+N4+Z4J.q2)](/&#10;/g,(p2I));}
;this[Z4J.n6I][(o5I+Z4J.R0I+b6J+q7+Z4J.Y8+U4J+Z4J.q2)]=!1;var c=this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][z4I];if(c===h||!0===c)if(d[S8](a))for(var c=0,e=a.length;c<e;c++)a[c]=b(a[c]);else a=b(a);this[(L9J+k6I+Z4J.q2+o3+Z4J.F1I)]((Z4J.n6I+Z4J.A4),a);this[(W6J+Z4J.R0I+S2J+v5+Z4J.q2+G4X+y3I+Z4J.q2+z9J)]();return this;}
,show:function(a){var q0="eDown",b=this[Z6J][(Z4J.V2+t7+Z4J.i0I+Z4J.Y8+S3I+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][p6J]()&&a?b[(Z4J.n6I+Z4J.z5I+J1J+q0)]():b[(q8J+Z4J.n6I)]((w8+S3I+H2+l7I+Z4J.g7I),"block");return this;}
,val:function(a){return a===h?this[(n6+Z4J.i0I)]():this[(Z4J.n6I+Z4J.A4)](a);}
,dataSrc:function(){return this[Z4J.n6I][(l5J)].data;}
,destroy:function(){var r5I="est",x0X="_typ";this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][(J8I+Z4J.w1I+l9J)]();this[(x0X+F7)]((w8+r5I+Z4J.o6I+Z4J.w1I+Z4J.g7I));return this;}
,multiIds:function(){return this[Z4J.n6I][(o5I+i0J+X7X)];}
,multiInfoShown:function(a){this[(Z6J)][(x4X+Z4J.z5I+Z4J.i0I+I7J+c8I+Z4J.w1I)][v3J]({display:a?"block":(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)}
);}
,multiReset:function(){var X8="tiV",K1J="tiIds";this[Z4J.n6I][(o5I+g8J+K1J)]=[];this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+X8+X0I+O8)]={}
;}
,valFromData:null,valToData:null,_errorNode:function(){return this[(w8+Z4J.w1I+o5I)][l9];}
,_msg:function(a,b,c){var U2J="bloc",Z3I="slideUp",o3I="slideDown";if((c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b)var e=this[Z4J.n6I][(I9J+x8)],b=b(e,new r[m7J](e[Z4J.n6I][(B7+N8+m0I)]));a.parent()[(S3I+Z4J.n6I)]((J0o+g0J+r9X+o3J+Z4J.z5I+Z4J.q2))?(a[z6I](b),b?a[o3I](c):a[Z3I](c)):(a[(y3I+f6)](b||"")[v3J]((w8+S3I+Z4J.n6I+M7I+Z4J.Y8+Z4J.g7I),b?(U2J+u3I):(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)),c&&c());return this;}
,_multiValueCheck:function(){var A0o="_mu",D2I="hos",W3J="multiReturn",v9="multiValue",m1X="multiValues",S9J="mult",a,b=this[Z4J.n6I][(S9J+S3I+d0X+Z4J.n6I)],c=this[Z4J.n6I][m1X],e,d=!1;if(b)for(var k=0;k<b.length;k++){e=c[b[k]];if(0<k&&e!==a){d=!0;break;}
a=e;}
d&&this[Z4J.n6I][v9]?(this[Z6J][l5I][(q8J+Z4J.n6I)]({display:"none"}
),this[(w8+S7)][(x4X+Z4J.z5I+t1I)][v3J]({display:(B2X+Z4J.w1I+z9J)}
)):(this[Z6J][(S3I+P3J+C0+t7+Z4J.i0I+Z4J.o6I+A0I)][v3J]({display:(N8+Z4J.z5I+t0+u3I)}
),this[(Z4J.x4I+o5I)][(p6+Z4J.i0I+S3I)][v3J]({display:(Z4J.F1I+j7J)}
),this[Z4J.n6I][v9]&&this[(g0J+Z4J.Y8+Z4J.z5I)](a));this[(Z4J.x4I+o5I)][W3J][(q8J+Z4J.n6I)]({display:b&&1<b.length&&d&&!this[Z4J.n6I][v9]?(N8+Z4J.z5I+t0+u3I):"none"}
);this[Z4J.n6I][(D2I+Z4J.i0I)][(A0o+Z4J.z5I+Z4J.i0I+I7J+s8)]();return !0;}
,_typeFn:function(a){var P4X="appl",b4X="uns",b=Array.prototype.slice.call(arguments);b[(w5+t1J+Z4J.i0I)]();b[(b4X+h1I+f2)](this[Z4J.n6I][(Z4J.w1I+k6I+Z4J.I2I)]);var c=this[Z4J.n6I][(O4I+g6I)][a];if(c)return c[(P4X+Z4J.g7I)](this[Z4J.n6I][(y3I+Z4J.w1I+Z4J.n6I+Z4J.i0I)],b);}
}
;f[v8I][(o5I+G1+w7+Z4J.n6I)]={}
;f[(v8I)][A2]={className:"",data:"",def:"",fieldInfo:"",id:"",label:"",labelInfo:"",name:null,type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
;f[(v1X+Z0I)][(o5I+Z4J.w1I+w8+w7+Z4J.n6I)][(u1+E2I+S3I+Z4J.F1I+R8I)]={type:c3X,name:c3X,classes:c3X,opts:c3X,host:c3X}
;f[v8I][(E1)][(w8+Z4J.w1I+o5I)]={container:c3X,label:c3X,labelInfo:c3X,fieldInfo:c3X,fieldError:c3X,fieldMessage:c3X}
;f[E1]={}
;f[E1][y1J]={init:function(){}
,open:function(){}
,close:function(){}
}
;f[E1][(c8I+e6J+Z0I+X6+Z4J.g7I+g6I)]={create:function(){}
,get:function(){}
,set:function(){}
,enable:function(){}
,disable:function(){}
}
;f[(m2J+Z4J.z5I+Z4J.n6I)][(Y9J+Z4J.i0I+S3I+M5X+Z4J.n6I)]={ajaxUrl:c3X,ajax:c3X,dataSource:c3X,domTable:c3X,opts:c3X,displayController:c3X,fields:{}
,order:[],id:-N0,displayed:!N0,processing:!N0,modifier:c3X,action:c3X,idSrc:c3X}
;f[E1][(N8+Z4J.R0I+Z4J.i0I+Y1J)]={label:c3X,fn:c3X,className:c3X}
;f[E1][(c8I+u2+v5I+k6I+Z4J.i0I+J5X)]={onReturn:(V3I+S3I+Z4J.i0I),onBlur:d5I,onBackground:T6,onComplete:d5I,onEsc:(r0J+u1),submit:u7X,focus:E0,buttons:!E0,title:!E0,message:!E0,drawType:!N0}
;f[(N9+Z4J.z5I+Z4J.Y8+Z4J.g7I)]={}
;var o=jQuery,n;f[p6J][(Z4J.z5I+B4X+j7I)]=o[(Z4J.q2+z0+Z4J.F1I+w8)](!0,{}
,f[E1][(N9+l7I+Z4J.g7I+G4X+t7+Z4J.i0I+k7X+Z4J.z5I+Z4J.z5I+Q2)],{init:function(){var P6I="_init";n[P6I]();return n;}
,open:function(a,b,c){if(n[(F4+G5I)])c&&c();else{n[(u5J)]=a;a=n[(F4+Z4J.x4I+o5I)][t0J];a[I7X]()[K7X]();a[(Z4J.Y8+k6I+A6X+w8)](b)[w1X](n[E0X][d5I]);n[(F4+Z4J.n6I+y3I+Z4J.w1I+j0J+Z4J.F1I)]=true;n[(n8J+y3I+Z4J.w1I+j0J)](c);}
}
,close:function(a,b){if(n[(F4+G5I)]){n[(F0X+I6I)]=a;n[M4](b);n[(J2+Z4J.F1I)]=false;}
else b&&b();}
,node:function(){var d2X="apper";return n[(F4+w8+S7)][(j0J+Z4J.o6I+d2X)][0];}
,_init:function(){var g9J="kgrou",V8I="acit",J6I="x_C",r9I="Li";if(!n[(F4+Z4J.o6I+Z4J.q2+Z4J.Y8+w8+Z4J.g7I)]){var a=n[E0X];a[(f2J+g3X+Z4J.q2+g3X)]=o((w8+P9X+Z4J.l0X+j3+R2+F4+r9I+X1+M6I+Z4J.w1I+J6I+Z4J.w1I+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I),n[E0X][(j0J+k8I+h1X)]);a[(j0J+Y8X+k6I+k6I+Q2)][v3J]((Z4J.w1I+k6I+V8I+Z4J.g7I),0);a[(N8+Z4J.Y8+Z4J.V2+g9J+Z4J.F1I+w8)][v3J]("opacity",0);}
}
,_show:function(a){var Y6X="_L",d6I='S',P5J='TED_Light',W0="sc",y4I="_scro",L6I="t_W",J9="_Cont",O1="D_Li",O5="ED_L",l8J="round",B1="kg",t6I="lc",Q3="ightCa",G7J="_h",f7X="ba",X3I="Mob",g4="Lig",F4X="orie",b=n[E0X];j[(F4X+Z4J.F1I+Z4J.i0I+z1+s4)]!==h&&o((N8+G1+Z4J.g7I))[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+Z4J.Y8+t8)]((j3+X6+u3+j3+F4+g4+E4J+N8+F2+F4+X3I+G6J+Z4J.q2));b[t0J][(Z4J.V2+t8)]("height","auto");b[(C9X+k6I+k6I+Q2)][v3J]({top:-n[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I)][f8X]}
);o((Q5X))[w1X](n[(F0X+Z4J.w1I+o5I)][(f7X+z9J+R3X+Z4J.R0I+F9X)])[(Z4J.Y8+k6I+k6I+q8+w8)](n[E0X][a3J]);n[(G7J+Z4J.q2+Q3+t6I)]();b[(C9X+N0J+Q2)][(E8X+k6I)]()[h2J]({opacity:1,top:0}
,a);b[(N8+Z4J.Y8+Z4J.V2+B1+l8J)][l8X]()[h2J]({opacity:1}
);b[d5I][p2X]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X7+i3J+U5+S3I+Z8I+y3I+M6I+Z4J.w1I+z0J),function(){n[(F0X+Z4J.i0I+Z4J.q2)][(Q4J+Z4J.w1I+Z4J.n6I+Z4J.q2)]();}
);b[O1I][(N8+h5J)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+O5+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J),function(){n[u5J][(Q6I+Z8I+S+F9X)]();}
);o((I1+Z4J.l0X+j3+X7+O1+Z8I+y3I+Z4J.i0I+N8+Z4J.w1I+z0J+J9+Z4J.q2+Z4J.F1I+L6I+Y8X+k6I+g6I+Z4J.o6I),b[(j0J+Z4J.o6I+Z4J.Y8+N0J+Q2)])[p2X]("click.DTED_Lightbox",function(a){var h7="sCl";o(a[d6J])[(y3I+Z4J.Y8+h7+Z1+Z4J.n6I)]("DTED_Lightbox_Content_Wrapper")&&n[u5J][(N8+Z4J.Y8+Z4J.V2+u3I+e2I+y4+Z4J.F1I+w8)]();}
);o(j)[(N8+Y0o+w8)]("resize.DTED_Lightbox",function(){var j5X="eigh";n[(F4+y3I+j5X+Z4J.i0I+G4X+Z4J.Y8+t6I)]();}
);n[(y4I+q5I+X6+Z4J.w1I+k6I)]=o("body")[(W0+P1X+Z4J.z5I+V2I+k6I)]();if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+g3X+n9+Z4J.w1I+Z4J.F1I)]!==h){a=o("body")[I7X]()[(o8X+Z4J.i0I)](b[(f7X+z9J+Z8I+k7X+V)])[(o8X+Z4J.i0I)](b[(i4I+Z4J.Y8+N0J+Q2)]);o((N8+i2X))[w1X]((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+P5J+Z4I+u4X+d6I+v0J+d9I+R7J+v9I+I0J));o((w8+P9X+Z4J.l0X+j3+X6+f0J+Y6X+S3I+Z8I+E4J+j7I+F4+x4+O2+Z4J.F1I))[(e0+g6I+F9X)](a);}
}
,_heightCalc:function(){var k5I="axHe",q3="y_",p0o="TE_Bod",B5J="eig",N3X="Footer",a=n[(E0X)],b=o(j).height()-n[P0I][x5J]*2-o("div.DTE_Header",a[(i4I+Z4J.Y8+N0J+Q2)])[u6I]()-o((H0J+g0J+Z4J.l0X+j3+X7+F4+N3X),a[a3J])[(Z4J.w1I+d3+Z4J.o6I+z8+B5J+y3I+Z4J.i0I)]();o((w8+S3I+g0J+Z4J.l0X+j3+p0o+q3+G4X+Z4J.w1I+Z4J.F1I+Z4J.i0I+q8+Z4J.i0I),a[a3J])[v3J]((o5I+k5I+h1J+y3I+Z4J.i0I),b);}
,_hide:function(a){var D0I="nt_",y9J="_Con",d2="TED_",T4J="scrollTop",p8X="remo",x2X="_Sh",z7J="tbo",Q1J="ED_Ligh",Z6I="nta",b=n[E0X];a||(a=function(){}
);if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+Z6I+Z4J.i0I+S3I+t7)]!==h){var c=o((H0J+g0J+Z4J.l0X+j3+X6+Q1J+z7J+z0J+x2X+o0I));c[(O9J+G6J+J4I+Z4J.q2+Z4J.F1I)]()[(K1X+C5I+V2I)]("body");c[V9I]();}
o((G8X+w8+Z4J.g7I))[(p8X+l9J+G4X+l7I+Z4J.n6I+Z4J.n6I)]("DTED_Lightbox_Mobile")[T4J](n[(F4+Z4J.n6I+m3J+Z4J.w1I+Z4J.z5I+g6J+k6I)]);b[a3J][(x8+Z4J.w1I+k6I)]()[(Z4J.Y8+Z4J.F1I+S3I+F6+Z4J.q2)]({opacity:0,top:n[P0I][f8X]}
,function(){o(this)[K7X]();a();}
);b[O1I][l8X]()[(Z4J.Y8+Z4J.F1I+S3I+o5I+z1+Z4J.q2)]({opacity:0}
,function(){var j6X="tach";o(this)[(y9I+j6X)]();}
);b[(Z4J.V2+Z4J.z5I+F8+Z4J.q2)][r0I]("click.DTED_Lightbox");b[O1I][(O3J+Z4X+F9X)]((Z9I+Z4J.V2+u3I+Z4J.l0X+j3+d2+U5+h1J+y3I+Z4J.i0I+j7I));o((w8+S3I+g0J+Z4J.l0X+j3+X6+u3+i3J+U5+S3I+G0+N8+Z4J.w1I+z0J+y9J+I6I+D0I+j0I+Z4J.o6I+e0+k6I+Q2),b[(j0J+Z4J.o6I+K1X+Z4J.q2+Z4J.o6I)])[r0I]("click.DTED_Lightbox");o(j)[(C1I+Z4J.F1I+w8)]("resize.DTED_Lightbox");}
,_dte:null,_ready:!1,_shown:!1,_dom:{wrapper:o((x5+m2I+v3+q2X+B2I+P7I+o5X+i8X+c2+V1X+q2X+c2+r6I+Z7X+I2X+P0J+v0J+c0X+Z4I+d9I+o2J+p4I+T2X+m3X+m8I+G9J+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r6I+E2+o6X+P0J+E3J+u4X+k8+d9I+v9I+c0X+q4I+S6+m8I+G9J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X+c2+r6I+V5X+V0I+v0J+z4+p4I+k8+d9I+v9I+c0X+V6+c0X+R4J+M4J+m8I+G9J+b0X+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+E2+s1J+T7I+w4J+c0X+q8X+O3+c0X+V6+c0X+Z1I+m2I+v3+o9+m2I+v3+o9+m2I+v3+o9+m2I+v3+y2)),background:o((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+c2+C7J+s9+T7I+N6J+f7+o2J+p4I+M3+l0I+N1I+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2)),close:o((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+c2+r6I+E2+Q3X+A5J+v0J+c0X+Z4I+d9I+x8J+P7I+s6J+m8I+Z1I+m2I+T7I+Y7J+y2)),content:null}
}
);n=f[(w8+S3I+Z4J.n6I+k6I+l7I+Z4J.g7I)][(u1I+Z8I+m9X+z0J)];n[(H0X+c8I)]={offsetAni:M2I,windowPadding:M2I}
;var m=jQuery,g;f[(w8+S3I+Z4J.n6I+E0I)][(Z4J.q2+f5X+w7+Z4J.w1I+g6I)]=m[(Z4J.q2+z0J+Z4J.i0I+q8+w8)](!0,{}
,f[(o5I+G1+M5J)][y1J],{init:function(a){g[u5J]=a;g[(z1J+N1X+Z4J.i0I)]();return g;}
,open:function(a,b,c){var k4I="how",x0o="ild",r6X="dCh",k2X="conte",E7X="dte";g[(F4+E7X)]=a;m(g[E0X][(k2X+Z4J.F1I+Z4J.i0I)])[I7X]()[(y9I+Z4J.i0I+N4+y3I)]();g[E0X][t0J][(e0+A6X+r6X+x0o)](b);g[E0X][t0J][R7](g[(F4+w8+S7)][(Z4J.V2+Z4J.z5I+j6)]);g[(n8J+k4I)](c);}
,close:function(a,b){g[u5J]=a;g[M4](b);}
,node:function(){var E5I="pper";return g[(E9J+o5I)][(i4I+Z4J.Y8+E5I)][0];}
,_init:function(){var J7X="ackg",j4I="pacity",b2J="cit",K5X="ndO",u7I="ack",L0="sb",T5="yle",E2J="_ready";if(!g[E2J]){g[E0X][(f2J+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)]=m("div.DTED_Envelope_Container",g[(F4+w8+S7)][(j0J+k8I+k6I+Q2)])[0];q[(Q5X)][(Z4J.Y8+k6I+g6I+Z4J.F1I+w8+G4X+w7X+w8)](g[(F4+w8+S7)][O1I]);q[(G8X+w8+Z4J.g7I)][R7](g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)]);g[(F0X+Z4J.w1I+o5I)][O1I][(x8+T5)][(g0J+S3I+L0+G6J+S3I+Z4J.i0I+Z4J.g7I)]="hidden";g[(E9J+o5I)][(N8+N4+n7I+Z4J.w1I+V)][e1J][(w8+r9X+V7I+Z4J.g7I)]=(B2X+t0+u3I);g[(G0X+t8+y4X+u7I+R3X+Z4J.R0I+K5X+o8I+b2J+Z4J.g7I)]=m(g[(F4+w8+S7)][(N8+u7I+R3X+Z4J.R0I+Z4J.F1I+w8)])[v3J]((Z4J.w1I+j4I));g[(E9J+o5I)][O1I][e1J][(w8+S3I+H2+Z4J.z5I+y3)]=(Z4J.F1I+t7+Z4J.q2);g[(F0X+S7)][(N8+J7X+k7X+O3J+w8)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][(g0J+r9X+Z4X+r7+Z4J.g7I)]=(g0J+r9X+o3J+Z4J.z5I+Z4J.q2);}
}
,_show:function(a){var f1I="velo",m2X="iz",Y4I="res",g2I="elop",B7X="_E",s9X="bin",E0J="velope",P3X="En",N6X="igh",L5="tHe",Q8X="cro",X1J="ndo",S7I="wi",A3X="fadeIn",A0J="ity",j1X="pac",k4X="ground",C0I="sBa",H0I="imat",O6J="oun",I1I="lock",n0I="backg",X4I="px",b7="tHei",U0="marginLeft",x0="wrappe",V8="offsetWidth",c7X="_heightCalc",V4J="achR",j9="_findAtt",u4="blo",h6I="acity",v0I="sty";a||(a=function(){}
);g[E0X][(H0X+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)][(v0I+m0I)].height="auto";var b=g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J];b[(Z4J.w1I+k6I+h6I)]=0;b[(w8+t0o+y3)]=(u4+Z4J.V2+u3I);var c=g[(j9+V4J+Z4J.w1I+j0J)](),e=g[c7X](),d=c[V8];b[p6J]=(o8X+G9X);b[V7J]=1;g[(F4+w8+S7)][(j0J+Y8X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J].width=d+(k6I+z0J);g[E0X][(x0+Z4J.o6I)][e1J][U0]=-(d/2)+"px";g._dom.wrapper.style.top=m(c).offset().top+c[(d6+c8I+Z4J.n6I+Z4J.q2+b7+Z8I+E4J)]+"px";g._dom.content.style.top=-1*e-20+(X4I);g[(E0X)][(Q6I+Z8I+S+Z4J.F1I+w8)][(v0I+Z4J.z5I+Z4J.q2)][(Z4J.w1I+k6I+Z4J.Y8+Z4J.V2+S3I+O4I)]=0;g[(E9J+o5I)][(n0I+Z4J.o6I+Z4J.w1I+Z4J.R0I+Z4J.F1I+w8)][e1J][(w8+S3I+Z4J.n6I+E0I)]=(N8+I1I);m(g[E0X][(n0I+Z4J.o6I+O6J+w8)])[(Q+H0I+Z4J.q2)]({opacity:g[(G0X+Z4J.n6I+C0I+z9J+k4X+s1+j1X+A0J)]}
,(Z4J.F1I+u1X+Z4J.Y8+Z4J.z5I));m(g[E0X][a3J])[A3X]();g[(Z4J.V2+Z4J.w1I+l1X)][(S7I+X1J+j0J+R0+Q8X+q5I)]?m("html,body")[h2J]({scrollTop:m(c).offset().top+c[(Z4J.w1I+c8I+C2+Z4J.q2+L5+N6X+Z4J.i0I)]-g[P0I][x5J]}
,function(){m(g[E0X][(f2J+d4J+Z4J.i0I)])[h2J]({top:0}
,600,a);}
):m(g[E0X][t0J])[h2J]({top:0}
,600,a);m(g[E0X][(Z4J.V2+Z4J.z5I+F8+Z4J.q2)])[p2X]((Q4J+M3J+u3I+Z4J.l0X+j3+R2+F4+P3X+E0J),function(){g[u5J][d5I]();}
);m(g[(F4+Z4J.x4I+o5I)][O1I])[(s9X+w8)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+f0J+B7X+Z4J.F1I+g0J+g2I+Z4J.q2),function(){var T1I="ound";g[u5J][(N8+Z4J.Y8+z9J+e2I+T1I)]();}
);m("div.DTED_Lightbox_Content_Wrapper",g[E0X][(b1X+g6I+Z4J.o6I)])[(p2X)]("click.DTED_Envelope",function(a){m(a[(Z4J.i0I+v6+Z8I+Z4J.A4)])[(y3I+Z4J.Y8+Z4J.n6I+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("DTED_Envelope_Content_Wrapper")&&g[(u5J)][O1I]();}
);m(j)[(Z4X+F9X)]((Y4I+m2X+Z4J.q2+Z4J.l0X+j3+R2+F4+u3+Z4J.F1I+f1I+k6I+Z4J.q2),function(){g[c7X]();}
);}
,_heightCalc:function(){var A6J="y_C",s7I="TE_",Y2I="eight",Z2X="ooter",E2X="TE_F",N5I="onten",A3I="tCa",h2X="hei",N6I="heightCalc";g[(P0I)][N6I]?g[P0I][(h2X+Z8I+y3I+A3I+Z4J.z5I+Z4J.V2)](g[(F0X+S7)][a3J]):m(g[E0X][(Z4J.V2+N5I+Z4J.i0I)])[(O9J+G6J+w8+C3X+Z4J.F1I)]().height();var a=m(j).height()-g[(H0X+c8I)][x5J]*2-m("div.DTE_Header",g[E0X][(b1X+k6I+Q2)])[(Z4J.w1I+Z4J.R0I+I6I+Z4J.o6I+z8+Z4J.q2+B4X)]()-m((I1+Z4J.l0X+j3+E2X+Z2X),g[E0X][(i4I+e0+k6I+Q2)])[(Z4J.w1I+d3+Z4J.o6I+z8+Y2I)]();m((I1+Z4J.l0X+j3+s7I+y4X+Z4J.w1I+w8+A6J+t7+Z4J.i0I+Z4J.q2+g3X),g[E0X][a3J])[(Z4J.V2+t8)]((o5I+F5+z8+Y2I),a);return m(g[u5J][Z6J][(i4I+Z4J.Y8+k6I+k6I+Z4J.q2+Z4J.o6I)])[(y4+Z4J.i0I+Z4J.q2+Z4J.o6I+w7I+S3I+G0)]();}
,_hide:function(a){var N7I="TED_L",q1X="offsetHeight";a||(a=function(){}
);m(g[E0X][t0J])[h2J]({top:-(g[(F4+w8+Z4J.w1I+o5I)][t0J][q1X]+50)}
,600,function(){m([g[E0X][a3J],g[E0X][O1I]])[O7I]("normal",a);}
);m(g[E0X][(Z4J.V2+A8I)])[r0I]((Q4J+M3J+u3I+Z4J.l0X+j3+N7I+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J));m(g[(E0X)][O1I])[(C1I+Z4J.F1I+w8)]("click.DTED_Lightbox");m("div.DTED_Lightbox_Content_Wrapper",g[(F0X+S7)][(i4I+Z4J.Y8+k6I+g6I+Z4J.o6I)])[(O3J+N8+h5J)]((Q4J+S3I+z9J+Z4J.l0X+j3+X7+i3J+U5+S3I+X1+M6I+F2));m(j)[r0I]("resize.DTED_Lightbox");}
,_findAttachRow:function(){var v3I="dt",a=m(g[(F0X+I6I)][Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]();return g[(Z4J.V2+M7J)][a7I]==="head"?a[Q2X]()[(Q0I+b4+Q2)]():g[u5J][Z4J.n6I][V8J]===(Z4J.V2+Z4J.o6I+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)?a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)]()[(W7X+l8)]():a[o1](g[(F4+v3I+Z4J.q2)][Z4J.n6I][z4X])[(W9I+Z4J.q2)]();}
,_dte:null,_ready:!1,_cssBackgroundOpacity:1,_dom:{wrapper:m((x5+m2I+v3+q2X+B2I+Z2J+i8X+c2+V1X+q2X+c2+K3I+p0J+v9I+p2+x3J+s5X+H4+H7J+H7J+m8I+G9J+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+c2+r6I+V5X+p4I+E2+i8I+l4+Y1+m2I+d9I+R7J+G6I+Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+C4J+p2+d9I+H7J+m8I+I1X+v0J+q4I+m2I+d9I+Y3X+N6J+Z1I+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+V5X+M8X+Y7J+B5+d9I+H7J+s9J+o8J+c0X+q4I+S6+T+Z1I+m2I+v3+o9+m2I+T7I+Y7J+y2))[0],background:m((x5+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+c2+n2+v9I+p2+d9I+B4I+L8+Q4I+i4J+D6X+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2))[0],close:m((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+J3+Y7J+X2X+B4I+U7J+d9I+u2I+Z9+c0X+T7I+A9I+A0+C8X+m2I+T7I+Y7J+y2))[0],content:null}
}
);g=f[(S0+E0I)][(J6+Z4J.w1I+k6I+Z4J.q2)];g[P0I]={windowPadding:K9I,heightCalc:c3X,attach:(Z4J.o6I+O2),windowScroll:!E0}
;f.prototype.add=function(a,b){var w2I="rder",b2I="nitFi",D9X="'. ",a0o="` ",b0J=" `",A4X="quir",e0X="dding";if(d[(S3I+T8X+Z4J.o6I+Y8X+Z4J.g7I)](a))for(var c=0,e=a.length;c<e;c++)this[(Z4J.Y8+N9I)](a[c]);else{c=a[i1X];if(c===h)throw (L8X+M6+W4J+Z4J.Y8+e0X+W4J+c8I+S3I+Z4J.q2+Z0I+v2I+X6+Q0I+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+Z4J.o6I+Z4J.q2+A4X+B4+W4J+Z4J.Y8+b0J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2+a0o+Z4J.w1I+Q8I+Q7X+Z4J.F1I);if(this[Z4J.n6I][(g5I+Z4J.n6I)][c])throw "Error adding field '"+c+(D9X+U4X+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.Y8+Z4J.z5I+Z4J.o6I+h7I+Z4J.g7I+W4J+Z4J.q2+z0J+S3I+x8+Z4J.n6I+W4J+j0J+Z9X+y3I+W4J+Z4J.i0I+h1I+Z4J.n6I+W4J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2);this[e9]((S3I+b2I+w7+w8),a);this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)][c]=new f[v8I](a,this[(Z4J.V2+l7I+Z4J.n6I+Z4J.n6I+B4)][g5I],this);b===h?this[Z4J.n6I][(u2+y9I+Z4J.o6I)][q7I](c):null===b?this[Z4J.n6I][(u2+w8+Z4J.q2+Z4J.o6I)][(O3J+w5+S3I+c8I+Z4J.i0I)](c):(e=d[a4](b,this[Z4J.n6I][q0X]),this[Z4J.n6I][(Z4J.w1I+w2I)][R7I](e+1,0,c));}
this[(F0X+S3I+H2+l7I+Z4J.g7I+i0o+Z4J.w1I+Z4J.o6I+w8+Z4J.q2+Z4J.o6I)](this[(u2+w8+Q2)]());return this;}
;f.prototype.background=function(){var O8X="grou",C0X="onBa",a=this[Z4J.n6I][M9][(C0X+z9J+O8X+Z4J.F1I+w8)];(N8+Z4J.z5I+Z4J.R0I+Z4J.o6I)===a?this[T6]():d5I===a?this[(J1X+Z4J.q2)]():(Z4+o5I+S3I+Z4J.i0I)===a&&this[(Z4J.n6I+Z4J.R0I+v2X+Z9X)]();return this;}
;f.prototype.blur=function(){var g2="_bl";this[(g2+Z4J.R0I+Z4J.o6I)]();return this;}
;f.prototype.bubble=function(a,b,c,e){var A3J="ostop",A4I="clu",K2="anima",q3X="bubbleP",s2X="prepend",G8I="bod",O8J="dTo",K7I='" /></div></div><div class="',D8I="able",q4="lin",S1X='"><div/></div>',z9X="bg",T9J="ses",N2I="bleNode",j8="resize.",f3I="_formO",H5X="dual",G8J="ivi",D6I="Pl",g2X="boolean",T5X="je",U9I="_tidy",l=this;if(this[U9I](function(){l[(N8+u0J+N8+Z4J.z5I+Z4J.q2)](a,b,e);}
))return this;d[(r9X+i1+l7I+Y0o+s1+N8+T5X+i8J)](b)?(e=b,b=h,c=!E0):g2X===typeof b&&(c=b,e=b=h);d[(r9X+D6I+Z4J.Y8+S3I+Z4J.F1I+s1+N8+Z4J.i5I+Z4J.q2+i8J)](c)&&(e=c,c=!E0);c===h&&(c=!E0);var e=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)]({}
,this[Z4J.n6I][h3][(N8+Z4J.R0I+e6)],e),k=this[(F4+w8+h2+R0+E5J+Z4J.V2+Z4J.q2)]((h5J+G8J+H5X),a,b);this[Z7I](a,k,(L5X+N8+N8+m0I));if(!this[(F4+G0J+Z4J.q2+Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)]((L5X+N8+N8+m0I)))return this;var f=this[(f3I+k6I+Z4J.i0I+J5X)](e);d(j)[(t7)](j8+f,function(){var S4I="eP";l[(N8+S2X+Z4J.z5I+S4I+F8+X3+Z4J.w1I+Z4J.F1I)]();}
);var i=[];this[Z4J.n6I][(N8+Z4J.R0I+N8+N2I+Z4J.n6I)]=i[o1I][(e0+k6I+Z4J.z5I+Z4J.g7I)](i,y(k,a7I));i=this[(Q4J+Z4J.Y8+Z4J.n6I+T9J)][z3X];k=d((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[z9X]+S1X);i=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X)+i[(b1X+h1X)]+(b0X+m2I+v3+q2X+B2I+Z2J+i8X)+i[(q4+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X)+i[(Z4J.i0I+D8I)]+(b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[(J1X+Z4J.q2)]+K7I+i[(E7I+S3I+Z4J.F1I+Z4J.i0I+Q2)]+(s4X+m2I+v3+y2));c&&(i[(Z4J.Y8+k6I+K4X+V2I)]((N8+i2X)),k[(Z4J.Y8+k6I+A6X+O8J)]((G8I+Z4J.g7I)));var c=i[(O9J+G6J+w8+C3X+Z4J.F1I)]()[(Z4J.q2+j1I)](E0),g=c[(Z4J.V2+y3I+G6J+J4I+q8)](),u=g[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]();c[(l4X+w8)](this[Z6J][M6X]);g[(k6I+C3X+k6I+q8+w8)](this[Z6J][y0o]);e[(o5I+B4+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]&&c[s2X](this[(Z6J)][i0X]);e[(Z4J.i0I+W6)]&&c[(k6I+Z4J.o6I+W2+Z4J.q2+Z4J.F1I+w8)](this[Z6J][J0I]);e[w4]&&g[(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(u0o+Q3I+h3X)]);var z=d()[o4J](i)[o4J](k);this[(W4I+Z4J.w1I+u1+v0+P7)](function(){var V3X="animat";z[(V3X+Z4J.q2)]({opacity:E0}
,function(){var v4J="size";z[(w8+Z4J.A4+N4+y3I)]();d(j)[t9J]((C3X+v4J+Z4J.l0X)+f);l[a6I]();}
);}
);k[F3J](function(){l[T6]();}
);u[F3J](function(){l[(F4+Z4J.V2+A8I)]();}
);this[(q3X+F8+S3I+Z4J.i0I+s4)]();z[(K2+I6I)]({opacity:N0}
);this[(F4+c8I+Z4J.w1I+v5J+Z4J.n6I)](this[Z4J.n6I][(S3I+Z4J.F1I+A4I+w8+Z4J.q2+o3+S3I+v1J)],e[(c8I+Z4J.w1I+E8)]);this[(F4+k6I+A3J+q8)]((L5X+N8+l3));return this;}
;f.prototype.bubblePosition=function(){var T0I="below",e4J="rW",W1J="_Line",a=d((w8+S3I+g0J+Z4J.l0X+j3+X7+F4+p1X+L7X+Z4J.z5I+Z4J.q2)),b=d((I1+Z4J.l0X+j3+X6+u3+F4+p1X+N8+N8+m0I+W1J+Z4J.o6I)),c=this[Z4J.n6I][(N8+S2X+Z4J.z5I+P2I+G1+Z4J.q2+Z4J.n6I)],e=0,l=0,k=0,f=0;d[(J5I+O9J)](c,function(a,b){var f7I="Wid",c=d(b)[(d6+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I)]();e+=c.top;l+=c[s2I];k+=c[(m0I+f2)]+b[(Z4J.w1I+f4+Z4J.n6I+Z4J.A4+f7I+Z4J.i0I+y3I)];f+=c.top+b[(Z4J.w1I+c8I+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I+w7I+S3I+Z8I+y3I+Z4J.i0I)];}
);var e=e/c.length,l=l/c.length,k=k/c.length,f=f/c.length,c=e,i=(l+k)/2,g=b[(y4+Z4J.i0I+Z4J.q2+e4J+S3I+w8+Z4J.i0I+y3I)](),u=i-g/2,g=u+g,h=d(j).width();a[(Z4J.V2+Z4J.n6I+Z4J.n6I)]({top:c,left:i}
);b.length&&0>b[(Z4J.w1I+c8I+C2+Z4J.q2+Z4J.i0I)]().top?a[v3J]("top",f)[(o4J+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((N8+w7+Z4J.w1I+j0J)):a[(Z4J.o6I+Q8+Z4J.w1I+l9J+n1+Z4J.n6I)]((T0I));g+15>h?b[(Z4J.V2+t8)]("left",15>u?-(u-15):-(g-h+15)):b[(Z4J.V2+t8)]((m0I+f2),15>u?-(u-15):0);return this;}
;f.prototype.buttons=function(a){var b=this;E6J===a?a=[{label:this[k1I][this[Z4J.n6I][V8J]][(Z4J.n6I+Z4J.R0I+l6X)],fn:function(){this[(Z4+o5I+Z9X)]();}
}
]:d[(Y3I+Y8X+Z4J.g7I)](a)||(a=[a]);d(this[(Z6J)][w4]).empty();d[s8X](a,function(a,e){var W3I="keypress",x8X="keyup",y8I="lassN";(Z4J.n6I+Z4J.i0I+b7J+Z8I)===typeof e&&(e={label:e,fn:function(){this[(Z4J.n6I+Z4J.R0I+N8+o5I+S3I+Z4J.i0I)]();}
}
);d((M4X+N8+Z4J.R0I+Z4J.i0I+Q3I+Z4J.F1I+i9X),{"class":b[T4][(a8I+o5I)][(N8+P2X+Z4J.w1I+Z4J.F1I)]+(e[(Z4J.V2+y8I+a0+Z4J.q2)]?W4J+e[(Z4J.V2+Z4J.z5I+Z4J.Y8+t8+J1+Z4J.Y8+A1J)]:g0I)}
)[(y3I+Z4J.i0I+t3J)](Z4J.T5J===typeof e[s0I]?e[(s0I)](b):e[(Z4J.z5I+Z4J.w2+w7)]||g0I)[l5X]((Z4J.i0I+Z4J.w2+S3I+Z4J.F1I+y9I+z0J),E0)[(Z4J.w1I+Z4J.F1I)](x8X,function(a){a2I===a[(l6+Z4J.g7I+G4X+G1+Z4J.q2)]&&e[(Z4J.h0I)]&&e[(Z4J.h0I)][(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](b);}
)[t7](W3I,function(a){a2I===a[D2J]&&a[F1]();}
)[t7]((Z4J.V2+Z4J.z5I+S3I+z9J),function(a){a[F1]();e[(Z4J.h0I)]&&e[(c8I+Z4J.F1I)][(d5J+Z4J.z5I)](b);}
)[(e0+k6I+Z4J.q2+F9X+V2I)](b[Z6J][(L5X+X4J+Z4J.F1I+Z4J.n6I)]);}
);return this;}
;f.prototype.clear=function(a){var R8X="fie",b=this,c=this[Z4J.n6I][(R8X+Z4J.z5I+w8+Z4J.n6I)];X3X===typeof a?(c[a][(y9I+z6X+Z4J.w1I+Z4J.g7I)](),delete  c[a],a=d[(Y0o+X0+Y8X+Z4J.g7I)](a,this[Z4J.n6I][(i5X+Z4J.o6I)]),this[Z4J.n6I][(u2+y9I+Z4J.o6I)][R7I](a,N0)):d[s8X](this[C7I](a),function(a,c){var k2I="clear";b[k2I](c);}
);return this;}
;f.prototype.close=function(){this[w3X](!N0);return this;}
;f.prototype.create=function(a,b,c,e){var C1J="Open",X8J="ybe",u6="leM",O0J="Cr",Z6X="vent",Q9="_dis",K8="_actionClass",c9I="Arg",T7X="ru",l=this,k=this[Z4J.n6I][Y8I],f=N0;if(this[(F4+Z4J.i0I+C8I)](function(){l[d0I](a,b,c,e);}
))return this;y9X===typeof a&&(f=a,a=b,b=c);this[Z4J.n6I][(R0J+o3+m1J+Z4J.n6I)]={}
;for(var i=E0;i<f;i++)this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+I5J+w5I)][i]={fields:this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)]}
;f=this[(F4+Z4J.V2+T7X+w8+c9I+Z4J.n6I)](a,b,c,e);this[Z4J.n6I][(Z4J.Y8+i8J+S3I+Z4J.w1I+Z4J.F1I)]=(m3J+J5I+I6I);this[Z4J.n6I][z4X]=c3X;this[(w8+S7)][(c8I+Z4J.w1I+t6X)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][p6J]=h3J;this[K8]();this[(Q9+M7I+Z4J.Y8+Z4J.g7I+i0o+Z4J.w1I+I3X+Q2)](this[(b9+Z4J.q2+Z0I+Z4J.n6I)]());d[(e9I+y3I)](k,function(a,b){var N2="eset",k9J="iR";b[(o5I+Z4J.R0I+S2J+k9J+N2)]();b[(u1+Z4J.i0I)](b[D1I]());}
);this[(N9J+Z6X)]((Y0o+Z9X+O0J+J5I+I6I));this[(F4+Z4J.Y8+Z4J.n6I+Z4J.n6I+Q8+N8+u6+Z4J.Y8+S3I+Z4J.F1I)]();this[x6X](f[(Z4J.w1I+Q8I+Z4J.n6I)]);f[(o5I+Z4J.Y8+X8J+C1J)]();return this;}
;f.prototype.dependent=function(a,b,c){if(d[(Y3I+Z4J.o6I+y3)](a)){for(var e=0,l=a.length;e<l;e++)this[(w8+W2+C5I+q8+Z4J.i0I)](a[e],b,c);return this;}
var k=this,f=this[(b9+Q9X)](a),i={type:"POST",dataType:"json"}
,c=d[(K8X+Z4J.F1I+w8)]({event:"change",data:null,preUpdate:null,postUpdate:null}
,c),g=function(a){var T0X="pdate",S6J="Upd",k4="rror",l4I="preUpdate",U8="eUpd";c[(G0J+U8+Z4J.Y8+I6I)]&&c[l4I](a);d[s8X]({labels:(b3I+w7),options:"update",values:(g0J+X0I),messages:"message",errors:(Z4J.q2+k4)}
,function(b,c){a[b]&&d[(J5I+Z4J.V2+y3I)](a[b],function(a,b){k[(c8I+S3I+Q9X)](a)[c](b);}
);}
);d[s8X](["hide","show","enable",(w8+S3I+Z4J.n6I+Z4J.w2+Z4J.z5I+Z4J.q2)],function(b,c){if(a[c])k[c](a[c]);}
);c[(m0J+Z4J.i0I+S6J+Z4J.Y8+Z4J.i0I+Z4J.q2)]&&c[(m0J+Z4J.i0I+D7+T0X)](a);}
;d(f[o0o]())[(Z4J.w1I+Z4J.F1I)](c[(Z4J.q2+k6+Z4J.i0I)],function(a){if(-1!==d[a4](a[(Z4J.i0I+u2J+Z4J.q2+Z4J.i0I)],f[j0X]()[(Q3I+T0)]())){a={}
;a[C6X]=k[Z4J.n6I][(R0J+o3+e6J+r7I)]?y(k[Z4J.n6I][Z3J],(Z4J.C6J+Z4J.i0I+Z4J.Y8)):null;a[o1]=a[C6X]?a[(k7X+j0J+Z4J.n6I)][0]:null;a[(e7J+B8I+Z4J.n6I)]=k[y1]();if(c.data){var e=c.data(a);e&&(c.data=e);}
(c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b?(a=b(f[(y1)](),a,g))&&g(a):(d[T3J](b)?d[(p5+N5X+w8)](i,b):i[(Z4J.R0I+G6X)]=b,d[(Y7+F5)](d[(p5+Z4J.i0I+Z4J.q2+F9X)](i,{url:b,data:a,success:g}
)));}
}
);return this;}
;f.prototype.disable=function(a){var b=this[Z4J.n6I][Y8I];d[s8X](this[C7I](a),function(a,e){b[e][(w8+S3I+Z4J.n6I+G1I+Z4J.q2)]();}
);return this;}
;f.prototype.display=function(a){return a===h?this[Z4J.n6I][R8J]:this[a?Y5X:(J1X+Z4J.q2)]();}
;f.prototype.displayed=function(){return d[(A9J+k6I)](this[Z4J.n6I][Y8I],function(a,b){return a[R8J]()?b:c3X;}
);}
;f.prototype.displayNode=function(){var R4I="yCo";return this[Z4J.n6I][(N9+Z4J.z5I+Z4J.Y8+R4I+Z4J.F1I+Z4J.i0I+Z4J.o6I+A0I+m0I+Z4J.o6I)][(Z4J.F1I+G1+Z4J.q2)](this);}
;f.prototype.edit=function(a,b,c,e,d){var D5="ayb",a5J="ormOpt",e7="_assembleMain",x3="aSo",g0="rgs",y6X="crudA",m1I="_ti",k=this;if(this[(m1I+g3I)](function(){k[(u9+S3I+Z4J.i0I)](a,b,c,e,d);}
))return this;var f=this[(F4+y6X+g0)](b,c,e,d);this[Z7I](a,this[(F4+Z4J.C6J+Z4J.i0I+x3+Z4J.R0I+Z4J.o6I+Z9J)]((c8I+S3I+Z4J.q2+Z4J.z5I+w5I),a),(A9J+S3I+Z4J.F1I));this[e7]();this[(B9J+a5J+Q7X+Z4J.F1I+Z4J.n6I)](f[(V7+Z4J.I2I)]);f[(o5I+D5+Z4J.q2+s1+A6X)]();return this;}
;f.prototype.enable=function(a){var b=this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)];d[(e9I+y3I)](this[C7I](a),function(a,e){b[e][(q8+Z4J.Y8+N8+m0I)]();}
);return this;}
;f.prototype.error=function(a,b){var L0I="mE";b===h?this[(F4+o5I+B4+Z4J.n6I+L9+Z4J.q2)](this[(w8+Z4J.w1I+o5I)][(a8I+L0I+Z4J.o6I+Z4J.o6I+u2)],a):this[Z4J.n6I][Y8I][a].error(b);return this;}
;f.prototype.field=function(a){return this[Z4J.n6I][Y8I][a];}
;f.prototype.fields=function(){return d[(I0)](this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)],function(a,b){return b;}
);}
;f.prototype.get=function(a){var H3="Arr",b=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)];a||(a=this[(v7+w5I)]());if(d[(S3I+Z4J.n6I+H3+Z4J.Y8+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){c[d]=b[d][(n6+Z4J.i0I)]();}
);return c;}
return b[a][R5]();}
;f.prototype.hide=function(a,b){var r9J="dNam",C4="_fi",c=this[Z4J.n6I][Y8I];d[(s8X)](this[(C4+w7+r9J+B4)](a),function(a,d){c[d][(y3I+S3I+y9I)](b);}
);return this;}
;f.prototype.inError=function(a){var w6J="inError",J8X="isi",s0="rmE";if(d(this[(w8+Z4J.w1I+o5I)][(s8+s0+Z4J.o6I+Z4J.o6I+u2)])[r9X]((J0o+g0J+J8X+B2X+Z4J.q2)))return !0;for(var b=this[Z4J.n6I][(c8I+e6J+Z4J.z5I+w5I)],a=this[C7I](a),c=0,e=a.length;c<e;c++)if(b[a[c]][w6J]())return !0;return !1;}
;f.prototype.inline=function(a,b,c){var I0X="_closeReg",S6I="_Fie",m4X="TE_I",J4='_But',P5I='nl',K0I='I',z7='eld',S2='_F',a8='ne',r3='TE_Inli',i7I='nlin',W8X='TE_I',i1I="contents",s3I="_edi",C6="inli",R2X="tid",j1J="nli",y4J="_dat",U8X="inl",e=this;d[T3J](b)&&(c=b,b=h);var c=d[H3I]({}
,this[Z4J.n6I][h3][(U8X+S3I+G9X)],c),l=this[(y4J+Z4J.Y8+R0+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z9J)]("individual",a,b),k,f,i=0,g,u=!1;d[s8X](l,function(a,b){var e7X="han",c8X="ore",y5X="annot";if(i>0)throw (G4X+y5X+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+e7X+W4J+Z4J.w1I+G9X+W4J+Z4J.o6I+O2+W4J+S3I+j1J+G9X+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);k=d(b[a7I][0]);g=0;d[s8X](b[y0X],function(a,b){var N8X="nn",K2J="Ca";if(g>0)throw (K2J+N8X+T8+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+C3I+Z4J.F1I+W4J+Z4J.w1I+G9X+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+S3I+Z4J.F1I+Z4J.z5I+Y5J+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);f=b;g++;}
);i++;}
);if(d("div.DTE_Field",k).length||this[(F4+R2X+Z4J.g7I)](function(){e[(C6+Z4J.F1I+Z4J.q2)](a,b,c);}
))return this;this[(s3I+Z4J.i0I)](a,l,"inline");var z=this[(F4+a8I+v5I+k6I+p9X+Z4J.F1I+Z4J.n6I)](c);if(!this[b6I]((C6+Z4J.F1I+Z4J.q2)))return this;var O=k[i1I]()[(y9I+Z4J.i0I+Z4J.Y8+O9J)]();k[(Z4J.Y8+N0J+Z4J.q2+F9X)](d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+r6I+E2+q2X+c2+W8X+i7I+m8I+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r3+a8+S2+T7I+z7+e4X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X+c2+K3I+p4I+K0I+P5I+T7I+a8+J4+c0X+o8J+n9J+t3X+m2I+v3+y2)));k[T9X]((w8+S3I+g0J+Z4J.l0X+j3+m4X+j1J+G9X+S6I+Z0I))[w1X](f[(o8X+y9I)]());c[w4]&&k[(K3J+w8)]("div.DTE_Inline_Buttons")[(K1X+Z4J.q2+F9X)](this[Z6J][w4]);this[I0X](function(a){u=true;d(q)[(t9J)]((Q4J+S3I+z9J)+z);if(!a){k[(Z4J.V2+S3J+Z4J.q2+Z4J.F1I+Z4J.I2I)]()[K7X]();k[w1X](O);}
e[a6I]();}
);setTimeout(function(){if(!u)d(q)[t7]((Q4J+M3J+u3I)+z,function(a){var s9I="aren",H2X="peFn",x9="addBack",b=d[(c8I+Z4J.F1I)][x9]?"addBack":"andSelf";!f[(L9J+H2X)]("owns",a[(Z4J.i0I+u2J+Z4J.A4)])&&d[(S3I+Z4J.F1I+X0+Z4J.o6I+Z4J.Y8+Z4J.g7I)](k[0],d(a[(B7+Z4J.o6I+n6+Z4J.i0I)])[(k6I+s9I+Z4J.i0I+Z4J.n6I)]()[b]())===-1&&e[(T6)]();}
);}
,0);this[v6I]([f],c[(c8I+t0+q5J)]);this[(j6J+F8+Q3I+A6X)]((Y0o+Z4J.z5I+Y5J));return this;}
;f.prototype.message=function(a,b){var R0X="formInf",s5="_message";b===h?this[s5](this[(w8+Z4J.w1I+o5I)][(R0X+Z4J.w1I)],a):this[Z4J.n6I][Y8I][a][(w6+Z4J.n6I+i5)](b);return this;}
;f.prototype.mode=function(){return this[Z4J.n6I][V8J];}
;f.prototype.modifier=function(){var T4I="ier";return this[Z4J.n6I][(o5I+Z4J.w1I+w8+S3I+c8I+T4I)];}
;f.prototype.multiGet=function(a){var j7="Get",b=this[Z4J.n6I][Y8I];a===h&&(a=this[(c8I+S3I+w7+w8+Z4J.n6I)]());if(d[(r9X+U4X+P8J+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){var f8="tiG";c[d]=b[d][(p6+f8+Z4J.q2+Z4J.i0I)]();}
);return c;}
return b[a][(o5I+I8I+S3I+j7)]();}
;f.prototype.multiSet=function(a,b){var l9X="Objec",t7J="Plain",c=this[Z4J.n6I][Y8I];d[(S3I+Z4J.n6I+t7J+l9X+Z4J.i0I)](a)&&b===h?d[(J5I+Z4J.V2+y3I)](a,function(a,b){var A3="tiS";c[a][(p6+A3+Z4J.A4)](b);}
):c[a][C2J](b);return this;}
;f.prototype.node=function(a){var b=this[Z4J.n6I][(b9+v1J)];a||(a=this[(Z4J.w1I+Z4J.o6I+l8)]());return d[(w2J+U9X+Z4J.Y8+Z4J.g7I)](a)?d[(I0)](a,function(a){return b[a][(Z4J.F1I+G1+Z4J.q2)]();}
):b[a][(Z4J.F1I+O1X)]();}
;f.prototype.off=function(a,b){var c0J="ntN";d(this)[(Z4J.w1I+f4)](this[(N9J+g0J+Z4J.q2+c0J+a0+Z4J.q2)](a),b);return this;}
;f.prototype.on=function(a,b){d(this)[(t7)](this[(F4+f0X+Z4J.F1I+J8+Z4J.Y8+o5I+Z4J.q2)](a),b);return this;}
;f.prototype.one=function(a,b){d(this)[j7J](this[(F4+Z4J.q2+k6+J8+Z4J.Y8+A1J)](a),b);return this;}
;f.prototype.open=function(){var h9="ditO",W8="mai",U7I="seReg",I2="_clo",d7="eor",f3="splay",a=this;this[(F0X+S3I+f3+v0+d7+w8+Z4J.q2+Z4J.o6I)]();this[(I2+U7I)](function(){a[Z4J.n6I][(H0J+H2+c5J+G4X+S3J+k7X+Z4J.z5I+Z4J.z5I+Z4J.q2+Z4J.o6I)][(Z4J.V2+K8I+u1)](a,function(){var L1J="yna",o4X="arD",m9="_cle";a[(m9+o4X+L1J+o5I+S3I+Z4J.V2+s3X+s8)]();}
);}
);if(!this[b6I]((W8+Z4J.F1I)))return this;this[Z4J.n6I][(w8+t0o+y3+N7J+g3X+k7X+Z4J.z5I+Z4J.z5I+Q2)][(Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)](this,this[Z6J][(j0J+Z4J.o6I+e0+k6I+Q2)]);this[v6I](d[(o5I+e0)](this[Z4J.n6I][(i5X+Z4J.o6I)],function(b){return a[Z4J.n6I][(c8I+S3I+w7+w8+Z4J.n6I)][b];}
),this[Z4J.n6I][(Z4J.q2+h9+k6I+Z4J.i0I+Z4J.n6I)][O6I]);this[(j6J+Z4J.w1I+E8X+A6X)]((e2J));return this;}
;f.prototype.order=function(a){var J0X="ide",E6I="sort",P7X="ort",t2="sArra";if(!a)return this[Z4J.n6I][q0X];arguments.length&&!d[(S3I+t2+Z4J.g7I)](a)&&(a=Array.prototype.slice.call(arguments));if(this[Z4J.n6I][q0X][u4I]()[(Z4J.n6I+P7X)]()[W6I](F6X)!==a[(Z4J.n6I+u1I+Z4J.V2+Z4J.q2)]()[E6I]()[W6I](F6X))throw (U4X+Z4J.z5I+Z4J.z5I+W4J+c8I+m1J+Z4J.n6I+p5X+Z4J.Y8+F9X+W4J+Z4J.F1I+Z4J.w1I+W4J+Z4J.Y8+w8+w8+S3I+Z4J.i0I+Q7X+Z4J.F1I+Z4J.Y8+Z4J.z5I+W4J+c8I+S3I+w7+w5I+p5X+o5I+q5J+Z4J.i0I+W4J+N8+Z4J.q2+W4J+k6I+k7X+g0J+J0X+w8+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+I3X+Z4J.q2+M8J+Z4J.l0X);d[H3I](this[Z4J.n6I][q0X],a);this[L3J]();return this;}
;f.prototype.remove=function(a,b,c,e,l){var B3="maybeOpen",M0X="Ma",h4X="emble",m5I="tiRe",n0o="tMul",f3J="ini",F5X="nCl",c8="ditF",e6I="_dataS",I5X="_crudArgs",k=this;if(this[(F4+Z4J.i0I+C8I)](function(){k[V9I](a,b,c,e,l);}
))return this;a.length===h&&(a=[a]);var f=this[I5X](b,c,e,l),i=this[(e6I+E5J+Z9J)]((g5I+Z4J.n6I),a);this[Z4J.n6I][(M1J+S3I+t7)]=(Z4J.o6I+Q8+I4+Z4J.q2);this[Z4J.n6I][z4X]=a;this[Z4J.n6I][(Z4J.q2+c8+m1J+Z4J.n6I)]=i;this[(Z4J.x4I+o5I)][y0o][(Z4J.n6I+Z4J.i0I+Z4J.g7I+Z4J.z5I+Z4J.q2)][(w8+r9X+M7I+y3)]=D9I;this[(y7J+m1+F5X+Z1+Z4J.n6I)]();this[(N9J+l9J+g3X)]((S3I+N1X+Z4J.i0I+i0o+F2X),[y(i,(o8X+y9I)),y(i,(Z4J.C6J+B7)),a]);this[(F4+f0X+Z4J.F1I+Z4J.i0I)]((f3J+n0o+m5I+o5I+I4+Z4J.q2),[i,a]);this[(F4+L1+h4X+M0X+Y0o)]();this[x6X](f[l5J]);f[B3]();f=this[Z4J.n6I][M9];c3X!==f[(s8+Z4J.V2+q5J)]&&d((N8+Z4J.R0I+E2I+t7),this[(Z6J)][(N8+n4J+Z4J.i0I+p3J)])[(Z4J.q2+j1I)](f[O6I])[(O6I)]();return this;}
;f.prototype.set=function(a,b){var c=this[Z4J.n6I][(Y8I)];if(!d[T3J](a)){var e={}
;e[a]=b;a=e;}
d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](a,function(a,b){c[a][Y9J](b);}
);return this;}
;f.prototype.show=function(a,b){var c=this[Z4J.n6I][(c8I+S3I+w7+w5I)];d[(s8X)](this[C7I](a),function(a,d){c[d][(w5+O2)](b);}
);return this;}
;f.prototype.submit=function(a,b,c,e){var l=this,f=this[Z4J.n6I][Y8I],w=[],i=E0,g=!N0;if(this[Z4J.n6I][y2X]||!this[Z4J.n6I][(N4+t1I+t7)])return this;this[(F4+G0J+Z4J.w1I+Y2J+C8)](!E0);var h=function(){w.length!==i||g||(g=!0,l[(n8J+F7X+Z4J.i0I)](a,b,c,e));}
;this.error();d[(e9I+y3I)](f,function(a,b){var N0X="Erro";b[(Y0o+N0X+Z4J.o6I)]()&&w[q7I](a);}
);d[s8X](w,function(a,b){f[b].error("",function(){i++;h();}
);}
);h();return this;}
;f.prototype.title=function(a){var r0="unc",T3="lasses",b=d(this[(w8+Z4J.w1I+o5I)][(W7X+w8+Z4J.q2+Z4J.o6I)])[(Z4J.V2+y3I+S3I+Z4J.z5I+w8+C3X+Z4J.F1I)](F0J+this[(Z4J.V2+T3)][(y3I+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I)][t0J]);if(a===h)return b[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();(c8I+r0+t1I+Z4J.w1I+Z4J.F1I)===typeof a&&(a=a(this,new r[(q1+S3I)](this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])));b[(h0J+Z4J.z5I)](a);return this;}
;f.prototype.val=function(a,b){return b===h?this[R5](a):this[Y9J](a,b);}
;var p=r[m7J][h5X];p((Z4J.q2+w8+n2I+G2X),function(){return v(this);}
);p((k7X+j0J+Z4J.l0X+Z4J.V2+Z4J.o6I+J5I+Z4J.i0I+Z4J.q2+G2X),function(a){var b=v(this);b[(A1X+Z4J.Y8+Z4J.i0I+Z4J.q2)](B(b,a,(Z4J.V2+C3X+z1+Z4J.q2)));return this;}
);p(w4I,function(a){var b=v(this);b[(Z4J.q2+w8+Z9X)](this[E0][E0],B(b,a,(Z4J.q2+H0J+Z4J.i0I)));return this;}
);p((Z4J.o6I+O2+Z4J.n6I+l2X+Z4J.q2+w8+S3I+Z4J.i0I+G2X),function(a){var b=v(this);b[R0J](this[E0],B(b,a,(u9+Z9X)));return this;}
);p((o1+l2X+w8+Z4J.q2+m0I+I6I+G2X),function(a){var b=v(this);b[V9I](this[E0][E0],B(b,a,V9I,N0));return this;}
);p((C6X+l2X+w8+Z4J.q2+Z4J.z5I+Y0X+G2X),function(a){var b=v(this);b[V9I](this[0],B(b,a,"remove",this[0].length));return this;}
);p(T3I,function(a,b){var p0X="nl";a?d[T3J](a)&&(b=a,a=(S3I+p0X+S3I+Z4J.F1I+Z4J.q2)):a=(S3I+p0X+Y0o+Z4J.q2);v(this)[a](this[E0][E0],b);return this;}
);p((G1J+l2X+Z4J.q2+o6+G2X),function(a){v(this)[z3X](this[E0],a);return this;}
);p(w0J,function(a,b){return f[(J8J+B4)][a][b];}
);p((J8J+Z4J.q2+Z4J.n6I+G2X),function(a,b){var f6X="les";if(!a)return f[(J8J+Z4J.q2+Z4J.n6I)];if(!b)return f[(c8I+S3I+f6X)][a];f[G0I][a]=b;return this;}
);d(q)[t7](R3,function(a,b,c){var C0o="ile";(w8+Z4J.i0I)===a[(i1X+Z4J.n6I+k6I+Z4J.Y8+Z9J)]&&c&&c[(c8I+C0o+Z4J.n6I)]&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](c[(b9+m0I+Z4J.n6I)],function(a,b){f[(b9+Z4J.z5I+Z4J.q2+Z4J.n6I)][a]=b;}
);}
);f.error=function(a,b){var Q5J="bles",q5X="atat",h0X="://",w8I="ps";throw b?a+(W4J+o3+u2+W4J+o5I+Z4J.w1I+C3X+W4J+S3I+Z4J.F1I+c8I+Z4J.w1I+Z4J.o6I+o5I+n9+Z4J.w1I+Z4J.F1I+p5X+k6I+Z4J.z5I+J5I+u1+W4J+Z4J.o6I+Z4J.q2+c8I+Z4J.q2+Z4J.o6I+W4J+Z4J.i0I+Z4J.w1I+W4J+y3I+E2I+w8I+h0X+w8+q5X+Z4J.Y8+Q5J+Z4J.l0X+Z4J.F1I+Z4J.q2+Z4J.i0I+w0X+Z4J.i0I+Z4J.F1I+w0X)+b:a;}
;f[z4J]=function(a,b,c){var e,l,f,b=d[(Z4J.q2+z0J+I6I+F9X)]({label:(Z4J.z5I+Z4J.w2+w7),value:"value"}
,b);if(d[(S3I+Z4J.n6I+T0)](a)){e=0;for(l=a.length;e<l;e++)f=a[e],d[(r9X+i1+l7I+Y0o+s1+Z4J.c4X+K3X)](f)?c(f[b[o0X]]===h?f[b[(Z4J.z5I+Z4J.w2+w7)]]:f[b[(o0X)]],f[b[s0I]],e):c(f,f,e);}
else e=0,d[s8X](a,function(a,b){c(b,a,e);e++;}
);}
;f[(Z4J.n6I+Z4J.Y8+p1+x1+w8)]=function(a){return a[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+N4+Z4J.q2)](/\./g,F6X);}
;f[r2]=function(a,b,c,e,l){var L4X="readAsDataURL",c0o="<i>Uploading file</i>",L0J="Te",k=new FileReader,w=E0,i=[];a.error(b[(r4I+Z4J.q2)],"");e(b,b[(b9+Z4J.z5I+Z4J.q2+i0o+b4+L0J+z0J+Z4J.i0I)]||c0o);k[(t7+Z4J.z5I+Z4J.w1I+b4)]=function(){var r2J="rro",u0X="son",R2J="reS",R1I="ied",Z1X="No",O3X="ja",d7J="ajax",U4I="aja",V2X="ajaxData",I1J="uploadField",P4I="ploa",g=new FormData,h;g[w1X]((M1J+s4),(Z4J.R0I+P4I+w8));g[(Z4J.Y8+X1I+w8)](I1J,b[i1X]);g[(f1+Z4J.F1I+w8)](r2,c[w]);b[V2X]&&b[(Z4J.Y8+Y9I+Z)](g);if(b[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)])h=b[(Z4J.Y8+Y9I)];else if((x8+Z4J.o6I+B8J)===typeof a[Z4J.n6I][(U4I+z0J)]||d[T3J](a[Z4J.n6I][d7J]))h=a[Z4J.n6I][(Z4J.Y8+O3X+z0J)];if(!h)throw (Z1X+W4J+U4X+O3X+z0J+W4J+Z4J.w1I+Q8I+s4+W4J+Z4J.n6I+k6I+Z4J.q2+Z4J.V2+t1J+R1I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8+W4J+k6I+U4J+Z8I+F6X+S3I+Z4J.F1I);(Z4J.n6I+Z4J.i0I+Z4J.o6I+B8J)===typeof h&&(h={url:h}
);var z=!N0;a[t7]((k6I+R2J+Z4J.R0I+N8+o5I+Z9X+Z4J.l0X+j3+X7+F4+D7+k6I+Z4J.z5I+y5J),function(){z=!E0;return !N0;}
);d[(Z4J.Y8+Y9I)](d[(Z4J.q2+z0+F9X)]({}
,h,{type:(E7I+x8),data:g,dataType:(Z4J.i5I+u0X),contentType:!1,processData:!1,xhr:function(){var Q0J="onloadend",g7="ogr",T6J="pload",D4X="axSe",a=d[(Y7+D4X+Z4J.i0I+t1I+x3X)][(z0J+y3I+Z4J.o6I)]();a[(Z4J.R0I+T6J)]&&(a[(s3J+K8I+Z4J.Y8+w8)][(Z4J.w1I+Z4J.F1I+G0J+g7+Z4J.q2+Z4J.n6I+Z4J.n6I)]=function(a){var v1I="toFixed",r5X="loaded",k7I="lengthComputable";a[k7I]&&(a=(100*(a[r5X]/a[(Q3I+Z4J.i0I+Z4J.Y8+Z4J.z5I)]))[v1I](0)+"%",e(b,1===c.length?a:w+":"+c.length+" "+a));}
,a[r2][Q0J]=function(){e(b);}
);return a;}
,success:function(e){var I8="aURL",q6="adAsD",X0X="cc";a[(t9J)]("preSubmit.DTE_Upload");if(e[z0o]&&e[(c8I+S3I+Z4J.q2+Z0I+u3+U9X+Z4J.w1I+Z4J.o6I+Z4J.n6I)].length)for(var e=e[(v7+w8+u3+r2J+B9X)],g=0,h=e.length;g<h;g++)a.error(e[g][i1X],e[g][t9I]);else e.error?a.error(e.error):!e[r2]||!e[(r2)][(S3I+w8)]?a.error(b[(g7X+o5I+Z4J.q2)],(U4X+W4J+Z4J.n6I+Q2+l9J+Z4J.o6I+W4J+Z4J.q2+Z4J.o6I+Z4J.o6I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+X0X+Z4J.R0I+U9X+Z4J.q2+w8+W4J+j0J+y3I+S3I+Z4J.z5I+Z4J.q2+W4J+Z4J.R0I+k6I+Z4J.z5I+h6+w8+B8J+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+S3I+m0I)):(e[G0I]&&d[(e9I+y3I)](e[G0I],function(a,b){f[(J8J+B4)][a]=b;}
),i[(l2I+Z4J.n6I+y3I)](e[(s3J+Z4J.z5I+Z4J.w1I+Z4J.Y8+w8)][J1J]),w<c.length-1?(w++,k[(C3X+q6+Z4J.Y8+Z4J.i0I+I8)](c[w])):(l[(Z4J.V2+u7X)](a,i),z&&a[f0o]()));}
,error:function(){var O5J="rre";a.error(b[i1X],(U4X+W4J+Z4J.n6I+Q2+g0J+Q2+W4J+Z4J.q2+r2J+Z4J.o6I+W4J+Z4J.w1I+Z4J.V2+v5J+O5J+w8+W4J+j0J+h1I+m0I+W4J+Z4J.R0I+k6I+K8I+Z4J.Y8+H0J+Z4J.F1I+Z8I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+G6J+Z4J.q2));}
}
));}
;k[L4X](c[E0]);}
;f.prototype._constructor=function(a){var M2J="initComplete",W8J="trol",C3J="xhr",w5J="nT",O1J="init.dt.dte",R9X="body_content",c7="oo",a6J="form_content",F3="formC",M0="events",m6I="reat",S2I="TableTools",E1J='but',y5I='fo',o2X='_i',D9J='orm',z2J='error',L4='_co',q9='rm',z1X="ter",V9J="footer",K8J='oo',k0I='nt',H1I='conte',b3X='ody',t7I='rocess',c9J="legacyAjax",z7I="rmOption",V2J="dataSources",Z6="Url",Y0="domTab",y7="dels";a=d[H3I](!E0,{}
,f[A2],a);this[Z4J.n6I]=d[(X0J+w8)](!E0,{}
,f[(Z8J+y7)][(Z4J.n6I+Z4J.A4+t1I+x3X)],{table:a[(Y0+m0I)]||a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)],dbTable:a[m3]||c3X,ajaxUrl:a[(Z4J.Y8+Y9I+Z6)],ajax:a[(Z4J.Y8+Y9I)],idSrc:a[(S3I+w8+R0+Z4J.o6I+Z4J.V2)],dataSource:a[(w8+S7+W+l3)]||a[Q2X]?f[V2J][g9]:f[V2J][z6I],formOptions:a[(s8+z7I+Z4J.n6I)],legacyAjax:a[c9J]}
);this[(Q4J+Z4J.Y8+t8+Z4J.q2+Z4J.n6I)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,f[(Q4J+L1+Z4J.q2+Z4J.n6I)]);this[(D1X+Z4J.F1I)]=a[(S3I+G5+Z4J.F1I)];var b=this,c=this[T4];this[(w8+S7)]={wrapper:d('<div class="'+c[(C9X+b4I+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+H7J+t7I+T7I+v9I+P0J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(G0J+t0+Z4J.q2+Z4J.n6I+C8)][(S3I+Z4J.F1I+w8+M3J+z1+u2)]+(Z1I+m2I+v3+B6I+m2I+v3+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+b3X+k6J+B2I+Z2J+i8X)+c[Q5X][a3J]+(b0X+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+d9I+m2I+F2J+p4I+H1I+k0I+k6J+B2I+t8J+n9J+n9J+i8X)+c[(N8+i2X)][t0J]+(t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+K8J+c0X+k6J+B2I+t8J+e0J+i8X)+c[V9J][(j0J+Z4J.o6I+e0+h1X)]+'"><div class="'+c[(c8I+Z4J.w1I+Z4J.w1I+z1X)][(Z4J.V2+Z4J.w1I+g3X+S9I)]+(t3X+m2I+v3+o9+m2I+v3+y2))[0],form:d((x5+c2I+d9I+q9+q2X+m2I+h1+q4I+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+k6J+B2I+U9+n9J+i8X)+c[(y0o)][(Z4J.i0I+L9)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+L4+v9I+j2J+v9I+c0X+k6J+B2I+U9+n9J+i8X)+c[y0o][t0J]+(t3X+c2I+Q6J+A9I+y2))[0],formError:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+d9I+q9+p4I+z2J+k6J+B2I+P7I+b6+n9J+i8X)+c[(c8I+Z4J.w1I+Z4J.o6I+o5I)].error+(I0J))[0],formInfo:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+o2X+v9I+y5I+k6J+B2I+P7I+o5X+i8X)+c[(s8+Z4J.o6I+o5I)][(S3I+l1X+Z4J.w1I)]+(I0J))[0],header:d('<div data-dte-e="head" class="'+c[J0I][(j0J+Z4J.o6I+e0+k6I+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+Z2J+i8X)+c[J0I][(f2J+Z4J.F1I+I6I+g3X)]+(t3X+m2I+v3+y2))[0],buttons:d((x5+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+p4I+E1J+Z0X+v9I+n9J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(y0o)][w4]+'"/>')[0]}
;if(d[(c8I+Z4J.F1I)][(w8+Z4J.Y8+B7+X6+G1I+Z4J.q2)][(W+N8+m0I+X6+Z4J.w1I+s3)]){var e=d[(c8I+Z4J.F1I)][g9][S2I][A5X],l=this[(D7I+B0o+Z4J.F1I)];d[(s8X)]([(Z4J.V2+m6I+Z4J.q2),R0J,(Z4J.o6I+Z4J.q2+F2X)],function(a,b){var r7X="sButtonText";e[(u9+Z9X+x2J)+b][r7X]=l[b][g8];}
);}
d[(J5I+O9J)](a[(M0)],function(a,c){b[t7](a,function(){var l8I="shift",a=Array.prototype.slice.call(arguments);a[l8I]();c[(Z4J.Y8+N0J+n2J)](b,a);}
);}
);var c=this[(Z6J)],k=c[(j0J+k8I+k6I+Q2)];c[(F3+t7+N5X+Z4J.i0I)]=t(a6J,c[(c8I+Z4J.w1I+t6X)])[E0];c[(c8I+c7+Z4J.i0I+Z4J.q2+Z4J.o6I)]=t(S1J,k)[E0];c[Q5X]=t((N8+Z4J.w1I+w8+Z4J.g7I),k)[E0];c[J9J]=t(R9X,k)[E0];c[(G0J+t0+Z4J.q2+t8+Y0o+Z8I)]=t((k6I+Z4J.o6I+t0+Z4J.q2+Z4J.n6I+n5+Z4J.F1I+Z8I),k)[E0];a[Y8I]&&this[(Z4J.Y8+N9I)](a[Y8I]);d(q)[(Z4J.w1I+Z4J.F1I)](O1J,function(a,c){b[Z4J.n6I][Q2X]&&c[(w5J+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(n6+Z4J.i0I)](E0)&&(c[(F4+u9+S3I+D6J)]=b);}
)[(Z4J.w1I+Z4J.F1I)]((C3J+Z4J.l0X+w8+Z4J.i0I),function(a,c,e){e&&(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]&&c[(w5J+Z4J.w2+m0I)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+l3)])[R5](E0))&&b[(L6J+Q8I+J5X+D7+k6I+w8+Z4J.Y8+Z4J.i0I+Z4J.q2)](e);}
);this[Z4J.n6I][(H0J+A9X+y3+G4X+Z4J.w1I+Z4J.F1I+W8J+Z4J.z5I+Z4J.q2+Z4J.o6I)]=f[(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][a[(w8+r9X+k6I+Z4J.z5I+Z4J.Y8+Z4J.g7I)]][(S3I+Z4J.F1I+S3I+Z4J.i0I)](this);this[i2](M2J,[]);}
;f.prototype._actionClass=function(){var L6X="oin",W9X="eCl",T6I="actions",a=this[T4][T6I],b=this[Z4J.n6I][(d9X+t7)],c=d(this[(w8+S7)][a3J]);c[(Z4J.o6I+i2J+g0J+W9X+Z4J.Y8+t8)]([a[d0I],a[R0J],a[(Z4J.o6I+u9X)]][(Z4J.i5I+L6X)](W4J));d0I===b?c[d8J](a[(m3J+R5I+Z4J.q2)]):(Z4J.q2+w8+Z9X)===b?c[d8J](a[(Z4J.q2+o6)]):(Z4J.o6I+Q8+Z4J.w1I+l9J)===b&&c[(Z4J.Y8+w8+w8+X7J+Z1+Z4J.n6I)](a[(J8I+a0X)]);}
;f.prototype._ajax=function(a,b,c){var B4J="param",J2I="rep",d1J="url",H7="Of",q8I="indexOf",c7J="axUr",H8X="ction",d3X="sF",s6X="lain",a8X="idS",U3I="ajaxUrl",G3="so",b0="PO",e={type:(b0+R0+X6),dataType:(Z4J.i5I+G3+Z4J.F1I),data:null,error:c,success:function(a,c,e){var A7I="statu";204===e[(A7I+Z4J.n6I)]&&(a={}
);b(a);}
}
,l;l=this[Z4J.n6I][V8J];var f=this[Z4J.n6I][(Z4J.Y8+Z4J.i5I+F5)]||this[Z4J.n6I][U3I],g=(R0J)===l||(Z4J.o6I+Z4J.q2+F2X)===l?y(this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+Z4J.q2+Z0I+Z4J.n6I)],(a8X+k5X)):null;d[(S3I+Z4J.n6I+U4X+W1I)](g)&&(g=g[W6I](","));d[(S3I+x7X+s6X+s1+N8+A2J+Z4J.i0I)](f)&&f[l]&&(f=f[l]);if(d[(S3I+d3X+Z4J.R0I+Z4J.F1I+H8X)](f)){var h=null,e=null;if(this[Z4J.n6I][U3I]){var J=this[Z4J.n6I][(Y7+c7J+Z4J.z5I)];J[(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2)]&&(h=J[l]);-1!==h[q8I](" ")&&(l=h[z5X](" "),e=l[0],h=l[1]);h=h[(S7X)](/_id_/,g);}
f(e,h,a,b,c);}
else "string"===typeof f?-1!==f[(S3I+F9X+p5+H7)](" ")?(l=f[(H2+r7)](" "),e[(O4I+g6I)]=l[0],e[(Z4J.R0I+G6X)]=l[1]):e[(Z4J.R0I+Z4J.o6I+Z4J.z5I)]=f:e=d[(X0J+w8)]({}
,e,f||{}
),e[(Z4J.R0I+G6X)]=e[d1J][(J2I+Z4J.z5I+Z4J.Y8+Z9J)](/_id_/,g),e.data&&(c=d[(S3I+Z4J.n6I+X5+M7X+p9X+Z4J.F1I)](e.data)?e.data(a):e.data,a=d[(S3I+Z4J.n6I+o3+Z4J.R0I+Z4J.F1I+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)](e.data)&&c?c:d[(Z4J.q2+z0J+I6I+Z4J.F1I+w8)](!0,a,c)),e.data=a,"DELETE"===e[(Z4J.i0I+O7X+Z4J.q2)]&&(a=d[B4J](e.data),e[(Z4J.R0I+G6X)]+=-1===e[(d1J)][(S3I+Z4J.F1I+y9I+z0J+H7)]("?")?"?"+a:"&"+a,delete  e.data),d[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)](e);}
;f.prototype._assembleMain=function(){var a=this[(Z4J.x4I+o5I)];d(a[a3J])[(S6X+Z4J.q2+Z4J.F1I+w8)](a[(W7X+y9I+Z4J.o6I)]);d(a[(S1J+Q2)])[(Z4J.Y8+N0J+q8+w8)](a[M6X])[w1X](a[(N8+n4J+H5)]);d(a[J9J])[w1X](a[i0X])[w1X](a[(s8+t6X)]);}
;f.prototype._blur=function(){var o4I="eBlur",a=this[Z4J.n6I][M9];!N0!==this[(N9J+g0J+Z4J.q2+g3X)]((k6I+Z4J.o6I+o4I))&&((Z4J.n6I+u0J+P)===a[z5]?this[(Z4J.n6I+Z4J.R0I+N8+P)]():d5I===a[z5]&&this[w3X]());}
;f.prototype._clearDynamicInfo=function(){var f7J="eCla",a=this[T4][(c8I+e6J+Z4J.z5I+w8)].error,b=this[Z4J.n6I][Y8I];d("div."+a,this[Z6J][(j0J+k8I+h1X)])[(Z4J.o6I+Z4J.q2+o5I+Z4J.w1I+g0J+f7J+t8)](a);d[s8X](b,function(a,b){b.error("")[r8I]("");}
);this.error("")[(o5I+Z4J.q2+Z4J.n6I+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]("");}
;f.prototype._close=function(a){var u5X="closeIcb",h0o="eIcb",J3X="seC",d8I="closeC",F5I="preClose";!N0!==this[(G9+Z4J.i0I)](F5I)&&(this[Z4J.n6I][T0o]&&(this[Z4J.n6I][(d8I+N8)](a),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+J3X+N8)]=c3X),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+Z4J.n6I+h0o)]&&(this[Z4J.n6I][u5X](),this[Z4J.n6I][u5X]=c3X),d(Q5X)[(d6+c8I)]((c8I+Z4J.w1I+Z4J.V2+Z4J.R0I+Z4J.n6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+c8I+P2+Z4J.n6I)),this[Z4J.n6I][R8J]=!N0,this[i2]((r0J+u1)));}
;f.prototype._closeReg=function(a){this[Z4J.n6I][T0o]=a;}
;f.prototype._crudArgs=function(a,b,c,e){var V3J="ain",G7X="mOp",Q6="oolea",G2I="Obj",l=this,f,g,i;d[(r9X+i1+Z4J.z5I+Z4J.Y8+Y0o+G2I+K3X)](a)||((N8+Q6+Z4J.F1I)===typeof a?(i=a,a=b):(f=a,g=b,i=c,a=e));i===h&&(i=!E0);f&&l[(t1I+D3I)](f);g&&l[(N8+n4J+Z4J.i0I+t7+Z4J.n6I)](g);return {opts:d[H3I]({}
,this[Z4J.n6I][(a8I+G7X+Z4J.i0I+Q7X+Z4J.F1I+Z4J.n6I)][(o5I+V3J)],a),maybeOpen:function(){i&&l[(Z4J.w1I+A6X)]();}
}
;}
;f.prototype._dataSource=function(a){var u6X="apply",H7X="dataSource",t4="ift",b=Array.prototype.slice.call(arguments);b[(w5+t4)]();var c=this[Z4J.n6I][H7X][a];if(c)return c[u6X](this,b);}
;f.prototype._displayReorder=function(a){var S1="layed",M8="Or",O4="det",K6X="hildr",K0o="includeFields",d9="eFi",B7J="nclud",E1X="formCon",b=d(this[(w8+Z4J.w1I+o5I)][(E1X+Z4J.i0I+Z4J.q2+g3X)]),c=this[Z4J.n6I][(b9+Z4J.q2+Z0I+Z4J.n6I)],e=this[Z4J.n6I][q0X];a?this[Z4J.n6I][(S3I+B7J+d9+w7+w5I)]=a:a=this[Z4J.n6I][K0o];b[(Z4J.V2+K6X+Z4J.q2+Z4J.F1I)]()[(O4+N4+y3I)]();d[s8X](e,function(e,k){var g=k instanceof f[(v1X+Z0I)]?k[(Z4J.F1I+Z4J.Y8+A1J)]():k;-N0!==d[a4](g,a)&&b[w1X](c[g][(Z4J.F1I+Z4J.w1I+y9I)]());}
);this[(F4+Z4J.q2+g0J+q8+Z4J.i0I)]((w8+r9X+E0I+M8+y9I+Z4J.o6I),[this[Z4J.n6I][(w8+r9X+k6I+S1)],this[Z4J.n6I][(N4+Z4J.i0I+Q7X+Z4J.F1I)],b]);}
;f.prototype._edit=function(a,b,c){var j5="ock",b9X="tyl",k8J="modifi",e=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Z4J.n6I)],l=[],f;this[Z4J.n6I][Z3J]=b;this[Z4J.n6I][(k8J+Q2)]=a;this[Z4J.n6I][(Z4J.Y8+m1+Z4J.F1I)]="edit";this[Z6J][y0o][(Z4J.n6I+b9X+Z4J.q2)][p6J]=(N8+Z4J.z5I+j5);this[(F4+Z4J.Y8+i8J+s4+n1+Z4J.n6I)]();d[(Z4J.q2+K0J)](e,function(a,c){var t8I="pus",p7J="multiIds";c[(p6+t1I+v0+Z4J.q2+u1+Z4J.i0I)]();f=!0;d[s8X](b,function(b,e){var W7J="lFrom";if(e[(b9+w7+w5I)][a]){var d=c[(e7J+W7J+N8J+Z4J.i0I+Z4J.Y8)](e.data);c[C2J](b,d!==h?d:c[(D1I)]());e[y0X]&&!e[y0X][a]&&(f=!1);}
}
);0!==c[p7J]().length&&f&&l[(t8I+y3I)](a);}
);for(var e=this[(i5X+Z4J.o6I)]()[u4I](),g=e.length;0<=g;g--)-1===d[a4](e[g],l)&&e[(Z4J.n6I+k6I+Z4J.z5I+S3I+Z9J)](g,1);this[L3J](e);this[Z4J.n6I][X5J]=d[H3I](!0,{}
,this[d4I]());this[(G9+Z4J.i0I)]("initEdit",[y(b,"node")[0],y(b,"data")[0],a,c]);this[(R0o+q8+Z4J.i0I)]((S3I+N1X+Z4J.i0I+R3J+Z4J.z5I+Z4J.i0I+S3I+x7J+Z9X),[b,a,c]);}
;f.prototype._event=function(a,b){var n5X="result",l7J="Event";b||(b=[]);if(d[(S3I+T8X+U9X+y3)](a))for(var c=0,e=a.length;c<e;c++)this[(F4+c5+q8+Z4J.i0I)](a[c],b);else return c=d[l7J](a),d(this)[g4I](c,b),c[n5X];}
;f.prototype._eventName=function(a){var r8X="substri",n9I="ase",e4="wer",p6X="oL";for(var b=a[(A9X+S3I+Z4J.i0I)](" "),c=0,e=b.length;c<e;c++){var a=b[c],d=a[(o5I+z1+O9J)](/^on([A-Z])/);d&&(a=d[1][(Z4J.i0I+p6X+Z4J.w1I+e4+G4X+n9I)]()+a[(r8X+Z4J.F1I+Z8I)](3));b[c]=a;}
return b[W6I](" ");}
;f.prototype._fieldNames=function(a){return a===h?this[(c8I+s0J+w5I)]():!d[S8](a)?[a]:a;}
;f.prototype._focus=function(a,b){var F7I="foc",s6I="setFocus",a2="jq",c=this,e,l=d[(o5I+Z4J.Y8+k6I)](a,function(a){var e1X="ri";return (x8+e1X+M5X)===typeof a?c[Z4J.n6I][(b9+Q9X+Z4J.n6I)][a]:a;}
);y9X===typeof b?e=l[b]:b&&(e=E0===b[(h5J+Z4J.q2+z0J+s1+c8I)]((a2+J0o))?d((I1+Z4J.l0X+j3+X6+u3+W4J)+b[(C3X+k6I+Z4J.z5I+N4+Z4J.q2)](/^jq:/,g0I)):this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)][b]);(this[Z4J.n6I][s6I]=e)&&e[(F7I+Z4J.R0I+Z4J.n6I)]();}
;f.prototype._formOptions=function(a){var k5="oseIc",y6J="olean",V8X="titl",a4I="nBa",T7="blurOnBackground",P9I="Retu",s5J="nR",t4J="eturn",R5X="submitOnBlur",g6X="itO",k1X="closeOnComplete",K4I="Com",D0="On",q5="Inlin",b=this,c=N++,e=(Z4J.l0X+w8+Z4J.i0I+Z4J.q2+q5+Z4J.q2)+c;a[(Z4J.V2+h9J+Z4J.q2+D0+K4I+M7I+Z4J.q2+I6I)]!==h&&(a[Q4]=a[k1X]?d5I:D9I);a[(V4+N8+o5I+g6X+Z4J.F1I+y4X+Z4J.z5I+g5J)]!==h&&(a[z5]=a[R5X]?(Z4J.n6I+Z4J.R0I+l6X):d5I);a[(V4+l6X+s1+Z4J.F1I+v0+t4J)]!==h&&(a[(Z4J.w1I+s5J+t4J)]=a[(V3I+Z9X+D0+P9I+Z4J.o6I+Z4J.F1I)]?f0o:D9I);a[T7]!==h&&(a[(Z4J.w1I+a4I+z9J+R3X+O3J+w8)]=a[(N8+U4J+Z4J.o6I+D0+y4X+Z4J.Y8+Z4J.V2+n7I+Z4J.w1I+O3J+w8)]?T6:(w0I+Z4J.q2));this[Z4J.n6I][(u9+g6X+Q8I+Z4J.n6I)]=a;this[Z4J.n6I][b5X]=c;if((x8+M8J)===typeof a[j2]||(c8I+O3J+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)===typeof a[j2])this[(V8X+Z4J.q2)](a[(t1I+q3I+Z4J.q2)]),a[(Z4J.i0I+Z9X+m0I)]=!E0;if((x8+Z4J.o6I+Y0o+Z8I)===typeof a[r8I]||Z4J.T5J===typeof a[r8I])this[r8I](a[r8I]),a[r8I]=!E0;(G8X+y6J)!==typeof a[(L5X+Z4J.i0I+H5)]&&(this[(N8+P2X+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a[(L5X+B9I+Z4J.n6I)]),a[(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)]=!E0);d(q)[(Z4J.w1I+Z4J.F1I)]("keydown"+e,function(c){var e5J="keyCo",a8J="pre",r0X="TE_For",W9J="are",p3I="onEsc",o2="entDe",U0J="nRet",g3="toLowerCase",C6I="lem",Q0X="tiveE",e=d(q[(Z4J.Y8+Z4J.V2+Q0X+C6I+q8+Z4J.i0I)]),f=e.length?e[0][L0o][g3]():null;d(e)[(Z4J.Y8+E2I+Z4J.o6I)]((y2J));if(b[Z4J.n6I][(H0J+Z4J.n6I+M7I+Z4J.Y8+j1+w8)]&&a[(Z4J.w1I+U0J+g5J+Z4J.F1I)]==="submit"&&c[D2J]===13&&f===(X4X+n4J)){c[(k6I+Z4J.o6I+Z4J.q2+g0J+o2+c8I+b7X)]();b[f0o]();}
else if(c[D2J]===27){c[F1]();switch(a[p3I]){case (B2X+Z4J.R0I+Z4J.o6I):b[(B2X+Z4J.R0I+Z4J.o6I)]();break;case (Z4J.V2+Z4J.z5I+j6):b[(Q4J+j6)]();break;case "submit":b[(V4+N8+o5I+S3I+Z4J.i0I)]();}
}
else e[(k6I+W9J+Z4J.F1I+Z4J.i0I+Z4J.n6I)]((Z4J.l0X+j3+r0X+o5I+b5I+u3X)).length&&(c[D2J]===37?e[(a8J+g0J)]((u0o+Z4J.i0I+t7))[(s8+Z4J.V2+Z4J.R0I+Z4J.n6I)]():c[(e5J+w8+Z4J.q2)]===39&&e[(c6X)]("button")[(O6I)]());}
);this[Z4J.n6I][(Z4J.V2+Z4J.z5I+k5+N8)]=function(){d(q)[(Z4J.w1I+f4)]((u3I+Z4J.q2+Z4J.g7I+Z4J.x4I+j0J+Z4J.F1I)+e);}
;return e;}
;f.prototype._legacyAjax=function(a,b,c){var A9="Aj",y9="gac";if(this[Z4J.n6I][(m0I+y9+Z4J.g7I+A9+Z4J.Y8+z0J)])if((Z4J.n6I+Z4J.q2+Z4J.F1I+w8)===a)if(d0I===b||(Z4J.q2+o6)===b){var e;d[(Z4J.q2+N4+y3I)](c.data,function(a){var f6J="cy",y3X="uppor";if(e!==h)throw (t6+u2+n4I+g6+i0J+F6X+Z4J.o6I+O2+W4J+Z4J.q2+w8+X3+Z4J.F1I+Z8I+W4J+S3I+Z4J.n6I+W4J+Z4J.F1I+T8+W4J+Z4J.n6I+y3X+I6I+w8+W4J+N8+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+Z4J.z5I+Z4J.q2+Z8I+Z4J.Y8+f6J+W4J+U4X+Y9I+W4J+w8+Z4J.Y8+B7+W4J+c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I);e=a;}
);c.data=c.data[e];(R0J)===b&&(c[(S3I+w8)]=e);}
else c[J1J]=d[(o5I+e0)](c.data,function(a,b){return b;}
),delete  c.data;else c.data=!c.data&&c[o1]?[c[(k7X+j0J)]]:[];}
;f.prototype._optionsUpdate=function(a){var b=this;a[(Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+h3X)]&&d[(J5I+O9J)](this[Z4J.n6I][Y8I],function(c){if(a[(V7+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)][c]!==h){var e=b[(b9+Q9X)](c);e&&e[j5J]&&e[(Z4J.R0I+k6I+Z4J.C6J+I6I)](a[V6X][c]);}
}
);}
;f.prototype._message=function(a,b){var O9X="tabl";Z4J.T5J===typeof b&&(b=b(this,new r[m7J](this[Z4J.n6I][(O9X+Z4J.q2)])));a=d(a);!b&&this[Z4J.n6I][R8J]?a[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I)]()[O7I](function(){a[(E4J+t3J)](g0I);}
):b?this[Z4J.n6I][R8J]?a[l8X]()[(y3I+f6)](b)[(c8I+Z4J.Y8+w8+Z4J.q2+s3X)]():a[(h0J+Z4J.z5I)](b)[(Z4J.V2+t8)]((w8+N9X+Z4J.g7I),(N8+Z4J.z5I+Z4J.w1I+z9J)):a[(y3I+Z4J.i0I+o5I+Z4J.z5I)](g0I)[v3J]((S0+M7I+Z4J.Y8+Z4J.g7I),(D9I));}
;f.prototype._multiInfo=function(){var U7="oSh",t1X="ields",a=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w5I)],b=this[Z4J.n6I][(Y0o+Z4J.V2+Z4J.z5I+Z4J.R0I+w8+Z4J.q2+o3+t1X)],c=!0;if(b)for(var e=0,d=b.length;e<d;e++)a[b[e]][q7X]()&&c?(a[b[e]][(p6+t1I+x1+Z4J.F1I+c8I+Z4J.w1I+x4+o0I)](c),c=!1):a[b[e]][(o5I+g8J+Z4J.i0I+I7J+c8I+U7+Z4J.w1I+g9I)](!1);}
;f.prototype._postopen=function(a){var q1I="iI",K0X="_mul",s2="focus.editor-focus",a9X="ernal",w9J="submit.editor-internal",E5X="Focus",U6="oll",b=this,c=this[Z4J.n6I][(p6J+G4X+Z4J.w1I+Z4J.F1I+U8I+U6+Q2)][(L7J+Q8I+g5J+Z4J.q2+E5X)];c===h&&(c=!E0);d(this[(w8+S7)][(s8+t6X)])[t9J](w9J)[(Z4J.w1I+Z4J.F1I)]((Z4J.n6I+u0J+o5I+Z9X+Z4J.l0X+Z4J.q2+w8+S3I+Q3I+Z4J.o6I+F6X+S3I+Z4J.F1I+Z4J.i0I+a9X),function(a){a[F1]();}
);if(c&&(e2J===a||(L5X+e6)===a))d(Q5X)[t7](s2,function(){var o7="setF",w9I="Foc",h0="iveEl",g7J="veElem";0===d(q[(d9X+g7J+Z4J.q2+Z4J.F1I+Z4J.i0I)])[(k6I+Z4J.Y8+Z4J.o6I+S9I+Z4J.n6I)]((Z4J.l0X+j3+X6+u3)).length&&0===d(q[(M1J+h0+Z4J.q2+o5I+q8+Z4J.i0I)])[p7I](".DTED").length&&b[Z4J.n6I][(Z4J.n6I+Z4J.q2+Z4J.i0I+w9I+q5J)]&&b[Z4J.n6I][(o7+P2+Z4J.n6I)][O6I]();}
);this[(K0X+Z4J.i0I+q1I+Z4J.F1I+c8I+Z4J.w1I)]();this[i2]((Z4J.w1I+A6X),[a,this[Z4J.n6I][(d9X+Z4J.w1I+Z4J.F1I)]]);return !E0;}
;f.prototype._preopen=function(a){var Z8="mic",O2X="arDyna";if(!N0===this[i2]((G0J+Z4J.q2+s1+k6I+Z4J.q2+Z4J.F1I),[a,this[Z4J.n6I][(M1J+s4)]]))return this[(W4I+Z4J.q2+O2X+Z8+x1+l1X+Z4J.w1I)](),!N0;this[Z4J.n6I][R8J]=a;return !E0;}
;f.prototype._processing=function(a){var c6="oce",p4="div.DTE",u8X="veC",Q1I="dCla",N4I="active",b=d(this[(w8+Z4J.w1I+o5I)][(i4I+Z4J.Y8+b4I+Z4J.o6I)]),c=this[(w8+S7)][y2X][e1J],e=this[T4][(p4J+N8I+B8J)][N4I];a?(c[p6J]=h3J,b[(b4+w8+G4X+Z4J.z5I+L1)](e),d((w8+P9X+Z4J.l0X+j3+X6+u3))[(b4+Q1I+t8)](e)):(c[p6J]=(o8X+Z4J.F1I+Z4J.q2),b[(Z4J.o6I+Z4J.q2+Z8J+u8X+Z4J.z5I+Z4J.Y8+t8)](e),d(p4)[R](e));this[Z4J.n6I][(G0J+Z4J.w1I+Z9J+Z4J.n6I+l6J+Z8I)]=a;this[i2]((k6I+Z4J.o6I+c6+t8+S3I+M5X),[a]);}
;f.prototype._submit=function(a,b,c,e){var v5X="_ajax",m7="_proces",O0="eSubm",A8J="acy",n3X="plet",a6X="_proce",o8="nge",F6I="llIfC",I9I="aF",q9X="ctD",J9I="_fnSetObje",f=this,k,g=!1,i={}
,n={}
,u=r[(Z4J.q2+z0J+Z4J.i0I)][k0J][(J9I+q9X+z1+I9I+Z4J.F1I)],m=this[Z4J.n6I][Y8I],j=this[Z4J.n6I][V8J],p=this[Z4J.n6I][b5X],o=this[Z4J.n6I][z4X],q=this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+v1J)],s=this[Z4J.n6I][X5J],t=this[Z4J.n6I][M9],v=t[f0o],x={action:this[Z4J.n6I][V8J],data:{}
}
,y;this[Z4J.n6I][(m3)]&&(x[Q2X]=this[Z4J.n6I][(w8+N8+W+l3)]);if((Z4J.V2+Z4J.o6I+J5I+I6I)===j||"edit"===j)if(d[s8X](q,function(a,b){var U8J="mp",c={}
,e={}
;d[(J5I+O9J)](m,function(f,l){var w1="ny";if(b[(c8I+m1J+Z4J.n6I)][f]){var k=l[d4I](a),h=u(f),i=d[S8](k)&&f[(S3I+F9X+Z4J.q2+z0J+s1+c8I)]("[]")!==-1?u(f[(Z4J.o6I+Z4J.q2+k6I+l7I+Z4J.V2+Z4J.q2)](/\[.*$/,"")+(F6X+o5I+Z4J.Y8+w1+F6X+Z4J.V2+y4+g3X)):null;h(c,k);i&&i(c,k.length);if(j===(R0J)&&k!==s[f][a]){h(e,k);g=true;i&&i(e,k.length);}
}
}
);d[(S3I+r3X+o5I+k6I+O4I+s1+N8+Z4J.i5I+Z4J.V1I+Z4J.i0I)](c)||(i[a]=c);d[(S3I+r3X+U8J+O4I+s1+w3J+i8J)](e)||(n[a]=e);}
),"create"===j||"all"===v||(Z4J.Y8+F6I+y3I+Z4J.Y8+o8+w8)===v&&g)x.data=i;else if("changed"===v&&g)x.data=n;else{this[Z4J.n6I][V8J]=null;(Z4J.V2+K8I+u1)===t[Q4]&&(e===h||e)&&this[w3X](!1);a&&a[L5I](this);this[(a6X+Z4J.n6I+Z4J.n6I+B8J)](!1);this[(N9J+l9J+g3X)]((Z4J.n6I+F7X+C0+S7+n3X+Z4J.q2));return ;}
else(Z4J.o6I+Q8+a0X)===j&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](q,function(a,b){x.data[a]=b.data;}
);this[(T1J+P7+A8J+U4X+Y9I)]((Z4J.n6I+Z4J.q2+Z4J.F1I+w8),j,x);y=d[H3I](!0,{}
,x);c&&c(x);!1===this[i2]((k6I+Z4J.o6I+O0+Z9X),[x,j])?this[(m7+Z4J.n6I+S3I+M5X)](!1):this[v5X](x,function(c){var L2="Coun",q9J="ommi",p6I="aS",n5I="even",G0o="event",d7X="Sou",F8J="urc",S3X="eCr",W5X="taS",D1="Error",o9I="Errors",M5="acyAj",g;f[(F4+m0I+Z8I+M5+Z4J.Y8+z0J)]("receive",j,c);f[i2]((E7I+x8+R0+u0J+o5I+S3I+Z4J.i0I),[c,x,j]);if(!c.error)c.error="";if(!c[(b9+Z4J.q2+Z4J.z5I+w8+L8X+k7X+B9X)])c[z0o]=[];if(c.error||c[(g5I+o9I)].length){f.error(c.error);d[(Z4J.q2+K0J)](c[(b9+Z4J.q2+Z4J.z5I+w8+D1+Z4J.n6I)],function(a,b){var r1I="yC",c=m[b[(Z4J.F1I+Z4J.Y8+A1J)]];c.error(b[t9I]||(u3+Z4J.o6I+Z4J.o6I+u2));if(a===0){d(f[Z6J][(N8+Z4J.w1I+w8+r1I+Z4J.w1I+Z4J.F1I+I6I+Z4J.F1I+Z4J.i0I)],f[Z4J.n6I][a3J])[h2J]({scrollTop:d(c[o0o]()).position().top}
,500);c[O6I]();}
}
);b&&b[(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](f,c);}
else{var i={}
;f[(F4+w8+Z4J.Y8+W5X+Z4J.w1I+g5J+Z4J.V2+Z4J.q2)]("prep",j,o,y,c.data,i);if(j===(m3J+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)||j==="edit")for(k=0;k<c.data.length;k++){g=c.data[k];f[(R0o+q8+Z4J.i0I)]("setData",[c,g,j]);if(j==="create"){f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]((G0J+S3X+R5I+Z4J.q2),[c,g]);f[(F4+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+b8+F8J+Z4J.q2)]((Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),m,g,i);f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]([(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),"postCreate"],[c,g]);}
else if(j==="edit"){f[i2]((k6I+C3X+x7J+S3I+Z4J.i0I),[c,g]);f[(F4+w8+Z4J.Y8+B7+d7X+k5X+Z4J.q2)]((Z4J.q2+w8+S3I+Z4J.i0I),o,m,g,i);f[i2](["edit",(k6I+F8+Z4J.i0I+x7J+Z9X)],[c,g]);}
}
else if(j==="remove"){f[(F4+G0o)]("preRemove",[c]);f[e9]("remove",o,m,i);f[(F4+n5I+Z4J.i0I)](["remove",(k6I+Z4J.w1I+x8+v0+Q8+I4+Z4J.q2)],[c]);}
f[(F0X+z1+p6I+Z4J.w1I+Z4J.R0I+h8X)]((Z4J.V2+q9J+Z4J.i0I),j,o,c.data,i);if(p===f[Z4J.n6I][(Z4J.q2+w8+Z9X+L2+Z4J.i0I)]){f[Z4J.n6I][(d9X+t7)]=null;t[(Z4J.w1I+Z4J.F1I+N7J+o5I+n3X+Z4J.q2)]==="close"&&(e===h||e)&&f[(G0X+Z4J.z5I+j6)](true);}
a&&a[L5I](f,c);f[(F4+n5I+Z4J.i0I)]((Z4J.n6I+Z4J.R0I+v2X+S3I+Z4J.i0I+R0+Z4J.R0I+Z4J.V2+Z4J.V2+Z4J.q2+Z4J.n6I+Z4J.n6I),[c,g]);}
f[(F4+p4J+Y2J+l6J+Z8I)](false);f[i2]((V4+N8+P+N7J+o5I+M7I+Y0X),[c,g]);}
,function(a,c,e){var F0o="lete",n4X="itC",a5X="system";f[(R0o+q8+Z4J.i0I)]("postSubmit",[a,c,e,x]);f.error(f[k1I].error[a5X]);f[(j6J+k7X+N8I+S3I+M5X)](false);b&&b[(L7J+q5I)](f,a,c,e);f[(R0o+S9I)](["submitError",(Z4+o5I+n4X+Z4J.w1I+o5I+k6I+F0o)],[a,c,e,x]);}
);}
;f.prototype._tidy=function(a){var m4="lur",R4="bbl",P8I="omple",u8J="bmitC",Q7="roces",H8J="Sid",L9I="Server",b=this,c=this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)]?new d[(c8I+Z4J.F1I)][(Z4J.C6J+Z4J.i0I+Z4J.Y8+X6+G1I+Z4J.q2)][(q1+S3I)](this[Z4J.n6I][Q2X]):c3X,e=!N0;c&&(e=c[R5J]()[E0][(Z4J.w1I+o3+J5I+Z4J.i0I+g5J+Z4J.q2+Z4J.n6I)][(N8+L9I+H8J+Z4J.q2)]);return this[Z4J.n6I][(k6I+Q7+Z4J.n6I+B8J)]?(this[j7J]((Z4J.n6I+Z4J.R0I+u8J+P8I+Z4J.i0I+Z4J.q2),function(){if(e)c[j7J](X4,a);else setTimeout(function(){a();}
,f2I);}
),!E0):(S3I+Z4J.F1I+Z4J.z5I+Y5J)===this[(w8+S3I+Z4J.n6I+E0I)]()||(L5X+R4+Z4J.q2)===this[p6J]()?(this[j7J]((Z4J.V2+Z4J.z5I+F8+Z4J.q2),function(){var p7="mitComple";if(b[Z4J.n6I][y2X])b[(t7+Z4J.q2)]((Z4J.n6I+u0J+p7+I6I),function(b,d){if(e&&d)c[(t7+Z4J.q2)]((L4I+j0J),a);else setTimeout(function(){a();}
,f2I);}
);else setTimeout(function(){a();}
,f2I);}
)[(N8+m4)](),!E0):!N0;}
;f[(w8+L8I+Z4J.R0I+S2J+Z4J.n6I)]={table:null,ajaxUrl:null,fields:[],display:(u1I+Z8I+y3I+c0I),ajax:null,idSrc:(j3+Q0+v0+Z4J.w1I+j0J+d0X),events:{}
,i18n:{create:{button:(E0o+j0J),title:(G4X+C3X+z1+Z4J.q2+W4J+Z4J.F1I+Z5+W4J+Z4J.q2+Z4J.F1I+O3I),submit:"Create"}
,edit:{button:"Edit",title:(u3+w8+Z9X+W4J+Z4J.q2+Z4J.F1I+O3I),submit:(g8X+Z4J.C6J+Z4J.i0I+Z4J.q2)}
,remove:{button:(S0J+b6X+Z4J.q2),title:"Delete",submit:(S0J+Z4J.z5I+Z4J.q2+I6I),confirm:{_:(X0+Z4J.q2+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+Z4J.R0I+Z4J.o6I+Z4J.q2+W4J+Z4J.g7I+Z4J.w1I+Z4J.R0I+W4J+j0J+S3I+Z4J.n6I+y3I+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+Z4J.q2+Z4J.z5I+Z4J.A4+Z4J.q2+l5+w8+W4J+Z4J.o6I+O2+Z4J.n6I+J2X),1:(O9I+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+g5J+Z4J.q2+W4J+Z4J.g7I+y4+W4J+j0J+S3I+w5+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+n6X+Z4J.q2+W4J+U1X+W4J+Z4J.o6I+Z4J.w1I+j0J+J2X)}
}
,error:{system:(D4+q2X+n9J+J4J+A9I+q2X+m8I+G9J+I3I+q2X+v0J+b6+q2X+d9I+B2I+D1J+U3J+z8X+q4I+q2X+c0X+L6+O7+i8X+p4I+M9X+v9I+b9I+k6J+v0J+G9J+N3+V0o+m2I+q4I+c0X+h1+m8J+A0+Y6+v9I+m8I+c0X+E6+c0X+v9I+E6+M1+c0+H6+R9+Q6J+m8I+q2X+T7I+D8+o1X+v9I+b0o+q4I+W0J)}
,multi:{title:(R3J+Z4J.z5I+Y5+Z4J.q2+W4J+g0J+e8),info:(A1+W4J+Z4J.n6I+Z4J.q2+m0I+Z4J.V2+U2X+W4J+S3I+Z4J.i0I+Z4J.q2+S5J+W4J+Z4J.V2+t7+B7+Y0o+W4J+w8+S3I+x0I+h8+W4J+g0J+X0I+O8+W4J+c8I+u2+W4J+Z4J.i0I+y3I+r9X+W4J+S3I+n8X+Z4J.R0I+Z4J.i0I+v2I+X6+Z4J.w1I+W4J+Z4J.q2+o6+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+Z4J.n6I+Z4J.q2+Z4J.i0I+W4J+Z4J.Y8+Z4J.z5I+Z4J.z5I+W4J+S3I+I6I+o5I+Z4J.n6I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+y3I+S3I+Z4J.n6I+W4J+S3I+Z4J.F1I+W2I+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.i0I+Q0I+W4J+Z4J.n6I+Z4J.Y8+o5I+Z4J.q2+W4J+g0J+B6X+Z4J.q2+p5X+Z4J.V2+q6I+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+Z4J.Y8+k6I+W4J+y3I+Q2+Z4J.q2+p5X+Z4J.w1I+Z4J.i0I+y3I+Q2+j0J+r9X+Z4J.q2+W4J+Z4J.i0I+Q0I+Z4J.g7I+W4J+j0J+S3I+Z4J.z5I+Z4J.z5I+W4J+Z4J.o6I+i6I+S3I+Z4J.F1I+W4J+Z4J.i0I+y3I+Z4J.q2+s7X+W4J+S3I+Z4J.F1I+I1+S3I+W5I+Z4J.Y8+Z4J.z5I+W4J+g0J+B6X+B4+Z4J.l0X),restore:(D7+F9X+Z4J.w1I+W4J+Z4J.V2+y3I+Q+a5)}
,datetime:{previous:"Previous",next:(W1),months:(v8J+e1+W4J+o3+x6I+Z4J.o6I+e7I+Z4J.o6I+Z4J.g7I+W4J+g6+a4J+y3I+W4J+U4X+k6I+l2J+W4J+g6+Z4J.Y8+Z4J.g7I+W4J+r5+O3J+Z4J.q2+W4J+r5+V5I+W4J+U4X+Z4J.R0I+Z8I+q5J+Z4J.i0I+W4J+R0+M5I+N8+Z4J.q2+Z4J.o6I+W4J+s1+i8J+u0+Z4J.q2+Z4J.o6I+W4J+J1+a0X+P7J+Q2+W4J+j3+Z4J.q2+b9J+g9X+Z4J.o6I)[(H2+Z4J.z5I+Z9X)](" "),weekdays:(R0+O3J+W4J+g6+Z4J.w1I+Z4J.F1I+W4J+X6+N1J+W4J+j0I+Z4J.q2+w8+W4J+X6+l4J+W4J+o3+Z4J.o6I+S3I+W4J+R0+z1)[z5X](" "),amPm:["am",(Q9I)],unknown:"-"}
}
,formOptions:{bubble:d[(K8X+Z4J.F1I+w8)]({}
,f[(S4J+Z4J.q2+h4J)][(c8I+u2+p4X+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{title:!1,message:!1,buttons:"_basic",submit:(O9J+Z4J.Y8+M5X+u9)}
),inline:d[(p5+N5X+w8)]({}
,f[(o5I+G1+Z4J.q2+h4J)][h3],{buttons:!1,submit:(v1+Z4J.F1I+i9)}
),main:d[H3I]({}
,f[(o5I+G1+Z4J.q2+Z4J.z5I+Z4J.n6I)][(c8I+u1X+s1+k6I+G5X+Z4J.n6I)])}
,legacyAjax:!1}
;var K=function(a,b,c){d[(s8X)](b,function(b,d){var N5="aSr",e3="Fr",f=d[(g0J+Z4J.Y8+Z4J.z5I+e3+S7+N8J+B7)](c);f!==h&&C(a,d[(w8+Z4J.Y8+Z4J.i0I+N5+Z4J.V2)]())[(s8X)](function(){var C4X="hild",c3I="childNodes";for(;this[c3I].length;)this[(Z4J.o6I+Z4J.q2+o5I+I4+X7I+C4X)](this[(b9+Z4J.o6I+Z4J.n6I+Z4J.i0I+G4X+w7X+w8)]);}
)[z6I](f);}
);}
,C=function(a,b){var J4X='ld',u3J='dito',c=v8===a?q:d((G3I+m2I+h1+q4I+m6+m8I+m2I+T7I+Z0X+G9J+m6+T7I+m2I+i8X)+a+(y6I));return d((G3I+m2I+j9J+m6+m8I+u3J+G9J+m6+c2I+T7I+m8I+J4X+i8X)+b+(y6I),c);}
,D=f[(Z4J.C6J+B7+b8+Z4J.R0I+h8X+Z4J.n6I)]={}
,E=function(a,b){var e9J="awTy",X9J="erSide",h6J="bSer",X0o="atures",V9X="oF";return a[R5J]()[E0][(V9X+Z4J.q2+X0o)][(h6J+g0J+X9J)]&&(o8X+G9X)!==b[Z4J.n6I][(E7J+Z4J.i0I+s1+Q8I+Z4J.n6I)][(w8+Z4J.o6I+e9J+g6I)];}
,L=function(a){a=d(a);setTimeout(function(){var s7J="highlight",r5J="dClas";a[(Z4J.Y8+w8+r5J+Z4J.n6I)](s7J);setTimeout(function(){var a1=550,J1I="noHighlight",G1X="dCl";a[(Z4J.Y8+w8+G1X+Z4J.Y8+Z4J.n6I+Z4J.n6I)](J1I)[(C3X+F2X+G4X+Z4J.z5I+Z1+Z4J.n6I)](s7J);setTimeout(function(){var K7="oHi";a[(C3X+o5I+a0X+G4X+p2J+Z4J.n6I)]((Z4J.F1I+K7+Z8I+y3I+Z4J.z5I+S3I+Z8I+E4J));}
,a1);}
,C3);}
,t2I);}
,F=function(a,b,c,e,d){var j8X="exes";b[(k7X+j0J+Z4J.n6I)](c)[(S3I+F9X+j8X)]()[(J5I+Z4J.V2+y3I)](function(c){var c=b[(k7X+j0J)](c),g=c.data(),i=d(g);i===h&&f.error((D7+Z4J.F1I+Z4J.Y8+N8+m0I+W4J+Z4J.i0I+Z4J.w1I+W4J+c8I+h5J+W4J+Z4J.o6I+O2+W4J+S3I+y9I+Z4J.F1I+t1I+c8I+S3I+Z4J.q2+Z4J.o6I),14);a[i]={idSrc:i,data:g,node:c[(Z4J.F1I+G1+Z4J.q2)](),fields:e,type:(Z4J.o6I+Z4J.w1I+j0J)}
;}
);}
,G=function(a,b,c,e,l,g){var o3X="indexes";b[G1J](c)[o3X]()[s8X](function(w){var z8J="ayFie",h9I="eNam",S0I="cif",M3I="eas",Y3="rmin",R1="isEmptyObject",n1X="itFi",E9I="aoColumns",s6="tings",I4X="column",i=b[a3](w),j=b[(Z4J.o6I+Z4J.w1I+j0J)](w[o1]).data(),j=l(j),u;if(!(u=g)){u=w[I4X];u=b[(u1+Z4J.i0I+s6)]()[0][E9I][u];var m=u[(E7J+P1+e6J+Z0I)]!==h?u[(u9+n1X+Q9X)]:u[(o5I+Z)],n={}
;d[(s8X)](e,function(a,b){var x6J="dataSrc";if(d[S8](m))for(var c=0;c<m.length;c++){var e=b,f=m[c];e[(w8+h2+B0I)]()===f&&(n[e[(i1X)]()]=e);}
else b[x6J]()===m&&(n[b[i1X]()]=b);}
);d[R1](n)&&f.error((D7+Z4J.F1I+Z4J.w2+Z4J.z5I+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.Y8+n4J+Z4J.w1I+o5I+z1+M3J+X0I+n2J+W4J+w8+Z4J.A4+Z4J.q2+Y3+Z4J.q2+W4J+c8I+e6J+Z0I+W4J+c8I+Z4J.o6I+S7+W4J+Z4J.n6I+Z4J.w1I+Z4J.R0I+h8X+v2I+i1+Z4J.z5I+M3I+Z4J.q2+W4J+Z4J.n6I+k6I+Z4J.q2+S0I+Z4J.g7I+W4J+Z4J.i0I+Q0I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.F1I+Z4J.Y8+A1J+Z4J.l0X),11);u=n;}
F(a,b,w[(Z4J.o6I+O2)],e,l);a[j][a7I]="object"===typeof c&&c[(Z4J.F1I+Z4J.w1I+w8+h9I+Z4J.q2)]?[c]:[i[o0o]()];a[j][(H0J+Z4J.n6I+M7I+z8J+r7I)]=u;}
);}
;D[(M0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]={individual:function(a,b){var H2J="index",U9J="siv",b1="asCl",j4="ctDat",c=r[(Z4J.q2+z0J+Z4J.i0I)][(Z4J.w1I+q1+S3I)][(B9J+Z4J.F1I+b3+Z4J.q2+Z4J.i0I+q0I+Z4J.i5I+Z4J.q2+j4+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+Z4J.o6I+Z4J.V2)]),e=d(this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)])[(N8J+m0X+Z4J.Y8+N8+m0I)](),f=this[Z4J.n6I][(b9+w7+w5I)],g={}
,h,i;a[(W9I+P2I+Z4J.Y8+o5I+Z4J.q2)]&&d(a)[(y3I+b1+Z4J.Y8+t8)]("dtr-data")&&(i=a,a=e[(Z4J.o6I+B4+E7I+Z4J.F1I+U9J+Z4J.q2)][H2J](d(a)[(Z4J.V2+h9J+B4+Z4J.i0I)]("li")));b&&(d[(w2J+Z4J.o6I+Y8X+Z4J.g7I)](b)||(b=[b]),h={}
,d[(J5I+O9J)](b,function(a,b){h[b]=f[b];}
));G(g,e,a,f,c,h);i&&d[s8X](g,function(a,b){b[a7I]=[i];}
);return g;}
,fields:function(a){var a0I="mns",s5I="Object",B0J="Pla",Q1="aTabl",W0o="oA",b=r[s0X][(W0o+k6I+S3I)][h4I](this[Z4J.n6I][q7J]),c=d(this[Z4J.n6I][Q2X])[(j3+z1+Q1+Z4J.q2)](),e=this[Z4J.n6I][(c8I+s0J+w8+Z4J.n6I)],f={}
;d[(r9X+B0J+Y0o+s5I)](a)&&(a[C6X]!==h||a[d0]!==h||a[(a3+Z4J.n6I)]!==h)?(a[(C6X)]!==h&&F(f,c,a[(Z4J.o6I+Z4J.w1I+j0J+Z4J.n6I)],e,b),a[d0]!==h&&c[(Z9J+q5I+Z4J.n6I)](null,a[(f2J+U4J+a0I)])[(Y0o+w8+Z4J.q2+z0J+B4)]()[(e9I+y3I)](function(a){G(f,c,a,e,b);}
),a[G1J]!==h&&G(f,c,a[(Z4J.V2+w7+Z4J.z5I+Z4J.n6I)],e,b)):F(f,c,a,e,b);return f;}
,create:function(a,b){var c=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[g4X]();E(c,this)||(c=c[(k7X+j0J)][(b4+w8)](b),L(c[(o0o)]()));}
,edit:function(a,b,c,e){var m7X="wIds",C9J="nA",R6I="DataTa";b=d(this[Z4J.n6I][Q2X])[(R6I+N8+m0I)]();if(!E(b,this)){var f=r[(s0X)][(k0J)][h4I](this[Z4J.n6I][(J1J+B0I)]),g=f(c),a=b[(o1)]("#"+g);a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return g==f(b);}
));a[y7I]()?(a.data(c),c=d[(S3I+C9J+W1I)](g,e[(o1+X7X)]),e[(k7X+m7X)][(H2+Z4J.z5I+S3I+Z4J.V2+Z4J.q2)](c,1)):a=b[o1][(b4+w8)](c);L(a[o0o]());}
}
,remove:function(a){var b=d(this[Z4J.n6I][(B7+N8+m0I)])[g4X]();E(b,this)||b[(k7X+j0J+Z4J.n6I)](a)[(Z4J.o6I+u9X)]();}
,prep:function(a,b,c,e,f){var e0I="rowId";"edit"===a&&(f[(e0I+Z4J.n6I)]=d[I0](c.data,function(a,b){var b2X="yObje";if(!d[(S3I+r3X+o5I+Q8I+b2X+i8J)](c.data[b]))return b;}
));}
,commit:function(a,b,c,e){var f5I="drawType",t2J="ject",W4="nGet",G2="rowIds";b=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(j3+Z4J.Y8+m0X+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]();if((Z4J.q2+w8+S3I+Z4J.i0I)===a&&e[G2].length)for(var f=e[G2],g=r[s0X][(G5J+S3I)][(F4+c8I+W4+q0I+t2J+j3+Z4J.Y8+Z4J.i0I+Z4J.Y8+m0)](this[Z4J.n6I][q7J]),h=0,e=f.length;h<e;h++)a=b[(Z4J.o6I+Z4J.w1I+j0J)]("#"+f[h]),a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return f[h]===g(b);}
)),a[(Z4J.Y8+Z4J.F1I+Z4J.g7I)]()&&a[V9I]();a=this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+s1+Q8I+Z4J.n6I)][f5I];(Z4J.F1I+Z4J.w1I+G9X)!==a&&b[X4](a);}
}
;D[z6I]={initField:function(a){var Z1J='ito',b=d((G3I+m2I+q4I+e3J+m6+m8I+m2I+Z1J+G9J+m6+P7I+M9I+B5+i8X)+(a.data||a[(g7X+A1J)])+'"]');!a[s0I]&&b.length&&(a[s0I]=b[z6I]());}
,individual:function(a,b){var U6X="rom",K4J="termin",b8I="lly",E3I="omati",c2X="yless";if(a instanceof d||a[L0o])b||(b=[d(a)[(Z4J.Y8+Z4J.i0I+U8I)]((Z4J.l1+Z4J.Y8+F6X+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+c8I+S3I+Z4J.q2+Z0I))]),a=d(a)[(o8I+C3X+Z4J.F1I+Z4J.I2I)]("[data-editor-id]").data("editor-id");a||(a=(u3I+Z4J.q2+c2X));b&&!d[(S3I+Z4J.n6I+X0+Y8X+Z4J.g7I)](b)&&(b=[b]);if(!b||0===b.length)throw (G4X+Z4J.Y8+Z4J.F1I+Z4J.F1I+Z4J.w1I+Z4J.i0I+W4J+Z4J.Y8+Z4J.R0I+Z4J.i0I+E3I+L7J+b8I+W4J+w8+Z4J.q2+K4J+Z4J.q2+W4J+c8I+s0J+w8+W4J+Z4J.F1I+a0+Z4J.q2+W4J+c8I+U6X+W4J+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+W4J+Z4J.n6I+Z4J.w1I+g5J+Z4J.V2+Z4J.q2);var c=D[z6I][Y8I][(L7J+Z4J.z5I+Z4J.z5I)](this,a),e=this[Z4J.n6I][(v7+w8+Z4J.n6I)],f={}
;d[(s8X)](b,function(a,b){f[b]=e[b];}
);d[(Z4J.q2+Z4J.Y8+O9J)](c,function(c,g){var x2I="isplayF",i6J="toArray";g[(O4I+g6I)]="cell";for(var h=a,j=b,m=d(),n=0,p=j.length;n<p;n++)m=m[(Z4J.Y8+N9I)](C(h,j[n]));g[a7I]=m[i6J]();g[Y8I]=e;g[(w8+x2I+e6J+Z0I+Z4J.n6I)]=f;}
);return c;}
,fields:function(a){var G3J="keyle",b={}
,c={}
,e=this[Z4J.n6I][(v7+w5I)];a||(a=(G3J+t8));d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](e,function(b,e){var d=C(a,e[(w8+z1+Z4J.Y8+B0I)]())[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();e[K6](c,null===d?h:d);}
);b[a]={idSrc:a,data:c,node:q,fields:e,type:(o1)}
;return b;}
,create:function(a,b){var i3='tor',c5X="GetOb";if(b){var c=r[s0X][(G5J+S3I)][(B9J+Z4J.F1I+c5X+A2J+Z4J.i0I+n7J+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+k5X)])(b);d((G3I+m2I+q4I+c0X+q4I+m6+m8I+m2I+T7I+i3+m6+T7I+m2I+i8X)+c+'"]').length&&K(c,a,b);}
}
,edit:function(a,b,c){a=r[s0X][(G5J+S3I)][h4I](this[Z4J.n6I][q7J])(c)||"keyless";K(a,b,c);}
,remove:function(a){d('[data-editor-id="'+a+(y6I))[(C3X+f1J+Z4J.q2)]();}
}
;f[T4]={wrapper:(j3+X7),processing:{indicator:(j3+a7+e8X+Z4J.n6I+S3I+v4+s3X+w8+S3I+Z4J.V2+Z4J.Y8+D6J),active:(j3+X6+u3+F4+i1+Z4J.o6I+Z4J.w1I+Z9J+Z4J.n6I+n5+Z4J.F1I+Z8I)}
,header:{wrapper:(j3+X7+x1X+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I),content:(I6J+K7J+w7I+b4+Q2+F4+G4X+Z4J.w1I+d4J+Z4J.i0I)}
,body:{wrapper:"DTE_Body",content:"DTE_Body_Content"}
,footer:{wrapper:(X2J+V4X),content:"DTE_Footer_Content"}
,form:{wrapper:"DTE_Form",content:"DTE_Form_Content",tag:"",info:(I6J+R9I+B5I+x1+Z4J.F1I+s8),error:(j3+X7+o9X+Z4J.w1I+i9J),buttons:(j3+X6+u3+F4+F8I+p1X+Z4J.i0I+Q3I+h3X),button:"btn"}
,field:{wrapper:"DTE_Field",typePrefix:"DTE_Field_Type_",namePrefix:"DTE_Field_Name_",label:"DTE_Label",input:(I6J+l1I+Z4J.q2+Z4J.z5I+w9X+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I),inputControl:(I6J+I4I+S3I+Z4J.q2+Z4J.z5I+S9X+t7+U8I+Z4J.w1I+Z4J.z5I),error:(I6J+K7J+O6+w7+w8+F3X+Z4J.i0I+Z4J.Y8+Z4J.i0I+W2J),"msg-label":(v6J+H4I+Z4J.z5I+F4+x1+Z4J.F1I+s8),"msg-error":(j3+X6+K7J+I5J+K6I+M6),"msg-message":(j3+X6+k7J+Z0I+F4+n6J+t8+L9+Z4J.q2),"msg-info":"DTE_Field_Info",multiValue:(o5I+g8J+t1I+F6X+g0J+Z4J.Y8+B8I),multiInfo:(p6+Z4J.i0I+S3I+F6X+S3I+Z4J.F1I+s8),multiRestore:(d1I+F6X+Z4J.o6I+Z4J.q2+Z4J.n6I+Z4J.i0I+u2+Z4J.q2)}
,actions:{create:(j3+X7+F4+U4X+Z4J.V2+B2J+P6J+z1+Z4J.q2),edit:"DTE_Action_Edit",remove:"DTE_Action_Remove"}
,bubble:{wrapper:(I6J+u3+W4J+j3+X7+b5I+e6),liner:(j3+X6+u3+b5I+N8+N8+A2I+U5+S3I+F3I),table:(I6J+C8J+L7X+Z4J.z5I+q4X+Z4J.Y8+N8+m0I),close:(I6J+b7I+M0o+A8I),pointer:(j3+X6+u3+F4+y4X+Z4J.R0I+L7X+A2I+X6+I5I+Z8I+m0I),bg:(j3+X6+w0+Z8I+k7X+V)}
}
;if(r[(W+N8+I7I+Z4J.w1I+s3)]){var p=r[(Z4J.B3I+I7I+Z4J.w1I+s3)][A5X],H={sButtonText:c3X,editor:c3X,formTitle:c3X}
;p[(Z4J.q2+H0J+Q3I+m0o+C3X+Z4J.Y8+I6I)]=d[(s0X+Z4J.q2+Z4J.F1I+w8)](!E0,p[k0X],H,{formButtons:[{label:c3X,fn:function(){this[f0o]();}
}
],fnClick:function(a,b){var n4="edito",c=b[(n4+Z4J.o6I)],e=c[(S3I+G5+Z4J.F1I)][(A1X+Z4J.Y8+I6I)],d=b[e1I];if(!d[E0][(l7I+N8+w7)])d[E0][(Z4J.z5I+Z4J.w2+w7)]=e[f0o];c[(m3J+J5I+I6I)]({title:e[(Z4J.i0I+S3I+D3I)],buttons:d}
);}
}
);p[J7J]=d[H3I](!0,p[r1],H,{formButtons:[{label:null,fn:function(){this[(Z4+P)]();}
}
],fnClick:function(a,b){var c4J="Sel",c=this[(c8I+Z4J.F1I+b3+Z4J.A4+c4J+Z4J.q2+i8J+Z4J.q2+w8+s3X+w8+p5+Z4J.q2+Z4J.n6I)]();if(c.length===1){var e=b[(Z4J.q2+w8+T1+Z4J.o6I)],d=e[k1I][R0J],f=b[(y0o+y4X+Z4J.R0I+u3X)];if(!f[0][(l7I+N8+Z4J.q2+Z4J.z5I)])f[0][(l7I+N8+Z4J.q2+Z4J.z5I)]=d[(V4+v2X+Z9X)];e[R0J](c[0],{title:d[j2],buttons:f}
);}
}
}
);p[(Z4J.q2+w8+S3I+E7+Z4J.o6I+g0X+Z4J.q2)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!0,p[(u1+Z4J.z5I+Z4J.q2+Z4J.V2+Z4J.i0I)],H,{question:null,formButtons:[{label:null,fn:function(){var a=this;this[(Z4J.n6I+u0J+o5I+S3I+Z4J.i0I)](function(){var W1X="Sele",H9X="tab",X6J="fnGetInstance",F8X="bleToo";d[Z4J.h0I][g9][(W+F8X+Z4J.z5I+Z4J.n6I)][X6J](d(a[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]()[(H9X+m0I)]()[o0o]())[(c8I+Z4J.F1I+W1X+Z4J.V2+Z4J.i0I+J1+t7+Z4J.q2)]();}
);}
}
],fnClick:function(a,b){var b1J="fir",Q7I="mB",L1I="xe",D2="lectedI",L8J="fnGet",c=this[(L8J+R0+Z4J.q2+D2+F9X+Z4J.q2+L1I+Z4J.n6I)]();if(c.length!==0){var e=b[G8],d=e[(D7I+B0o+Z4J.F1I)][(V9I)],f=b[(c8I+u2+Q7I+n4J+Y1J+Z4J.n6I)],g=typeof d[(Z4J.V2+Z4J.w1I+l1X+S3I+Z4J.o6I+o5I)]==="string"?d[(H0X+c8I+S3I+t6X)]:d[(Z4J.V2+Z4J.w1I+l1X+S3I+t6X)][c.length]?d[(H0X+b9+Z4J.o6I+o5I)][c.length]:d[(Z4J.V2+t7+b1J+o5I)][F4];if(!f[0][(Z4J.z5I+Z4J.Y8+N8+Z4J.q2+Z4J.z5I)])f[0][(b3I+Z4J.q2+Z4J.z5I)]=d[(V4+N8+u6J+Z4J.i0I)];e[V9I](c,{message:g[S7X](/%d/g,c.length),title:d[(j2)],buttons:f}
);}
}
}
);}
d[(p5+I6I+F9X)](r[(p5+Z4J.i0I)][(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{create:{text:function(a,b,c){var r2X="butt",f0="reate";return a[k1I]((L5X+B9I+Z4J.n6I+Z4J.l0X+Z4J.V2+f0),c[G8][(k1I)][d0I][(r2X+t7)]);}
,className:(N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I+F6X+Z4J.V2+C3X+G4),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][(A1X+z1+Z4J.q2)][f0o];}
,fn:function(){this[(V4+v2X+Z9X)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var u5="itl",P1I="formTitle";a=e[G8];a[(Z4J.V2+Z4J.o6I+Z4J.q2+G4)]({buttons:e[e1I],message:e[(c8I+Z4J.w1I+Z4J.o6I+o5I+g6+B4+Z4J.n6I+i5)],title:e[P1I]||a[k1I][d0I][(Z4J.i0I+u5+Z4J.q2)]}
);}
}
,edit:{extend:(P2J+I6I+w8),text:function(a,b,c){return a[(S3I+G5+Z4J.F1I)]((N8+Z4J.R0I+E2I+p3J+Z4J.l0X+Z4J.q2+w8+S3I+Z4J.i0I),c[(Z4J.q2+H0J+D6J)][(D1X+Z4J.F1I)][R0J][(u0o+Z4J.i0I+t7)]);}
,className:(L5X+X4J+h3X+F6X+Z4J.q2+w8+Z9X),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][R0J][(V3I+S3I+Z4J.i0I)];}
,fn:function(){var N0o="ubm";this[(Z4J.n6I+N0o+S3I+Z4J.i0I)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var Q7J="formMessage",u9J="xes",D2X="ell",i3I="indexe",a=e[G8],c=b[C6X]({selected:!0}
)[(S3I+Z4J.F1I+y9I+z0J+B4)](),d=b[d0]({selected:!0}
)[(i3I+Z4J.n6I)](),b=b[(Z4J.V2+D2X+Z4J.n6I)]({selected:!0}
)[(h5J+Z4J.q2+u9J)]();a[(Z4J.q2+o6)](d.length||b.length?{rows:c,columns:d,cells:b}
:c,{message:e[Q7J],buttons:e[(y0o+p1X+Z4J.i0I+Z4J.i0I+t7+Z4J.n6I)],title:e[(c8I+u2+R6X+q3I+Z4J.q2)]||a[(D1X+Z4J.F1I)][(Z4J.q2+w8+S3I+Z4J.i0I)][(Z4J.i0I+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]}
);}
}
,remove:{extend:"selected",text:function(a,b,c){var Z2="18n";return a[k1I]("buttons.remove",c[G8][(S3I+Z2)][(Z4J.o6I+Z4J.q2+f1J+Z4J.q2)][(g8)]);}
,className:"buttons-remove",editor:null,formButtons:{label:function(a){return a[(D7I+R6)][V9I][(Z4+o5I+Z9X)];}
,fn:function(){this[f0o]();}
}
,formMessage:function(a,b){var l0J="irm",Y9X="confirm",u7J="nfirm",Y2="ows",c=b[(Z4J.o6I+Y2)]({selected:!0}
)[(h5J+Z4J.q2+z0J+B4)](),e=a[(S3I+G5+Z4J.F1I)][(C3X+f1J+Z4J.q2)];return ("string"===typeof e[(Z4J.V2+M7J+s7X+o5I)]?e[(f2J+u7J)]:e[Y9X][c.length]?e[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I+l0J)][c.length]:e[(P0I+l0J)][F4])[(Z4J.o6I+Z4J.q2+M7I+Y7I)](/%d/g,c.length);}
,formTitle:null,action:function(a,b,c,e){var g1="remov",Q3J="mMes",E9X="Buttons";a=e[G8];a[(Z4J.o6I+Z4J.q2+Z8J+l9J)](b[(Z4J.o6I+O2+Z4J.n6I)]({selected:!0}
)[(S3I+D7X+z0J+B4)](),{buttons:e[(s8+Z4J.o6I+o5I+E9X)],message:e[(c8I+Z4J.w1I+Z4J.o6I+Q3J+Z4J.n6I+Z4J.Y8+n6)],title:e[(c8I+Z4J.w1I+Z4J.o6I+R6X+Z4J.i0I+Z4J.z5I+Z4J.q2)]||a[(D7I+R6)][(g1+Z4J.q2)][j2]}
);}
}
}
);f[(c8I+S3I+k0o+Z4J.q2+Z4J.n6I)]={}
;f[(j3+z1+S5I+S3I+A1J)]=function(a,b){var X5X="calendar",t5X="matc",z2X="sta",D8X="-time",O4J="ndar",D3J="-date",k3="</div></div>",E3="<span>:</span>",Y6J='-time">',Y8J='lend',f9I='-year"/></div></div><div class="',g4J='th',r1X='</button></div><div class="',a4X='conRi',X2="evi",C5='nLeft',M9J='-title"><div class="',n1I='-label"><span/><select class="',s0o='ut',J5J="sed",K1="YYY",k1J="ntj",N6="tetim",n7X="YYYY-MM-DD",H8I="lassP";this[Z4J.V2]=d[H3I](!E0,{}
,f[H1J][(y9I+c8I+Z4J.Y8+g8J+Z4J.I2I)],b);var c=this[Z4J.V2][(Z4J.V2+H8I+Z4J.o6I+Z4J.q2+c8I+Y4X)],e=this[Z4J.V2][k1I];if(!j[H7I]&&n7X!==this[Z4J.V2][(c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I)])throw (u3+o6+Z4J.w1I+Z4J.o6I+W4J+w8+Z4J.Y8+N6+Z4J.q2+n4I+j0I+S3I+Z4J.i0I+y3I+Z4J.w1I+n4J+W4J+o5I+S7+Z4J.q2+k1J+Z4J.n6I+W4J+Z4J.w1I+Z4J.F1I+Z4J.z5I+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+Z4J.w1I+t6X+Z4J.Y8+Z4J.i0I+c3+V9+K1+F6X+g6+g6+F6X+j3+j3+G4J+Z4J.V2+Q+W4J+N8+Z4J.q2+W4J+Z4J.R0I+J5J);var g=function(a){var x8I='utto',B1J='wn',i7X='Do',O0I='U',q6J='con',d0o='ck',f9X='lo',U0I='meb';return g8I+c+(m6+c0X+T7I+U0I+f9X+d0o+b0X+m2I+v3+q2X+B2I+P7I+o5X+i8X)+c+(m6+T7I+q6J+O0I+H7J+b0X+Z4I+t4X+y2)+e[(k6I+Z4J.o6I+Z4J.q2+g0J+Q7X+q5J)]+(b0o+Z4I+s0o+c0X+d9I+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+n1I+c+F6X+a+(t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+(m6+T7I+B2I+o8J+i7X+B1J+b0X+Z4I+x8I+v9I+y2)+e[c6X]+(P0o+N8+Z4J.R0I+Z4J.i0I+Z4J.i0I+t7+U+w8+S3I+g0J+U+w8+P9X+N2X);}
,g=d(g8I+c+(b0X+m2I+v3+q2X+B2I+P7I+q4I+n9J+n9J+i8X)+c+(m6+m2I+q4I+j2J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+c+M9J+c+(m6+T7I+A7X+C5+b0X+Z4I+B0X+c0X+c0X+o8J+y2)+e[(k6I+Z4J.o6I+X2+Z4J.w1I+Z4J.R0I+Z4J.n6I)]+(b0o+Z4I+s0o+Z0X+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+c+(m6+T7I+a4X+P0J+v0J+c0X+b0X+Z4I+t4X+y2)+e[c6X]+r1X+c+n1I+c+(m6+A9I+d9I+v9I+g4J+t3X+m2I+T7I+Y7J+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X)+c+n1I+c+f9I+c+(m6+B2I+q4I+Y8J+L6+t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+U9+n9J+i8X)+c+Y6J+g(C1X)+E3+g(N2J)+E3+g(Z5I)+g(K9J)+k3);this[Z6J]={container:g,date:g[(b9+Z4J.F1I+w8)](Z4J.l0X+c+D3J),title:g[(b9+F9X)](Z4J.l0X+c+(F6X+Z4J.i0I+W6)),calendar:g[T9X](Z4J.l0X+c+(F6X+Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.q2+O4J)),time:g[T9X](Z4J.l0X+c+D8X),input:d(a)}
;this[Z4J.n6I]={d:c3X,display:c3X,namespace:(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+w8+z1+Z4J.q2+v0o+Z4J.q2+F6X)+f[H1J][(z1J+Z4J.F1I+z2X+Z4J.F1I+Z9J)]++,parts:{date:c3X!==this[Z4J.V2][(c8I+u2+F6)][e6X](/[YMD]/),time:c3X!==this[Z4J.V2][o7J][(t5X+y3I)](/[Hhm]/),seconds:-N0!==this[Z4J.V2][(c8I+u1X+z1)][(h5J+p5+s1+c8I)](Z4J.n6I),hours12:c3X!==this[Z4J.V2][(c8I+u1X+Z4J.Y8+Z4J.i0I)][(A9J+Z4J.i0I+O9J)](/[haA]/)}
}
;this[(Z6J)][Q9J][(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)])[(Z4J.Y8+k6I+k6I+q8+w8)](this[(w8+Z4J.w1I+o5I)][Y0I]);this[(w8+S7)][(w8+Z4J.Y8+I6I)][(Z4J.Y8+k6I+k6I+C5I)](this[Z6J][(Z4J.i0I+S3I+q3I+Z4J.q2)])[(l4X+w8)](this[Z6J][X5X]);this[t2X]();}
;d[(Z4J.q2+S8X)](f.DateTime.prototype,{destroy:function(){var S8I="iner";this[(F4+y3I+S3I+w8+Z4J.q2)]();this[(w8+Z4J.w1I+o5I)][(H0X+B7+S8I)]()[(Z4J.w1I+f4)]("").empty();this[(Z6J)][(S3I+r4)][t9J](".editor-datetime");}
,max:function(a){var R4X="ander",t0I="Titl",x7I="maxDate";this[Z4J.V2][x7I]=a;this[(L6J+Q8I+S3I+Z4J.w1I+h3X+t0I+Z4J.q2)]();this[(z6+C0+Z4J.Y8+Z4J.z5I+R4X)]();}
,min:function(a){var j9I="etC",Z3="_optionsTitle";this[Z4J.V2][R6J]=a;this[Z3]();this[(n8J+j9I+X0I+Q+w8+Z4J.q2+Z4J.o6I)]();}
,owns:function(a){return 0<d(a)[p7I]()[k6X](this[(Z6J)][(H0X+u2X+Z4J.o6I)]).length;}
,val:function(a,b){var A8X="Cal",b2="setTi",V1J="toString",V5J="oUt",E8I="toDa",E4I="Lo",a7X="ome",b0I="tc";if(a===h)return this[Z4J.n6I][w8];if(a instanceof Date)this[Z4J.n6I][w8]=this[z3J](a);else if(null===a||""===a)this[Z4J.n6I][w8]=null;else if("string"===typeof a)if(j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]){var c=j[H7I][(Z4J.R0I+b0I)](a,this[Z4J.V2][o7J],this[Z4J.V2][(o5I+a7X+Z4J.F1I+Z4J.i0I+E4I+Z4J.V2+w2X)],this[Z4J.V2][N3I]);this[Z4J.n6I][w8]=c[(S3I+Z4J.n6I+q7+Z4J.Y8+u1I+w8)]()?c[(E8I+Z4J.i0I+Z4J.q2)]():null;}
else c=a[e6X](/(\d{4})\-(\d{2})\-(\d{2})/),this[Z4J.n6I][w8]=c?new Date(Date[(G2J)](c[1],c[2]-1,c[3])):null;if(b||b===h)this[Z4J.n6I][w8]?this[j0o]():this[(Z6J)][j0X][(g0J+X0I)](a);this[Z4J.n6I][w8]||(this[Z4J.n6I][w8]=this[(F4+c1+X6+V5J+Z4J.V2)](new Date));this[Z4J.n6I][p6J]=new Date(this[Z4J.n6I][w8][V1J]());this[(F4+b2+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.n6I+Z4J.q2+Z4J.i0I+A8X+Z4J.Y8+F9X+Z4J.q2+Z4J.o6I)]();this[(z6+Z4J.i0I+X6+v0o+Z4J.q2)]();}
,_constructor:function(){var J3J="_setTitle",k2="atetim",p1I="Pm",X9="cond",M3X="sInc",U3X="nut",q0o="_optionsTime",a7J="s1",A0X="onsT",t9X="sT",J5="ast",Q2J="eblo",C7X="tim",v4X="par",d6X="isp",P0X="ime",a=this,b=this[Z4J.V2][N7X],c=this[Z4J.V2][(D1X+Z4J.F1I)];this[Z4J.n6I][(k6I+Z4J.Y8+Z4J.o6I+Z4J.i0I+Z4J.n6I)][c1]||this[Z6J][(w8+G4)][v3J]((H0J+Z4J.n6I+V7I+Z4J.g7I),(w0I+Z4J.q2));this[Z4J.n6I][B8X][Y0I]||this[Z6J][(Z4J.i0I+P0X)][v3J]((w8+d6X+c5J),"none");this[Z4J.n6I][(v4X+Z4J.I2I)][(u1+Z4J.V2+t7+w8+Z4J.n6I)]||(this[(Z6J)][Y0I][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("div.editor-datetime-timeblock")[(Z4J.q2+j1I)](2)[(Z4J.o6I+Z4J.q2+F2X)](),this[(Z6J)][(C7X+Z4J.q2)][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("span")[(Z4J.q2+j1I)](1)[V9I]());this[Z4J.n6I][B8X][i4X]||this[Z6J][Y0I][I7X]((w8+P9X+Z4J.l0X+Z4J.q2+w8+Z9X+u2+F6X+w8+Z4J.Y8+Z4J.i0I+Z4J.q2+t1I+A1J+F6X+Z4J.i0I+S3I+o5I+Q2J+Z4J.V2+u3I))[(Z4J.z5I+J5)]()[V9I]();this[(L6J+k6I+t1I+t7+t9X+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.w1I+k6I+Z4J.i0I+S3I+A0X+v0o+Z4J.q2)]("hours",this[Z4J.n6I][B8X][(y3I+Z4J.w1I+g5J+a7J+w6X)]?12:24,1);this[q0o]("minutes",60,this[Z4J.V2][(u6J+U3X+Z4J.q2+M3X+C3X+A1J+g3X)]);this[q0o]((Z4J.n6I+Z4J.V1I+t7+w8+Z4J.n6I),60,this[Z4J.V2][(u1+X9+Z4J.n6I+x1+Z4J.F1I+Z4J.V2+C3X+A1J+g3X)]);this[u8]("ampm",["am","pm"],c[(a0+p1I)]);this[Z6J][j0X][t7]((c8I+Z4J.w1I+E8+Z4J.l0X+Z4J.q2+H0J+Z4J.i0I+u2+F6X+w8+z1+Z4J.q2+Y0I+W4J+Z4J.V2+q6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+w8+Z4J.Y8+I6I+Z4J.i0I+v0o+Z4J.q2),function(){var B9="isabl";if(!a[(w8+Z4J.w1I+o5I)][(Q9J)][(S3I+Z4J.n6I)]((J0o+g0J+r9X+S3I+N8+Z4J.z5I+Z4J.q2))&&!a[(w8+Z4J.w1I+o5I)][j0X][(S3I+Z4J.n6I)]((J0o+w8+B9+u9))){a[y1](a[(w8+Z4J.w1I+o5I)][j0X][(e7J+Z4J.z5I)](),false);a[J2]();}
}
)[(t7)]((l6+Z4J.g7I+s3J+Z4J.l0X+Z4J.q2+o6+Z4J.w1I+Z4J.o6I+F6X+w8+k2+Z4J.q2),function(){var r3J="isib",H5J="ntai";a[Z6J][(Z4J.V2+Z4J.w1I+H5J+Z4J.F1I+Z4J.q2+Z4J.o6I)][(r9X)]((J0o+g0J+r3J+m0I))&&a[y1](a[Z6J][j0X][(g0J+X0I)](),false);}
);this[(Z6J)][Q9J][t7]((Z4J.V2+C3I+M5X+Z4J.q2),(Z4J.n6I+Z4J.q2+Z4J.z5I+Z4J.V1I+Z4J.i0I),function(){var I3J="itio",A4J="_setTime",N1="econ",b5="TCMi",F0="utp",K0="_wr",I0o="_set",r6="UTCHou",a3I="UT",j7X="mpm",h5I="art",F2I="Cla",x9X="has",D3="alander",N7="_correctMonth",c=d(this),f=c[(g0J+X0I)]();if(c[F4J](b+"-month")){a[N7](a[Z4J.n6I][p6J],f);a[J3J]();a[(F4+u1+Z4J.i0I+G4X+D3)]();}
else if(c[(x9X+X7J+L1)](b+(F6X+Z4J.g7I+Z4J.q2+v6))){a[Z4J.n6I][p6J][(Z4J.n6I+K5I+Q8J+Z4J.R0I+Z4J.z5I+D3X)](f);a[(z6+Z4J.i0I+W7I+q3I+Z4J.q2)]();a[(z6+C0+Z4J.Y8+l7I+Z4J.F1I+l8)]();}
else if(c[F4J](b+(F6X+y3I+E5J+Z4J.n6I))||c[(y3I+Z4J.Y8+Z4J.n6I+F2I+t8)](b+(F6X+Z4J.Y8+o5I+Q9I))){if(a[Z4J.n6I][(k6I+h5I+Z4J.n6I)][i4X]){c=d(a[Z6J][(f2J+Z4J.F1I+B7+S3I+G9X+Z4J.o6I)])[(K3J+w8)]("."+b+(F6X+y3I+Z4J.w1I+Z4J.R0I+B9X))[y1]()*1;f=d(a[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+S3I+Z4J.F1I+Q2)])[(c8I+Y0o+w8)]("."+b+(F6X+Z4J.Y8+j7X))[(g0J+X0I)]()===(Q9I);a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+a3I+G4X+z8+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z4J.n6I)](c===12&&!f?0:f&&c!==12?c+12:c);}
else a[Z4J.n6I][w8][(Z4J.n6I+Z4J.q2+Z4J.i0I+r6+Z4J.o6I+Z4J.n6I)](f);a[(I0o+X6+v0o+Z4J.q2)]();a[(K0+S3I+Z4J.i0I+Z4J.q2+s1+F0+n4J)](true);}
else if(c[(y3I+Z4J.Y8+Z4J.n6I+n1+Z4J.n6I)](b+"-minutes")){a[Z4J.n6I][w8][(u1+Z4J.i0I+D7+b5+Z5X+Z4J.i0I+Z4J.q2+Z4J.n6I)](f);a[(F4+u1+Z4J.i0I+X6+P0X)]();a[j0o](true);}
else if(c[F4J](b+(F6X+Z4J.n6I+N1+w5I))){a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+R0+Z4J.V1I+Z4J.w1I+F9X+Z4J.n6I)](f);a[A4J]();a[j0o](true);}
a[(w8+S7)][(S3I+Z4J.F1I+W2I)][(c8I+Z4J.w1I+v5J+Z4J.n6I)]();a[(F4+m0J+I3J+Z4J.F1I)]();}
)[t7]("click",function(c){var l0="ocus",o5="eOut",h7J="rit",D0J="setUTCDate",k5J="Mo",c9X="setUTCFullYear",y5="dIn",m9J="cte",H6J="ption",f9J="nD",P4J="asC",U6I="edIn",Q5="dex",p9J="dI",d5="selectedIndex",Z5J="tTi",a5I="corre",U1="nRi",z0X="lan",F0I="CMon",d1X="etUT",Q0o="CM",e5X="setUT",E9="eft",D0X="onL",D5X="pag",I9X="Cas",k9X="we",F6J="toLo",C2X="arget",f=c[(Z4J.i0I+C2X)][L0o][(F6J+k9X+Z4J.o6I+I9X+Z4J.q2)]();if(f!==(T8J)){c[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I+T3X+D5X+Z4J.Y8+Z4J.i0I+Q7X+Z4J.F1I)]();if(f==="button"){c=d(c[d6J]);f=c.parent();if(!f[(y3I+Z4J.Y8+Z4J.n6I+X7J+L1)]((w8+r9X+Z4J.Y8+B2X+Z4J.q2+w8)))if(f[(y3I+Z1+X7J+Z4J.Y8+Z4J.n6I+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+D0X+E9))){a[Z4J.n6I][p6J][(e5X+Q0o+Z4J.w1I+g3X+y3I)](a[Z4J.n6I][p6J][(Z8I+d1X+F0I+U1I)]()-1);a[J3J]();a[(z6+C0+Z4J.Y8+z0X+y9I+Z4J.o6I)]();a[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][O6I]();}
else if(f[F4J](b+(F6X+S3I+Z4J.V2+Z4J.w1I+U1+Z8I+y3I+Z4J.i0I))){a[(F4+a5I+i8J+g6+t7+U1I)](a[Z4J.n6I][(S0+k6I+Z4J.z5I+y3)],a[Z4J.n6I][(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][f5J]()+1);a[(n8J+Z4J.q2+Z5J+q3I+Z4J.q2)]();a[(n8J+Z4J.A4+G4X+X0I+Z4J.Y8+Z4J.F1I+l8)]();a[(w8+S7)][(S3I+n8X+n4J)][(O6I)]();}
else if(f[(C3I+Z4J.n6I+G4X+Z4J.z5I+Z1+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+t7+g8X))){c=f.parent()[(T9X)]((I2J+K3X))[0];c[d5]=c[(Z4J.n6I+Z4J.q2+p5J+Z4J.q2+p9J+Z4J.F1I+Q5)]!==c[V6X].length-1?c[(Z4J.n6I+w7+K3X+U6I+w8+p5)]+1:0;d(c)[l2]();}
else if(f[(y3I+P4J+Z4J.z5I+L1)](b+(F6X+S3I+f2J+f9J+Z4J.w1I+g9I))){c=f.parent()[(K3J+w8)]((I2J+K3X))[0];c[d5]=c[(u1+Z4J.z5I+K3X+Z4J.q2+w8+x1+D7X+z0J)]===0?c[(Z4J.w1I+H6J+Z4J.n6I)].length-1:c[(Z4J.n6I+Z4J.q2+m0I+m9J+y5+w8+Z4J.q2+z0J)]-1;d(c)[l2]();}
else{if(!a[Z4J.n6I][w8])a[Z4J.n6I][w8]=a[z3J](new Date);a[Z4J.n6I][w8][c9X](c.data("year"));a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+D7+W0I+k5J+Z4J.F1I+Z4J.i0I+y3I)](c.data((o5I+Z4J.w1I+r1J)));a[Z4J.n6I][w8][D0J](c.data((w8+y3)));a[(F4+j0J+h7J+o5+k6I+Z4J.R0I+Z4J.i0I)](true);setTimeout(function(){a[(F4+h1I+w8+Z4J.q2)]();}
,10);}
}
else a[(Z6J)][j0X][(c8I+l0)]();}
}
);}
,_compareDates:function(a,b){var Z3X="_dateToUtcString",X8X="cS",I8J="dateToUt";return this[(F4+I8J+X8X+Z4J.i0I+b7J+Z8I)](a)===this[Z3X](b);}
,_correctMonth:function(a,b){var N4X="Mont",K4="setUTCMonth",a1X="sI",c8J="_da",c=this[(c8J+Z4J.g7I+a1X+Z4J.F1I+g6+t7+Z4J.i0I+y3I)](a[W2X](),b),e=a[Y1I]()>c;a[K4](b);e&&(a[(Z4J.n6I+Z4J.q2+o1J+G4X+j3+z1+Z4J.q2)](c),a[(u1+m8+W0I+N4X+y3I)](b));}
,_daysInMonth:function(a,b){return [31,0===a%4&&(0!==a%100||0===a%400)?29:28,31,30,31,30,31,31,30,31,30,31][b];}
,_dateToUtc:function(a){var H9I="getS",t0X="getHours";return new Date(Date[G2J](a[D8J](),a[(Z8I+Z4J.A4+g6+S3J+y3I)](),a[(R5+j3+Z4J.Y8+I6I)](),a[t0X](),a[(R5+g6+S3I+Z5X+c1X)](),a[(H9I+Z4J.q2+Z4J.V2+t7+w5I)]()));}
,_dateToUtcString:function(a){var v4I="getU",q1J="tUTCMont",r8J="_pad",w1J="lYe";return a[(R5+D7+Q8J+g8J+w1J+v6)]()+"-"+this[r8J](a[(n6+q1J+y3I)]()+1)+"-"+this[(F4+k6I+b4)](a[(v4I+X6+G4X+N8J+Z4J.i0I+Z4J.q2)]());}
,_hide:function(){var e4I="clic",i5J="dow",r3I="esp",a=this[Z4J.n6I][(g7X+o5I+r3I+N4+Z4J.q2)];this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+u2X+Z4J.o6I)][K7X]();d(j)[(Z4J.w1I+f4)]("."+a);d(q)[(Z4J.w1I+c8I+c8I)]((l6+Z4J.g7I+i5J+Z4J.F1I+Z4J.l0X)+a);d("div.DTE_Body_Content")[(Z4J.w1I+f4)]("scroll."+a);d((G8X+w8+Z4J.g7I))[t9J]((e4I+u3I+Z4J.l0X)+a);}
,_hours24To12:function(a){return 0===a?12:12<a?a-12:a;}
,_htmlDay:function(a){var S5='ay',q6X='tt',E5="day",B2="disa";if(a.empty)return '<td class="empty"></td>';var b=[(w8+y3)],c=this[Z4J.V2][N7X];a[(B2+N8+Z4J.z5I+Z4J.q2+w8)]&&b[q7I]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I));a[(Z4J.i0I+G1+Z4J.Y8+Z4J.g7I)]&&b[q7I]("today");a[r4X]&&b[(l2I+w5)]("selected");return '<td data-day="'+a[(E5)]+(k6J+B2I+t8J+n9J+n9J+i8X)+b[W6I](" ")+'"><button class="'+c+(F6X+N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+W4J)+c+(m6+m2I+q4I+F2J+k6J+c0X+H3J+i8X+Z4I+B0X+q6X+d9I+v9I+k6J+m2I+h1+q4I+m6+F2J+m8I+L6+i8X)+a[(j1+Z4J.Y8+Z4J.o6I)]+'" data-month="'+a[(Z8J+Z4J.F1I+U1I)]+(k6J+m2I+h1+q4I+m6+m2I+S5+i8X)+a[E5]+(H6)+a[(E5)]+(P0o+N8+n4J+Z4J.i0I+t7+U+Z4J.i0I+w8+N2X);}
,_htmlMonth:function(a,b){var Y9="><",a1I="Mon",c7I='ead',h6X="kN",e8I="showWeekNumber",p0I="refi",X3J="_htmlWeekOfYear",f3X="Nu",H4X="owWeek",d2J="_htmlDay",c4="fu",W5="etUTC",S0o="ys",q4J="sab",U6J="_compareDates",d3J="_comp",u4J="Secon",L1X="UTCMin",m5J="setUTCHours",g5="setSeconds",V0J="setUTCMinutes",T2="TCHo",S3="axDate",l7X="irstD",u8I="TCDa",i7J="_daysInMonth",c=new Date,e=this[i7J](a,b),f=(new Date(Date[G2J](a,b,1)))[(Z8I+Z4J.q2+m8+u8I+Z4J.g7I)](),g=[],h=[];0<this[Z4J.V2][G7I]&&(f-=this[Z4J.V2][(c8I+l7X+y3)],0>f&&(f+=7));for(var i=e+f,j=i;7<j;)j-=7;var i=i+(7-j),j=this[Z4J.V2][R6J],m=this[Z4J.V2][(o5I+S3)];j&&(j[(Z4J.n6I+K5I+T2+Z4J.R0I+B9X)](0),j[V0J](0),j[g5](0));m&&(m[m5J](23),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+L1X+Z4J.R0I+c1X)](59),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+u4J+w5I)](59));for(var n=0,p=0;n<i;n++){var o=new Date(Date[G2J](a,b,1+(n-f))),q=this[Z4J.n6I][w8]?this[(d3J+v6+Z4J.q2+N8J+c1X)](o,this[Z4J.n6I][w8]):!1,r=this[U6J](o,c),s=n<f||n>=e+f,t=j&&o<j||m&&o>m,v=this[Z4J.V2][(H0J+q4J+Z4J.z5I+Z4J.q2+j3+Z4J.Y8+S0o)];d[(r9X+X0+Z4J.o6I+y3)](v)&&-1!==d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Y8X+Z4J.g7I)](o[(Z8I+W5+N8J+Z4J.g7I)](),v)?t=!0:(c4+M7X+Z4J.i0I+S3I+t7)===typeof v&&!0===v(o)&&(t=!0);h[(k6I+Z4J.R0I+w5)](this[d2J]({day:1+(n-f),month:b,year:a,selected:q,today:r,disabled:t,empty:s}
));7===++p&&(this[Z4J.V2][(Z4J.n6I+y3I+H4X+f3X+o5I+N8+Q2)]&&h[(Z4J.R0I+Z4J.F1I+Z4J.n6I+h1I+c8I+Z4J.i0I)](this[X3J](n-f,b,a)),g[q7I]("<tr>"+h[W6I]("")+(P0o+Z4J.i0I+Z4J.o6I+N2X)),h=[],p=0);}
c=this[Z4J.V2][(Z4J.V2+q2J+i1+p0I+z0J)]+(F6X+Z4J.i0I+Z4J.Y8+l3);this[Z4J.V2][e8I]&&(c+=(W4J+j0J+Z4J.q2+Z4J.q2+h6X+Z4J.R0I+P7J+Z4J.q2+Z4J.o6I));return (x5+c0X+M9I+K2X+q2X+B2I+P7I+b6+n9J+i8X)+c+(b0X+c0X+v0J+c7I+y2)+this[(F4+h0J+Z4J.z5I+a1I+Z4J.i0I+y3I+w7I+b4)]()+(P0o+Z4J.i0I+W7X+w8+Y9+Z4J.i0I+N8+i2X+N2X)+g[W6I]("")+(P0o+Z4J.i0I+N8+Z4J.w1I+g3I+U+Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2+N2X);}
,_htmlMonthHead:function(){var x5I="ush",v7I="Num",O2I="eek",a=[],b=this[Z4J.V2][G7I],c=this[Z4J.V2][(S3I+U1X+B0o+Z4J.F1I)],e=function(a){var T8I="weekdays";for(a+=b;7<=a;)a-=7;return c[T8I][a];}
;this[Z4J.V2][(Z4J.n6I+y3I+O2+j0I+O2I+v7I+N8+Z4J.q2+Z4J.o6I)]&&a[(k6I+x5I)]("<th></th>");for(var d=0;7>d;d++)a[(l2I+Z4J.n6I+y3I)]((M4X+Z4J.i0I+y3I+N2X)+e(d)+(P0o+Z4J.i0I+y3I+N2X));return a[(Z4J.i5I+Z4J.w1I+S3I+Z4J.F1I)]("");}
,_htmlWeekOfYear:function(a,b,c){var l3J="classPr",j8I="CDa",l7="ei",e=new Date(c,0,1),a=Math[(Z4J.V2+l7+Z4J.z5I)](((new Date(c,b,a)-e)/864E5+e[(Z8I+Z4J.q2+o1J+j8I+Z4J.g7I)]()+1)/7);return '<td class="'+this[Z4J.V2][(l3J+Z4J.q2+c8I+S3I+z0J)]+(m6+R7J+m8I+m8I+b9I+H6)+a+(P0o+Z4J.i0I+w8+N2X);}
,_options:function(a,b,c){var n8I="assP";c||(c=b);a=this[Z6J][(H0X+B7+S3I+F3I)][T9X]((u1+p5J+Z4J.l0X)+this[Z4J.V2][(Z4J.V2+Z4J.z5I+n8I+Z4J.o6I+Z4J.q2+b9+z0J)]+"-"+a);a.empty();for(var e=0,d=b.length;e<d;e++)a[w1X]('<option value="'+b[e]+(H6)+c[e]+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionSet:function(a,b){var Z0o="unknown",B1I="ected",k2J="refix",w5X="clas",c=this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+Y0o+Q2)][(c8I+h5J)]("select."+this[Z4J.V2][(w5X+x7X+k2J)]+"-"+a),e=c.parent()[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]("span");c[y1](b);c=c[(c8I+Y0o+w8)]((Y7X+J0o+Z4J.n6I+w7+B1I));e[(E4J+o5I+Z4J.z5I)](0!==c.length?c[(I6I+z0J+Z4J.i0I)]():this[Z4J.V2][k1I][Z0o]);}
,_optionsTime:function(a,b,c){var x0J="fix",a=this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][T9X]((u1+m0I+i8J+Z4J.l0X)+this[Z4J.V2][(Q4J+Z1+Z4J.n6I+i1+Z4J.o6I+Z4J.q2+x0J)]+"-"+a),e=0,d=b,f=12===b?function(a){return a;}
:this[(j6J+Z4J.Y8+w8)];12===b&&(e=1,d=13);for(b=e;b<d;b+=c)a[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]('<option value="'+b+'">'+f(b)+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionsTitle:function(){var M1X="_range",H4J="hs",n3J="_r",w7J="mon",p9I="opt",V0X="yearRange",f9="Ye",o4="tFull",M6J="rRang",V5="yea",W0X="getF",a=this[Z4J.V2][(D7I+R6)],b=this[Z4J.V2][(o5I+S3I+Z4J.F1I+N8J+Z4J.i0I+Z4J.q2)],c=this[Z4J.V2][(A9J+z0J+n7J+Z4J.q2)],b=b?b[(n6+P1+Z4J.R0I+q5I+V9+Z4J.q2+v6)]():null,c=c?c[(W0X+g8J+D3X)]():null,b=null!==b?b:(new Date)[D8J]()-this[Z4J.V2][(V5+M6J+Z4J.q2)],c=null!==c?c:(new Date)[(n6+o4+f9+Z4J.Y8+Z4J.o6I)]()+this[Z4J.V2][V0X];this[(F4+p9I+s4+Z4J.n6I)]((w7J+Z4J.i0I+y3I),this[(n3J+Q+n6)](0,11),a[(w7J+Z4J.i0I+H4J)]);this[u8]("year",this[M1X](b,c));}
,_pad:function(a){return 10>a?"0"+a:a;}
,_position:function(){var e2X="ndTo",j5I="erHeight",E8J="out",G3X="onta",a=this[Z6J][(Y0o+W2I)][(t9J+Y9J)](),b=this[(Z6J)][(Z4J.V2+G3X+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)],c=this[(w8+S7)][(S3I+r4)][(E8J+j5I)]();b[v3J]({top:a.top+c,left:a[s2I]}
)[(Z4J.Y8+N0J+Z4J.q2+e2X)]("body");var e=b[u6I](),f=d("body")[(Z4J.n6I+Z4J.V2+P1X+g6J+k6I)]();a.top+c+e-f>d(j).height()&&(a=a.top-e,b[(Z4J.V2+Z4J.n6I+Z4J.n6I)]((Z4J.i0I+Z4J.w1I+k6I),0>a?0:a));}
,_range:function(a,b){for(var c=[],e=a;e<=b;e++)c[q7I](e);return c;}
,_setCalander:function(){var R8="isplay",f5="lM",p0="_htm";this[Z6J][(Z4J.V2+w2X+Z4J.F1I+Z4J.C6J+Z4J.o6I)].empty()[w1X](this[(p0+f5+t7+Z4J.i0I+y3I)](this[Z4J.n6I][(w8+R8)][W2X](),this[Z4J.n6I][(w8+S3I+Z4J.n6I+V7I+Z4J.g7I)][(Z8I+Z4J.A4+D7+W0I+g6+Z4J.w1I+r1J)]()));}
,_setTitle:function(){var c4I="lY",I7="CFul",H6X="displ";this[(F4+Z4J.w1I+k6I+Z4J.i0I+Q7X+Z4J.F1I+w9+Z4J.i0I)]((Z8J+g3X+y3I),this[Z4J.n6I][(H6X+Z4J.Y8+Z4J.g7I)][f5J]());this[L3I]((Z4J.g7I+H5I),this[Z4J.n6I][p6J][(Z8I+Z4J.q2+m8+X6+I7+c4I+Z4J.q2+Z4J.Y8+Z4J.o6I)]());}
,_setTime:function(){var z9I="optio",l1J="Mi",d7I="4T",j3J="_ho",s4I="hou",H8="ptionS",b5J="getUTCHours",a=this[Z4J.n6I][w8],b=a?a[b5J]():0;this[Z4J.n6I][B8X][i4X]?(this[(F4+Z4J.w1I+H8+Z4J.q2+Z4J.i0I)]((s4I+B9X),this[(j3J+g5J+Z4J.n6I+w6X+d7I+Z4J.w1I+U1X+w6X)](b)),this[L3I]("ampm",12>b?(Z4J.Y8+o5I):(k6I+o5I))):this[L3I]((I9J+g5J+Z4J.n6I),b);this[L3I]((o5I+S3I+Z4J.F1I+Z4J.R0I+c1X),a?a[(Z8I+Z4J.q2+m8+W0I+l1J+Z4J.F1I+n4J+Z4J.q2+Z4J.n6I)]():0);this[(F4+z9I+Z4J.F1I+R0+Z4J.q2+Z4J.i0I)]("seconds",a?a[(n6+Z4J.i0I+w9+H0X+w5I)]():0);}
,_show:function(){var t1="yd",u0I="scr",Y="_position",V1="esiz",F1X="mesp",a=this,b=this[Z4J.n6I][(g7X+F1X+Y7I)];this[(F4+E7I+Z4J.n6I+S3I+Z4J.i0I+s4)]();d(j)[t7]("scroll."+b+(W4J+Z4J.o6I+V1+Z4J.q2+Z4J.l0X)+b,function(){a[Y]();}
);d("div.DTE_Body_Content")[(Z4J.w1I+Z4J.F1I)]((u0I+A0I+Z4J.z5I+Z4J.l0X)+b,function(){a[Y]();}
);d(q)[t7]((l6+t1+o0I+Z4J.l0X)+b,function(b){var b8J="key",z3="ey",x9J="eyCo";(9===b[(u3I+x9J+y9I)]||27===b[(u3I+z3+G4X+O1X)]||13===b[(b8J+G4X+O1X)])&&a[(M4)]();}
);setTimeout(function(){d("body")[t7]("click."+b,function(b){var X1X="rg";!d(b[d6J])[(k6I+v6+q8+Z4J.i0I+Z4J.n6I)]()[k6X](a[(w8+Z4J.w1I+o5I)][(Z4J.V2+S3J+A7+F3I)]).length&&b[(B7+X1X+Z4J.A4)]!==a[(Z6J)][(Y0o+W2I)][0]&&a[M4]();}
);}
,10);}
,_writeOutput:function(a){var Y6I="_pa",a2J="Yea",T5I="momentLocale",p3="utc",b=this[Z4J.n6I][w8],b=j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]?j[H7I][p3](b,h,this[Z4J.V2][T5I],this[Z4J.V2][N3I])[o7J](this[Z4J.V2][o7J]):b[(n6+m8+X6+G4X+X5+q5I+a2J+Z4J.o6I)]()+"-"+this[(Y6I+w8)](b[f5J]()+1)+"-"+this[(j6J+Z4J.Y8+w8)](b[Y1I]());this[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][(e7J+Z4J.z5I)](b);a&&this[Z6J][(S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][O6I]();}
}
);f[(j3+z1+Z4J.q2+X6+S3I+A1J)][(F4+e9X+V3+Z4J.q2)]=E0;f[H1J][(w8+Z4J.q2+g5X+Z4J.n6I)]={classPrefix:L4J,disableDays:c3X,firstDay:N0,format:(V9+r8+V9+F6X+g6+g6+F6X+j3+j3),i18n:f[(w8+W9+Z4J.Y8+g8J+Z4J.I2I)][(D1X+Z4J.F1I)][(w8+Z4J.Y8+Z4J.i0I+O7J+Z4J.q2)],maxDate:c3X,minDate:c3X,minutesIncrement:N0,momentStrict:!E0,momentLocale:q8,secondsIncrement:N0,showWeekNumber:!N0,yearRange:f2I}
;var I=function(a,b){var Q1X="div.upload button",D4I="...",f4J="hoose",i6="uploadText";if(c3X===b||b===h)b=a[i6]||(G4X+f4J+W4J+c8I+S3I+Z4J.z5I+Z4J.q2+D4I);a[(L3X+l2I+Z4J.i0I)][(b9+F9X)](Q1X)[z6I](b);}
,M=function(a,b,c){var U2="]",Y2X="=",W7="[",b4J="nder",l3X="oDr",i7="E_Upl",i4="agex",w6I="eav",R3I="drop",I6X="Drag",n8="pT",y2I="gDro",A6="dragDrop",k0="eRea",n3I='ered',D0o='ell',v7X='ll',v2='ton',X='lue',y0I='V',a9='il',x6='yp',M1I='np',O9='" /><',L2X='load',c3J='_ta',z0I='itor_uplo',F5J="asses",e=a[(Z4J.V2+Z4J.z5I+F5J)][y0o][g8],g=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+m2I+z0I+q4I+m2I+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+B0X+c3J+Z4I+K2X+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+G9J+d9I+R7J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+B2I+B5+P7I+q2X+B0X+H7J+L2X+b0X+Z4I+t4X+q2X+B2I+P7I+o5X+i8X)+e+(O9+T7I+M1I+B0X+c0X+q2X+c0X+x6+m8I+i8X+c2I+a9+m8I+t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+B2I+B5+P7I+q2X+B2I+K2X+L6+y0I+q4I+X+b0X+Z4I+B0X+c0X+v2+q2X+B2I+t8J+e0J+i8X)+e+(s4X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+U9+n9J+i8X+G9J+d9I+R7J+q2X+n9J+m8I+A7X+v9I+m2I+b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+B2I+m8I+v7X+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+m2I+G9J+d9I+H7J+b0X+n9J+H7J+q4I+v9I+P8X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+v3+q2X+B2I+t8J+n9J+n9J+i8X+B2I+D0o+b0X+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+G9J+V6+m2I+n3I+t3X+m2I+v3+o9+m2I+T7I+Y7J+o9+m2I+T7I+Y7J+o9+m2I+v3+y2));b[(F4+S3I+Z4J.F1I+l2I+Z4J.i0I)]=g;b[(E4+N8+m0I+w8)]=!E0;I(b);if(j[(o3+S3I+Z4J.z5I+k0+l8)]&&!N0!==b[A6]){g[T9X]((H0J+g0J+Z4J.l0X+w8+X6X+W4J+Z4J.n6I+o8I+Z4J.F1I))[(Z4J.i0I+s0X)](b[(J4I+Z4J.Y8+y2I+n8+Z4J.q2+z0J+Z4J.i0I)]||(I6X+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+W4J+Z4J.Y8+W4J+c8I+G6J+Z4J.q2+W4J+y3I+Q2+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.R0I+M7I+y5J));var h=g[(c8I+S3I+Z4J.F1I+w8)]((w8+P9X+Z4J.l0X+w8+Z4J.o6I+Z4J.w1I+k6I));h[(t7)](R3I,function(e){var V6J="eClas",c9="dataTransfer",Z8X="lEv",L9X="orig";b[x4J]&&(f[(Z4J.R0I+A5I+b4)](a,b,e[(L9X+S3I+Z4J.F1I+Z4J.Y8+Z8X+Z4J.q2+Z4J.F1I+Z4J.i0I)][c9][G0I],I,c),h[(Z4J.o6I+i2J+g0J+V6J+Z4J.n6I)]((a0X+Z4J.o6I)));return !N0;}
)[t7]((L4I+Z8I+Z4J.z5I+w6I+Z4J.q2+W4J+w8+Z4J.o6I+i4+Z9X),function(){var o5J="over",O5I="oveC";b[x4J]&&h[(Z4J.o6I+Z4J.q2+o5I+O5I+q2J)](o5J);return !N0;}
)[(t7)]((J4I+L9+a0X+Z4J.o6I),function(){b[(F4+q8+Z4J.Y8+N8+P3I)]&&h[d8J]((a0X+Z4J.o6I));return !N0;}
);a[(Z4J.w1I+Z4J.F1I)](Y5X,function(){var m6X="_Upl",l9I="ver";d(Q5X)[t7]((L4I+Z8I+Z4J.w1I+l9I+Z4J.l0X+j3+X6+i7+Z4J.w1I+Z4J.Y8+w8+W4J+w8+k7X+k6I+Z4J.l0X+j3+X7+m6X+h6+w8),function(){return !N0;}
);}
)[(t7)](d5I,function(){var l6I="E_U",m7I="gov";d((N8+G1+Z4J.g7I))[(d6+c8I)]((w8+Z4J.o6I+Z4J.Y8+m7I+Q2+Z4J.l0X+j3+X6+i7+h6+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+Z4J.l0X+j3+X6+l6I+k6I+Z4J.z5I+Z4J.w1I+b4));}
);}
else g[d8J]((Z4J.F1I+l3X+Z4J.w1I+k6I)),g[(Z4J.Y8+N0J+Z4J.q2+F9X)](g[(c8I+S3I+Z4J.F1I+w8)]((w8+S3I+g0J+Z4J.l0X+Z4J.o6I+Z4J.q2+b4J+Z4J.q2+w8)));g[(b9+Z4J.F1I+w8)](I0I)[t7]((Z4J.V2+u1I+z9J),function(){f[j3I][r2][Y9J][L5I](a,b,g0I);}
);g[T9X]((Y0o+l2I+Z4J.i0I+W7+Z4J.i0I+Z4J.g7I+g6I+Y2X+c8I+S3I+Z4J.z5I+Z4J.q2+U2))[(t7)]((Z4J.V2+y3I+Z4J.Y8+M5X+Z4J.q2),function(){f[r2](a,b,this[(c8I+S3I+m0I+Z4J.n6I)],I,function(b){var M2="input[type=file]";c[(d5J+Z4J.z5I)](a,b);g[T9X](M2)[(g0J+Z4J.Y8+Z4J.z5I)](g0I);}
);}
);return g;}
,A=function(a){setTimeout(function(){var d0J="trigge";a[(d0J+Z4J.o6I)]((v1+Z4J.F1I+n6),{editor:!E0,editorSet:!E0}
);}
,E0);}
,s=f[(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Y5I+k6I+B4)],p=d[(p5+Z4J.i0I+q8+w8)](!E0,{}
,f[(E1)][w8J],{get:function(a){return a[(F4+S3I+Z4J.F1I+k6I+n4J)][(g0J+X0I)]();}
,set:function(a,b){a[m8X][y1](b);A(a[(F4+S3I+Z4J.F1I+W2I)]);}
,enable:function(a){a[(m8X)][x3I]((S0+Z4J.Y8+N8+Z4J.z5I+u9),q9I);}
,disable:function(a){var e3X="isab";a[m8X][(x3I)]((w8+e3X+Z4J.z5I+u9),v3X);}
}
);s[e5]={create:function(a){a[(F4+y1)]=a[o0X];return c3X;}
,get:function(a){return a[C7];}
,set:function(a,b){a[(W5J+Z4J.Y8+Z4J.z5I)]=b;}
}
;s[A6I]=d[H3I](!E0,{}
,p,{create:function(a){a[(F4+Y0o+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+Z4J.R0I+Z4J.i0I+i9X))[l5X](d[H3I]({id:f[T0J](a[(J1J)]),type:(k0X),readonly:A6I}
,a[(z1+U8I)]||{}
));return a[(F4+S3I+P3J+Z4J.i0I)][E0];}
}
);s[k0X]=d[H3I](!E0,{}
,p,{create:function(a){a[(m8X)]=d((M4X+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I+i9X))[(Z4J.Y8+c2J)](d[H3I]({id:f[T0J](a[(J1J)]),type:(W6X+Z4J.i0I)}
,a[l5X]||{}
));return a[(F4+S3I+r4)][E0];}
}
);s[(o8I+Z4J.n6I+Z4J.n6I+j0J+Z4J.w1I+I3X)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,p,{create:function(a){var e8J="word";a[m8X]=d((M4X+S3I+n8X+n4J+i9X))[l5X](d[(p5+Z4J.i0I+Z4J.q2+F9X)]({id:f[T0J](a[(S3I+w8)]),type:(o8I+t8+e8J)}
,a[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]||{}
));return a[m8X][E0];}
}
);s[P5X]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var g3J="tend",R1J="tar";a[(z1J+Z4J.F1I+k6I+n4J)]=d((M4X+Z4J.i0I+Z4J.q2+z0J+R1J+Z4J.q2+Z4J.Y8+i9X))[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)](d[(p5+g3J)]({id:f[T0J](a[J1J])}
,a[l5X]||{}
));return a[(F4+Y0o+l2I+Z4J.i0I)][E0];}
}
);s[(I2J+K3X)]=d[(p5+I6I+F9X)](!0,{}
,p,{_addOptions:function(a,b){var Y4="placeholderDisabled",D7J="olderDi",X6I="ceh",u7="placeholderValue",R7X="rVa",u9I="olde",D9="eh",w3I="lac",n5J="eholde",c=a[(m8X)][0][V6X],e=0;c.length=0;if(a[(M7I+N4+n5J+Z4J.o6I)]!==h){e=e+1;c[0]=new Option(a[s4J],a[(k6I+w3I+D9+u9I+R7X+Z4J.z5I+Z4J.R0I+Z4J.q2)]!==h?a[u7]:"");var d=a[(k6I+Z4J.z5I+Z4J.Y8+X6I+D7J+Z4J.n6I+Z4J.Y8+B2X+Z4J.q2+w8)]!==h?a[Y4]:true;c[0][(y3I+J1J+w8+Z4J.q2+Z4J.F1I)]=d;c[0][c6I]=d;}
b&&f[z4J](b,a[d1],function(a,b,d){c[d+e]=new Option(b,a);c[d+e][z5J]=a;}
);}
,create:function(a){var P0="ipOpts",v9X="ele";a[m8X]=d((M4X+Z4J.n6I+v9X+Z4J.V2+Z4J.i0I+i9X))[l5X](d[(Z4J.q2+z0J+Z4J.i0I+C5I)]({id:f[T0J](a[J1J]),multiple:a[s8J]===true}
,a[(Z4J.Y8+c2J)]||{}
))[(t7)]((Z4J.V2+y3I+Z4J.Y8+Z4J.F1I+Z8I+Z4J.q2+Z4J.l0X+w8+Z4J.i0I+Z4J.q2),function(b,c){var o9J="_lastSet";if(!c||!c[(u9+S3I+Z4J.i0I+u2)])a[o9J]=s[T8J][(Z8I+Z4J.q2+Z4J.i0I)](a);}
);s[(u1+Z4J.z5I+Z4J.V1I+Z4J.i0I)][k3X](a,a[V6X]||a[P0]);return a[(L3X+W2I)][0];}
,update:function(a,b){var w3="lastS",Q4X="ddOp";s[(P2J+Z4J.i0I)][(y7J+Q4X+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a,b);var c=a[(F4+w3+Z4J.q2+Z4J.i0I)];c!==h&&s[T8J][(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,c,true);A(a[(F4+Y0o+k6I+n4J)]);}
,get:function(a){var b=a[m8X][(b9+F9X)]((Z4J.w1I+Q8I+S3I+t7+J0o+Z4J.n6I+Z4J.q2+m0I+i8J+Z4J.q2+w8))[(A9J+k6I)](function(){return this[(F4+u9+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+y1)];}
)[(Q3I+T0)]();return a[s8J]?a[(Z4J.n6I+Z4J.q2+o8I+Y8X+Z4J.i0I+Z4J.w1I+Z4J.o6I)]?b[W6I](a[z1I]):b:b.length?b[0]:null;}
,set:function(a,b,c){var E1I="ple",A8="tS";if(!c)a[(T1J+Z1+A8+Z4J.A4)]=b;a[(x4X+Z4J.z5I+t1I+k6I+Z4J.z5I+Z4J.q2)]&&a[z1I]&&!d[(r9X+U4X+P8J+Z4J.g7I)](b)?b=b[z5X](a[(u1+k6I+Z4J.Y8+Y8X+Q3I+Z4J.o6I)]):d[S8](b)||(b=[b]);var e,f=b.length,g,h=false,i=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)][T9X]("option");a[(z1J+n8X+n4J)][(c8I+Y0o+w8)]((V7+p9X+Z4J.F1I))[(s8X)](function(){g=false;for(e=0;e<f;e++)if(this[(F4+Z4J.q2+H0J+E7+y1)]==b[e]){h=g=true;break;}
this[r4X]=g;}
);if(a[s4J]&&!h&&!a[(o5I+I8I+S3I+E1I)]&&i.length)i[0][r4X]=true;c||A(a[(L3X+l2I+Z4J.i0I)]);return h;}
,destroy:function(a){a[(z1J+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(Z4J.w1I+f4)]((v1+Z4J.F1I+n6+Z4J.l0X+w8+Z4J.i0I+Z4J.q2));}
}
);s[M2X]=d[(Z4J.q2+z0+F9X)](!0,{}
,p,{_addOptions:function(a,b){var d8X="sPa",c=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)].empty();b&&f[(k6I+A7+B9X)](b,a[(V7+Z4J.i0I+Q7X+Z4J.F1I+d8X+S3I+Z4J.o6I)],function(b,g,h){var T2J="eId",I9="af";c[w1X]('<div><input id="'+f[(Z4J.n6I+I9+T2J)](a[(J1J)])+"_"+h+'" type="checkbox" /><label for="'+f[(Z4J.n6I+I9+Z4J.q2+x1+w8)](a[J1J])+"_"+h+(H6)+g+"</label></div>");d((h5+Z4J.i0I+J0o+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.i0I),c)[(Z4J.Y8+E2I+Z4J.o6I)]((g0J+X0I+Z4J.R0I+Z4J.q2),b)[0][z5J]=b;}
);}
,create:function(a){var D6="pti",n0="Op",k3I="kbo";a[m8X]=d((M4X+w8+P9X+t4I));s[(O9J+Z4J.V1I+k3I+z0J)][(F4+Z4J.Y8+w8+w8+n0+t1I+t7+Z4J.n6I)](a,a[(Z4J.w1I+D6+p3J)]||a[(H0o+n0+Z4J.I2I)]);return a[(L3X+k6I+n4J)][0];}
,get:function(a){var W3X="rato",i8="jo",b=[];a[m8X][(T9X)]("input:checked")[(Z4J.q2+Z4J.Y8+O9J)](function(){b[(l2I+Z4J.n6I+y3I)](this[z5J]);}
);return !a[(u1+k6I+Z4J.Y8+Z4J.o6I+Z4J.Y8+Q3I+Z4J.o6I)]?b:b.length===1?b[0]:b[(i8+S3I+Z4J.F1I)](a[(u1+o8I+W3X+Z4J.o6I)]);}
,set:function(a,b){var c=a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(b9+Z4J.F1I+w8)]((h5+Z4J.i0I));!d[S8](b)&&typeof b===(z6X+Y0o+Z8I)?b=b[(Z4J.n6I+k6I+Z4J.z5I+Z9X)](a[z1I]||"|"):d[S8](b)||(b=[b]);var e,f=b.length,g;c[s8X](function(){g=false;for(e=0;e<f;e++)if(this[z5J]==b[e]){g=true;break;}
this[(O9J+Z4J.V1I+u3I+Z4J.q2+w8)]=g;}
);A(c);}
,enable:function(a){a[(P6X+Z4J.i0I)][T9X]((Y0o+k6I+n4J))[(k6I+k7X+k6I)]((H0J+Z4J.n6I+Z4J.w2+P3I),false);}
,disable:function(a){a[m8X][T9X]((S3I+r4))[(G0J+V7)]("disabled",true);}
,update:function(a,b){var r4J="ddO",c=s[M2X],d=c[(Z8I+Z4J.q2+Z4J.i0I)](a);c[(F4+Z4J.Y8+r4J+Q8I+J5X)](a,b);c[(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,d);}
}
);s[r7J]=d[H3I](!0,{}
,p,{_addOptions:function(a,b){var c=a[m8X].empty();b&&f[(k6I+Z4J.Y8+S3I+Z4J.o6I+Z4J.n6I)](b,a[d1],function(b,g,h){var P8='me',m3I='dio';c[(e0+K4X)]('<div><input id="'+f[T0J](a[J1J])+"_"+h+(k6J+c0X+H3J+i8X+G9J+q4I+m3I+k6J+v9I+q4I+P8+i8X)+a[(Z4J.F1I+a0+Z4J.q2)]+'" /><label for="'+f[T0J](a[(S3I+w8)])+"_"+h+'">'+g+(P0o+Z4J.z5I+Z4J.Y8+N8+w7+U+w8+S3I+g0J+N2X));d("input:last",c)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value",b)[0][(F4+u9+T1+Z4J.o6I+W5J+X0I)]=b;}
);}
,create:function(a){var m4I="ptio",n0X="Opt";a[(z1J+n8X+Z4J.R0I+Z4J.i0I)]=d((M4X+w8+P9X+t4I));s[(Z4J.o6I+b4+Q7X)][(F4+Z4J.Y8+N9I+n0X+S3I+p3J)](a,a[(Z4J.w1I+m4I+Z4J.F1I+Z4J.n6I)]||a[(H0o+s1+Q8I+Z4J.n6I)]);this[(t7)]("open",function(){a[m8X][T9X]("input")[s8X](function(){var c6J="reC";if(this[(j6J+c6J+y3I+Z4J.q2+O0o+w8)])this[B6J]=true;}
);}
);return a[m8X][0];}
,get:function(a){a=a[(F4+S3I+r4)][(c8I+S3I+F9X)]((X4X+Z4J.R0I+Z4J.i0I+J0o+Z4J.V2+t7X+u3I+u9));return a.length?a[0][(F4+Z4J.q2+w8+Z9X+x2J+y1)]:h;}
,set:function(a,b){a[m8X][(b9+Z4J.F1I+w8)]((Y0o+k6I+n4J))[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](function(){var n2X="eck",A1I="_preChecked";this[A1I]=false;if(this[(F4+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+g0J+X0I)]==b)this[(F4+k6I+Z4J.o6I+X7I+t7X+u3I+u9)]=this[B6J]=true;else this[(F4+k6I+Z4J.o6I+Z4J.q2+G4X+y3I+n2X+Z4J.q2+w8)]=this[B6J]=false;}
);A(a[m8X][(c8I+S3I+Z4J.F1I+w8)]("input:checked"));}
,enable:function(a){a[(m8X)][(K3J+w8)]("input")[x3I]("disabled",false);}
,disable:function(a){a[m8X][(c8I+Y0o+w8)]((S3I+n8X+Z4J.R0I+Z4J.i0I))[(p4J+k6I)]("disabled",true);}
,update:function(a,b){var m2="eq",y8J="ilt",c=s[(Z4J.o6I+Z4J.Y8+H0J+Z4J.w1I)],d=c[(R5)](a);c[k3X](a,b);var f=a[m8X][T9X]("input");c[(Y9J)](a,f[(c8I+y8J+Q2)]('[value="'+d+'"]').length?d:f[(m2)](0)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value"));}
}
);s[(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)]=d[H3I](!0,{}
,p,{create:function(a){var z2="../../",g2J="teIm",k9="mage",q0J="eI",i6X="822",p8="_2",T4X="ker",X5I="For",C9="dateFormat",L0X="dC";a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+n4J+t4I))[l5X](d[H3I]({id:f[T0J](a[J1J]),type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
,a[(z1+Z4J.i0I+Z4J.o6I)]));if(d[(w8+Z4J.Y8+I6I+k6I+M3J+l6+Z4J.o6I)]){a[(F4+S3I+n8X+Z4J.R0I+Z4J.i0I)][(Z4J.Y8+w8+L0X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("jqueryui");if(!a[C9])a[(Z4J.C6J+I6I+X5I+A9J+Z4J.i0I)]=d[(c1+S1I+Z4J.V2+T4X)][(v0+o3+G4X+p8+i6X)];if(a[(w8+z1+q0J+k9)]===h)a[(Z4J.C6J+g2J+Z4J.Y8+Z8I+Z4J.q2)]=(z2+S3I+o5I+L9+Z4J.q2+Z4J.n6I+w0X+Z4J.V2+Z4J.Y8+Z4J.z5I+q8+w8+Z4J.q2+Z4J.o6I+Z4J.l0X+k6I+Z4J.F1I+Z8I);setTimeout(function(){var y7X="dateImage",P6="Fo";d(a[(L3X+l2I+Z4J.i0I)])[(Z4J.l1+i3X+Z4J.V2+l6+Z4J.o6I)](d[H3I]({showOn:(N8+Z4J.w1I+U1I),dateFormat:a[(Z4J.l1+Z4J.q2+P6+Z4J.o6I+o5I+z1)],buttonImage:a[y7X],buttonImageOnly:true}
,a[(l5J)]));d("#ui-datepicker-div")[v3J]("display",(w0I+Z4J.q2));}
,10);}
else a[m8X][(Z4J.Y8+E2I+Z4J.o6I)]("type",(Z4J.l1+Z4J.q2));return a[(z1J+P3J+Z4J.i0I)][0];}
,set:function(a,b){var n1J="etDa",E4X="atep";d[o0J]&&a[(F4+S3I+Z4J.F1I+k6I+n4J)][F4J]((C3I+Z4J.n6I+j3+E4X+S3I+Z4J.V2+u3I+Q2))?a[m8X][o0J]((Z4J.n6I+n1J+Z4J.i0I+Z4J.q2),b)[l2]():d(a[(z1J+P3J+Z4J.i0I)])[y1](b);}
,enable:function(a){d[o0J]?a[(z1J+n8X+Z4J.R0I+Z4J.i0I)][o0J]("enable"):d(a[(z1J+Z4J.F1I+l2I+Z4J.i0I)])[(G0J+V7)]("disabled",false);}
,disable:function(a){d[(Z4J.l1+i3X+O0o+Z4J.o6I)]?a[(F4+Y0o+l2I+Z4J.i0I)][o0J]("disable"):d(a[(z1J+P3J+Z4J.i0I)])[(p4J+k6I)]((H0J+Z4J.n6I+Z4J.Y8+l3+w8),true);}
,owns:function(a,b){var f6I="epick",f8J="nts",s2J="icker",m6J="paren";return d(b)[(m6J+Z4J.I2I)]((w8+S3I+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+z1+W2+s2J)).length||d(b)[(o8I+C3X+f8J)]((H0J+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+Z4J.Y8+Z4J.i0I+f6I+Z4J.q2+Z4J.o6I+F6X+y3I+h7I+Q2)).length?true:false;}
}
);s[P4]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var E3X="cker";a[(Z0+n4J)]=d((M4X+S3I+Z4J.F1I+W2I+t4I))[(Z4J.Y8+Z4J.i0I+U8I)](d[(Z4J.q2+z0J+Z4J.i0I+C5I)](v3X,{id:f[T0J](a[(S3I+w8)]),type:(W6X+Z4J.i0I)}
,a[l5X]));a[(F4+k6I+S3I+E3X)]=new f[(N8J+I6I+W7I+o5I+Z4J.q2)](a[(L3X+W2I)],d[H3I]({format:a[o7J],i18n:this[(D7I+B0o+Z4J.F1I)][(w8+z1+Z4J.q2+Y0I)]}
,a[l5J]));return a[(L3X+W2I)][E0];}
,set:function(a,b){a[(F4+S1I+z9J+Z4J.q2+Z4J.o6I)][(y1)](b);A(a[m8X]);}
,owns:function(a,b){return a[(j6J+S3I+z9J+Q2)][v2J](b);}
,destroy:function(a){var K3="stroy",F4I="_picker";a[F4I][(y9I+K3)]();}
,minDate:function(a,b){a[(F4+k6I+M3J+l6+Z4J.o6I)][(u6J+Z4J.F1I)](b);}
,maxDate:function(a,b){a[(F4+k6I+S3I+O0o+Z4J.o6I)][(o5I+Z4J.Y8+z0J)](b);}
}
);s[(Z4J.R0I+A5I+Z4J.Y8+w8)]=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,p,{create:function(a){var b=this;return M(b,a,function(c){var x2="Type";f[(c8I+S3I+Z4J.q2+Z0I+x2+Z4J.n6I)][(Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8)][Y9J][(Z4J.V2+Z4J.Y8+q5I)](b,a,c[E0]);}
);}
,get:function(a){return a[(F4+g0J+X0I)];}
,set:function(a,b){var i9I="dito",T2I="dl",n3="ger",e5I="trig",Q6X="noClear",d9J="rT",X8I="lea",H1="FileT",A2X="div.rendered";a[(F4+g0J+Z4J.Y8+Z4J.z5I)]=b;var c=a[(z1J+n8X+Z4J.R0I+Z4J.i0I)];if(a[(w8+N9X+Z4J.g7I)]){var d=c[T9X](A2X);a[(F4+e7J+Z4J.z5I)]?d[(E4J+o5I+Z4J.z5I)](a[(w8+S3I+H2+l7I+Z4J.g7I)](a[C7])):d.empty()[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.n6I+k6I+Z4J.Y8+Z4J.F1I+N2X)+(a[(Z4J.F1I+Z4J.w1I+H1+Z4J.q2+z0J+Z4J.i0I)]||"No file")+"</span>");}
d=c[T9X](I0I);if(b&&a[(Q4J+Z4J.q2+Z4J.Y8+Z4J.o6I+X6+Z4J.q2+z0J+Z4J.i0I)]){d[z6I](a[(Z4J.V2+X8I+d9J+p5+Z4J.i0I)]);c[(J8I+Z4J.w1I+g0J+X7I+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((Z4J.F1I+Z4J.w1I+X7J+H5I));}
else c[(b8X+p2J+Z4J.n6I)](Q6X);a[(P6X+Z4J.i0I)][T9X]((X4X+Z4J.R0I+Z4J.i0I))[(e5I+n3+z8+Z4J.Y8+Z4J.F1I+T2I+Z4J.q2+Z4J.o6I)]((r2+Z4J.l0X+Z4J.q2+i9I+Z4J.o6I),[a[(C7)]]);}
,enable:function(a){a[m8X][T9X]((S3I+r4))[(x3I)]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I),q9I);a[(E4+N8+P3I)]=v3X;}
,disable:function(a){var w4X="_en";a[(F4+S3I+r4)][T9X]((X4X+n4J))[x3I](c6I,v3X);a[(w4X+Z4J.Y8+l3+w8)]=q9I;}
}
);s[(r2+g6+Q+Z4J.g7I)]=d[(s0X+Z4J.q2+F9X)](!0,{}
,p,{create:function(a){var T9="uploadMany",b=this,c=M(b,a,function(c){var M7="ldT";a[C7]=a[(W5J+X0I)][o1I](c);f[(c8I+S3I+Z4J.q2+M7+O7X+B4)][T9][Y9J][(d5J+Z4J.z5I)](b,a,a[(F4+e7J+Z4J.z5I)]);}
);c[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+L1)]((p6+Z4J.i0I+S3I))[(t7)]("click",(u0o+Z4J.i0I+Z4J.w1I+Z4J.F1I+Z4J.l0X+Z4J.o6I+Z4J.q2+f1J+Z4J.q2),function(c){var D4J="stopPropagation";c[D4J]();c=d(this).data((S3I+w8+z0J));a[C7][(Z4J.n6I+k6I+u1I+Z9J)](c,1);f[j3I][T9][Y9J][(L7J+Z4J.z5I+Z4J.z5I)](b,a,a[(W5J+X0I)]);}
);return c;}
,get:function(a){return a[(W5J+X0I)];}
,set:function(a,b){var J9X="_va",S7J="noFileText",k3J="appendTo",L7="ust",t3I="lec",b1I="Uplo";b||(b=[]);if(!d[S8](b))throw (b1I+b4+W4J+Z4J.V2+A0I+t3I+G5X+Z4J.n6I+W4J+o5I+L7+W4J+y3I+Z4J.Y8+l9J+W4J+Z4J.Y8+Z4J.F1I+W4J+Z4J.Y8+Z4J.o6I+Y8X+Z4J.g7I+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+W4J+g0J+X0I+N1J);a[(F4+g0J+X0I)]=b;var c=this,e=a[m8X];if(a[(S0+k6I+c5J)]){e=e[(K3J+w8)]((I1+Z4J.l0X+Z4J.o6I+Z4J.q2+Z4J.F1I+w8+Q2+Z4J.q2+w8)).empty();if(b.length){var f=d("<ul/>")[k3J](e);d[s8X](b,function(b,d){var z9='dx',i1J='ov';f[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.z5I+S3I+N2X)+a[p6J](d,b)+' <button class="'+c[T4][y0o][g8]+(q2X+G9J+m8I+A9I+i1J+m8I+k6J+m2I+h1+q4I+m6+T7I+z9+i8X)+b+'">&times;</button></li>');}
);}
else e[(Z4J.Y8+X1I+w8)]((M4X+Z4J.n6I+k6I+Q+N2X)+(a[S7J]||"No files")+(P0o+Z4J.n6I+o8I+Z4J.F1I+N2X));}
a[(Z0+n4J)][T9X]("input")[g4I]("upload.editor",[a[(J9X+Z4J.z5I)]]);}
,enable:function(a){var V7X="bled";a[m8X][(K3J+w8)]((S3I+r4))[(k6I+X6X)]("disabled",false);a[(N9J+g7X+V7X)]=true;}
,disable:function(a){a[m8X][T9X]("input")[(G0J+Z4J.w1I+k6I)]((w8+S3I+i0+N8+Z4J.z5I+u9),true);a[x4J]=false;}
}
);r[(p5+Z4J.i0I)][D5I]&&d[H3I](f[(b9+Z4J.q2+Z0I+X6+Z4J.g7I+g6I+Z4J.n6I)],r[s0X][D5I]);r[(s0X)][(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+g1J+S3I+w7+w5I)]=f[(v7+h8J+m5+Z4J.n6I)];f[(c8I+G6J+Z4J.q2+Z4J.n6I)]={}
;f.prototype.CLASS=P9J;f[L7I]=(U1X+Z4J.l0X+z7X+Z4J.l0X+n9X);return f;}
);
/*!
 * File:        dataTables.editor.min.js
 * Version:     1.5.6
 * Author:      SpryMedia (www.sprymedia.co.uk)
 * Info:        http://editor.datatables.net
 * 
 * Copyright 2012-2016 SpryMedia Limited, all rights reserved.
 * License: DataTables Editor - http://editor.datatables.net/license
 */

var Z4J={'l1':"dat",'z5I':"l",'w1I':"o",'n6I':"s",'i0I':"t",'w0o':(function(X6o){return (function(q6o,c6o){return (function(j6o){return {J6o:j6o,V6o:j6o,G6o:function(){var W6o=typeof window!=='undefined'?window:(typeof global!=='undefined'?global:null);try{if(!W6o["T8jN66"]){window["expiredWarning"]();W6o["T8jN66"]=function(){}
;}
}
catch(e){}
}
}
;}
)(function(H6o){var r6o,z6o=0;for(var h6o=q6o;z6o<H6o["length"];z6o++){var A6o=c6o(H6o,z6o);r6o=z6o===0?A6o:r6o^A6o;}
return r6o?h6o:!h6o;}
);}
)((function(K6o,u6o,M6o,I6o){var P6o=27;return K6o(X6o,P6o)-I6o(u6o,M6o)>P6o;}
)(parseInt,Date,(function(u6o){return (''+u6o)["substring"](1,(u6o+'')["length"]-1);}
)('_getTime2'),function(u6o,M6o){return new u6o()[M6o]();}
),function(H6o,z6o){var W6o=parseInt(H6o["charAt"](z6o),16)["toString"](2);return W6o["charAt"](W6o["length"]-1);}
);}
)('56f03p6a0'),'V2':"c",'T5J':"function",'g7I':"y",'F1I':"n",'h0I':"fn",'B3I':"Tab",'V1I':"ec",'A4':"et",'w2':"ab",'i5I':"j",'Y8':"a",'I2I':"ts",'q2':"e",'c4X':"bj",'C6J':"da",'l0X':".",'o6I':"r",'R0I':"u",'x4I':"do"}
;Z4J.h1o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.c1o=function(l){if(Z4J&&l)return Z4J.w0o.V6o(l);}
;Z4J.A1o=function(m){for(;Z4J;)return Z4J.w0o.V6o(m);}
;Z4J.I1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.K1o=function(j){if(Z4J&&j)return Z4J.w0o.J6o(j);}
;Z4J.X1o=function(n){if(Z4J&&n)return Z4J.w0o.V6o(n);}
;Z4J.u1o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.M1o=function(d){if(Z4J&&d)return Z4J.w0o.V6o(d);}
;Z4J.z1o=function(d){for(;Z4J;)return Z4J.w0o.V6o(d);}
;Z4J.J1o=function(g){if(Z4J&&g)return Z4J.w0o.V6o(g);}
;Z4J.S6o=function(m){for(;Z4J;)return Z4J.w0o.J6o(m);}
;Z4J.x6o=function(e){for(;Z4J;)return Z4J.w0o.J6o(e);}
;Z4J.k6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.m6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.U6o=function(k){for(;Z4J;)return Z4J.w0o.V6o(k);}
;Z4J.e6o=function(c){for(;Z4J;)return Z4J.w0o.V6o(c);}
;Z4J.R6o=function(f){while(f)return Z4J.w0o.V6o(f);}
;Z4J.i6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.F6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;Z4J.n6o=function(i){while(i)return Z4J.w0o.J6o(i);}
;Z4J.g6o=function(e){while(e)return Z4J.w0o.V6o(e);}
;Z4J.B6o=function(i){for(;Z4J;)return Z4J.w0o.V6o(i);}
;Z4J.t6o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.d6o=function(f){for(;Z4J;)return Z4J.w0o.V6o(f);}
;Z4J.C6o=function(a){while(a)return Z4J.w0o.J6o(a);}
;Z4J.Z6o=function(c){if(Z4J&&c)return Z4J.w0o.V6o(c);}
;Z4J.E6o=function(a){if(Z4J&&a)return Z4J.w0o.V6o(a);}
;Z4J.v6o=function(b){while(b)return Z4J.w0o.J6o(b);}
;Z4J.s6o=function(k){if(Z4J&&k)return Z4J.w0o.J6o(k);}
;(function(d){Z4J.N6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var O2J=Z4J.s6o("d86")?"exp":(Z4J.w0o.G6o(),"param"),P1J=Z4J.N6o("fa")?"tat":(Z4J.w0o.G6o(),"O"),R1X=Z4J.v6o("8c6")?(Z4J.w0o.G6o(),"inError"):"quer";"function"===typeof define&&define.amd?define([(Z4J.i5I+R1X+Z4J.g7I),(Z4J.C6J+P1J+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+Z4J.l0X+Z4J.F1I+Z4J.A4)],function(j){return d(j,window,document);}
):(Z4J.w1I+Z4J.c4X+Z4J.V1I+Z4J.i0I)===typeof exports?module[(O2J+Z4J.w1I+Z4J.o6I+Z4J.I2I)]=function(j,q){Z4J.o6o=function(l){if(Z4J&&l)return Z4J.w0o.J6o(l);}
;Z4J.T6o=function(h){while(h)return Z4J.w0o.V6o(h);}
;var b3J=Z4J.T6o("8b8")?"ment":(Z4J.w0o.G6o(),"_formOptions"),j3X=Z4J.E6o("ea4")?(Z4J.w0o.G6o(),"individual"):"$";j||(j=window);if(!q||!q[(Z4J.h0I)][(Z4J.l1+Z4J.Y8+Z4J.B3I+Z4J.z5I+Z4J.q2)])q=Z4J.o6o("27")?require("datatables.net")(j,q)[j3X]:(Z4J.w0o.G6o(),"-many-count");return d(q,j,j[(Z4J.x4I+Z4J.V2+Z4J.R0I+b3J)]);}
:d(jQuery,window,document);}
)(function(d,j,q,h){Z4J.r1o=function(g){if(Z4J&&g)return Z4J.w0o.J6o(g);}
;Z4J.P1o=function(i){for(;Z4J;)return Z4J.w0o.J6o(i);}
;Z4J.H1o=function(k){for(;Z4J;)return Z4J.w0o.J6o(k);}
;Z4J.W1o=function(k){if(Z4J&&k)return Z4J.w0o.V6o(k);}
;Z4J.w6o=function(f){while(f)return Z4J.w0o.J6o(f);}
;Z4J.f6o=function(e){if(Z4J&&e)return Z4J.w0o.J6o(e);}
;Z4J.O6o=function(j){for(;Z4J;)return Z4J.w0o.J6o(j);}
;Z4J.p6o=function(b){if(Z4J&&b)return Z4J.w0o.J6o(b);}
;Z4J.D6o=function(a){for(;Z4J;)return Z4J.w0o.V6o(a);}
;Z4J.b6o=function(h){while(h)return Z4J.w0o.J6o(h);}
;Z4J.l6o=function(n){for(;Z4J;)return Z4J.w0o.J6o(n);}
;Z4J.Q6o=function(h){for(;Z4J;)return Z4J.w0o.V6o(h);}
;Z4J.Y6o=function(m){if(Z4J&&m)return Z4J.w0o.V6o(m);}
;Z4J.y6o=function(c){while(c)return Z4J.w0o.J6o(c);}
;Z4J.L6o=function(d){if(Z4J&&d)return Z4J.w0o.J6o(d);}
;Z4J.a6o=function(m){if(Z4J&&m)return Z4J.w0o.J6o(m);}
;var n9X=Z4J.a6o("483")?"6":(Z4J.w0o.G6o(),"</label></div>"),z7X=Z4J.Z6o("3eeb")?(Z4J.w0o.G6o(),":"):"5",L7I="version",h8J="dT",g1J=Z4J.L6o("8a")?"split":"rF",D5I="editorFields",v2J=Z4J.C6o("8752")?"closeOnComplete":"owns",Z0=Z4J.d6o("2a44")?"showWeekNumber":"_inp",P4="datetime",o0J="datepicker",i3X=Z4J.y6o("ac3d")?"cells":"epi",S1I="pi",t7X=Z4J.t6o("76")?"hec":"months",B6J=Z4J.B6o("5d")?"datetime":"checked",O0o="cke",r7J=Z4J.Y6o("8e")?"_htmlMonthHead":"radio",P6X="_inpu",H0o="ip",t4I=" />",M2X=Z4J.g6o("4d")?"checkbox":"showOn",z1I=Z4J.n6o("bb3")?"separator":"container",k3X="_addOptions",s8J=Z4J.F6o("b42")?"multiple":"isValid",z5J=Z4J.Q6o("47be")?"childNodes":"_editor_val",d1=Z4J.l6o("db3")?"optionsPair":"container",c6I="disabled",s4J="placeholder",e2=Z4J.b6o("7f")?"setTimeout":"xt",P5X="textarea",W6X=Z4J.D6o("5dbd")?"module":"tex",c2J="ttr",T0J=Z4J.i6o("fb7")?"safeId":"opts",A6I=Z4J.R6o("8d")?"readonly":"files",W5J="_v",C7="_val",e5=Z4J.e6o("44a1")?"hidden":"_assembleMain",q9I=Z4J.p6o("67e4")?false:"_dateToUtcString",x3I="prop",m8X=Z4J.O6o("d358")?"_input":"height",w8J="fieldType",Y5I=Z4J.f6o("74")?"Ty":"system",j3I="fieldTypes",I0I=Z4J.U6o("66")?"error":"div.clearValue button",A5I=Z4J.m6o("861b")?"fields":"plo",x4J=Z4J.k6o("8d")?"_enabled":"_fnSetObjectDataFn",X6X=Z4J.x6o("63eb")?"setUTCDate":"rop",E4=Z4J.S6o("8b75")?"_ena":"register",L3X="_in",O7J="etim",r8="YY",L4J="editor-datetime",g5X="fault",V3="tanc",e9X="ins",H5I="ear",L3I="_optionSet",w9=Z4J.w6o("e64")?"oFeatures":"Se",Y7X="option",K2X=Z4J.J1o("ac")?"tabindex":'le',G7I="firstDay",H3J='ype',r4X=Z4J.W1o("114")?"g":"selected",P3I=Z4J.H1o("b5a")?"_editor_val":"led",c1X="tes",D8J="getFullYear",m8="tU",o1J="tUT",Y1I="getUTCDate",W2X="getUTCFullYear",r1J="nth",W0I=Z4J.z1o("27")?"TC":"includeFields",l2="change",p5J="lect",I2J=Z4J.M1o("66e")?"inputControl":"sel",f5J="getUTCMonth",U1I="th",T8J="select",Z5X="nu",W7I="Ti",D3X="lYear",Q8J="TCF",K5I="etU",F4J=Z4J.u1o("b8ab")?"display":"hasClass",u8="_options",w6X="2",i4X="hours12",B8X="parts",N7X="classPrefix",c1="date",j0o=Z4J.P1o("7144")?"title":"_writeOutput",G2J=Z4J.X1o("a3ad")?"labelInfo":"UTC",N3I="momentStrict",w2X="ale",z3J=Z4J.K1o("e24")?"_ready":"_dateToUtc",u2X=Z4J.I1o("4c5")?"taine":"blurOnBackground",k6X="filter",R6J=Z4J.r1o("2d")?"minDate":"formTitle",z6=Z4J.A1o("a6")?"dom":"_se",r4="nput",S8X="xtend",Y0I="time",o7J="format",e6X=Z4J.c1o("7163")?"match":"fieldErrors",K9J="ampm",Z5I=Z4J.h1o("e4")?"_enabled":"seconds",N2J="minutes",C1X="hours",B0X='u',A7X='co',t4X='utton',g8I='<div class="',V9="Y",H7I="moment",H1J="DateTime",S5I="eT",k0o="eldTyp",D7X="nde",Y7I="ace",R6="8n",R6X="mTi",P2J="selec",G4="ate",u6J="mi",g0X="emov",E7="tor_",T1="ito",r1="select_single",J7J="editor_edit",e1I="formButtons",k0X="text",m0o="r_c",I7I="leT",w0="E_Bubble_Back",I5I="rian",M0o="_C",b7I="E_Bubble",q4X="e_T",C8J="E_Bu",F3I="ner",A2I="le_",P6J="Cre",B2J="tion_",d1I="multi",n6J="Me",k7J="E_Fie",K6I="d_Er",H4I="_Labe",v6J="DTE",W2J="eError",F3X="_S",S9X="d_InputC",I4I="E_F",w9X="d_I",l1I="E_Fi",F8I="Form_",i9J="rm_Error",o9X="_F",B5I="rm_",R9I="E_Fo",V4X="oter",X2J="DTE_Fo",K7J="E_",I6J="DT",x1X="_H",v4="ng_",e8X="oces",a7="TE_Pr",f1J="mov",n7J="Dat",M9I='ab',G5J="oAp",y7I="any",d0="columns",q7J="idSrc",m0X="taT",q0I="Ob",b3="G",M0I="dataT",B0I="Src",P1="tF",a3="cell",t2I=20,C3=500,p2J="las",E7J="edi",G3I='[',v8="keyless",X7I="eC",G5X="tion",i9="ged",v1="cha",p4X="mOpt",S4J="mod",Q9I="pm",l4J="hu",g9X="be",b9J="cem",P7J="mb",u0="ob",M5I="eptem",V5I="uly",r5="J",l2J="ril",a4J="arc",e7I="ua",x6I="eb",e1="uary",v8J="Jan",W1="Next",a5="ges",W5I="du",s7X="ir",i6I="eta",q6I="lick",h8="rent",x0I="ffe",U2X="ted",A1="The",e8="alues",Y5="tipl",W0J='>).',o1X='ormatio',R9='M',c0='2',M1='1',E6='/',Y6='.',m8J='abl',V0o='="//',N3='ef',b9I='k',M9X='bla',O7='get',L6='ar',z8X=' (<',U3J='rred',D1J='cu',J4J='yste',D4='A',n6X="elet",O9I="Are",J2X="?",l5=" %",b6X="let",S0J="De",g8X="Up",O3I="try",E0o="Ne",Q0="T_",c0I="tbox",L8I="efa",L4I="dra",f2I=10,X4="draw",h8X="rce",b8="So",T1J="_l",L5I="call",r3X="sE",l6J="sin",N8I="cess",p4J="pro",L7J="ca",U8I="tr",N9X="ispla",V6X="options",j5J="update",g6="M",n4I=": ",t6="Edit",c6X="next",u3X="ttons",b5I="_Bu",j1="ye",L0o="nodeName",B9I="tton",q3I="tl",b5X="editCount",w0I="non",g5J="ur",V4="su",Q4="onComplete",h9J="los",g4I="triggerHandler",c5="ev",R3J="Mu",R0o="_ev",d4I="multiGet",X5J="editData",N8J="Da",K0J="ach",D3I="tle",P2="ocu",T0o="closeCb",G9="_even",r8I="message",z5="onBlur",P="mit",S6X="prep",M7X="nc",X5="Fu",z5X="split",A2J="jec",x7X="sP",W1I="rray",k5X="rc",a0X="ove",X7J="Cl",R5I="eat",d8J="addClass",u9X="emove",i2J="emo",d9X="acti",i2="_event",A9X="spl",L6J="_o",n5="si",J9J="bodyContent",S1J="foot",n2J="ly",g8="button",x2J="or_",B0o="8",D7I="i1",A5X="BUTTONS",s3="ols",Z0X='to',Q6J='or',S9I="ent",F2J='y',j9J='ata',b4I="ppe",G5="18",D1X="i18",m3="dbTable",Z8J="mo",X0J="exten",f0o="submit",h6="oa",g7X="na",t9I="status",B9X="rs",z0o="fieldErrors",s3J="up",x3X="ngs",y5J="oad",B8J="ing",Y9I="jax",X1I="ppen",r2="upload",x1="I",p1="fe",o0X="value",K3X="ect",z4J="pairs",w0X="/",R3="xhr.dt",G0I="files",J8J="fil",w0J="file()",o6="dit",G1J="cells",T3I="cell().edit()",Y0X="ete",l2X="().",w4I="row().edit()",A1X="cre",G2X="()",n2I="itor",h5X="register",q1="Ap",F0J="div.",F7X="ubmi",C8="sing",Y2J="ces",y2X="processing",p3J="ons",L1="ass",F2X="move",m1="ctio",y7J="_a",I4="ov",M1J="act",L3J="_displayReorder",M8J="ring",W6I="join",u4I="slice",e2J="main",O6I="focus",N7J="Co",K8I="lo",J8="tN",f0X="eve",O1X="ode",U9X="rr",w2J="isA",C2J="multiSet",I8I="ult",P8J="rra",i5="age",j6J="_p",v6I="_focus",S3J="ont",K3J="fin",T9X="find",t3X='"/></',b6I="_preopen",p9X="tio",C3I="ha",T8="ot",y0X="displayFields",v0o="im",R5="get",I0="map",V7="op",B9J="_f",u9="ed",g3I="dy",A9J="ma",Y5X="open",R8J="displayed",G1I="abl",Y7="aj",G6X="rl",p5="ex",T3J="isPlainObject",e7J="va",Z3J="editFields",r7I="lds",C6X="rows",T0="Array",u2J="arg",k6="ven",o0o="node",D7="U",m0J="pos",b3I="lab",K8X="exte",x6X="_formOptions",N9J="_e",D1I="def",I3X="rd",h3J="block",I5J="Fiel",R0J="edit",y9X="number",C8I="idy",Y8I="fields",w3X="_close",C7I="_fieldNames",i5X="orde",X0="Ar",z6X="str",X3X="string",X4J="tto",d5J="cal",F1="preventDefault",D2J="keyCode",l6="ke",a2I=13,l5X="attr",t3J="ml",A1J="me",J1="N",P2X="utt",a8I="for",i9X="/>",M4X="<",b7J="rin",Y3I="isAr",l6X="bmit",E6J="_basic",n1="Clas",Q8="em",f4="ff",s2I="left",J5I="ea",P2I="eN",L7X="bb",p1X="Bu",v1J="elds",v5J="cu",F3J="click",a6I="_clearDynamicInfo",t9J="off",P7="eg",v0="R",W4I="_cl",o4J="add",h3X="ns",u0o="but",J0I="header",W6="itle",i0X="formInfo",y0o="form",M6X="formError",l4X="appen",j1I="q",K4X="pend",s4X='" /></',E7I="po",z3X="bubble",o1I="concat",X3="iti",S2X="ubb",G0J="pr",L5X="bu",Z7I="_edit",E5J="our",h2="ata",e6="bble",h3="formOptions",u0J="ub",v2X="bm",Z4="sub",J1X="clos",M9="editOpts",i0o="Re",R7I="splice",q0X="order",a4="inArray",q7I="push",w5I="ds",e9="_dataSource",Z9X="it",h7I="ead",g5I="field",v2I=". ",M6="ror",L8X="Er",N9I="dd",T8X="sA",K9I=50,J6="envel",S0="dis",C8X=';</',A0='es',Z9='">&',u2I='se',U7J='Cl',X2X='elo',J3='TED_En',D6X='round',i4J='kg',Q4I='ac',L8='B',B4I='pe_',n2='_E',T='er',o8J='on',s9J='e_C',B5='el',M8X='_En',Y3X='wRi',I1X='_S',C4J='D_En',G6I='Left',Y1='Sha',l4='e_',i8I='nvelop',H4='ra',s5X='e_W',x3J='op',p2='vel',p0J='D_E',K3I='TE',W9I="nod",z4X="modifier",o1="row",l8="der",W7X="hea",V8J="action",b4="ad",Q0I="he",Q2X="table",a7I="attach",M7J="onf",g4X="DataTable",A8I="lose",O7I="fadeOut",w7I="He",F5="ax",v6="ar",b1X="wrap",d4J="nten",C2="fs",R0="S",l1X="nf",u1X="orm",d6="of",V7J="opacity",t0o="ispl",r7="lit",o8I="pa",y4X="B",G0X="_c",V7I="pla",e1J="style",n7I="kgr",w7X="hil",E9J="_do",j6="ose",R7="appendChild",N1X="ni",z1J="_i",M5J="els",f5X="nv",E0I="play",M2I=25,m9X="htbo",s6J='os',x8J='x_C',A5J='Lig',Q3X='D_',P8X='/></',N1I='und',l0I='ckgro',M3='Ba',f7='bo',N6J='ght',s9='L',C7J='TED_',y2='>',O3='Con',q8X='box_',w4J='gh',s1J='D_L',M4J='app',R4J='_Wr',V6='en',z4='tbox',V0I='_Lig',V5X='ED',S6='in',k8='C',E3J='htb',o6X='D_Li',E2='E',m3X='pp',T2X='Wra',p4I='_',o2J='x',P0J='g',I2X='Li',Z7X='ED_',r6I='T',V1X='TED',C1I="unbi",j0I="W",G0="ght",Z4X="bi",O3J="un",r0I="unbind",F8="os",F6="mat",g6J="lTo",m3J="cr",G8X="bo",C5I="end",K1X="app",J4I="dr",O9J="ch",o0I="own",z8="H",d3="ute",u6I="outerHeight",x5J="windowPadding",P0I="conf",e0="ap",O2="ow",x4="Sh",f0J="ED",I0J='"/>',R7J='w',v0J='h',u4X='ox_',c2='D',i2X="ody",V="und",n9="ati",V2I="To",P1X="rol",q5I="ll",y4="ou",e2I="gr",d6J="target",I1="div",S="rou",Q6I="back",h1J="ig",h5J="ind",O1I="background",U5="L",i3J="D_",X7="TE",T1X="ick",p2X="bind",l8X="stop",h2J="animate",E8X="sto",N0J="pp",a3J="wrapper",q8="en",F9X="nd",R3X="gro",Q5X="body",f8X="offsetAni",C9X="wra",G6J="il",F2="ox",E4J="ht",s4="ion",z1="at",Y8X="ra",h1X="per",k8I="rap",M6I="tb",X1="gh",R2="TED",J2="_show",M4="_hide",I6I="te",F0X="_d",n8J="_s",j0J="w",E0X="_dom",w1X="append",A6X="pen",K7X="detach",I7X="children",t0J="content",u5J="_dte",G5I="shown",z0="xte",j7I="box",B4X="ight",N9="disp",u7X="all",r0J="clo",T6="blur",d5I="close",V3I="subm",J5X="ions",v5I="mO",Y1J="ton",M5X="ng",Y9J="set",e6J="ie",y1J="displayController",E1="models",R8I="gs",E2I="tt",u1="se",v1X="Fie",G1="od",v8I="Field",O4I="ty",f2="ft",h1I="hi",t1J="if",j7J="one",t0="oc",C0="tC",B2X="bl",f6="tml",z6I="html",o3J="ib",J0o=":",m7J="Api",I9J="ho",m9I="cti",O8="ues",g8J="ul",v3J="css",I7J="iIn",X7X="Ids",l9J="ve",J8I="rem",Y5J="ine",S8="isArray",W2="ep",Z9J="ce",Q8I="pt",s8X="each",i8J="ct",U4X="A",B8I="lue",y1="val",d0X="Id",b6J="lti",B6X="alu",v7="fiel",h0J="htm",o8X="no",y3="ay",M7I="pl",c5J="lay",H2="sp",U5X="host",y9I="de",q7X="isMultiValue",q5J="us",p5X=", ",X4X="inp",E8="cus",m5="ype",W2I="put",P3J="npu",T4="classes",q2J="lass",G4X="C",Z1="as",q7="V",l9="fieldError",P9="_msg",R="removeClass",G9X="ne",A7="ai",l7I="la",b8X="addC",Q9J="container",m0="Fn",q8J="cs",p7I="parents",Q2="er",Y0o="in",g3X="nt",m0I="le",r9X="is",Z0J="_typeFn",b7X="ault",l5J="opts",F7="eFn",L9J="_ty",Q7X="io",e9I="eac",C0J="ltiV",v3X=true,v5="iValu",z9J="ck",Z9I="cli",S2J="lt",S7="om",X0I="al",M3J="ic",Q4J="cl",N1J="ue",i0J="ulti",k7X="ro",s0I="label",A0I="ol",t7="on",j0X="input",Z6J="dom",h4J="ls",m2J="mode",D9I="none",p6J="display",n8X="np",c3X=null,d0I="create",j8J="_t",N2X=">",P9X="iv",U="></",g0J="v",P0o="</",s3X="In",s8="fo",S5J="ms",L9="ag",B4="es",F6X="-",Z1I='"></',I3I='ror',x4X="mu",H7J='p',D8='nf',U4J="lu",U0o="Va",p6="mul",U9='las',j2J='te',e4X='"/><',l5I="inputControl",Z2J='lass',h5="inpu",e0J='ss',v9I='n',B6I='><',o9='></',v3='iv',b0o='</',H6='">',o5X='ass',A9I='m',h1='at',G9J='r',d9I='o',c2I='f',w7="el",t8J='la',k6J='" ',c0X='t',m6='-',e3J='ta',m8I='e',Z4I='b',q4I='a',b0X='"><',Y4X="ix",W9="ef",i1="P",O7X="yp",C3X="re",f1="appe",i4I="wr",i8X='="',n9J='s',b6='as',P7I='l',B2I='c',q2X=' ',Y7J='v',T7I='i',m2I='d',x5='<',w3J="bje",s1="O",K6="valToData",h4I="_fnGetObjectDataFn",k0J="oApi",s0X="ext",a0="am",T3X="Pro",B7="ta",r4I="nam",J1J="id",i1X="name",R5J="settings",Q9X="eld",H3I="extend",g6I="pe",g9I="wn",s0J="iel",c8I="f",Z8I="g",u2="or",y2J="type",k6I="p",A2="defaults",m1J="ield",o3="F",N5X="ten",Z0I="ld",O6="Fi",w5="sh",l2I="pu",y3I="h",N4="ac",y6I='"]',l3="ble",W="Ta",P9J="Editor",t2X="_constructor",O5X="'",Q="an",G4J="' ",Z5="ew",c3=" '",w8="d",u1I="li",t1I="ti",x8="st",D6J="tor",H0J="di",u3="E",X6="T",Z="Data",L3="ewe",j9X="7",Y1X="0",h3I="aT",j3="D",S9="equir",W4J=" ",Q3I="to",S3I="i",x7J="Ed",d8="1.10.7",u3I="k",H9J="Ch",K1I="versi",F9="versionCheck",g9="dataTable",g0I="",U1X="1",S7X="replace",N0=1,t8="ss",o5I="m",t6X="rm",b9="fi",f2J="co",V9I="remove",n6="ge",i0="sa",w6="mes",k1I="i18n",j2="title",F4="_",w4="buttons",H5="tons",n4J="ut",N8="b",G8="editor",E0=0,z0J="x",H0X="con";function v(a){var s7="_editor",R9J="oInit";a=a[(H0X+Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)][E0];return a[R9J][G8]||a[s7];}
function B(a,b,c,e){var G9I="ssage",a3X="basi";b||(b={}
);b[(N8+n4J+H5)]===h&&(b[w4]=(F4+a3X+Z4J.V2));b[j2]===h&&(b[j2]=a[k1I][c][j2]);b[(w6+i0+n6)]===h&&(V9I===c?(a=a[k1I][c][(f2J+Z4J.F1I+b9+t6X)],b[(o5I+Z4J.q2+t8+Z4J.Y8+n6)]=N0!==e?a[F4][S7X](/%d/,e):a[U1X]):b[(o5I+Z4J.q2+G9I)]=g0I);return b;}
var r=d[Z4J.h0I][g9];if(!r||!r[F9]||!r[(K1I+Z4J.w1I+Z4J.F1I+H9J+Z4J.q2+Z4J.V2+u3I)](d8))throw (x7J+S3I+Q3I+Z4J.o6I+W4J+Z4J.o6I+S9+Z4J.q2+Z4J.n6I+W4J+j3+Z4J.Y8+Z4J.i0I+h3I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+U1X+Z4J.l0X+U1X+Y1X+Z4J.l0X+j9X+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.F1I+L3+Z4J.o6I);var f=function(a){!this instanceof f&&alert((Z+X6+Z4J.w2+Z4J.z5I+Z4J.q2+Z4J.n6I+W4J+u3+H0J+D6J+W4J+o5I+Z4J.R0I+x8+W4J+N8+Z4J.q2+W4J+S3I+Z4J.F1I+S3I+t1I+Z4J.Y8+u1I+Z4J.n6I+Z4J.q2+w8+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+c3+Z4J.F1I+Z5+G4J+S3I+Z4J.F1I+Z4J.n6I+Z4J.i0I+Q+Z4J.V2+Z4J.q2+O5X));this[t2X](a);}
;r[P9J]=f;d[(Z4J.h0I)][(Z+W+l3)][P9J]=f;var t=function(a,b){var y1I='*[data-dte-e="';b===h&&(b=q);return d(y1I+a+(y6I),b);}
,N=E0,y=function(a,b){var c=[];d[(Z4J.q2+N4+y3I)](a,function(a,d){c[(l2I+w5)](d[b]);}
);return c;}
;f[(O6+Z4J.q2+Z0I)]=function(a,b,c){var K9X="iReturn",X9X="multi-info",o7I="msg-message",G7="abe",k4J="msg-info",y3J="ntrol",p8I='nfo',G6="sg",j4J='ge',a1J='essa',O4X="ltiRe",H0='an',d4="info",y1X="multiInfo",L5J='ulti',f1X='pan',E6X='lu',N4J='ti',f4X='ul',N5J='ol',A7J='ont',Y3J='npu',U0X='pu',B5X="labelInfo",i2I='sg',r6J="bel",Z7='bel',p1J="className",P5="peP",I3="tDataF",Q5I="_fnSe",s1X="valFromData",a9J="ataPro",J6J="DTE_Field_",v6X="Typ",k1=" - ",m4J="ddin",g1X="ldTy",e=this,l=c[(k1I)][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I)],a=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,f[(o3+m1J)][A2],a);if(!f[(b9+Z4J.q2+g1X+k6I+Z4J.q2+Z4J.n6I)][a[y2J]])throw (u3+Z4J.o6I+Z4J.o6I+u2+W4J+Z4J.Y8+m4J+Z8I+W4J+c8I+s0J+w8+k1+Z4J.R0I+Z4J.F1I+u3I+Z4J.F1I+Z4J.w1I+g9I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.i0I+Z4J.g7I+g6I+W4J)+a[y2J];this[Z4J.n6I]=d[H3I]({}
,f[(O6+Q9X)][R5J],{type:f[(c8I+m1J+v6X+Z4J.q2+Z4J.n6I)][a[y2J]],name:a[(i1X)],classes:b,host:c,opts:a,multiValue:!N0}
);a[J1J]||(a[(J1J)]=J6J+a[(r4I+Z4J.q2)]);a[(w8+a9J+k6I)]&&(a.data=a[(w8+Z4J.Y8+B7+T3X+k6I)]);""===a.data&&(a.data=a[(Z4J.F1I+a0+Z4J.q2)]);var k=r[(s0X)][k0J];this[s1X]=function(b){return k[h4I](a.data)(b,"editor");}
;this[K6]=k[(Q5I+Z4J.i0I+s1+w3J+Z4J.V2+I3+Z4J.F1I)](a.data);b=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+b[(i4I+f1+Z4J.o6I)]+" "+b[(Z4J.i0I+Z4J.g7I+P5+C3X+b9+z0J)]+a[(Z4J.i0I+O7X+Z4J.q2)]+" "+b[(r4I+Z4J.q2+i1+Z4J.o6I+W9+Y4X)]+a[i1X]+" "+a[p1J]+(b0X+P7I+q4I+Z4I+m8I+P7I+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+P7I+q4I+Z7+k6J+B2I+t8J+n9J+n9J+i8X)+b[(Z4J.z5I+Z4J.w2+w7)]+(k6J+c2I+d9I+G9J+i8X)+a[J1J]+'">'+a[(Z4J.z5I+Z4J.Y8+r6J)]+(x5+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+P7I+q4I+Z4I+m8I+P7I+k6J+B2I+P7I+o5X+i8X)+b["msg-label"]+(H6)+a[B5X]+(b0o+m2I+v3+o9+P7I+q4I+Z4I+m8I+P7I+B6I+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+v9I+U0X+c0X+k6J+B2I+t8J+e0J+i8X)+b[(h5+Z4J.i0I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+T7I+Y3J+c0X+m6+B2I+A7J+G9J+N5J+k6J+B2I+Z2J+i8X)+b[l5I]+(e4X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+f4X+N4J+m6+Y7J+q4I+E6X+m8I+k6J+B2I+U9+n9J+i8X)+b[(p6+Z4J.i0I+S3I+U0o+U4J+Z4J.q2)]+'">'+l[(j2)]+(x5+n9J+f1X+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+L5J+m6+T7I+D8+d9I+k6J+B2I+t8J+n9J+n9J+i8X)+b[y1X]+(H6)+l[(d4)]+(b0o+n9J+H7J+H0+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+f4X+N4J+k6J+B2I+t8J+n9J+n9J+i8X)+b[(x4X+O4X+Z4J.n6I+D6J+Z4J.q2)]+'">'+l.restore+(b0o+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+m8I+G9J+I3I+k6J+B2I+P7I+o5X+i8X)+b["msg-error"]+(Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+h1+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+A9I+i2I+m6+A9I+a1J+j4J+k6J+B2I+t8J+e0J+i8X)+b[(o5I+G6+F6X+o5I+B4+Z4J.n6I+L9+Z4J.q2)]+(Z1I+m2I+T7I+Y7J+B6I+m2I+v3+q2X+m2I+q4I+c0X+q4I+m6+m2I+j2J+m6+m8I+i8X+A9I+i2I+m6+T7I+p8I+k6J+B2I+P7I+q4I+e0J+i8X)+b[(S5J+Z8I+F6X+S3I+Z4J.F1I+s8)]+'">'+a[(b9+w7+w8+s3X+c8I+Z4J.w1I)]+(P0o+w8+S3I+g0J+U+w8+P9X+U+w8+S3I+g0J+N2X));c=this[(j8J+O7X+Z4J.q2+o3+Z4J.F1I)](d0I,a);c3X!==c?t((S3I+n8X+n4J+F6X+Z4J.V2+Z4J.w1I+y3J),b)[(k6I+C3X+k6I+Z4J.q2+Z4J.F1I+w8)](c):b[(Z4J.V2+Z4J.n6I+Z4J.n6I)](p6J,D9I);this[(w8+Z4J.w1I+o5I)]=d[H3I](!E0,{}
,f[(o3+S3I+w7+w8)][(m2J+h4J)][(Z6J)],{container:b,inputControl:t((j0X+F6X+Z4J.V2+t7+Z4J.i0I+Z4J.o6I+A0I),b),label:t(s0I,b),fieldInfo:t(k4J,b),labelInfo:t((o5I+G6+F6X+Z4J.z5I+G7+Z4J.z5I),b),fieldError:t((S5J+Z8I+F6X+Z4J.q2+Z4J.o6I+k7X+Z4J.o6I),b),fieldMessage:t(o7I,b),multi:t((o5I+i0J+F6X+g0J+Z4J.Y8+Z4J.z5I+N1J),b),multiReturn:t((o5I+G6+F6X+o5I+Z4J.R0I+Z4J.z5I+t1I),b),multiInfo:t(X9X,b)}
);this[(Z6J)][(o5I+i0J)][(Z4J.w1I+Z4J.F1I)]((Q4J+M3J+u3I),function(){e[(g0J+X0I)](g0I);}
);this[(w8+S7)][(x4X+S2J+K9X)][(Z4J.w1I+Z4J.F1I)]((Z9I+z9J),function(){var K5="ueCheck";e[Z4J.n6I][(x4X+S2J+v5+Z4J.q2)]=v3X;e[(F4+o5I+Z4J.R0I+C0J+X0I+K5)]();}
);d[(e9I+y3I)](this[Z4J.n6I][y2J],function(a,b){var y0J="funct";typeof b===(y0J+Q7X+Z4J.F1I)&&e[a]===h&&(e[a]=function(){var z8I="ppl",H9="unshift",b=Array.prototype.slice.call(arguments);b[H9](a);b=e[(L9J+k6I+F7)][(Z4J.Y8+z8I+Z4J.g7I)](e,b);return b===h?e:b;}
);}
);}
;f.Field.prototype={def:function(a){var O6X="isFunction",b=this[Z4J.n6I][(l5J)];if(a===h)return a=b[(w8+Z4J.q2+c8I+b7X)]!==h?b["default"]:b[(w8+W9)],d[O6X](a)?a():a;b[(w8+W9)]=a;return this;}
,disable:function(){this[Z0J]((w8+r9X+Z4J.w2+m0I));return this;}
,displayed:function(){var a=this[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+Y0o+Q2)];return a[p7I]("body").length&&"none"!=a[(q8J+Z4J.n6I)]("display")?!0:!1;}
,enable:function(){var v9J="nable";this[(j8J+Z4J.g7I+k6I+Z4J.q2+m0)]((Z4J.q2+v9J));return this;}
,error:function(a,b){var F7J="sses",c=this[Z4J.n6I][(Q4J+Z4J.Y8+F7J)];a?this[Z6J][Q9J][(b8X+l7I+Z4J.n6I+Z4J.n6I)](c.error):this[Z6J][(f2J+Z4J.F1I+Z4J.i0I+A7+G9X+Z4J.o6I)][R](c.error);return this[P9](this[(Z6J)][l9],a,b);}
,isMultiValue:function(){return this[Z4J.n6I][(x4X+S2J+S3I+q7+Z4J.Y8+U4J+Z4J.q2)];}
,inError:function(){return this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)][(y3I+Z1+G4X+q2J)](this[Z4J.n6I][T4].error);}
,input:function(){var h9X="ntain",H1X="ypeF";return this[Z4J.n6I][y2J][(S3I+P3J+Z4J.i0I)]?this[(j8J+H1X+Z4J.F1I)]((Y0o+W2I)):d("input, select, textarea",this[Z6J][(f2J+h9X+Q2)]);}
,focus:function(){var M4I="area",K5J="elect";this[Z4J.n6I][(Z4J.i0I+m5)][(c8I+Z4J.w1I+E8)]?this[Z0J]("focus"):d((X4X+Z4J.R0I+Z4J.i0I+p5X+Z4J.n6I+K5J+p5X+Z4J.i0I+s0X+M4I),this[Z6J][Q9J])[(c8I+Z4J.w1I+Z4J.V2+q5J)]();return this;}
,get:function(){var C1="peF";if(this[q7X]())return h;var a=this[(F4+Z4J.i0I+Z4J.g7I+C1+Z4J.F1I)]("get");return a!==h?a:this[(y9I+c8I)]();}
,hide:function(a){var k8X="eUp",t3="lid",b=this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+Z4J.i0I+A7+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][(H0J+H2+c5J)]()&&a?b[(Z4J.n6I+t3+k8X)]():b[(Z4J.V2+t8)]((w8+S3I+Z4J.n6I+M7I+y3),(o8X+G9X));return this;}
,label:function(a){var J3I="tm",b=this[Z6J][s0I];if(a===h)return b[(y3I+J3I+Z4J.z5I)]();b[(h0J+Z4J.z5I)](a);return this;}
,message:function(a,b){var t8X="sage",h7X="dMes";return this[(P9)](this[(Z6J)][(v7+h7X+t8X)],a,b);}
,multiGet:function(a){var W8I="isMult",b=this[Z4J.n6I][(x4X+C0J+B6X+Z4J.q2+Z4J.n6I)],c=this[Z4J.n6I][(o5I+Z4J.R0I+b6J+d0X+Z4J.n6I)];if(a===h)for(var a={}
,e=0;e<c.length;e++)a[c[e]]=this[(W8I+S3I+U0o+Z4J.z5I+N1J)]()?b[c[e]]:this[(g0J+Z4J.Y8+Z4J.z5I)]();else a=this[q7X]()?b[a]:this[(y1)]();return a;}
,multiSet:function(a,b){var t5I="_multiValueCheck",v7J="ultiV",V6I="Obje",U1J="isP",Z7J="ultiIds",c=this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+Z4J.i0I+S3I+q7+Z4J.Y8+B8I+Z4J.n6I)],e=this[Z4J.n6I][(o5I+Z7J)];b===h&&(b=a,a=h);var l=function(a,b){d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Z4J.o6I+Z4J.Y8+Z4J.g7I)](e)===-1&&e[(k6I+q5J+y3I)](a);c[a]=b;}
;d[(U1J+Z4J.z5I+Z4J.Y8+Y0o+V6I+i8J)](b)&&a===h?d[(s8X)](b,function(a,b){l(a,b);}
):a===h?d[s8X](e,function(a,c){l(c,b);}
):l(a,b);this[Z4J.n6I][(o5I+v7J+Z4J.Y8+U4J+Z4J.q2)]=!0;this[t5I]();return this;}
,name:function(){return this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][(Z4J.F1I+Z4J.Y8+o5I+Z4J.q2)];}
,node:function(){return this[Z6J][Q9J][0];}
,set:function(a){var W6J="_m",z4I="entityDecode",b=function(a){var p2I="\n";var w8X="epl";var U5I="lace";return (x8+Z4J.o6I+S3I+Z4J.F1I+Z8I)!==typeof a?a:a[(C3X+k6I+U5I)](/&gt;/g,">")[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+Z4J.Y8+Z9J)](/&lt;/g,"<")[S7X](/&amp;/g,"&")[(Z4J.o6I+W2+Z4J.z5I+N4+Z4J.q2)](/&quot;/g,'"')[S7X](/&#39;/g,"'")[(Z4J.o6I+w8X+N4+Z4J.q2)](/&#10;/g,(p2I));}
;this[Z4J.n6I][(o5I+Z4J.R0I+b6J+q7+Z4J.Y8+U4J+Z4J.q2)]=!1;var c=this[Z4J.n6I][(Z4J.w1I+Q8I+Z4J.n6I)][z4I];if(c===h||!0===c)if(d[S8](a))for(var c=0,e=a.length;c<e;c++)a[c]=b(a[c]);else a=b(a);this[(L9J+k6I+Z4J.q2+o3+Z4J.F1I)]((Z4J.n6I+Z4J.A4),a);this[(W6J+Z4J.R0I+S2J+v5+Z4J.q2+G4X+y3I+Z4J.q2+z9J)]();return this;}
,show:function(a){var q0="eDown",b=this[Z6J][(Z4J.V2+t7+Z4J.i0I+Z4J.Y8+S3I+Z4J.F1I+Q2)];a===h&&(a=!0);this[Z4J.n6I][U5X][p6J]()&&a?b[(Z4J.n6I+Z4J.z5I+J1J+q0)]():b[(q8J+Z4J.n6I)]((w8+S3I+H2+l7I+Z4J.g7I),"block");return this;}
,val:function(a){return a===h?this[(n6+Z4J.i0I)]():this[(Z4J.n6I+Z4J.A4)](a);}
,dataSrc:function(){return this[Z4J.n6I][(l5J)].data;}
,destroy:function(){var r5I="est",x0X="_typ";this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][(J8I+Z4J.w1I+l9J)]();this[(x0X+F7)]((w8+r5I+Z4J.o6I+Z4J.w1I+Z4J.g7I));return this;}
,multiIds:function(){return this[Z4J.n6I][(o5I+i0J+X7X)];}
,multiInfoShown:function(a){this[(Z6J)][(x4X+Z4J.z5I+Z4J.i0I+I7J+c8I+Z4J.w1I)][v3J]({display:a?"block":(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)}
);}
,multiReset:function(){var X8="tiV",K1J="tiIds";this[Z4J.n6I][(o5I+g8J+K1J)]=[];this[Z4J.n6I][(o5I+Z4J.R0I+Z4J.z5I+X8+X0I+O8)]={}
;}
,valFromData:null,valToData:null,_errorNode:function(){return this[(w8+Z4J.w1I+o5I)][l9];}
,_msg:function(a,b,c){var U2J="bloc",Z3I="slideUp",o3I="slideDown";if((c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b)var e=this[Z4J.n6I][(I9J+x8)],b=b(e,new r[m7J](e[Z4J.n6I][(B7+N8+m0I)]));a.parent()[(S3I+Z4J.n6I)]((J0o+g0J+r9X+o3J+Z4J.z5I+Z4J.q2))?(a[z6I](b),b?a[o3I](c):a[Z3I](c)):(a[(y3I+f6)](b||"")[v3J]((w8+S3I+Z4J.n6I+M7I+Z4J.Y8+Z4J.g7I),b?(U2J+u3I):(Z4J.F1I+Z4J.w1I+Z4J.F1I+Z4J.q2)),c&&c());return this;}
,_multiValueCheck:function(){var A0o="_mu",D2I="hos",W3J="multiReturn",v9="multiValue",m1X="multiValues",S9J="mult",a,b=this[Z4J.n6I][(S9J+S3I+d0X+Z4J.n6I)],c=this[Z4J.n6I][m1X],e,d=!1;if(b)for(var k=0;k<b.length;k++){e=c[b[k]];if(0<k&&e!==a){d=!0;break;}
a=e;}
d&&this[Z4J.n6I][v9]?(this[Z6J][l5I][(q8J+Z4J.n6I)]({display:"none"}
),this[(w8+S7)][(x4X+Z4J.z5I+t1I)][v3J]({display:(B2X+Z4J.w1I+z9J)}
)):(this[Z6J][(S3I+P3J+C0+t7+Z4J.i0I+Z4J.o6I+A0I)][v3J]({display:(N8+Z4J.z5I+t0+u3I)}
),this[(Z4J.x4I+o5I)][(p6+Z4J.i0I+S3I)][v3J]({display:(Z4J.F1I+j7J)}
),this[Z4J.n6I][v9]&&this[(g0J+Z4J.Y8+Z4J.z5I)](a));this[(Z4J.x4I+o5I)][W3J][(q8J+Z4J.n6I)]({display:b&&1<b.length&&d&&!this[Z4J.n6I][v9]?(N8+Z4J.z5I+t0+u3I):"none"}
);this[Z4J.n6I][(D2I+Z4J.i0I)][(A0o+Z4J.z5I+Z4J.i0I+I7J+s8)]();return !0;}
,_typeFn:function(a){var P4X="appl",b4X="uns",b=Array.prototype.slice.call(arguments);b[(w5+t1J+Z4J.i0I)]();b[(b4X+h1I+f2)](this[Z4J.n6I][(Z4J.w1I+k6I+Z4J.I2I)]);var c=this[Z4J.n6I][(O4I+g6I)][a];if(c)return c[(P4X+Z4J.g7I)](this[Z4J.n6I][(y3I+Z4J.w1I+Z4J.n6I+Z4J.i0I)],b);}
}
;f[v8I][(o5I+G1+w7+Z4J.n6I)]={}
;f[(v8I)][A2]={className:"",data:"",def:"",fieldInfo:"",id:"",label:"",labelInfo:"",name:null,type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
;f[(v1X+Z0I)][(o5I+Z4J.w1I+w8+w7+Z4J.n6I)][(u1+E2I+S3I+Z4J.F1I+R8I)]={type:c3X,name:c3X,classes:c3X,opts:c3X,host:c3X}
;f[v8I][(E1)][(w8+Z4J.w1I+o5I)]={container:c3X,label:c3X,labelInfo:c3X,fieldInfo:c3X,fieldError:c3X,fieldMessage:c3X}
;f[E1]={}
;f[E1][y1J]={init:function(){}
,open:function(){}
,close:function(){}
}
;f[E1][(c8I+e6J+Z0I+X6+Z4J.g7I+g6I)]={create:function(){}
,get:function(){}
,set:function(){}
,enable:function(){}
,disable:function(){}
}
;f[(m2J+Z4J.z5I+Z4J.n6I)][(Y9J+Z4J.i0I+S3I+M5X+Z4J.n6I)]={ajaxUrl:c3X,ajax:c3X,dataSource:c3X,domTable:c3X,opts:c3X,displayController:c3X,fields:{}
,order:[],id:-N0,displayed:!N0,processing:!N0,modifier:c3X,action:c3X,idSrc:c3X}
;f[E1][(N8+Z4J.R0I+Z4J.i0I+Y1J)]={label:c3X,fn:c3X,className:c3X}
;f[E1][(c8I+u2+v5I+k6I+Z4J.i0I+J5X)]={onReturn:(V3I+S3I+Z4J.i0I),onBlur:d5I,onBackground:T6,onComplete:d5I,onEsc:(r0J+u1),submit:u7X,focus:E0,buttons:!E0,title:!E0,message:!E0,drawType:!N0}
;f[(N9+Z4J.z5I+Z4J.Y8+Z4J.g7I)]={}
;var o=jQuery,n;f[p6J][(Z4J.z5I+B4X+j7I)]=o[(Z4J.q2+z0+Z4J.F1I+w8)](!0,{}
,f[E1][(N9+l7I+Z4J.g7I+G4X+t7+Z4J.i0I+k7X+Z4J.z5I+Z4J.z5I+Q2)],{init:function(){var P6I="_init";n[P6I]();return n;}
,open:function(a,b,c){if(n[(F4+G5I)])c&&c();else{n[(u5J)]=a;a=n[(F4+Z4J.x4I+o5I)][t0J];a[I7X]()[K7X]();a[(Z4J.Y8+k6I+A6X+w8)](b)[w1X](n[E0X][d5I]);n[(F4+Z4J.n6I+y3I+Z4J.w1I+j0J+Z4J.F1I)]=true;n[(n8J+y3I+Z4J.w1I+j0J)](c);}
}
,close:function(a,b){if(n[(F4+G5I)]){n[(F0X+I6I)]=a;n[M4](b);n[(J2+Z4J.F1I)]=false;}
else b&&b();}
,node:function(){var d2X="apper";return n[(F4+w8+S7)][(j0J+Z4J.o6I+d2X)][0];}
,_init:function(){var g9J="kgrou",V8I="acit",J6I="x_C",r9I="Li";if(!n[(F4+Z4J.o6I+Z4J.q2+Z4J.Y8+w8+Z4J.g7I)]){var a=n[E0X];a[(f2J+g3X+Z4J.q2+g3X)]=o((w8+P9X+Z4J.l0X+j3+R2+F4+r9I+X1+M6I+Z4J.w1I+J6I+Z4J.w1I+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I),n[E0X][(j0J+k8I+h1X)]);a[(j0J+Y8X+k6I+k6I+Q2)][v3J]((Z4J.w1I+k6I+V8I+Z4J.g7I),0);a[(N8+Z4J.Y8+Z4J.V2+g9J+Z4J.F1I+w8)][v3J]("opacity",0);}
}
,_show:function(a){var Y6X="_L",d6I='S',P5J='TED_Light',W0="sc",y4I="_scro",L6I="t_W",J9="_Cont",O1="D_Li",O5="ED_L",l8J="round",B1="kg",t6I="lc",Q3="ightCa",G7J="_h",f7X="ba",X3I="Mob",g4="Lig",F4X="orie",b=n[E0X];j[(F4X+Z4J.F1I+Z4J.i0I+z1+s4)]!==h&&o((N8+G1+Z4J.g7I))[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+Z4J.Y8+t8)]((j3+X6+u3+j3+F4+g4+E4J+N8+F2+F4+X3I+G6J+Z4J.q2));b[t0J][(Z4J.V2+t8)]("height","auto");b[(C9X+k6I+k6I+Q2)][v3J]({top:-n[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I)][f8X]}
);o((Q5X))[w1X](n[(F0X+Z4J.w1I+o5I)][(f7X+z9J+R3X+Z4J.R0I+F9X)])[(Z4J.Y8+k6I+k6I+q8+w8)](n[E0X][a3J]);n[(G7J+Z4J.q2+Q3+t6I)]();b[(C9X+N0J+Q2)][(E8X+k6I)]()[h2J]({opacity:1,top:0}
,a);b[(N8+Z4J.Y8+Z4J.V2+B1+l8J)][l8X]()[h2J]({opacity:1}
);b[d5I][p2X]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X7+i3J+U5+S3I+Z8I+y3I+M6I+Z4J.w1I+z0J),function(){n[(F0X+Z4J.i0I+Z4J.q2)][(Q4J+Z4J.w1I+Z4J.n6I+Z4J.q2)]();}
);b[O1I][(N8+h5J)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+O5+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J),function(){n[u5J][(Q6I+Z8I+S+F9X)]();}
);o((I1+Z4J.l0X+j3+X7+O1+Z8I+y3I+Z4J.i0I+N8+Z4J.w1I+z0J+J9+Z4J.q2+Z4J.F1I+L6I+Y8X+k6I+g6I+Z4J.o6I),b[(j0J+Z4J.o6I+Z4J.Y8+N0J+Q2)])[p2X]("click.DTED_Lightbox",function(a){var h7="sCl";o(a[d6J])[(y3I+Z4J.Y8+h7+Z1+Z4J.n6I)]("DTED_Lightbox_Content_Wrapper")&&n[u5J][(N8+Z4J.Y8+Z4J.V2+u3I+e2I+y4+Z4J.F1I+w8)]();}
);o(j)[(N8+Y0o+w8)]("resize.DTED_Lightbox",function(){var j5X="eigh";n[(F4+y3I+j5X+Z4J.i0I+G4X+Z4J.Y8+t6I)]();}
);n[(y4I+q5I+X6+Z4J.w1I+k6I)]=o("body")[(W0+P1X+Z4J.z5I+V2I+k6I)]();if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+g3X+n9+Z4J.w1I+Z4J.F1I)]!==h){a=o("body")[I7X]()[(o8X+Z4J.i0I)](b[(f7X+z9J+Z8I+k7X+V)])[(o8X+Z4J.i0I)](b[(i4I+Z4J.Y8+N0J+Q2)]);o((N8+i2X))[w1X]((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+P5J+Z4I+u4X+d6I+v0J+d9I+R7J+v9I+I0J));o((w8+P9X+Z4J.l0X+j3+X6+f0J+Y6X+S3I+Z8I+E4J+j7I+F4+x4+O2+Z4J.F1I))[(e0+g6I+F9X)](a);}
}
,_heightCalc:function(){var k5I="axHe",q3="y_",p0o="TE_Bod",B5J="eig",N3X="Footer",a=n[(E0X)],b=o(j).height()-n[P0I][x5J]*2-o("div.DTE_Header",a[(i4I+Z4J.Y8+N0J+Q2)])[u6I]()-o((H0J+g0J+Z4J.l0X+j3+X7+F4+N3X),a[a3J])[(Z4J.w1I+d3+Z4J.o6I+z8+B5J+y3I+Z4J.i0I)]();o((w8+S3I+g0J+Z4J.l0X+j3+p0o+q3+G4X+Z4J.w1I+Z4J.F1I+Z4J.i0I+q8+Z4J.i0I),a[a3J])[v3J]((o5I+k5I+h1J+y3I+Z4J.i0I),b);}
,_hide:function(a){var D0I="nt_",y9J="_Con",d2="TED_",T4J="scrollTop",p8X="remo",x2X="_Sh",z7J="tbo",Q1J="ED_Ligh",Z6I="nta",b=n[E0X];a||(a=function(){}
);if(j[(Z4J.w1I+Z4J.o6I+S3I+Z4J.q2+Z6I+Z4J.i0I+S3I+t7)]!==h){var c=o((H0J+g0J+Z4J.l0X+j3+X6+Q1J+z7J+z0J+x2X+o0I));c[(O9J+G6J+J4I+Z4J.q2+Z4J.F1I)]()[(K1X+C5I+V2I)]("body");c[V9I]();}
o((G8X+w8+Z4J.g7I))[(p8X+l9J+G4X+l7I+Z4J.n6I+Z4J.n6I)]("DTED_Lightbox_Mobile")[T4J](n[(F4+Z4J.n6I+m3J+Z4J.w1I+Z4J.z5I+g6J+k6I)]);b[a3J][(x8+Z4J.w1I+k6I)]()[(Z4J.Y8+Z4J.F1I+S3I+F6+Z4J.q2)]({opacity:0,top:n[P0I][f8X]}
,function(){o(this)[K7X]();a();}
);b[O1I][l8X]()[(Z4J.Y8+Z4J.F1I+S3I+o5I+z1+Z4J.q2)]({opacity:0}
,function(){var j6X="tach";o(this)[(y9I+j6X)]();}
);b[(Z4J.V2+Z4J.z5I+F8+Z4J.q2)][r0I]("click.DTED_Lightbox");b[O1I][(O3J+Z4X+F9X)]((Z9I+Z4J.V2+u3I+Z4J.l0X+j3+d2+U5+h1J+y3I+Z4J.i0I+j7I));o((w8+S3I+g0J+Z4J.l0X+j3+X6+u3+i3J+U5+S3I+G0+N8+Z4J.w1I+z0J+y9J+I6I+D0I+j0I+Z4J.o6I+e0+k6I+Q2),b[(j0J+Z4J.o6I+K1X+Z4J.q2+Z4J.o6I)])[r0I]("click.DTED_Lightbox");o(j)[(C1I+Z4J.F1I+w8)]("resize.DTED_Lightbox");}
,_dte:null,_ready:!1,_shown:!1,_dom:{wrapper:o((x5+m2I+v3+q2X+B2I+P7I+o5X+i8X+c2+V1X+q2X+c2+r6I+Z7X+I2X+P0J+v0J+c0X+Z4I+d9I+o2J+p4I+T2X+m3X+m8I+G9J+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r6I+E2+o6X+P0J+E3J+u4X+k8+d9I+v9I+c0X+q4I+S6+m8I+G9J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X+c2+r6I+V5X+V0I+v0J+z4+p4I+k8+d9I+v9I+c0X+V6+c0X+R4J+M4J+m8I+G9J+b0X+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+E2+s1J+T7I+w4J+c0X+q8X+O3+c0X+V6+c0X+Z1I+m2I+v3+o9+m2I+v3+o9+m2I+v3+o9+m2I+v3+y2)),background:o((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+c2+C7J+s9+T7I+N6J+f7+o2J+p4I+M3+l0I+N1I+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2)),close:o((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+c2+r6I+E2+Q3X+A5J+v0J+c0X+Z4I+d9I+x8J+P7I+s6J+m8I+Z1I+m2I+T7I+Y7J+y2)),content:null}
}
);n=f[(w8+S3I+Z4J.n6I+k6I+l7I+Z4J.g7I)][(u1I+Z8I+m9X+z0J)];n[(H0X+c8I)]={offsetAni:M2I,windowPadding:M2I}
;var m=jQuery,g;f[(w8+S3I+Z4J.n6I+E0I)][(Z4J.q2+f5X+w7+Z4J.w1I+g6I)]=m[(Z4J.q2+z0J+Z4J.i0I+q8+w8)](!0,{}
,f[(o5I+G1+M5J)][y1J],{init:function(a){g[u5J]=a;g[(z1J+N1X+Z4J.i0I)]();return g;}
,open:function(a,b,c){var k4I="how",x0o="ild",r6X="dCh",k2X="conte",E7X="dte";g[(F4+E7X)]=a;m(g[E0X][(k2X+Z4J.F1I+Z4J.i0I)])[I7X]()[(y9I+Z4J.i0I+N4+y3I)]();g[E0X][t0J][(e0+A6X+r6X+x0o)](b);g[E0X][t0J][R7](g[(F4+w8+S7)][(Z4J.V2+Z4J.z5I+j6)]);g[(n8J+k4I)](c);}
,close:function(a,b){g[u5J]=a;g[M4](b);}
,node:function(){var E5I="pper";return g[(E9J+o5I)][(i4I+Z4J.Y8+E5I)][0];}
,_init:function(){var J7X="ackg",j4I="pacity",b2J="cit",K5X="ndO",u7I="ack",L0="sb",T5="yle",E2J="_ready";if(!g[E2J]){g[E0X][(f2J+Z4J.F1I+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)]=m("div.DTED_Envelope_Container",g[(F4+w8+S7)][(j0J+k8I+k6I+Q2)])[0];q[(Q5X)][(Z4J.Y8+k6I+g6I+Z4J.F1I+w8+G4X+w7X+w8)](g[(F4+w8+S7)][O1I]);q[(G8X+w8+Z4J.g7I)][R7](g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)]);g[(F0X+Z4J.w1I+o5I)][O1I][(x8+T5)][(g0J+S3I+L0+G6J+S3I+Z4J.i0I+Z4J.g7I)]="hidden";g[(E9J+o5I)][(N8+N4+n7I+Z4J.w1I+V)][e1J][(w8+r9X+V7I+Z4J.g7I)]=(B2X+t0+u3I);g[(G0X+t8+y4X+u7I+R3X+Z4J.R0I+K5X+o8I+b2J+Z4J.g7I)]=m(g[(F4+w8+S7)][(N8+u7I+R3X+Z4J.R0I+Z4J.F1I+w8)])[v3J]((Z4J.w1I+j4I));g[(E9J+o5I)][O1I][e1J][(w8+S3I+H2+Z4J.z5I+y3)]=(Z4J.F1I+t7+Z4J.q2);g[(F0X+S7)][(N8+J7X+k7X+O3J+w8)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][(g0J+r9X+Z4X+r7+Z4J.g7I)]=(g0J+r9X+o3J+Z4J.z5I+Z4J.q2);}
}
,_show:function(a){var f1I="velo",m2X="iz",Y4I="res",g2I="elop",B7X="_E",s9X="bin",E0J="velope",P3X="En",N6X="igh",L5="tHe",Q8X="cro",X1J="ndo",S7I="wi",A3X="fadeIn",A0J="ity",j1X="pac",k4X="ground",C0I="sBa",H0I="imat",O6J="oun",I1I="lock",n0I="backg",X4I="px",b7="tHei",U0="marginLeft",x0="wrappe",V8="offsetWidth",c7X="_heightCalc",V4J="achR",j9="_findAtt",u4="blo",h6I="acity",v0I="sty";a||(a=function(){}
);g[E0X][(H0X+Z4J.i0I+Z4J.q2+Z4J.F1I+Z4J.i0I)][(v0I+m0I)].height="auto";var b=g[E0X][(C9X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J];b[(Z4J.w1I+k6I+h6I)]=0;b[(w8+t0o+y3)]=(u4+Z4J.V2+u3I);var c=g[(j9+V4J+Z4J.w1I+j0J)](),e=g[c7X](),d=c[V8];b[p6J]=(o8X+G9X);b[V7J]=1;g[(F4+w8+S7)][(j0J+Y8X+k6I+k6I+Z4J.q2+Z4J.o6I)][e1J].width=d+(k6I+z0J);g[E0X][(x0+Z4J.o6I)][e1J][U0]=-(d/2)+"px";g._dom.wrapper.style.top=m(c).offset().top+c[(d6+c8I+Z4J.n6I+Z4J.q2+b7+Z8I+E4J)]+"px";g._dom.content.style.top=-1*e-20+(X4I);g[(E0X)][(Q6I+Z8I+S+Z4J.F1I+w8)][(v0I+Z4J.z5I+Z4J.q2)][(Z4J.w1I+k6I+Z4J.Y8+Z4J.V2+S3I+O4I)]=0;g[(E9J+o5I)][(n0I+Z4J.o6I+Z4J.w1I+Z4J.R0I+Z4J.F1I+w8)][e1J][(w8+S3I+Z4J.n6I+E0I)]=(N8+I1I);m(g[E0X][(n0I+Z4J.o6I+O6J+w8)])[(Q+H0I+Z4J.q2)]({opacity:g[(G0X+Z4J.n6I+C0I+z9J+k4X+s1+j1X+A0J)]}
,(Z4J.F1I+u1X+Z4J.Y8+Z4J.z5I));m(g[E0X][a3J])[A3X]();g[(Z4J.V2+Z4J.w1I+l1X)][(S7I+X1J+j0J+R0+Q8X+q5I)]?m("html,body")[h2J]({scrollTop:m(c).offset().top+c[(Z4J.w1I+c8I+C2+Z4J.q2+L5+N6X+Z4J.i0I)]-g[P0I][x5J]}
,function(){m(g[E0X][(f2J+d4J+Z4J.i0I)])[h2J]({top:0}
,600,a);}
):m(g[E0X][t0J])[h2J]({top:0}
,600,a);m(g[E0X][(Z4J.V2+Z4J.z5I+F8+Z4J.q2)])[p2X]((Q4J+M3J+u3I+Z4J.l0X+j3+R2+F4+P3X+E0J),function(){g[u5J][d5I]();}
);m(g[(F4+Z4J.x4I+o5I)][O1I])[(s9X+w8)]((Z4J.V2+Z4J.z5I+T1X+Z4J.l0X+j3+X6+f0J+B7X+Z4J.F1I+g0J+g2I+Z4J.q2),function(){var T1I="ound";g[u5J][(N8+Z4J.Y8+z9J+e2I+T1I)]();}
);m("div.DTED_Lightbox_Content_Wrapper",g[E0X][(b1X+g6I+Z4J.o6I)])[(p2X)]("click.DTED_Envelope",function(a){m(a[(Z4J.i0I+v6+Z8I+Z4J.A4)])[(y3I+Z4J.Y8+Z4J.n6I+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("DTED_Envelope_Content_Wrapper")&&g[(u5J)][O1I]();}
);m(j)[(Z4X+F9X)]((Y4I+m2X+Z4J.q2+Z4J.l0X+j3+R2+F4+u3+Z4J.F1I+f1I+k6I+Z4J.q2),function(){g[c7X]();}
);}
,_heightCalc:function(){var A6J="y_C",s7I="TE_",Y2I="eight",Z2X="ooter",E2X="TE_F",N5I="onten",A3I="tCa",h2X="hei",N6I="heightCalc";g[(P0I)][N6I]?g[P0I][(h2X+Z8I+y3I+A3I+Z4J.z5I+Z4J.V2)](g[(F0X+S7)][a3J]):m(g[E0X][(Z4J.V2+N5I+Z4J.i0I)])[(O9J+G6J+w8+C3X+Z4J.F1I)]().height();var a=m(j).height()-g[(H0X+c8I)][x5J]*2-m("div.DTE_Header",g[E0X][(b1X+k6I+Q2)])[(Z4J.w1I+Z4J.R0I+I6I+Z4J.o6I+z8+Z4J.q2+B4X)]()-m((I1+Z4J.l0X+j3+E2X+Z2X),g[E0X][(i4I+e0+k6I+Q2)])[(Z4J.w1I+d3+Z4J.o6I+z8+Y2I)]();m((I1+Z4J.l0X+j3+s7I+y4X+Z4J.w1I+w8+A6J+t7+Z4J.i0I+Z4J.q2+g3X),g[E0X][a3J])[(Z4J.V2+t8)]((o5I+F5+z8+Y2I),a);return m(g[u5J][Z6J][(i4I+Z4J.Y8+k6I+k6I+Z4J.q2+Z4J.o6I)])[(y4+Z4J.i0I+Z4J.q2+Z4J.o6I+w7I+S3I+G0)]();}
,_hide:function(a){var N7I="TED_L",q1X="offsetHeight";a||(a=function(){}
);m(g[E0X][t0J])[h2J]({top:-(g[(F4+w8+Z4J.w1I+o5I)][t0J][q1X]+50)}
,600,function(){m([g[E0X][a3J],g[E0X][O1I]])[O7I]("normal",a);}
);m(g[E0X][(Z4J.V2+A8I)])[r0I]((Q4J+M3J+u3I+Z4J.l0X+j3+N7I+h1J+y3I+Z4J.i0I+N8+Z4J.w1I+z0J));m(g[(E0X)][O1I])[(C1I+Z4J.F1I+w8)]("click.DTED_Lightbox");m("div.DTED_Lightbox_Content_Wrapper",g[(F0X+S7)][(i4I+Z4J.Y8+k6I+g6I+Z4J.o6I)])[(O3J+N8+h5J)]((Q4J+S3I+z9J+Z4J.l0X+j3+X7+i3J+U5+S3I+X1+M6I+F2));m(j)[r0I]("resize.DTED_Lightbox");}
,_findAttachRow:function(){var v3I="dt",a=m(g[(F0X+I6I)][Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]();return g[(Z4J.V2+M7J)][a7I]==="head"?a[Q2X]()[(Q0I+b4+Q2)]():g[u5J][Z4J.n6I][V8J]===(Z4J.V2+Z4J.o6I+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)?a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)]()[(W7X+l8)]():a[o1](g[(F4+v3I+Z4J.q2)][Z4J.n6I][z4X])[(W9I+Z4J.q2)]();}
,_dte:null,_ready:!1,_cssBackgroundOpacity:1,_dom:{wrapper:m((x5+m2I+v3+q2X+B2I+Z2J+i8X+c2+V1X+q2X+c2+K3I+p0J+v9I+p2+x3J+s5X+H4+H7J+H7J+m8I+G9J+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+c2+r6I+V5X+p4I+E2+i8I+l4+Y1+m2I+d9I+R7J+G6I+Z1I+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+C4J+p2+d9I+H7J+m8I+I1X+v0J+q4I+m2I+d9I+Y3X+N6J+Z1I+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X+c2+r6I+V5X+M8X+Y7J+B5+d9I+H7J+s9J+o8J+c0X+q4I+S6+T+Z1I+m2I+v3+o9+m2I+T7I+Y7J+y2))[0],background:m((x5+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+c2+r6I+E2+c2+n2+v9I+p2+d9I+B4I+L8+Q4I+i4J+D6X+b0X+m2I+v3+P8X+m2I+T7I+Y7J+y2))[0],close:m((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+J3+Y7J+X2X+B4I+U7J+d9I+u2I+Z9+c0X+T7I+A9I+A0+C8X+m2I+T7I+Y7J+y2))[0],content:null}
}
);g=f[(S0+E0I)][(J6+Z4J.w1I+k6I+Z4J.q2)];g[P0I]={windowPadding:K9I,heightCalc:c3X,attach:(Z4J.o6I+O2),windowScroll:!E0}
;f.prototype.add=function(a,b){var w2I="rder",b2I="nitFi",D9X="'. ",a0o="` ",b0J=" `",A4X="quir",e0X="dding";if(d[(S3I+T8X+Z4J.o6I+Y8X+Z4J.g7I)](a))for(var c=0,e=a.length;c<e;c++)this[(Z4J.Y8+N9I)](a[c]);else{c=a[i1X];if(c===h)throw (L8X+M6+W4J+Z4J.Y8+e0X+W4J+c8I+S3I+Z4J.q2+Z0I+v2I+X6+Q0I+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+Z4J.o6I+Z4J.q2+A4X+B4+W4J+Z4J.Y8+b0J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2+a0o+Z4J.w1I+Q8I+Q7X+Z4J.F1I);if(this[Z4J.n6I][(g5I+Z4J.n6I)][c])throw "Error adding field '"+c+(D9X+U4X+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.Y8+Z4J.z5I+Z4J.o6I+h7I+Z4J.g7I+W4J+Z4J.q2+z0J+S3I+x8+Z4J.n6I+W4J+j0J+Z9X+y3I+W4J+Z4J.i0I+h1I+Z4J.n6I+W4J+Z4J.F1I+Z4J.Y8+o5I+Z4J.q2);this[e9]((S3I+b2I+w7+w8),a);this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)][c]=new f[v8I](a,this[(Z4J.V2+l7I+Z4J.n6I+Z4J.n6I+B4)][g5I],this);b===h?this[Z4J.n6I][(u2+y9I+Z4J.o6I)][q7I](c):null===b?this[Z4J.n6I][(u2+w8+Z4J.q2+Z4J.o6I)][(O3J+w5+S3I+c8I+Z4J.i0I)](c):(e=d[a4](b,this[Z4J.n6I][q0X]),this[Z4J.n6I][(Z4J.w1I+w2I)][R7I](e+1,0,c));}
this[(F0X+S3I+H2+l7I+Z4J.g7I+i0o+Z4J.w1I+Z4J.o6I+w8+Z4J.q2+Z4J.o6I)](this[(u2+w8+Q2)]());return this;}
;f.prototype.background=function(){var O8X="grou",C0X="onBa",a=this[Z4J.n6I][M9][(C0X+z9J+O8X+Z4J.F1I+w8)];(N8+Z4J.z5I+Z4J.R0I+Z4J.o6I)===a?this[T6]():d5I===a?this[(J1X+Z4J.q2)]():(Z4+o5I+S3I+Z4J.i0I)===a&&this[(Z4J.n6I+Z4J.R0I+v2X+Z9X)]();return this;}
;f.prototype.blur=function(){var g2="_bl";this[(g2+Z4J.R0I+Z4J.o6I)]();return this;}
;f.prototype.bubble=function(a,b,c,e){var A3J="ostop",A4I="clu",K2="anima",q3X="bubbleP",s2X="prepend",G8I="bod",O8J="dTo",K7I='" /></div></div><div class="',D8I="able",q4="lin",S1X='"><div/></div>',z9X="bg",T9J="ses",N2I="bleNode",j8="resize.",f3I="_formO",H5X="dual",G8J="ivi",D6I="Pl",g2X="boolean",T5X="je",U9I="_tidy",l=this;if(this[U9I](function(){l[(N8+u0J+N8+Z4J.z5I+Z4J.q2)](a,b,e);}
))return this;d[(r9X+i1+l7I+Y0o+s1+N8+T5X+i8J)](b)?(e=b,b=h,c=!E0):g2X===typeof b&&(c=b,e=b=h);d[(r9X+D6I+Z4J.Y8+S3I+Z4J.F1I+s1+N8+Z4J.i5I+Z4J.q2+i8J)](c)&&(e=c,c=!E0);c===h&&(c=!E0);var e=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)]({}
,this[Z4J.n6I][h3][(N8+Z4J.R0I+e6)],e),k=this[(F4+w8+h2+R0+E5J+Z4J.V2+Z4J.q2)]((h5J+G8J+H5X),a,b);this[Z7I](a,k,(L5X+N8+N8+m0I));if(!this[(F4+G0J+Z4J.q2+Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)]((L5X+N8+N8+m0I)))return this;var f=this[(f3I+k6I+Z4J.i0I+J5X)](e);d(j)[(t7)](j8+f,function(){var S4I="eP";l[(N8+S2X+Z4J.z5I+S4I+F8+X3+Z4J.w1I+Z4J.F1I)]();}
);var i=[];this[Z4J.n6I][(N8+Z4J.R0I+N8+N2I+Z4J.n6I)]=i[o1I][(e0+k6I+Z4J.z5I+Z4J.g7I)](i,y(k,a7I));i=this[(Q4J+Z4J.Y8+Z4J.n6I+T9J)][z3X];k=d((x5+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[z9X]+S1X);i=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X)+i[(b1X+h1X)]+(b0X+m2I+v3+q2X+B2I+Z2J+i8X)+i[(q4+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X)+i[(Z4J.i0I+D8I)]+(b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+i[(J1X+Z4J.q2)]+K7I+i[(E7I+S3I+Z4J.F1I+Z4J.i0I+Q2)]+(s4X+m2I+v3+y2));c&&(i[(Z4J.Y8+k6I+K4X+V2I)]((N8+i2X)),k[(Z4J.Y8+k6I+A6X+O8J)]((G8I+Z4J.g7I)));var c=i[(O9J+G6J+w8+C3X+Z4J.F1I)]()[(Z4J.q2+j1I)](E0),g=c[(Z4J.V2+y3I+G6J+J4I+q8)](),u=g[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]();c[(l4X+w8)](this[Z6J][M6X]);g[(k6I+C3X+k6I+q8+w8)](this[Z6J][y0o]);e[(o5I+B4+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]&&c[s2X](this[(Z6J)][i0X]);e[(Z4J.i0I+W6)]&&c[(k6I+Z4J.o6I+W2+Z4J.q2+Z4J.F1I+w8)](this[Z6J][J0I]);e[w4]&&g[(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(u0o+Q3I+h3X)]);var z=d()[o4J](i)[o4J](k);this[(W4I+Z4J.w1I+u1+v0+P7)](function(){var V3X="animat";z[(V3X+Z4J.q2)]({opacity:E0}
,function(){var v4J="size";z[(w8+Z4J.A4+N4+y3I)]();d(j)[t9J]((C3X+v4J+Z4J.l0X)+f);l[a6I]();}
);}
);k[F3J](function(){l[T6]();}
);u[F3J](function(){l[(F4+Z4J.V2+A8I)]();}
);this[(q3X+F8+S3I+Z4J.i0I+s4)]();z[(K2+I6I)]({opacity:N0}
);this[(F4+c8I+Z4J.w1I+v5J+Z4J.n6I)](this[Z4J.n6I][(S3I+Z4J.F1I+A4I+w8+Z4J.q2+o3+S3I+v1J)],e[(c8I+Z4J.w1I+E8)]);this[(F4+k6I+A3J+q8)]((L5X+N8+l3));return this;}
;f.prototype.bubblePosition=function(){var T0I="below",e4J="rW",W1J="_Line",a=d((w8+S3I+g0J+Z4J.l0X+j3+X7+F4+p1X+L7X+Z4J.z5I+Z4J.q2)),b=d((I1+Z4J.l0X+j3+X6+u3+F4+p1X+N8+N8+m0I+W1J+Z4J.o6I)),c=this[Z4J.n6I][(N8+S2X+Z4J.z5I+P2I+G1+Z4J.q2+Z4J.n6I)],e=0,l=0,k=0,f=0;d[(J5I+O9J)](c,function(a,b){var f7I="Wid",c=d(b)[(d6+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I)]();e+=c.top;l+=c[s2I];k+=c[(m0I+f2)]+b[(Z4J.w1I+f4+Z4J.n6I+Z4J.A4+f7I+Z4J.i0I+y3I)];f+=c.top+b[(Z4J.w1I+c8I+c8I+Z4J.n6I+Z4J.q2+Z4J.i0I+w7I+S3I+Z8I+y3I+Z4J.i0I)];}
);var e=e/c.length,l=l/c.length,k=k/c.length,f=f/c.length,c=e,i=(l+k)/2,g=b[(y4+Z4J.i0I+Z4J.q2+e4J+S3I+w8+Z4J.i0I+y3I)](),u=i-g/2,g=u+g,h=d(j).width();a[(Z4J.V2+Z4J.n6I+Z4J.n6I)]({top:c,left:i}
);b.length&&0>b[(Z4J.w1I+c8I+C2+Z4J.q2+Z4J.i0I)]().top?a[v3J]("top",f)[(o4J+G4X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((N8+w7+Z4J.w1I+j0J)):a[(Z4J.o6I+Q8+Z4J.w1I+l9J+n1+Z4J.n6I)]((T0I));g+15>h?b[(Z4J.V2+t8)]("left",15>u?-(u-15):-(g-h+15)):b[(Z4J.V2+t8)]((m0I+f2),15>u?-(u-15):0);return this;}
;f.prototype.buttons=function(a){var b=this;E6J===a?a=[{label:this[k1I][this[Z4J.n6I][V8J]][(Z4J.n6I+Z4J.R0I+l6X)],fn:function(){this[(Z4+o5I+Z9X)]();}
}
]:d[(Y3I+Y8X+Z4J.g7I)](a)||(a=[a]);d(this[(Z6J)][w4]).empty();d[s8X](a,function(a,e){var W3I="keypress",x8X="keyup",y8I="lassN";(Z4J.n6I+Z4J.i0I+b7J+Z8I)===typeof e&&(e={label:e,fn:function(){this[(Z4J.n6I+Z4J.R0I+N8+o5I+S3I+Z4J.i0I)]();}
}
);d((M4X+N8+Z4J.R0I+Z4J.i0I+Q3I+Z4J.F1I+i9X),{"class":b[T4][(a8I+o5I)][(N8+P2X+Z4J.w1I+Z4J.F1I)]+(e[(Z4J.V2+y8I+a0+Z4J.q2)]?W4J+e[(Z4J.V2+Z4J.z5I+Z4J.Y8+t8+J1+Z4J.Y8+A1J)]:g0I)}
)[(y3I+Z4J.i0I+t3J)](Z4J.T5J===typeof e[s0I]?e[(s0I)](b):e[(Z4J.z5I+Z4J.w2+w7)]||g0I)[l5X]((Z4J.i0I+Z4J.w2+S3I+Z4J.F1I+y9I+z0J),E0)[(Z4J.w1I+Z4J.F1I)](x8X,function(a){a2I===a[(l6+Z4J.g7I+G4X+G1+Z4J.q2)]&&e[(Z4J.h0I)]&&e[(Z4J.h0I)][(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](b);}
)[t7](W3I,function(a){a2I===a[D2J]&&a[F1]();}
)[t7]((Z4J.V2+Z4J.z5I+S3I+z9J),function(a){a[F1]();e[(Z4J.h0I)]&&e[(c8I+Z4J.F1I)][(d5J+Z4J.z5I)](b);}
)[(e0+k6I+Z4J.q2+F9X+V2I)](b[Z6J][(L5X+X4J+Z4J.F1I+Z4J.n6I)]);}
);return this;}
;f.prototype.clear=function(a){var R8X="fie",b=this,c=this[Z4J.n6I][(R8X+Z4J.z5I+w8+Z4J.n6I)];X3X===typeof a?(c[a][(y9I+z6X+Z4J.w1I+Z4J.g7I)](),delete  c[a],a=d[(Y0o+X0+Y8X+Z4J.g7I)](a,this[Z4J.n6I][(i5X+Z4J.o6I)]),this[Z4J.n6I][(u2+y9I+Z4J.o6I)][R7I](a,N0)):d[s8X](this[C7I](a),function(a,c){var k2I="clear";b[k2I](c);}
);return this;}
;f.prototype.close=function(){this[w3X](!N0);return this;}
;f.prototype.create=function(a,b,c,e){var C1J="Open",X8J="ybe",u6="leM",O0J="Cr",Z6X="vent",Q9="_dis",K8="_actionClass",c9I="Arg",T7X="ru",l=this,k=this[Z4J.n6I][Y8I],f=N0;if(this[(F4+Z4J.i0I+C8I)](function(){l[d0I](a,b,c,e);}
))return this;y9X===typeof a&&(f=a,a=b,b=c);this[Z4J.n6I][(R0J+o3+m1J+Z4J.n6I)]={}
;for(var i=E0;i<f;i++)this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+I5J+w5I)][i]={fields:this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)]}
;f=this[(F4+Z4J.V2+T7X+w8+c9I+Z4J.n6I)](a,b,c,e);this[Z4J.n6I][(Z4J.Y8+i8J+S3I+Z4J.w1I+Z4J.F1I)]=(m3J+J5I+I6I);this[Z4J.n6I][z4X]=c3X;this[(w8+S7)][(c8I+Z4J.w1I+t6X)][(x8+Z4J.g7I+Z4J.z5I+Z4J.q2)][p6J]=h3J;this[K8]();this[(Q9+M7I+Z4J.Y8+Z4J.g7I+i0o+Z4J.w1I+I3X+Q2)](this[(b9+Z4J.q2+Z0I+Z4J.n6I)]());d[(e9I+y3I)](k,function(a,b){var N2="eset",k9J="iR";b[(o5I+Z4J.R0I+S2J+k9J+N2)]();b[(u1+Z4J.i0I)](b[D1I]());}
);this[(N9J+Z6X)]((Y0o+Z9X+O0J+J5I+I6I));this[(F4+Z4J.Y8+Z4J.n6I+Z4J.n6I+Q8+N8+u6+Z4J.Y8+S3I+Z4J.F1I)]();this[x6X](f[(Z4J.w1I+Q8I+Z4J.n6I)]);f[(o5I+Z4J.Y8+X8J+C1J)]();return this;}
;f.prototype.dependent=function(a,b,c){if(d[(Y3I+Z4J.o6I+y3)](a)){for(var e=0,l=a.length;e<l;e++)this[(w8+W2+C5I+q8+Z4J.i0I)](a[e],b,c);return this;}
var k=this,f=this[(b9+Q9X)](a),i={type:"POST",dataType:"json"}
,c=d[(K8X+Z4J.F1I+w8)]({event:"change",data:null,preUpdate:null,postUpdate:null}
,c),g=function(a){var T0X="pdate",S6J="Upd",k4="rror",l4I="preUpdate",U8="eUpd";c[(G0J+U8+Z4J.Y8+I6I)]&&c[l4I](a);d[s8X]({labels:(b3I+w7),options:"update",values:(g0J+X0I),messages:"message",errors:(Z4J.q2+k4)}
,function(b,c){a[b]&&d[(J5I+Z4J.V2+y3I)](a[b],function(a,b){k[(c8I+S3I+Q9X)](a)[c](b);}
);}
);d[s8X](["hide","show","enable",(w8+S3I+Z4J.n6I+Z4J.w2+Z4J.z5I+Z4J.q2)],function(b,c){if(a[c])k[c](a[c]);}
);c[(m0J+Z4J.i0I+S6J+Z4J.Y8+Z4J.i0I+Z4J.q2)]&&c[(m0J+Z4J.i0I+D7+T0X)](a);}
;d(f[o0o]())[(Z4J.w1I+Z4J.F1I)](c[(Z4J.q2+k6+Z4J.i0I)],function(a){if(-1!==d[a4](a[(Z4J.i0I+u2J+Z4J.q2+Z4J.i0I)],f[j0X]()[(Q3I+T0)]())){a={}
;a[C6X]=k[Z4J.n6I][(R0J+o3+e6J+r7I)]?y(k[Z4J.n6I][Z3J],(Z4J.C6J+Z4J.i0I+Z4J.Y8)):null;a[o1]=a[C6X]?a[(k7X+j0J+Z4J.n6I)][0]:null;a[(e7J+B8I+Z4J.n6I)]=k[y1]();if(c.data){var e=c.data(a);e&&(c.data=e);}
(c8I+Z4J.R0I+Z4J.F1I+m9I+Z4J.w1I+Z4J.F1I)===typeof b?(a=b(f[(y1)](),a,g))&&g(a):(d[T3J](b)?d[(p5+N5X+w8)](i,b):i[(Z4J.R0I+G6X)]=b,d[(Y7+F5)](d[(p5+Z4J.i0I+Z4J.q2+F9X)](i,{url:b,data:a,success:g}
)));}
}
);return this;}
;f.prototype.disable=function(a){var b=this[Z4J.n6I][Y8I];d[s8X](this[C7I](a),function(a,e){b[e][(w8+S3I+Z4J.n6I+G1I+Z4J.q2)]();}
);return this;}
;f.prototype.display=function(a){return a===h?this[Z4J.n6I][R8J]:this[a?Y5X:(J1X+Z4J.q2)]();}
;f.prototype.displayed=function(){return d[(A9J+k6I)](this[Z4J.n6I][Y8I],function(a,b){return a[R8J]()?b:c3X;}
);}
;f.prototype.displayNode=function(){var R4I="yCo";return this[Z4J.n6I][(N9+Z4J.z5I+Z4J.Y8+R4I+Z4J.F1I+Z4J.i0I+Z4J.o6I+A0I+m0I+Z4J.o6I)][(Z4J.F1I+G1+Z4J.q2)](this);}
;f.prototype.edit=function(a,b,c,e,d){var D5="ayb",a5J="ormOpt",e7="_assembleMain",x3="aSo",g0="rgs",y6X="crudA",m1I="_ti",k=this;if(this[(m1I+g3I)](function(){k[(u9+S3I+Z4J.i0I)](a,b,c,e,d);}
))return this;var f=this[(F4+y6X+g0)](b,c,e,d);this[Z7I](a,this[(F4+Z4J.C6J+Z4J.i0I+x3+Z4J.R0I+Z4J.o6I+Z9J)]((c8I+S3I+Z4J.q2+Z4J.z5I+w5I),a),(A9J+S3I+Z4J.F1I));this[e7]();this[(B9J+a5J+Q7X+Z4J.F1I+Z4J.n6I)](f[(V7+Z4J.I2I)]);f[(o5I+D5+Z4J.q2+s1+A6X)]();return this;}
;f.prototype.enable=function(a){var b=this[Z4J.n6I][(c8I+e6J+Z0I+Z4J.n6I)];d[(e9I+y3I)](this[C7I](a),function(a,e){b[e][(q8+Z4J.Y8+N8+m0I)]();}
);return this;}
;f.prototype.error=function(a,b){var L0I="mE";b===h?this[(F4+o5I+B4+Z4J.n6I+L9+Z4J.q2)](this[(w8+Z4J.w1I+o5I)][(a8I+L0I+Z4J.o6I+Z4J.o6I+u2)],a):this[Z4J.n6I][Y8I][a].error(b);return this;}
;f.prototype.field=function(a){return this[Z4J.n6I][Y8I][a];}
;f.prototype.fields=function(){return d[(I0)](this[Z4J.n6I][(b9+Z4J.q2+Z4J.z5I+w5I)],function(a,b){return b;}
);}
;f.prototype.get=function(a){var H3="Arr",b=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)];a||(a=this[(v7+w5I)]());if(d[(S3I+Z4J.n6I+H3+Z4J.Y8+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){c[d]=b[d][(n6+Z4J.i0I)]();}
);return c;}
return b[a][R5]();}
;f.prototype.hide=function(a,b){var r9J="dNam",C4="_fi",c=this[Z4J.n6I][Y8I];d[(s8X)](this[(C4+w7+r9J+B4)](a),function(a,d){c[d][(y3I+S3I+y9I)](b);}
);return this;}
;f.prototype.inError=function(a){var w6J="inError",J8X="isi",s0="rmE";if(d(this[(w8+Z4J.w1I+o5I)][(s8+s0+Z4J.o6I+Z4J.o6I+u2)])[r9X]((J0o+g0J+J8X+B2X+Z4J.q2)))return !0;for(var b=this[Z4J.n6I][(c8I+e6J+Z4J.z5I+w5I)],a=this[C7I](a),c=0,e=a.length;c<e;c++)if(b[a[c]][w6J]())return !0;return !1;}
;f.prototype.inline=function(a,b,c){var I0X="_closeReg",S6I="_Fie",m4X="TE_I",J4='_But',P5I='nl',K0I='I',z7='eld',S2='_F',a8='ne',r3='TE_Inli',i7I='nlin',W8X='TE_I',i1I="contents",s3I="_edi",C6="inli",R2X="tid",j1J="nli",y4J="_dat",U8X="inl",e=this;d[T3J](b)&&(c=b,b=h);var c=d[H3I]({}
,this[Z4J.n6I][h3][(U8X+S3I+G9X)],c),l=this[(y4J+Z4J.Y8+R0+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z9J)]("individual",a,b),k,f,i=0,g,u=!1;d[s8X](l,function(a,b){var e7X="han",c8X="ore",y5X="annot";if(i>0)throw (G4X+y5X+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+e7X+W4J+Z4J.w1I+G9X+W4J+Z4J.o6I+O2+W4J+S3I+j1J+G9X+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);k=d(b[a7I][0]);g=0;d[s8X](b[y0X],function(a,b){var N8X="nn",K2J="Ca";if(g>0)throw (K2J+N8X+T8+W4J+Z4J.q2+w8+Z9X+W4J+o5I+c8X+W4J+Z4J.i0I+C3I+Z4J.F1I+W4J+Z4J.w1I+G9X+W4J+c8I+S3I+Z4J.q2+Z0I+W4J+S3I+Z4J.F1I+Z4J.z5I+Y5J+W4J+Z4J.Y8+Z4J.i0I+W4J+Z4J.Y8+W4J+Z4J.i0I+v0o+Z4J.q2);f=b;g++;}
);i++;}
);if(d("div.DTE_Field",k).length||this[(F4+R2X+Z4J.g7I)](function(){e[(C6+Z4J.F1I+Z4J.q2)](a,b,c);}
))return this;this[(s3I+Z4J.i0I)](a,l,"inline");var z=this[(F4+a8I+v5I+k6I+p9X+Z4J.F1I+Z4J.n6I)](c);if(!this[b6I]((C6+Z4J.F1I+Z4J.q2)))return this;var O=k[i1I]()[(y9I+Z4J.i0I+Z4J.Y8+O9J)]();k[(Z4J.Y8+N0J+Z4J.q2+F9X)](d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+c2+r6I+E2+q2X+c2+W8X+i7I+m8I+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+c2+r3+a8+S2+T7I+z7+e4X+m2I+T7I+Y7J+q2X+B2I+t8J+n9J+n9J+i8X+c2+K3I+p4I+K0I+P5I+T7I+a8+J4+c0X+o8J+n9J+t3X+m2I+v3+y2)));k[T9X]((w8+S3I+g0J+Z4J.l0X+j3+m4X+j1J+G9X+S6I+Z0I))[w1X](f[(o8X+y9I)]());c[w4]&&k[(K3J+w8)]("div.DTE_Inline_Buttons")[(K1X+Z4J.q2+F9X)](this[Z6J][w4]);this[I0X](function(a){u=true;d(q)[(t9J)]((Q4J+S3I+z9J)+z);if(!a){k[(Z4J.V2+S3J+Z4J.q2+Z4J.F1I+Z4J.I2I)]()[K7X]();k[w1X](O);}
e[a6I]();}
);setTimeout(function(){if(!u)d(q)[t7]((Q4J+M3J+u3I)+z,function(a){var s9I="aren",H2X="peFn",x9="addBack",b=d[(c8I+Z4J.F1I)][x9]?"addBack":"andSelf";!f[(L9J+H2X)]("owns",a[(Z4J.i0I+u2J+Z4J.A4)])&&d[(S3I+Z4J.F1I+X0+Z4J.o6I+Z4J.Y8+Z4J.g7I)](k[0],d(a[(B7+Z4J.o6I+n6+Z4J.i0I)])[(k6I+s9I+Z4J.i0I+Z4J.n6I)]()[b]())===-1&&e[(T6)]();}
);}
,0);this[v6I]([f],c[(c8I+t0+q5J)]);this[(j6J+F8+Q3I+A6X)]((Y0o+Z4J.z5I+Y5J));return this;}
;f.prototype.message=function(a,b){var R0X="formInf",s5="_message";b===h?this[s5](this[(w8+Z4J.w1I+o5I)][(R0X+Z4J.w1I)],a):this[Z4J.n6I][Y8I][a][(w6+Z4J.n6I+i5)](b);return this;}
;f.prototype.mode=function(){return this[Z4J.n6I][V8J];}
;f.prototype.modifier=function(){var T4I="ier";return this[Z4J.n6I][(o5I+Z4J.w1I+w8+S3I+c8I+T4I)];}
;f.prototype.multiGet=function(a){var j7="Get",b=this[Z4J.n6I][Y8I];a===h&&(a=this[(c8I+S3I+w7+w8+Z4J.n6I)]());if(d[(r9X+U4X+P8J+Z4J.g7I)](a)){var c={}
;d[(Z4J.q2+Z4J.Y8+O9J)](a,function(a,d){var f8="tiG";c[d]=b[d][(p6+f8+Z4J.q2+Z4J.i0I)]();}
);return c;}
return b[a][(o5I+I8I+S3I+j7)]();}
;f.prototype.multiSet=function(a,b){var l9X="Objec",t7J="Plain",c=this[Z4J.n6I][Y8I];d[(S3I+Z4J.n6I+t7J+l9X+Z4J.i0I)](a)&&b===h?d[(J5I+Z4J.V2+y3I)](a,function(a,b){var A3="tiS";c[a][(p6+A3+Z4J.A4)](b);}
):c[a][C2J](b);return this;}
;f.prototype.node=function(a){var b=this[Z4J.n6I][(b9+v1J)];a||(a=this[(Z4J.w1I+Z4J.o6I+l8)]());return d[(w2J+U9X+Z4J.Y8+Z4J.g7I)](a)?d[(I0)](a,function(a){return b[a][(Z4J.F1I+G1+Z4J.q2)]();}
):b[a][(Z4J.F1I+O1X)]();}
;f.prototype.off=function(a,b){var c0J="ntN";d(this)[(Z4J.w1I+f4)](this[(N9J+g0J+Z4J.q2+c0J+a0+Z4J.q2)](a),b);return this;}
;f.prototype.on=function(a,b){d(this)[(t7)](this[(F4+f0X+Z4J.F1I+J8+Z4J.Y8+o5I+Z4J.q2)](a),b);return this;}
;f.prototype.one=function(a,b){d(this)[j7J](this[(F4+Z4J.q2+k6+J8+Z4J.Y8+A1J)](a),b);return this;}
;f.prototype.open=function(){var h9="ditO",W8="mai",U7I="seReg",I2="_clo",d7="eor",f3="splay",a=this;this[(F0X+S3I+f3+v0+d7+w8+Z4J.q2+Z4J.o6I)]();this[(I2+U7I)](function(){a[Z4J.n6I][(H0J+H2+c5J+G4X+S3J+k7X+Z4J.z5I+Z4J.z5I+Z4J.q2+Z4J.o6I)][(Z4J.V2+K8I+u1)](a,function(){var L1J="yna",o4X="arD",m9="_cle";a[(m9+o4X+L1J+o5I+S3I+Z4J.V2+s3X+s8)]();}
);}
);if(!this[b6I]((W8+Z4J.F1I)))return this;this[Z4J.n6I][(w8+t0o+y3+N7J+g3X+k7X+Z4J.z5I+Z4J.z5I+Q2)][(Z4J.w1I+k6I+Z4J.q2+Z4J.F1I)](this,this[Z6J][(j0J+Z4J.o6I+e0+k6I+Q2)]);this[v6I](d[(o5I+e0)](this[Z4J.n6I][(i5X+Z4J.o6I)],function(b){return a[Z4J.n6I][(c8I+S3I+w7+w8+Z4J.n6I)][b];}
),this[Z4J.n6I][(Z4J.q2+h9+k6I+Z4J.i0I+Z4J.n6I)][O6I]);this[(j6J+Z4J.w1I+E8X+A6X)]((e2J));return this;}
;f.prototype.order=function(a){var J0X="ide",E6I="sort",P7X="ort",t2="sArra";if(!a)return this[Z4J.n6I][q0X];arguments.length&&!d[(S3I+t2+Z4J.g7I)](a)&&(a=Array.prototype.slice.call(arguments));if(this[Z4J.n6I][q0X][u4I]()[(Z4J.n6I+P7X)]()[W6I](F6X)!==a[(Z4J.n6I+u1I+Z4J.V2+Z4J.q2)]()[E6I]()[W6I](F6X))throw (U4X+Z4J.z5I+Z4J.z5I+W4J+c8I+m1J+Z4J.n6I+p5X+Z4J.Y8+F9X+W4J+Z4J.F1I+Z4J.w1I+W4J+Z4J.Y8+w8+w8+S3I+Z4J.i0I+Q7X+Z4J.F1I+Z4J.Y8+Z4J.z5I+W4J+c8I+S3I+w7+w5I+p5X+o5I+q5J+Z4J.i0I+W4J+N8+Z4J.q2+W4J+k6I+k7X+g0J+J0X+w8+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+I3X+Z4J.q2+M8J+Z4J.l0X);d[H3I](this[Z4J.n6I][q0X],a);this[L3J]();return this;}
;f.prototype.remove=function(a,b,c,e,l){var B3="maybeOpen",M0X="Ma",h4X="emble",m5I="tiRe",n0o="tMul",f3J="ini",F5X="nCl",c8="ditF",e6I="_dataS",I5X="_crudArgs",k=this;if(this[(F4+Z4J.i0I+C8I)](function(){k[V9I](a,b,c,e,l);}
))return this;a.length===h&&(a=[a]);var f=this[I5X](b,c,e,l),i=this[(e6I+E5J+Z9J)]((g5I+Z4J.n6I),a);this[Z4J.n6I][(M1J+S3I+t7)]=(Z4J.o6I+Q8+I4+Z4J.q2);this[Z4J.n6I][z4X]=a;this[Z4J.n6I][(Z4J.q2+c8+m1J+Z4J.n6I)]=i;this[(Z4J.x4I+o5I)][y0o][(Z4J.n6I+Z4J.i0I+Z4J.g7I+Z4J.z5I+Z4J.q2)][(w8+r9X+M7I+y3)]=D9I;this[(y7J+m1+F5X+Z1+Z4J.n6I)]();this[(N9J+l9J+g3X)]((S3I+N1X+Z4J.i0I+i0o+F2X),[y(i,(o8X+y9I)),y(i,(Z4J.C6J+B7)),a]);this[(F4+f0X+Z4J.F1I+Z4J.i0I)]((f3J+n0o+m5I+o5I+I4+Z4J.q2),[i,a]);this[(F4+L1+h4X+M0X+Y0o)]();this[x6X](f[l5J]);f[B3]();f=this[Z4J.n6I][M9];c3X!==f[(s8+Z4J.V2+q5J)]&&d((N8+Z4J.R0I+E2I+t7),this[(Z6J)][(N8+n4J+Z4J.i0I+p3J)])[(Z4J.q2+j1I)](f[O6I])[(O6I)]();return this;}
;f.prototype.set=function(a,b){var c=this[Z4J.n6I][(Y8I)];if(!d[T3J](a)){var e={}
;e[a]=b;a=e;}
d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](a,function(a,b){c[a][Y9J](b);}
);return this;}
;f.prototype.show=function(a,b){var c=this[Z4J.n6I][(c8I+S3I+w7+w5I)];d[(s8X)](this[C7I](a),function(a,d){c[d][(w5+O2)](b);}
);return this;}
;f.prototype.submit=function(a,b,c,e){var l=this,f=this[Z4J.n6I][Y8I],w=[],i=E0,g=!N0;if(this[Z4J.n6I][y2X]||!this[Z4J.n6I][(N4+t1I+t7)])return this;this[(F4+G0J+Z4J.w1I+Y2J+C8)](!E0);var h=function(){w.length!==i||g||(g=!0,l[(n8J+F7X+Z4J.i0I)](a,b,c,e));}
;this.error();d[(e9I+y3I)](f,function(a,b){var N0X="Erro";b[(Y0o+N0X+Z4J.o6I)]()&&w[q7I](a);}
);d[s8X](w,function(a,b){f[b].error("",function(){i++;h();}
);}
);h();return this;}
;f.prototype.title=function(a){var r0="unc",T3="lasses",b=d(this[(w8+Z4J.w1I+o5I)][(W7X+w8+Z4J.q2+Z4J.o6I)])[(Z4J.V2+y3I+S3I+Z4J.z5I+w8+C3X+Z4J.F1I)](F0J+this[(Z4J.V2+T3)][(y3I+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I)][t0J]);if(a===h)return b[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();(c8I+r0+t1I+Z4J.w1I+Z4J.F1I)===typeof a&&(a=a(this,new r[(q1+S3I)](this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])));b[(h0J+Z4J.z5I)](a);return this;}
;f.prototype.val=function(a,b){return b===h?this[R5](a):this[Y9J](a,b);}
;var p=r[m7J][h5X];p((Z4J.q2+w8+n2I+G2X),function(){return v(this);}
);p((k7X+j0J+Z4J.l0X+Z4J.V2+Z4J.o6I+J5I+Z4J.i0I+Z4J.q2+G2X),function(a){var b=v(this);b[(A1X+Z4J.Y8+Z4J.i0I+Z4J.q2)](B(b,a,(Z4J.V2+C3X+z1+Z4J.q2)));return this;}
);p(w4I,function(a){var b=v(this);b[(Z4J.q2+w8+Z9X)](this[E0][E0],B(b,a,(Z4J.q2+H0J+Z4J.i0I)));return this;}
);p((Z4J.o6I+O2+Z4J.n6I+l2X+Z4J.q2+w8+S3I+Z4J.i0I+G2X),function(a){var b=v(this);b[R0J](this[E0],B(b,a,(u9+Z9X)));return this;}
);p((o1+l2X+w8+Z4J.q2+m0I+I6I+G2X),function(a){var b=v(this);b[V9I](this[E0][E0],B(b,a,V9I,N0));return this;}
);p((C6X+l2X+w8+Z4J.q2+Z4J.z5I+Y0X+G2X),function(a){var b=v(this);b[V9I](this[0],B(b,a,"remove",this[0].length));return this;}
);p(T3I,function(a,b){var p0X="nl";a?d[T3J](a)&&(b=a,a=(S3I+p0X+S3I+Z4J.F1I+Z4J.q2)):a=(S3I+p0X+Y0o+Z4J.q2);v(this)[a](this[E0][E0],b);return this;}
);p((G1J+l2X+Z4J.q2+o6+G2X),function(a){v(this)[z3X](this[E0],a);return this;}
);p(w0J,function(a,b){return f[(J8J+B4)][a][b];}
);p((J8J+Z4J.q2+Z4J.n6I+G2X),function(a,b){var f6X="les";if(!a)return f[(J8J+Z4J.q2+Z4J.n6I)];if(!b)return f[(c8I+S3I+f6X)][a];f[G0I][a]=b;return this;}
);d(q)[t7](R3,function(a,b,c){var C0o="ile";(w8+Z4J.i0I)===a[(i1X+Z4J.n6I+k6I+Z4J.Y8+Z9J)]&&c&&c[(c8I+C0o+Z4J.n6I)]&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](c[(b9+m0I+Z4J.n6I)],function(a,b){f[(b9+Z4J.z5I+Z4J.q2+Z4J.n6I)][a]=b;}
);}
);f.error=function(a,b){var Q5J="bles",q5X="atat",h0X="://",w8I="ps";throw b?a+(W4J+o3+u2+W4J+o5I+Z4J.w1I+C3X+W4J+S3I+Z4J.F1I+c8I+Z4J.w1I+Z4J.o6I+o5I+n9+Z4J.w1I+Z4J.F1I+p5X+k6I+Z4J.z5I+J5I+u1+W4J+Z4J.o6I+Z4J.q2+c8I+Z4J.q2+Z4J.o6I+W4J+Z4J.i0I+Z4J.w1I+W4J+y3I+E2I+w8I+h0X+w8+q5X+Z4J.Y8+Q5J+Z4J.l0X+Z4J.F1I+Z4J.q2+Z4J.i0I+w0X+Z4J.i0I+Z4J.F1I+w0X)+b:a;}
;f[z4J]=function(a,b,c){var e,l,f,b=d[(Z4J.q2+z0J+I6I+F9X)]({label:(Z4J.z5I+Z4J.w2+w7),value:"value"}
,b);if(d[(S3I+Z4J.n6I+T0)](a)){e=0;for(l=a.length;e<l;e++)f=a[e],d[(r9X+i1+l7I+Y0o+s1+Z4J.c4X+K3X)](f)?c(f[b[o0X]]===h?f[b[(Z4J.z5I+Z4J.w2+w7)]]:f[b[(o0X)]],f[b[s0I]],e):c(f,f,e);}
else e=0,d[s8X](a,function(a,b){c(b,a,e);e++;}
);}
;f[(Z4J.n6I+Z4J.Y8+p1+x1+w8)]=function(a){return a[(Z4J.o6I+Z4J.q2+k6I+Z4J.z5I+N4+Z4J.q2)](/\./g,F6X);}
;f[r2]=function(a,b,c,e,l){var L4X="readAsDataURL",c0o="<i>Uploading file</i>",L0J="Te",k=new FileReader,w=E0,i=[];a.error(b[(r4I+Z4J.q2)],"");e(b,b[(b9+Z4J.z5I+Z4J.q2+i0o+b4+L0J+z0J+Z4J.i0I)]||c0o);k[(t7+Z4J.z5I+Z4J.w1I+b4)]=function(){var r2J="rro",u0X="son",R2J="reS",R1I="ied",Z1X="No",O3X="ja",d7J="ajax",U4I="aja",V2X="ajaxData",I1J="uploadField",P4I="ploa",g=new FormData,h;g[w1X]((M1J+s4),(Z4J.R0I+P4I+w8));g[(Z4J.Y8+X1I+w8)](I1J,b[i1X]);g[(f1+Z4J.F1I+w8)](r2,c[w]);b[V2X]&&b[(Z4J.Y8+Y9I+Z)](g);if(b[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)])h=b[(Z4J.Y8+Y9I)];else if((x8+Z4J.o6I+B8J)===typeof a[Z4J.n6I][(U4I+z0J)]||d[T3J](a[Z4J.n6I][d7J]))h=a[Z4J.n6I][(Z4J.Y8+O3X+z0J)];if(!h)throw (Z1X+W4J+U4X+O3X+z0J+W4J+Z4J.w1I+Q8I+s4+W4J+Z4J.n6I+k6I+Z4J.q2+Z4J.V2+t1J+R1I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8+W4J+k6I+U4J+Z8I+F6X+S3I+Z4J.F1I);(Z4J.n6I+Z4J.i0I+Z4J.o6I+B8J)===typeof h&&(h={url:h}
);var z=!N0;a[t7]((k6I+R2J+Z4J.R0I+N8+o5I+Z9X+Z4J.l0X+j3+X7+F4+D7+k6I+Z4J.z5I+y5J),function(){z=!E0;return !N0;}
);d[(Z4J.Y8+Y9I)](d[(Z4J.q2+z0+F9X)]({}
,h,{type:(E7I+x8),data:g,dataType:(Z4J.i5I+u0X),contentType:!1,processData:!1,xhr:function(){var Q0J="onloadend",g7="ogr",T6J="pload",D4X="axSe",a=d[(Y7+D4X+Z4J.i0I+t1I+x3X)][(z0J+y3I+Z4J.o6I)]();a[(Z4J.R0I+T6J)]&&(a[(s3J+K8I+Z4J.Y8+w8)][(Z4J.w1I+Z4J.F1I+G0J+g7+Z4J.q2+Z4J.n6I+Z4J.n6I)]=function(a){var v1I="toFixed",r5X="loaded",k7I="lengthComputable";a[k7I]&&(a=(100*(a[r5X]/a[(Q3I+Z4J.i0I+Z4J.Y8+Z4J.z5I)]))[v1I](0)+"%",e(b,1===c.length?a:w+":"+c.length+" "+a));}
,a[r2][Q0J]=function(){e(b);}
);return a;}
,success:function(e){var I8="aURL",q6="adAsD",X0X="cc";a[(t9J)]("preSubmit.DTE_Upload");if(e[z0o]&&e[(c8I+S3I+Z4J.q2+Z0I+u3+U9X+Z4J.w1I+Z4J.o6I+Z4J.n6I)].length)for(var e=e[(v7+w8+u3+r2J+B9X)],g=0,h=e.length;g<h;g++)a.error(e[g][i1X],e[g][t9I]);else e.error?a.error(e.error):!e[r2]||!e[(r2)][(S3I+w8)]?a.error(b[(g7X+o5I+Z4J.q2)],(U4X+W4J+Z4J.n6I+Q2+l9J+Z4J.o6I+W4J+Z4J.q2+Z4J.o6I+Z4J.o6I+Z4J.w1I+Z4J.o6I+W4J+Z4J.w1I+X0X+Z4J.R0I+U9X+Z4J.q2+w8+W4J+j0J+y3I+S3I+Z4J.z5I+Z4J.q2+W4J+Z4J.R0I+k6I+Z4J.z5I+h6+w8+B8J+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+S3I+m0I)):(e[G0I]&&d[(e9I+y3I)](e[G0I],function(a,b){f[(J8J+B4)][a]=b;}
),i[(l2I+Z4J.n6I+y3I)](e[(s3J+Z4J.z5I+Z4J.w1I+Z4J.Y8+w8)][J1J]),w<c.length-1?(w++,k[(C3X+q6+Z4J.Y8+Z4J.i0I+I8)](c[w])):(l[(Z4J.V2+u7X)](a,i),z&&a[f0o]()));}
,error:function(){var O5J="rre";a.error(b[i1X],(U4X+W4J+Z4J.n6I+Q2+g0J+Q2+W4J+Z4J.q2+r2J+Z4J.o6I+W4J+Z4J.w1I+Z4J.V2+v5J+O5J+w8+W4J+j0J+h1I+m0I+W4J+Z4J.R0I+k6I+K8I+Z4J.Y8+H0J+Z4J.F1I+Z8I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+G6J+Z4J.q2));}
}
));}
;k[L4X](c[E0]);}
;f.prototype._constructor=function(a){var M2J="initComplete",W8J="trol",C3J="xhr",w5J="nT",O1J="init.dt.dte",R9X="body_content",c7="oo",a6J="form_content",F3="formC",M0="events",m6I="reat",S2I="TableTools",E1J='but',y5I='fo',o2X='_i',D9J='orm',z2J='error',L4='_co',q9='rm',z1X="ter",V9J="footer",K8J='oo',k0I='nt',H1I='conte',b3X='ody',t7I='rocess',c9J="legacyAjax",z7I="rmOption",V2J="dataSources",Z6="Url",Y0="domTab",y7="dels";a=d[H3I](!E0,{}
,f[A2],a);this[Z4J.n6I]=d[(X0J+w8)](!E0,{}
,f[(Z8J+y7)][(Z4J.n6I+Z4J.A4+t1I+x3X)],{table:a[(Y0+m0I)]||a[(Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2)],dbTable:a[m3]||c3X,ajaxUrl:a[(Z4J.Y8+Y9I+Z6)],ajax:a[(Z4J.Y8+Y9I)],idSrc:a[(S3I+w8+R0+Z4J.o6I+Z4J.V2)],dataSource:a[(w8+S7+W+l3)]||a[Q2X]?f[V2J][g9]:f[V2J][z6I],formOptions:a[(s8+z7I+Z4J.n6I)],legacyAjax:a[c9J]}
);this[(Q4J+Z4J.Y8+t8+Z4J.q2+Z4J.n6I)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,f[(Q4J+L1+Z4J.q2+Z4J.n6I)]);this[(D1X+Z4J.F1I)]=a[(S3I+G5+Z4J.F1I)];var b=this,c=this[T4];this[(w8+S7)]={wrapper:d('<div class="'+c[(C9X+b4I+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+H7J+t7I+T7I+v9I+P0J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(G0J+t0+Z4J.q2+Z4J.n6I+C8)][(S3I+Z4J.F1I+w8+M3J+z1+u2)]+(Z1I+m2I+v3+B6I+m2I+v3+q2X+m2I+q4I+e3J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+b3X+k6J+B2I+Z2J+i8X)+c[Q5X][a3J]+(b0X+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+Z4I+d9I+m2I+F2J+p4I+H1I+k0I+k6J+B2I+t8J+n9J+n9J+i8X)+c[(N8+i2X)][t0J]+(t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+K8J+c0X+k6J+B2I+t8J+e0J+i8X)+c[V9J][(j0J+Z4J.o6I+e0+h1X)]+'"><div class="'+c[(c8I+Z4J.w1I+Z4J.w1I+z1X)][(Z4J.V2+Z4J.w1I+g3X+S9I)]+(t3X+m2I+v3+o9+m2I+v3+y2))[0],form:d((x5+c2I+d9I+q9+q2X+m2I+h1+q4I+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+k6J+B2I+U9+n9J+i8X)+c[(y0o)][(Z4J.i0I+L9)]+(b0X+m2I+T7I+Y7J+q2X+m2I+q4I+e3J+m6+m2I+j2J+m6+m8I+i8X+c2I+Q6J+A9I+L4+v9I+j2J+v9I+c0X+k6J+B2I+U9+n9J+i8X)+c[y0o][t0J]+(t3X+c2I+Q6J+A9I+y2))[0],formError:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+d9I+q9+p4I+z2J+k6J+B2I+P7I+b6+n9J+i8X)+c[(c8I+Z4J.w1I+Z4J.o6I+o5I)].error+(I0J))[0],formInfo:d((x5+m2I+T7I+Y7J+q2X+m2I+q4I+c0X+q4I+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+o2X+v9I+y5I+k6J+B2I+P7I+o5X+i8X)+c[(s8+Z4J.o6I+o5I)][(S3I+l1X+Z4J.w1I)]+(I0J))[0],header:d('<div data-dte-e="head" class="'+c[J0I][(j0J+Z4J.o6I+e0+k6I+Z4J.q2+Z4J.o6I)]+(b0X+m2I+T7I+Y7J+q2X+B2I+Z2J+i8X)+c[J0I][(f2J+Z4J.F1I+I6I+g3X)]+(t3X+m2I+v3+y2))[0],buttons:d((x5+m2I+v3+q2X+m2I+j9J+m6+m2I+c0X+m8I+m6+m8I+i8X+c2I+D9J+p4I+E1J+Z0X+v9I+n9J+k6J+B2I+t8J+n9J+n9J+i8X)+c[(y0o)][w4]+'"/>')[0]}
;if(d[(c8I+Z4J.F1I)][(w8+Z4J.Y8+B7+X6+G1I+Z4J.q2)][(W+N8+m0I+X6+Z4J.w1I+s3)]){var e=d[(c8I+Z4J.F1I)][g9][S2I][A5X],l=this[(D7I+B0o+Z4J.F1I)];d[(s8X)]([(Z4J.V2+m6I+Z4J.q2),R0J,(Z4J.o6I+Z4J.q2+F2X)],function(a,b){var r7X="sButtonText";e[(u9+Z9X+x2J)+b][r7X]=l[b][g8];}
);}
d[(J5I+O9J)](a[(M0)],function(a,c){b[t7](a,function(){var l8I="shift",a=Array.prototype.slice.call(arguments);a[l8I]();c[(Z4J.Y8+N0J+n2J)](b,a);}
);}
);var c=this[(Z6J)],k=c[(j0J+k8I+k6I+Q2)];c[(F3+t7+N5X+Z4J.i0I)]=t(a6J,c[(c8I+Z4J.w1I+t6X)])[E0];c[(c8I+c7+Z4J.i0I+Z4J.q2+Z4J.o6I)]=t(S1J,k)[E0];c[Q5X]=t((N8+Z4J.w1I+w8+Z4J.g7I),k)[E0];c[J9J]=t(R9X,k)[E0];c[(G0J+t0+Z4J.q2+t8+Y0o+Z8I)]=t((k6I+Z4J.o6I+t0+Z4J.q2+Z4J.n6I+n5+Z4J.F1I+Z8I),k)[E0];a[Y8I]&&this[(Z4J.Y8+N9I)](a[Y8I]);d(q)[(Z4J.w1I+Z4J.F1I)](O1J,function(a,c){b[Z4J.n6I][Q2X]&&c[(w5J+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(n6+Z4J.i0I)](E0)&&(c[(F4+u9+S3I+D6J)]=b);}
)[(Z4J.w1I+Z4J.F1I)]((C3J+Z4J.l0X+w8+Z4J.i0I),function(a,c,e){e&&(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]&&c[(w5J+Z4J.w2+m0I)]===d(b[Z4J.n6I][(Z4J.i0I+Z4J.Y8+l3)])[R5](E0))&&b[(L6J+Q8I+J5X+D7+k6I+w8+Z4J.Y8+Z4J.i0I+Z4J.q2)](e);}
);this[Z4J.n6I][(H0J+A9X+y3+G4X+Z4J.w1I+Z4J.F1I+W8J+Z4J.z5I+Z4J.q2+Z4J.o6I)]=f[(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][a[(w8+r9X+k6I+Z4J.z5I+Z4J.Y8+Z4J.g7I)]][(S3I+Z4J.F1I+S3I+Z4J.i0I)](this);this[i2](M2J,[]);}
;f.prototype._actionClass=function(){var L6X="oin",W9X="eCl",T6I="actions",a=this[T4][T6I],b=this[Z4J.n6I][(d9X+t7)],c=d(this[(w8+S7)][a3J]);c[(Z4J.o6I+i2J+g0J+W9X+Z4J.Y8+t8)]([a[d0I],a[R0J],a[(Z4J.o6I+u9X)]][(Z4J.i5I+L6X)](W4J));d0I===b?c[d8J](a[(m3J+R5I+Z4J.q2)]):(Z4J.q2+w8+Z9X)===b?c[d8J](a[(Z4J.q2+o6)]):(Z4J.o6I+Q8+Z4J.w1I+l9J)===b&&c[(Z4J.Y8+w8+w8+X7J+Z1+Z4J.n6I)](a[(J8I+a0X)]);}
;f.prototype._ajax=function(a,b,c){var B4J="param",J2I="rep",d1J="url",H7="Of",q8I="indexOf",c7J="axUr",H8X="ction",d3X="sF",s6X="lain",a8X="idS",U3I="ajaxUrl",G3="so",b0="PO",e={type:(b0+R0+X6),dataType:(Z4J.i5I+G3+Z4J.F1I),data:null,error:c,success:function(a,c,e){var A7I="statu";204===e[(A7I+Z4J.n6I)]&&(a={}
);b(a);}
}
,l;l=this[Z4J.n6I][V8J];var f=this[Z4J.n6I][(Z4J.Y8+Z4J.i5I+F5)]||this[Z4J.n6I][U3I],g=(R0J)===l||(Z4J.o6I+Z4J.q2+F2X)===l?y(this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+Z4J.q2+Z0I+Z4J.n6I)],(a8X+k5X)):null;d[(S3I+Z4J.n6I+U4X+W1I)](g)&&(g=g[W6I](","));d[(S3I+x7X+s6X+s1+N8+A2J+Z4J.i0I)](f)&&f[l]&&(f=f[l]);if(d[(S3I+d3X+Z4J.R0I+Z4J.F1I+H8X)](f)){var h=null,e=null;if(this[Z4J.n6I][U3I]){var J=this[Z4J.n6I][(Y7+c7J+Z4J.z5I)];J[(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2)]&&(h=J[l]);-1!==h[q8I](" ")&&(l=h[z5X](" "),e=l[0],h=l[1]);h=h[(S7X)](/_id_/,g);}
f(e,h,a,b,c);}
else "string"===typeof f?-1!==f[(S3I+F9X+p5+H7)](" ")?(l=f[(H2+r7)](" "),e[(O4I+g6I)]=l[0],e[(Z4J.R0I+G6X)]=l[1]):e[(Z4J.R0I+Z4J.o6I+Z4J.z5I)]=f:e=d[(X0J+w8)]({}
,e,f||{}
),e[(Z4J.R0I+G6X)]=e[d1J][(J2I+Z4J.z5I+Z4J.Y8+Z9J)](/_id_/,g),e.data&&(c=d[(S3I+Z4J.n6I+X5+M7X+p9X+Z4J.F1I)](e.data)?e.data(a):e.data,a=d[(S3I+Z4J.n6I+o3+Z4J.R0I+Z4J.F1I+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)](e.data)&&c?c:d[(Z4J.q2+z0J+I6I+Z4J.F1I+w8)](!0,a,c)),e.data=a,"DELETE"===e[(Z4J.i0I+O7X+Z4J.q2)]&&(a=d[B4J](e.data),e[(Z4J.R0I+G6X)]+=-1===e[(d1J)][(S3I+Z4J.F1I+y9I+z0J+H7)]("?")?"?"+a:"&"+a,delete  e.data),d[(Z4J.Y8+Z4J.i5I+Z4J.Y8+z0J)](e);}
;f.prototype._assembleMain=function(){var a=this[(Z4J.x4I+o5I)];d(a[a3J])[(S6X+Z4J.q2+Z4J.F1I+w8)](a[(W7X+y9I+Z4J.o6I)]);d(a[(S1J+Q2)])[(Z4J.Y8+N0J+q8+w8)](a[M6X])[w1X](a[(N8+n4J+H5)]);d(a[J9J])[w1X](a[i0X])[w1X](a[(s8+t6X)]);}
;f.prototype._blur=function(){var o4I="eBlur",a=this[Z4J.n6I][M9];!N0!==this[(N9J+g0J+Z4J.q2+g3X)]((k6I+Z4J.o6I+o4I))&&((Z4J.n6I+u0J+P)===a[z5]?this[(Z4J.n6I+Z4J.R0I+N8+P)]():d5I===a[z5]&&this[w3X]());}
;f.prototype._clearDynamicInfo=function(){var f7J="eCla",a=this[T4][(c8I+e6J+Z4J.z5I+w8)].error,b=this[Z4J.n6I][Y8I];d("div."+a,this[Z6J][(j0J+k8I+h1X)])[(Z4J.o6I+Z4J.q2+o5I+Z4J.w1I+g0J+f7J+t8)](a);d[s8X](b,function(a,b){b.error("")[r8I]("");}
);this.error("")[(o5I+Z4J.q2+Z4J.n6I+Z4J.n6I+Z4J.Y8+Z8I+Z4J.q2)]("");}
;f.prototype._close=function(a){var u5X="closeIcb",h0o="eIcb",J3X="seC",d8I="closeC",F5I="preClose";!N0!==this[(G9+Z4J.i0I)](F5I)&&(this[Z4J.n6I][T0o]&&(this[Z4J.n6I][(d8I+N8)](a),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+J3X+N8)]=c3X),this[Z4J.n6I][(Z4J.V2+Z4J.z5I+Z4J.w1I+Z4J.n6I+h0o)]&&(this[Z4J.n6I][u5X](),this[Z4J.n6I][u5X]=c3X),d(Q5X)[(d6+c8I)]((c8I+Z4J.w1I+Z4J.V2+Z4J.R0I+Z4J.n6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+c8I+P2+Z4J.n6I)),this[Z4J.n6I][R8J]=!N0,this[i2]((r0J+u1)));}
;f.prototype._closeReg=function(a){this[Z4J.n6I][T0o]=a;}
;f.prototype._crudArgs=function(a,b,c,e){var V3J="ain",G7X="mOp",Q6="oolea",G2I="Obj",l=this,f,g,i;d[(r9X+i1+Z4J.z5I+Z4J.Y8+Y0o+G2I+K3X)](a)||((N8+Q6+Z4J.F1I)===typeof a?(i=a,a=b):(f=a,g=b,i=c,a=e));i===h&&(i=!E0);f&&l[(t1I+D3I)](f);g&&l[(N8+n4J+Z4J.i0I+t7+Z4J.n6I)](g);return {opts:d[H3I]({}
,this[Z4J.n6I][(a8I+G7X+Z4J.i0I+Q7X+Z4J.F1I+Z4J.n6I)][(o5I+V3J)],a),maybeOpen:function(){i&&l[(Z4J.w1I+A6X)]();}
}
;}
;f.prototype._dataSource=function(a){var u6X="apply",H7X="dataSource",t4="ift",b=Array.prototype.slice.call(arguments);b[(w5+t4)]();var c=this[Z4J.n6I][H7X][a];if(c)return c[u6X](this,b);}
;f.prototype._displayReorder=function(a){var S1="layed",M8="Or",O4="det",K6X="hildr",K0o="includeFields",d9="eFi",B7J="nclud",E1X="formCon",b=d(this[(w8+Z4J.w1I+o5I)][(E1X+Z4J.i0I+Z4J.q2+g3X)]),c=this[Z4J.n6I][(b9+Z4J.q2+Z0I+Z4J.n6I)],e=this[Z4J.n6I][q0X];a?this[Z4J.n6I][(S3I+B7J+d9+w7+w5I)]=a:a=this[Z4J.n6I][K0o];b[(Z4J.V2+K6X+Z4J.q2+Z4J.F1I)]()[(O4+N4+y3I)]();d[s8X](e,function(e,k){var g=k instanceof f[(v1X+Z0I)]?k[(Z4J.F1I+Z4J.Y8+A1J)]():k;-N0!==d[a4](g,a)&&b[w1X](c[g][(Z4J.F1I+Z4J.w1I+y9I)]());}
);this[(F4+Z4J.q2+g0J+q8+Z4J.i0I)]((w8+r9X+E0I+M8+y9I+Z4J.o6I),[this[Z4J.n6I][(w8+r9X+k6I+S1)],this[Z4J.n6I][(N4+Z4J.i0I+Q7X+Z4J.F1I)],b]);}
;f.prototype._edit=function(a,b,c){var j5="ock",b9X="tyl",k8J="modifi",e=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Z4J.n6I)],l=[],f;this[Z4J.n6I][Z3J]=b;this[Z4J.n6I][(k8J+Q2)]=a;this[Z4J.n6I][(Z4J.Y8+m1+Z4J.F1I)]="edit";this[Z6J][y0o][(Z4J.n6I+b9X+Z4J.q2)][p6J]=(N8+Z4J.z5I+j5);this[(F4+Z4J.Y8+i8J+s4+n1+Z4J.n6I)]();d[(Z4J.q2+K0J)](e,function(a,c){var t8I="pus",p7J="multiIds";c[(p6+t1I+v0+Z4J.q2+u1+Z4J.i0I)]();f=!0;d[s8X](b,function(b,e){var W7J="lFrom";if(e[(b9+w7+w5I)][a]){var d=c[(e7J+W7J+N8J+Z4J.i0I+Z4J.Y8)](e.data);c[C2J](b,d!==h?d:c[(D1I)]());e[y0X]&&!e[y0X][a]&&(f=!1);}
}
);0!==c[p7J]().length&&f&&l[(t8I+y3I)](a);}
);for(var e=this[(i5X+Z4J.o6I)]()[u4I](),g=e.length;0<=g;g--)-1===d[a4](e[g],l)&&e[(Z4J.n6I+k6I+Z4J.z5I+S3I+Z9J)](g,1);this[L3J](e);this[Z4J.n6I][X5J]=d[H3I](!0,{}
,this[d4I]());this[(G9+Z4J.i0I)]("initEdit",[y(b,"node")[0],y(b,"data")[0],a,c]);this[(R0o+q8+Z4J.i0I)]((S3I+N1X+Z4J.i0I+R3J+Z4J.z5I+Z4J.i0I+S3I+x7J+Z9X),[b,a,c]);}
;f.prototype._event=function(a,b){var n5X="result",l7J="Event";b||(b=[]);if(d[(S3I+T8X+U9X+y3)](a))for(var c=0,e=a.length;c<e;c++)this[(F4+c5+q8+Z4J.i0I)](a[c],b);else return c=d[l7J](a),d(this)[g4I](c,b),c[n5X];}
;f.prototype._eventName=function(a){var r8X="substri",n9I="ase",e4="wer",p6X="oL";for(var b=a[(A9X+S3I+Z4J.i0I)](" "),c=0,e=b.length;c<e;c++){var a=b[c],d=a[(o5I+z1+O9J)](/^on([A-Z])/);d&&(a=d[1][(Z4J.i0I+p6X+Z4J.w1I+e4+G4X+n9I)]()+a[(r8X+Z4J.F1I+Z8I)](3));b[c]=a;}
return b[W6I](" ");}
;f.prototype._fieldNames=function(a){return a===h?this[(c8I+s0J+w5I)]():!d[S8](a)?[a]:a;}
;f.prototype._focus=function(a,b){var F7I="foc",s6I="setFocus",a2="jq",c=this,e,l=d[(o5I+Z4J.Y8+k6I)](a,function(a){var e1X="ri";return (x8+e1X+M5X)===typeof a?c[Z4J.n6I][(b9+Q9X+Z4J.n6I)][a]:a;}
);y9X===typeof b?e=l[b]:b&&(e=E0===b[(h5J+Z4J.q2+z0J+s1+c8I)]((a2+J0o))?d((I1+Z4J.l0X+j3+X6+u3+W4J)+b[(C3X+k6I+Z4J.z5I+N4+Z4J.q2)](/^jq:/,g0I)):this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z0I+Z4J.n6I)][b]);(this[Z4J.n6I][s6I]=e)&&e[(F7I+Z4J.R0I+Z4J.n6I)]();}
;f.prototype._formOptions=function(a){var k5="oseIc",y6J="olean",V8X="titl",a4I="nBa",T7="blurOnBackground",P9I="Retu",s5J="nR",t4J="eturn",R5X="submitOnBlur",g6X="itO",k1X="closeOnComplete",K4I="Com",D0="On",q5="Inlin",b=this,c=N++,e=(Z4J.l0X+w8+Z4J.i0I+Z4J.q2+q5+Z4J.q2)+c;a[(Z4J.V2+h9J+Z4J.q2+D0+K4I+M7I+Z4J.q2+I6I)]!==h&&(a[Q4]=a[k1X]?d5I:D9I);a[(V4+N8+o5I+g6X+Z4J.F1I+y4X+Z4J.z5I+g5J)]!==h&&(a[z5]=a[R5X]?(Z4J.n6I+Z4J.R0I+l6X):d5I);a[(V4+l6X+s1+Z4J.F1I+v0+t4J)]!==h&&(a[(Z4J.w1I+s5J+t4J)]=a[(V3I+Z9X+D0+P9I+Z4J.o6I+Z4J.F1I)]?f0o:D9I);a[T7]!==h&&(a[(Z4J.w1I+a4I+z9J+R3X+O3J+w8)]=a[(N8+U4J+Z4J.o6I+D0+y4X+Z4J.Y8+Z4J.V2+n7I+Z4J.w1I+O3J+w8)]?T6:(w0I+Z4J.q2));this[Z4J.n6I][(u9+g6X+Q8I+Z4J.n6I)]=a;this[Z4J.n6I][b5X]=c;if((x8+M8J)===typeof a[j2]||(c8I+O3J+Z4J.V2+Z4J.i0I+Q7X+Z4J.F1I)===typeof a[j2])this[(V8X+Z4J.q2)](a[(t1I+q3I+Z4J.q2)]),a[(Z4J.i0I+Z9X+m0I)]=!E0;if((x8+Z4J.o6I+Y0o+Z8I)===typeof a[r8I]||Z4J.T5J===typeof a[r8I])this[r8I](a[r8I]),a[r8I]=!E0;(G8X+y6J)!==typeof a[(L5X+Z4J.i0I+H5)]&&(this[(N8+P2X+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a[(L5X+B9I+Z4J.n6I)]),a[(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)]=!E0);d(q)[(Z4J.w1I+Z4J.F1I)]("keydown"+e,function(c){var e5J="keyCo",a8J="pre",r0X="TE_For",W9J="are",p3I="onEsc",o2="entDe",U0J="nRet",g3="toLowerCase",C6I="lem",Q0X="tiveE",e=d(q[(Z4J.Y8+Z4J.V2+Q0X+C6I+q8+Z4J.i0I)]),f=e.length?e[0][L0o][g3]():null;d(e)[(Z4J.Y8+E2I+Z4J.o6I)]((y2J));if(b[Z4J.n6I][(H0J+Z4J.n6I+M7I+Z4J.Y8+j1+w8)]&&a[(Z4J.w1I+U0J+g5J+Z4J.F1I)]==="submit"&&c[D2J]===13&&f===(X4X+n4J)){c[(k6I+Z4J.o6I+Z4J.q2+g0J+o2+c8I+b7X)]();b[f0o]();}
else if(c[D2J]===27){c[F1]();switch(a[p3I]){case (B2X+Z4J.R0I+Z4J.o6I):b[(B2X+Z4J.R0I+Z4J.o6I)]();break;case (Z4J.V2+Z4J.z5I+j6):b[(Q4J+j6)]();break;case "submit":b[(V4+N8+o5I+S3I+Z4J.i0I)]();}
}
else e[(k6I+W9J+Z4J.F1I+Z4J.i0I+Z4J.n6I)]((Z4J.l0X+j3+r0X+o5I+b5I+u3X)).length&&(c[D2J]===37?e[(a8J+g0J)]((u0o+Z4J.i0I+t7))[(s8+Z4J.V2+Z4J.R0I+Z4J.n6I)]():c[(e5J+w8+Z4J.q2)]===39&&e[(c6X)]("button")[(O6I)]());}
);this[Z4J.n6I][(Z4J.V2+Z4J.z5I+k5+N8)]=function(){d(q)[(Z4J.w1I+f4)]((u3I+Z4J.q2+Z4J.g7I+Z4J.x4I+j0J+Z4J.F1I)+e);}
;return e;}
;f.prototype._legacyAjax=function(a,b,c){var A9="Aj",y9="gac";if(this[Z4J.n6I][(m0I+y9+Z4J.g7I+A9+Z4J.Y8+z0J)])if((Z4J.n6I+Z4J.q2+Z4J.F1I+w8)===a)if(d0I===b||(Z4J.q2+o6)===b){var e;d[(Z4J.q2+N4+y3I)](c.data,function(a){var f6J="cy",y3X="uppor";if(e!==h)throw (t6+u2+n4I+g6+i0J+F6X+Z4J.o6I+O2+W4J+Z4J.q2+w8+X3+Z4J.F1I+Z8I+W4J+S3I+Z4J.n6I+W4J+Z4J.F1I+T8+W4J+Z4J.n6I+y3X+I6I+w8+W4J+N8+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+Z4J.z5I+Z4J.q2+Z8I+Z4J.Y8+f6J+W4J+U4X+Y9I+W4J+w8+Z4J.Y8+B7+W4J+c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I);e=a;}
);c.data=c.data[e];(R0J)===b&&(c[(S3I+w8)]=e);}
else c[J1J]=d[(o5I+e0)](c.data,function(a,b){return b;}
),delete  c.data;else c.data=!c.data&&c[o1]?[c[(k7X+j0J)]]:[];}
;f.prototype._optionsUpdate=function(a){var b=this;a[(Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+h3X)]&&d[(J5I+O9J)](this[Z4J.n6I][Y8I],function(c){if(a[(V7+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)][c]!==h){var e=b[(b9+Q9X)](c);e&&e[j5J]&&e[(Z4J.R0I+k6I+Z4J.C6J+I6I)](a[V6X][c]);}
}
);}
;f.prototype._message=function(a,b){var O9X="tabl";Z4J.T5J===typeof b&&(b=b(this,new r[m7J](this[Z4J.n6I][(O9X+Z4J.q2)])));a=d(a);!b&&this[Z4J.n6I][R8J]?a[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I)]()[O7I](function(){a[(E4J+t3J)](g0I);}
):b?this[Z4J.n6I][R8J]?a[l8X]()[(y3I+f6)](b)[(c8I+Z4J.Y8+w8+Z4J.q2+s3X)]():a[(h0J+Z4J.z5I)](b)[(Z4J.V2+t8)]((w8+N9X+Z4J.g7I),(N8+Z4J.z5I+Z4J.w1I+z9J)):a[(y3I+Z4J.i0I+o5I+Z4J.z5I)](g0I)[v3J]((S0+M7I+Z4J.Y8+Z4J.g7I),(D9I));}
;f.prototype._multiInfo=function(){var U7="oSh",t1X="ields",a=this[Z4J.n6I][(c8I+S3I+Z4J.q2+Z4J.z5I+w5I)],b=this[Z4J.n6I][(Y0o+Z4J.V2+Z4J.z5I+Z4J.R0I+w8+Z4J.q2+o3+t1X)],c=!0;if(b)for(var e=0,d=b.length;e<d;e++)a[b[e]][q7X]()&&c?(a[b[e]][(p6+t1I+x1+Z4J.F1I+c8I+Z4J.w1I+x4+o0I)](c),c=!1):a[b[e]][(o5I+g8J+Z4J.i0I+I7J+c8I+U7+Z4J.w1I+g9I)](!1);}
;f.prototype._postopen=function(a){var q1I="iI",K0X="_mul",s2="focus.editor-focus",a9X="ernal",w9J="submit.editor-internal",E5X="Focus",U6="oll",b=this,c=this[Z4J.n6I][(p6J+G4X+Z4J.w1I+Z4J.F1I+U8I+U6+Q2)][(L7J+Q8I+g5J+Z4J.q2+E5X)];c===h&&(c=!E0);d(this[(w8+S7)][(s8+t6X)])[t9J](w9J)[(Z4J.w1I+Z4J.F1I)]((Z4J.n6I+u0J+o5I+Z9X+Z4J.l0X+Z4J.q2+w8+S3I+Q3I+Z4J.o6I+F6X+S3I+Z4J.F1I+Z4J.i0I+a9X),function(a){a[F1]();}
);if(c&&(e2J===a||(L5X+e6)===a))d(Q5X)[t7](s2,function(){var o7="setF",w9I="Foc",h0="iveEl",g7J="veElem";0===d(q[(d9X+g7J+Z4J.q2+Z4J.F1I+Z4J.i0I)])[(k6I+Z4J.Y8+Z4J.o6I+S9I+Z4J.n6I)]((Z4J.l0X+j3+X6+u3)).length&&0===d(q[(M1J+h0+Z4J.q2+o5I+q8+Z4J.i0I)])[p7I](".DTED").length&&b[Z4J.n6I][(Z4J.n6I+Z4J.q2+Z4J.i0I+w9I+q5J)]&&b[Z4J.n6I][(o7+P2+Z4J.n6I)][O6I]();}
);this[(K0X+Z4J.i0I+q1I+Z4J.F1I+c8I+Z4J.w1I)]();this[i2]((Z4J.w1I+A6X),[a,this[Z4J.n6I][(d9X+Z4J.w1I+Z4J.F1I)]]);return !E0;}
;f.prototype._preopen=function(a){var Z8="mic",O2X="arDyna";if(!N0===this[i2]((G0J+Z4J.q2+s1+k6I+Z4J.q2+Z4J.F1I),[a,this[Z4J.n6I][(M1J+s4)]]))return this[(W4I+Z4J.q2+O2X+Z8+x1+l1X+Z4J.w1I)](),!N0;this[Z4J.n6I][R8J]=a;return !E0;}
;f.prototype._processing=function(a){var c6="oce",p4="div.DTE",u8X="veC",Q1I="dCla",N4I="active",b=d(this[(w8+Z4J.w1I+o5I)][(i4I+Z4J.Y8+b4I+Z4J.o6I)]),c=this[(w8+S7)][y2X][e1J],e=this[T4][(p4J+N8I+B8J)][N4I];a?(c[p6J]=h3J,b[(b4+w8+G4X+Z4J.z5I+L1)](e),d((w8+P9X+Z4J.l0X+j3+X6+u3))[(b4+Q1I+t8)](e)):(c[p6J]=(o8X+Z4J.F1I+Z4J.q2),b[(Z4J.o6I+Z4J.q2+Z8J+u8X+Z4J.z5I+Z4J.Y8+t8)](e),d(p4)[R](e));this[Z4J.n6I][(G0J+Z4J.w1I+Z9J+Z4J.n6I+l6J+Z8I)]=a;this[i2]((k6I+Z4J.o6I+c6+t8+S3I+M5X),[a]);}
;f.prototype._submit=function(a,b,c,e){var v5X="_ajax",m7="_proces",O0="eSubm",A8J="acy",n3X="plet",a6X="_proce",o8="nge",F6I="llIfC",I9I="aF",q9X="ctD",J9I="_fnSetObje",f=this,k,g=!1,i={}
,n={}
,u=r[(Z4J.q2+z0J+Z4J.i0I)][k0J][(J9I+q9X+z1+I9I+Z4J.F1I)],m=this[Z4J.n6I][Y8I],j=this[Z4J.n6I][V8J],p=this[Z4J.n6I][b5X],o=this[Z4J.n6I][z4X],q=this[Z4J.n6I][(Z4J.q2+H0J+Z4J.i0I+O6+v1J)],s=this[Z4J.n6I][X5J],t=this[Z4J.n6I][M9],v=t[f0o],x={action:this[Z4J.n6I][V8J],data:{}
}
,y;this[Z4J.n6I][(m3)]&&(x[Q2X]=this[Z4J.n6I][(w8+N8+W+l3)]);if((Z4J.V2+Z4J.o6I+J5I+I6I)===j||"edit"===j)if(d[s8X](q,function(a,b){var U8J="mp",c={}
,e={}
;d[(J5I+O9J)](m,function(f,l){var w1="ny";if(b[(c8I+m1J+Z4J.n6I)][f]){var k=l[d4I](a),h=u(f),i=d[S8](k)&&f[(S3I+F9X+Z4J.q2+z0J+s1+c8I)]("[]")!==-1?u(f[(Z4J.o6I+Z4J.q2+k6I+l7I+Z4J.V2+Z4J.q2)](/\[.*$/,"")+(F6X+o5I+Z4J.Y8+w1+F6X+Z4J.V2+y4+g3X)):null;h(c,k);i&&i(c,k.length);if(j===(R0J)&&k!==s[f][a]){h(e,k);g=true;i&&i(e,k.length);}
}
}
);d[(S3I+r3X+o5I+k6I+O4I+s1+N8+Z4J.i5I+Z4J.V1I+Z4J.i0I)](c)||(i[a]=c);d[(S3I+r3X+U8J+O4I+s1+w3J+i8J)](e)||(n[a]=e);}
),"create"===j||"all"===v||(Z4J.Y8+F6I+y3I+Z4J.Y8+o8+w8)===v&&g)x.data=i;else if("changed"===v&&g)x.data=n;else{this[Z4J.n6I][V8J]=null;(Z4J.V2+K8I+u1)===t[Q4]&&(e===h||e)&&this[w3X](!1);a&&a[L5I](this);this[(a6X+Z4J.n6I+Z4J.n6I+B8J)](!1);this[(N9J+l9J+g3X)]((Z4J.n6I+F7X+C0+S7+n3X+Z4J.q2));return ;}
else(Z4J.o6I+Q8+a0X)===j&&d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](q,function(a,b){x.data[a]=b.data;}
);this[(T1J+P7+A8J+U4X+Y9I)]((Z4J.n6I+Z4J.q2+Z4J.F1I+w8),j,x);y=d[H3I](!0,{}
,x);c&&c(x);!1===this[i2]((k6I+Z4J.o6I+O0+Z9X),[x,j])?this[(m7+Z4J.n6I+S3I+M5X)](!1):this[v5X](x,function(c){var L2="Coun",q9J="ommi",p6I="aS",n5I="even",G0o="event",d7X="Sou",F8J="urc",S3X="eCr",W5X="taS",D1="Error",o9I="Errors",M5="acyAj",g;f[(F4+m0I+Z8I+M5+Z4J.Y8+z0J)]("receive",j,c);f[i2]((E7I+x8+R0+u0J+o5I+S3I+Z4J.i0I),[c,x,j]);if(!c.error)c.error="";if(!c[(b9+Z4J.q2+Z4J.z5I+w8+L8X+k7X+B9X)])c[z0o]=[];if(c.error||c[(g5I+o9I)].length){f.error(c.error);d[(Z4J.q2+K0J)](c[(b9+Z4J.q2+Z4J.z5I+w8+D1+Z4J.n6I)],function(a,b){var r1I="yC",c=m[b[(Z4J.F1I+Z4J.Y8+A1J)]];c.error(b[t9I]||(u3+Z4J.o6I+Z4J.o6I+u2));if(a===0){d(f[Z6J][(N8+Z4J.w1I+w8+r1I+Z4J.w1I+Z4J.F1I+I6I+Z4J.F1I+Z4J.i0I)],f[Z4J.n6I][a3J])[h2J]({scrollTop:d(c[o0o]()).position().top}
,500);c[O6I]();}
}
);b&&b[(Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.z5I)](f,c);}
else{var i={}
;f[(F4+w8+Z4J.Y8+W5X+Z4J.w1I+g5J+Z4J.V2+Z4J.q2)]("prep",j,o,y,c.data,i);if(j===(m3J+Z4J.q2+Z4J.Y8+Z4J.i0I+Z4J.q2)||j==="edit")for(k=0;k<c.data.length;k++){g=c.data[k];f[(R0o+q8+Z4J.i0I)]("setData",[c,g,j]);if(j==="create"){f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]((G0J+S3X+R5I+Z4J.q2),[c,g]);f[(F4+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+b8+F8J+Z4J.q2)]((Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),m,g,i);f[(F4+c5+Z4J.q2+Z4J.F1I+Z4J.i0I)]([(Z4J.V2+Z4J.o6I+Z4J.q2+z1+Z4J.q2),"postCreate"],[c,g]);}
else if(j==="edit"){f[i2]((k6I+C3X+x7J+S3I+Z4J.i0I),[c,g]);f[(F4+w8+Z4J.Y8+B7+d7X+k5X+Z4J.q2)]((Z4J.q2+w8+S3I+Z4J.i0I),o,m,g,i);f[i2](["edit",(k6I+F8+Z4J.i0I+x7J+Z9X)],[c,g]);}
}
else if(j==="remove"){f[(F4+G0o)]("preRemove",[c]);f[e9]("remove",o,m,i);f[(F4+n5I+Z4J.i0I)](["remove",(k6I+Z4J.w1I+x8+v0+Q8+I4+Z4J.q2)],[c]);}
f[(F0X+z1+p6I+Z4J.w1I+Z4J.R0I+h8X)]((Z4J.V2+q9J+Z4J.i0I),j,o,c.data,i);if(p===f[Z4J.n6I][(Z4J.q2+w8+Z9X+L2+Z4J.i0I)]){f[Z4J.n6I][(d9X+t7)]=null;t[(Z4J.w1I+Z4J.F1I+N7J+o5I+n3X+Z4J.q2)]==="close"&&(e===h||e)&&f[(G0X+Z4J.z5I+j6)](true);}
a&&a[L5I](f,c);f[(F4+n5I+Z4J.i0I)]((Z4J.n6I+Z4J.R0I+v2X+S3I+Z4J.i0I+R0+Z4J.R0I+Z4J.V2+Z4J.V2+Z4J.q2+Z4J.n6I+Z4J.n6I),[c,g]);}
f[(F4+p4J+Y2J+l6J+Z8I)](false);f[i2]((V4+N8+P+N7J+o5I+M7I+Y0X),[c,g]);}
,function(a,c,e){var F0o="lete",n4X="itC",a5X="system";f[(R0o+q8+Z4J.i0I)]("postSubmit",[a,c,e,x]);f.error(f[k1I].error[a5X]);f[(j6J+k7X+N8I+S3I+M5X)](false);b&&b[(L7J+q5I)](f,a,c,e);f[(R0o+S9I)](["submitError",(Z4+o5I+n4X+Z4J.w1I+o5I+k6I+F0o)],[a,c,e,x]);}
);}
;f.prototype._tidy=function(a){var m4="lur",R4="bbl",P8I="omple",u8J="bmitC",Q7="roces",H8J="Sid",L9I="Server",b=this,c=this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)]?new d[(c8I+Z4J.F1I)][(Z4J.C6J+Z4J.i0I+Z4J.Y8+X6+G1I+Z4J.q2)][(q1+S3I)](this[Z4J.n6I][Q2X]):c3X,e=!N0;c&&(e=c[R5J]()[E0][(Z4J.w1I+o3+J5I+Z4J.i0I+g5J+Z4J.q2+Z4J.n6I)][(N8+L9I+H8J+Z4J.q2)]);return this[Z4J.n6I][(k6I+Q7+Z4J.n6I+B8J)]?(this[j7J]((Z4J.n6I+Z4J.R0I+u8J+P8I+Z4J.i0I+Z4J.q2),function(){if(e)c[j7J](X4,a);else setTimeout(function(){a();}
,f2I);}
),!E0):(S3I+Z4J.F1I+Z4J.z5I+Y5J)===this[(w8+S3I+Z4J.n6I+E0I)]()||(L5X+R4+Z4J.q2)===this[p6J]()?(this[j7J]((Z4J.V2+Z4J.z5I+F8+Z4J.q2),function(){var p7="mitComple";if(b[Z4J.n6I][y2X])b[(t7+Z4J.q2)]((Z4J.n6I+u0J+p7+I6I),function(b,d){if(e&&d)c[(t7+Z4J.q2)]((L4I+j0J),a);else setTimeout(function(){a();}
,f2I);}
);else setTimeout(function(){a();}
,f2I);}
)[(N8+m4)](),!E0):!N0;}
;f[(w8+L8I+Z4J.R0I+S2J+Z4J.n6I)]={table:null,ajaxUrl:null,fields:[],display:(u1I+Z8I+y3I+c0I),ajax:null,idSrc:(j3+Q0+v0+Z4J.w1I+j0J+d0X),events:{}
,i18n:{create:{button:(E0o+j0J),title:(G4X+C3X+z1+Z4J.q2+W4J+Z4J.F1I+Z5+W4J+Z4J.q2+Z4J.F1I+O3I),submit:"Create"}
,edit:{button:"Edit",title:(u3+w8+Z9X+W4J+Z4J.q2+Z4J.F1I+O3I),submit:(g8X+Z4J.C6J+Z4J.i0I+Z4J.q2)}
,remove:{button:(S0J+b6X+Z4J.q2),title:"Delete",submit:(S0J+Z4J.z5I+Z4J.q2+I6I),confirm:{_:(X0+Z4J.q2+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+Z4J.R0I+Z4J.o6I+Z4J.q2+W4J+Z4J.g7I+Z4J.w1I+Z4J.R0I+W4J+j0J+S3I+Z4J.n6I+y3I+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+Z4J.q2+Z4J.z5I+Z4J.A4+Z4J.q2+l5+w8+W4J+Z4J.o6I+O2+Z4J.n6I+J2X),1:(O9I+W4J+Z4J.g7I+y4+W4J+Z4J.n6I+g5J+Z4J.q2+W4J+Z4J.g7I+y4+W4J+j0J+S3I+w5+W4J+Z4J.i0I+Z4J.w1I+W4J+w8+n6X+Z4J.q2+W4J+U1X+W4J+Z4J.o6I+Z4J.w1I+j0J+J2X)}
}
,error:{system:(D4+q2X+n9J+J4J+A9I+q2X+m8I+G9J+I3I+q2X+v0J+b6+q2X+d9I+B2I+D1J+U3J+z8X+q4I+q2X+c0X+L6+O7+i8X+p4I+M9X+v9I+b9I+k6J+v0J+G9J+N3+V0o+m2I+q4I+c0X+h1+m8J+A0+Y6+v9I+m8I+c0X+E6+c0X+v9I+E6+M1+c0+H6+R9+Q6J+m8I+q2X+T7I+D8+o1X+v9I+b0o+q4I+W0J)}
,multi:{title:(R3J+Z4J.z5I+Y5+Z4J.q2+W4J+g0J+e8),info:(A1+W4J+Z4J.n6I+Z4J.q2+m0I+Z4J.V2+U2X+W4J+S3I+Z4J.i0I+Z4J.q2+S5J+W4J+Z4J.V2+t7+B7+Y0o+W4J+w8+S3I+x0I+h8+W4J+g0J+X0I+O8+W4J+c8I+u2+W4J+Z4J.i0I+y3I+r9X+W4J+S3I+n8X+Z4J.R0I+Z4J.i0I+v2I+X6+Z4J.w1I+W4J+Z4J.q2+o6+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+Z4J.n6I+Z4J.q2+Z4J.i0I+W4J+Z4J.Y8+Z4J.z5I+Z4J.z5I+W4J+S3I+I6I+o5I+Z4J.n6I+W4J+c8I+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+y3I+S3I+Z4J.n6I+W4J+S3I+Z4J.F1I+W2I+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.i0I+Q0I+W4J+Z4J.n6I+Z4J.Y8+o5I+Z4J.q2+W4J+g0J+B6X+Z4J.q2+p5X+Z4J.V2+q6I+W4J+Z4J.w1I+Z4J.o6I+W4J+Z4J.i0I+Z4J.Y8+k6I+W4J+y3I+Q2+Z4J.q2+p5X+Z4J.w1I+Z4J.i0I+y3I+Q2+j0J+r9X+Z4J.q2+W4J+Z4J.i0I+Q0I+Z4J.g7I+W4J+j0J+S3I+Z4J.z5I+Z4J.z5I+W4J+Z4J.o6I+i6I+S3I+Z4J.F1I+W4J+Z4J.i0I+y3I+Z4J.q2+s7X+W4J+S3I+Z4J.F1I+I1+S3I+W5I+Z4J.Y8+Z4J.z5I+W4J+g0J+B6X+B4+Z4J.l0X),restore:(D7+F9X+Z4J.w1I+W4J+Z4J.V2+y3I+Q+a5)}
,datetime:{previous:"Previous",next:(W1),months:(v8J+e1+W4J+o3+x6I+Z4J.o6I+e7I+Z4J.o6I+Z4J.g7I+W4J+g6+a4J+y3I+W4J+U4X+k6I+l2J+W4J+g6+Z4J.Y8+Z4J.g7I+W4J+r5+O3J+Z4J.q2+W4J+r5+V5I+W4J+U4X+Z4J.R0I+Z8I+q5J+Z4J.i0I+W4J+R0+M5I+N8+Z4J.q2+Z4J.o6I+W4J+s1+i8J+u0+Z4J.q2+Z4J.o6I+W4J+J1+a0X+P7J+Q2+W4J+j3+Z4J.q2+b9J+g9X+Z4J.o6I)[(H2+Z4J.z5I+Z9X)](" "),weekdays:(R0+O3J+W4J+g6+Z4J.w1I+Z4J.F1I+W4J+X6+N1J+W4J+j0I+Z4J.q2+w8+W4J+X6+l4J+W4J+o3+Z4J.o6I+S3I+W4J+R0+z1)[z5X](" "),amPm:["am",(Q9I)],unknown:"-"}
}
,formOptions:{bubble:d[(K8X+Z4J.F1I+w8)]({}
,f[(S4J+Z4J.q2+h4J)][(c8I+u2+p4X+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{title:!1,message:!1,buttons:"_basic",submit:(O9J+Z4J.Y8+M5X+u9)}
),inline:d[(p5+N5X+w8)]({}
,f[(o5I+G1+Z4J.q2+h4J)][h3],{buttons:!1,submit:(v1+Z4J.F1I+i9)}
),main:d[H3I]({}
,f[(o5I+G1+Z4J.q2+Z4J.z5I+Z4J.n6I)][(c8I+u1X+s1+k6I+G5X+Z4J.n6I)])}
,legacyAjax:!1}
;var K=function(a,b,c){d[(s8X)](b,function(b,d){var N5="aSr",e3="Fr",f=d[(g0J+Z4J.Y8+Z4J.z5I+e3+S7+N8J+B7)](c);f!==h&&C(a,d[(w8+Z4J.Y8+Z4J.i0I+N5+Z4J.V2)]())[(s8X)](function(){var C4X="hild",c3I="childNodes";for(;this[c3I].length;)this[(Z4J.o6I+Z4J.q2+o5I+I4+X7I+C4X)](this[(b9+Z4J.o6I+Z4J.n6I+Z4J.i0I+G4X+w7X+w8)]);}
)[z6I](f);}
);}
,C=function(a,b){var J4X='ld',u3J='dito',c=v8===a?q:d((G3I+m2I+h1+q4I+m6+m8I+m2I+T7I+Z0X+G9J+m6+T7I+m2I+i8X)+a+(y6I));return d((G3I+m2I+j9J+m6+m8I+u3J+G9J+m6+c2I+T7I+m8I+J4X+i8X)+b+(y6I),c);}
,D=f[(Z4J.C6J+B7+b8+Z4J.R0I+h8X+Z4J.n6I)]={}
,E=function(a,b){var e9J="awTy",X9J="erSide",h6J="bSer",X0o="atures",V9X="oF";return a[R5J]()[E0][(V9X+Z4J.q2+X0o)][(h6J+g0J+X9J)]&&(o8X+G9X)!==b[Z4J.n6I][(E7J+Z4J.i0I+s1+Q8I+Z4J.n6I)][(w8+Z4J.o6I+e9J+g6I)];}
,L=function(a){a=d(a);setTimeout(function(){var s7J="highlight",r5J="dClas";a[(Z4J.Y8+w8+r5J+Z4J.n6I)](s7J);setTimeout(function(){var a1=550,J1I="noHighlight",G1X="dCl";a[(Z4J.Y8+w8+G1X+Z4J.Y8+Z4J.n6I+Z4J.n6I)](J1I)[(C3X+F2X+G4X+Z4J.z5I+Z1+Z4J.n6I)](s7J);setTimeout(function(){var K7="oHi";a[(C3X+o5I+a0X+G4X+p2J+Z4J.n6I)]((Z4J.F1I+K7+Z8I+y3I+Z4J.z5I+S3I+Z8I+E4J));}
,a1);}
,C3);}
,t2I);}
,F=function(a,b,c,e,d){var j8X="exes";b[(k7X+j0J+Z4J.n6I)](c)[(S3I+F9X+j8X)]()[(J5I+Z4J.V2+y3I)](function(c){var c=b[(k7X+j0J)](c),g=c.data(),i=d(g);i===h&&f.error((D7+Z4J.F1I+Z4J.Y8+N8+m0I+W4J+Z4J.i0I+Z4J.w1I+W4J+c8I+h5J+W4J+Z4J.o6I+O2+W4J+S3I+y9I+Z4J.F1I+t1I+c8I+S3I+Z4J.q2+Z4J.o6I),14);a[i]={idSrc:i,data:g,node:c[(Z4J.F1I+G1+Z4J.q2)](),fields:e,type:(Z4J.o6I+Z4J.w1I+j0J)}
;}
);}
,G=function(a,b,c,e,l,g){var o3X="indexes";b[G1J](c)[o3X]()[s8X](function(w){var z8J="ayFie",h9I="eNam",S0I="cif",M3I="eas",Y3="rmin",R1="isEmptyObject",n1X="itFi",E9I="aoColumns",s6="tings",I4X="column",i=b[a3](w),j=b[(Z4J.o6I+Z4J.w1I+j0J)](w[o1]).data(),j=l(j),u;if(!(u=g)){u=w[I4X];u=b[(u1+Z4J.i0I+s6)]()[0][E9I][u];var m=u[(E7J+P1+e6J+Z0I)]!==h?u[(u9+n1X+Q9X)]:u[(o5I+Z)],n={}
;d[(s8X)](e,function(a,b){var x6J="dataSrc";if(d[S8](m))for(var c=0;c<m.length;c++){var e=b,f=m[c];e[(w8+h2+B0I)]()===f&&(n[e[(i1X)]()]=e);}
else b[x6J]()===m&&(n[b[i1X]()]=b);}
);d[R1](n)&&f.error((D7+Z4J.F1I+Z4J.w2+Z4J.z5I+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.Y8+n4J+Z4J.w1I+o5I+z1+M3J+X0I+n2J+W4J+w8+Z4J.A4+Z4J.q2+Y3+Z4J.q2+W4J+c8I+e6J+Z0I+W4J+c8I+Z4J.o6I+S7+W4J+Z4J.n6I+Z4J.w1I+Z4J.R0I+h8X+v2I+i1+Z4J.z5I+M3I+Z4J.q2+W4J+Z4J.n6I+k6I+Z4J.q2+S0I+Z4J.g7I+W4J+Z4J.i0I+Q0I+W4J+c8I+S3I+Z4J.q2+Z4J.z5I+w8+W4J+Z4J.F1I+Z4J.Y8+A1J+Z4J.l0X),11);u=n;}
F(a,b,w[(Z4J.o6I+O2)],e,l);a[j][a7I]="object"===typeof c&&c[(Z4J.F1I+Z4J.w1I+w8+h9I+Z4J.q2)]?[c]:[i[o0o]()];a[j][(H0J+Z4J.n6I+M7I+z8J+r7I)]=u;}
);}
;D[(M0I+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]={individual:function(a,b){var H2J="index",U9J="siv",b1="asCl",j4="ctDat",c=r[(Z4J.q2+z0J+Z4J.i0I)][(Z4J.w1I+q1+S3I)][(B9J+Z4J.F1I+b3+Z4J.q2+Z4J.i0I+q0I+Z4J.i5I+Z4J.q2+j4+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+Z4J.o6I+Z4J.V2)]),e=d(this[Z4J.n6I][(B7+N8+Z4J.z5I+Z4J.q2)])[(N8J+m0X+Z4J.Y8+N8+m0I)](),f=this[Z4J.n6I][(b9+w7+w5I)],g={}
,h,i;a[(W9I+P2I+Z4J.Y8+o5I+Z4J.q2)]&&d(a)[(y3I+b1+Z4J.Y8+t8)]("dtr-data")&&(i=a,a=e[(Z4J.o6I+B4+E7I+Z4J.F1I+U9J+Z4J.q2)][H2J](d(a)[(Z4J.V2+h9J+B4+Z4J.i0I)]("li")));b&&(d[(w2J+Z4J.o6I+Y8X+Z4J.g7I)](b)||(b=[b]),h={}
,d[(J5I+O9J)](b,function(a,b){h[b]=f[b];}
));G(g,e,a,f,c,h);i&&d[s8X](g,function(a,b){b[a7I]=[i];}
);return g;}
,fields:function(a){var a0I="mns",s5I="Object",B0J="Pla",Q1="aTabl",W0o="oA",b=r[s0X][(W0o+k6I+S3I)][h4I](this[Z4J.n6I][q7J]),c=d(this[Z4J.n6I][Q2X])[(j3+z1+Q1+Z4J.q2)](),e=this[Z4J.n6I][(c8I+s0J+w8+Z4J.n6I)],f={}
;d[(r9X+B0J+Y0o+s5I)](a)&&(a[C6X]!==h||a[d0]!==h||a[(a3+Z4J.n6I)]!==h)?(a[(C6X)]!==h&&F(f,c,a[(Z4J.o6I+Z4J.w1I+j0J+Z4J.n6I)],e,b),a[d0]!==h&&c[(Z9J+q5I+Z4J.n6I)](null,a[(f2J+U4J+a0I)])[(Y0o+w8+Z4J.q2+z0J+B4)]()[(e9I+y3I)](function(a){G(f,c,a,e,b);}
),a[G1J]!==h&&G(f,c,a[(Z4J.V2+w7+Z4J.z5I+Z4J.n6I)],e,b)):F(f,c,a,e,b);return f;}
,create:function(a,b){var c=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[g4X]();E(c,this)||(c=c[(k7X+j0J)][(b4+w8)](b),L(c[(o0o)]()));}
,edit:function(a,b,c,e){var m7X="wIds",C9J="nA",R6I="DataTa";b=d(this[Z4J.n6I][Q2X])[(R6I+N8+m0I)]();if(!E(b,this)){var f=r[(s0X)][(k0J)][h4I](this[Z4J.n6I][(J1J+B0I)]),g=f(c),a=b[(o1)]("#"+g);a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return g==f(b);}
));a[y7I]()?(a.data(c),c=d[(S3I+C9J+W1I)](g,e[(o1+X7X)]),e[(k7X+m7X)][(H2+Z4J.z5I+S3I+Z4J.V2+Z4J.q2)](c,1)):a=b[o1][(b4+w8)](c);L(a[o0o]());}
}
,remove:function(a){var b=d(this[Z4J.n6I][(B7+N8+m0I)])[g4X]();E(b,this)||b[(k7X+j0J+Z4J.n6I)](a)[(Z4J.o6I+u9X)]();}
,prep:function(a,b,c,e,f){var e0I="rowId";"edit"===a&&(f[(e0I+Z4J.n6I)]=d[I0](c.data,function(a,b){var b2X="yObje";if(!d[(S3I+r3X+o5I+Q8I+b2X+i8J)](c.data[b]))return b;}
));}
,commit:function(a,b,c,e){var f5I="drawType",t2J="ject",W4="nGet",G2="rowIds";b=d(this[Z4J.n6I][(Z4J.i0I+Z4J.Y8+B2X+Z4J.q2)])[(j3+Z4J.Y8+m0X+Z4J.Y8+N8+Z4J.z5I+Z4J.q2)]();if((Z4J.q2+w8+S3I+Z4J.i0I)===a&&e[G2].length)for(var f=e[G2],g=r[s0X][(G5J+S3I)][(F4+c8I+W4+q0I+t2J+j3+Z4J.Y8+Z4J.i0I+Z4J.Y8+m0)](this[Z4J.n6I][q7J]),h=0,e=f.length;h<e;h++)a=b[(Z4J.o6I+Z4J.w1I+j0J)]("#"+f[h]),a[y7I]()||(a=b[(Z4J.o6I+O2)](function(a,b){return f[h]===g(b);}
)),a[(Z4J.Y8+Z4J.F1I+Z4J.g7I)]()&&a[V9I]();a=this[Z4J.n6I][(Z4J.q2+w8+S3I+Z4J.i0I+s1+Q8I+Z4J.n6I)][f5I];(Z4J.F1I+Z4J.w1I+G9X)!==a&&b[X4](a);}
}
;D[z6I]={initField:function(a){var Z1J='ito',b=d((G3I+m2I+q4I+e3J+m6+m8I+m2I+Z1J+G9J+m6+P7I+M9I+B5+i8X)+(a.data||a[(g7X+A1J)])+'"]');!a[s0I]&&b.length&&(a[s0I]=b[z6I]());}
,individual:function(a,b){var U6X="rom",K4J="termin",b8I="lly",E3I="omati",c2X="yless";if(a instanceof d||a[L0o])b||(b=[d(a)[(Z4J.Y8+Z4J.i0I+U8I)]((Z4J.l1+Z4J.Y8+F6X+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+c8I+S3I+Z4J.q2+Z0I))]),a=d(a)[(o8I+C3X+Z4J.F1I+Z4J.I2I)]("[data-editor-id]").data("editor-id");a||(a=(u3I+Z4J.q2+c2X));b&&!d[(S3I+Z4J.n6I+X0+Y8X+Z4J.g7I)](b)&&(b=[b]);if(!b||0===b.length)throw (G4X+Z4J.Y8+Z4J.F1I+Z4J.F1I+Z4J.w1I+Z4J.i0I+W4J+Z4J.Y8+Z4J.R0I+Z4J.i0I+E3I+L7J+b8I+W4J+w8+Z4J.q2+K4J+Z4J.q2+W4J+c8I+s0J+w8+W4J+Z4J.F1I+a0+Z4J.q2+W4J+c8I+U6X+W4J+w8+Z4J.Y8+Z4J.i0I+Z4J.Y8+W4J+Z4J.n6I+Z4J.w1I+g5J+Z4J.V2+Z4J.q2);var c=D[z6I][Y8I][(L7J+Z4J.z5I+Z4J.z5I)](this,a),e=this[Z4J.n6I][(v7+w8+Z4J.n6I)],f={}
;d[(s8X)](b,function(a,b){f[b]=e[b];}
);d[(Z4J.q2+Z4J.Y8+O9J)](c,function(c,g){var x2I="isplayF",i6J="toArray";g[(O4I+g6I)]="cell";for(var h=a,j=b,m=d(),n=0,p=j.length;n<p;n++)m=m[(Z4J.Y8+N9I)](C(h,j[n]));g[a7I]=m[i6J]();g[Y8I]=e;g[(w8+x2I+e6J+Z0I+Z4J.n6I)]=f;}
);return c;}
,fields:function(a){var G3J="keyle",b={}
,c={}
,e=this[Z4J.n6I][(v7+w5I)];a||(a=(G3J+t8));d[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](e,function(b,e){var d=C(a,e[(w8+z1+Z4J.Y8+B0I)]())[(y3I+Z4J.i0I+o5I+Z4J.z5I)]();e[K6](c,null===d?h:d);}
);b[a]={idSrc:a,data:c,node:q,fields:e,type:(o1)}
;return b;}
,create:function(a,b){var i3='tor',c5X="GetOb";if(b){var c=r[s0X][(G5J+S3I)][(B9J+Z4J.F1I+c5X+A2J+Z4J.i0I+n7J+Z4J.Y8+o3+Z4J.F1I)](this[Z4J.n6I][(S3I+w8+R0+k5X)])(b);d((G3I+m2I+q4I+c0X+q4I+m6+m8I+m2I+T7I+i3+m6+T7I+m2I+i8X)+c+'"]').length&&K(c,a,b);}
}
,edit:function(a,b,c){a=r[s0X][(G5J+S3I)][h4I](this[Z4J.n6I][q7J])(c)||"keyless";K(a,b,c);}
,remove:function(a){d('[data-editor-id="'+a+(y6I))[(C3X+f1J+Z4J.q2)]();}
}
;f[T4]={wrapper:(j3+X7),processing:{indicator:(j3+a7+e8X+Z4J.n6I+S3I+v4+s3X+w8+S3I+Z4J.V2+Z4J.Y8+D6J),active:(j3+X6+u3+F4+i1+Z4J.o6I+Z4J.w1I+Z9J+Z4J.n6I+n5+Z4J.F1I+Z8I)}
,header:{wrapper:(j3+X7+x1X+Z4J.q2+Z4J.Y8+y9I+Z4J.o6I),content:(I6J+K7J+w7I+b4+Q2+F4+G4X+Z4J.w1I+d4J+Z4J.i0I)}
,body:{wrapper:"DTE_Body",content:"DTE_Body_Content"}
,footer:{wrapper:(X2J+V4X),content:"DTE_Footer_Content"}
,form:{wrapper:"DTE_Form",content:"DTE_Form_Content",tag:"",info:(I6J+R9I+B5I+x1+Z4J.F1I+s8),error:(j3+X7+o9X+Z4J.w1I+i9J),buttons:(j3+X6+u3+F4+F8I+p1X+Z4J.i0I+Q3I+h3X),button:"btn"}
,field:{wrapper:"DTE_Field",typePrefix:"DTE_Field_Type_",namePrefix:"DTE_Field_Name_",label:"DTE_Label",input:(I6J+l1I+Z4J.q2+Z4J.z5I+w9X+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I),inputControl:(I6J+I4I+S3I+Z4J.q2+Z4J.z5I+S9X+t7+U8I+Z4J.w1I+Z4J.z5I),error:(I6J+K7J+O6+w7+w8+F3X+Z4J.i0I+Z4J.Y8+Z4J.i0I+W2J),"msg-label":(v6J+H4I+Z4J.z5I+F4+x1+Z4J.F1I+s8),"msg-error":(j3+X6+K7J+I5J+K6I+M6),"msg-message":(j3+X6+k7J+Z0I+F4+n6J+t8+L9+Z4J.q2),"msg-info":"DTE_Field_Info",multiValue:(o5I+g8J+t1I+F6X+g0J+Z4J.Y8+B8I),multiInfo:(p6+Z4J.i0I+S3I+F6X+S3I+Z4J.F1I+s8),multiRestore:(d1I+F6X+Z4J.o6I+Z4J.q2+Z4J.n6I+Z4J.i0I+u2+Z4J.q2)}
,actions:{create:(j3+X7+F4+U4X+Z4J.V2+B2J+P6J+z1+Z4J.q2),edit:"DTE_Action_Edit",remove:"DTE_Action_Remove"}
,bubble:{wrapper:(I6J+u3+W4J+j3+X7+b5I+e6),liner:(j3+X6+u3+b5I+N8+N8+A2I+U5+S3I+F3I),table:(I6J+C8J+L7X+Z4J.z5I+q4X+Z4J.Y8+N8+m0I),close:(I6J+b7I+M0o+A8I),pointer:(j3+X6+u3+F4+y4X+Z4J.R0I+L7X+A2I+X6+I5I+Z8I+m0I),bg:(j3+X6+w0+Z8I+k7X+V)}
}
;if(r[(W+N8+I7I+Z4J.w1I+s3)]){var p=r[(Z4J.B3I+I7I+Z4J.w1I+s3)][A5X],H={sButtonText:c3X,editor:c3X,formTitle:c3X}
;p[(Z4J.q2+H0J+Q3I+m0o+C3X+Z4J.Y8+I6I)]=d[(s0X+Z4J.q2+Z4J.F1I+w8)](!E0,p[k0X],H,{formButtons:[{label:c3X,fn:function(){this[f0o]();}
}
],fnClick:function(a,b){var n4="edito",c=b[(n4+Z4J.o6I)],e=c[(S3I+G5+Z4J.F1I)][(A1X+Z4J.Y8+I6I)],d=b[e1I];if(!d[E0][(l7I+N8+w7)])d[E0][(Z4J.z5I+Z4J.w2+w7)]=e[f0o];c[(m3J+J5I+I6I)]({title:e[(Z4J.i0I+S3I+D3I)],buttons:d}
);}
}
);p[J7J]=d[H3I](!0,p[r1],H,{formButtons:[{label:null,fn:function(){this[(Z4+P)]();}
}
],fnClick:function(a,b){var c4J="Sel",c=this[(c8I+Z4J.F1I+b3+Z4J.A4+c4J+Z4J.q2+i8J+Z4J.q2+w8+s3X+w8+p5+Z4J.q2+Z4J.n6I)]();if(c.length===1){var e=b[(Z4J.q2+w8+T1+Z4J.o6I)],d=e[k1I][R0J],f=b[(y0o+y4X+Z4J.R0I+u3X)];if(!f[0][(l7I+N8+Z4J.q2+Z4J.z5I)])f[0][(l7I+N8+Z4J.q2+Z4J.z5I)]=d[(V4+v2X+Z9X)];e[R0J](c[0],{title:d[j2],buttons:f}
);}
}
}
);p[(Z4J.q2+w8+S3I+E7+Z4J.o6I+g0X+Z4J.q2)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!0,p[(u1+Z4J.z5I+Z4J.q2+Z4J.V2+Z4J.i0I)],H,{question:null,formButtons:[{label:null,fn:function(){var a=this;this[(Z4J.n6I+u0J+o5I+S3I+Z4J.i0I)](function(){var W1X="Sele",H9X="tab",X6J="fnGetInstance",F8X="bleToo";d[Z4J.h0I][g9][(W+F8X+Z4J.z5I+Z4J.n6I)][X6J](d(a[Z4J.n6I][(Z4J.i0I+Z4J.Y8+N8+m0I)])[g4X]()[(H9X+m0I)]()[o0o]())[(c8I+Z4J.F1I+W1X+Z4J.V2+Z4J.i0I+J1+t7+Z4J.q2)]();}
);}
}
],fnClick:function(a,b){var b1J="fir",Q7I="mB",L1I="xe",D2="lectedI",L8J="fnGet",c=this[(L8J+R0+Z4J.q2+D2+F9X+Z4J.q2+L1I+Z4J.n6I)]();if(c.length!==0){var e=b[G8],d=e[(D7I+B0o+Z4J.F1I)][(V9I)],f=b[(c8I+u2+Q7I+n4J+Y1J+Z4J.n6I)],g=typeof d[(Z4J.V2+Z4J.w1I+l1X+S3I+Z4J.o6I+o5I)]==="string"?d[(H0X+c8I+S3I+t6X)]:d[(Z4J.V2+Z4J.w1I+l1X+S3I+t6X)][c.length]?d[(H0X+b9+Z4J.o6I+o5I)][c.length]:d[(Z4J.V2+t7+b1J+o5I)][F4];if(!f[0][(Z4J.z5I+Z4J.Y8+N8+Z4J.q2+Z4J.z5I)])f[0][(b3I+Z4J.q2+Z4J.z5I)]=d[(V4+N8+u6J+Z4J.i0I)];e[V9I](c,{message:g[S7X](/%d/g,c.length),title:d[(j2)],buttons:f}
);}
}
}
);}
d[(p5+I6I+F9X)](r[(p5+Z4J.i0I)][(L5X+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I)],{create:{text:function(a,b,c){var r2X="butt",f0="reate";return a[k1I]((L5X+B9I+Z4J.n6I+Z4J.l0X+Z4J.V2+f0),c[G8][(k1I)][d0I][(r2X+t7)]);}
,className:(N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+Z4J.n6I+F6X+Z4J.V2+C3X+G4),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][(A1X+z1+Z4J.q2)][f0o];}
,fn:function(){this[(V4+v2X+Z9X)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var u5="itl",P1I="formTitle";a=e[G8];a[(Z4J.V2+Z4J.o6I+Z4J.q2+G4)]({buttons:e[e1I],message:e[(c8I+Z4J.w1I+Z4J.o6I+o5I+g6+B4+Z4J.n6I+i5)],title:e[P1I]||a[k1I][d0I][(Z4J.i0I+u5+Z4J.q2)]}
);}
}
,edit:{extend:(P2J+I6I+w8),text:function(a,b,c){return a[(S3I+G5+Z4J.F1I)]((N8+Z4J.R0I+E2I+p3J+Z4J.l0X+Z4J.q2+w8+S3I+Z4J.i0I),c[(Z4J.q2+H0J+D6J)][(D1X+Z4J.F1I)][R0J][(u0o+Z4J.i0I+t7)]);}
,className:(L5X+X4J+h3X+F6X+Z4J.q2+w8+Z9X),editor:null,formButtons:{label:function(a){return a[(S3I+U1X+B0o+Z4J.F1I)][R0J][(V3I+S3I+Z4J.i0I)];}
,fn:function(){var N0o="ubm";this[(Z4J.n6I+N0o+S3I+Z4J.i0I)]();}
}
,formMessage:null,formTitle:null,action:function(a,b,c,e){var Q7J="formMessage",u9J="xes",D2X="ell",i3I="indexe",a=e[G8],c=b[C6X]({selected:!0}
)[(S3I+Z4J.F1I+y9I+z0J+B4)](),d=b[d0]({selected:!0}
)[(i3I+Z4J.n6I)](),b=b[(Z4J.V2+D2X+Z4J.n6I)]({selected:!0}
)[(h5J+Z4J.q2+u9J)]();a[(Z4J.q2+o6)](d.length||b.length?{rows:c,columns:d,cells:b}
:c,{message:e[Q7J],buttons:e[(y0o+p1X+Z4J.i0I+Z4J.i0I+t7+Z4J.n6I)],title:e[(c8I+u2+R6X+q3I+Z4J.q2)]||a[(D1X+Z4J.F1I)][(Z4J.q2+w8+S3I+Z4J.i0I)][(Z4J.i0I+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]}
);}
}
,remove:{extend:"selected",text:function(a,b,c){var Z2="18n";return a[k1I]("buttons.remove",c[G8][(S3I+Z2)][(Z4J.o6I+Z4J.q2+f1J+Z4J.q2)][(g8)]);}
,className:"buttons-remove",editor:null,formButtons:{label:function(a){return a[(D7I+R6)][V9I][(Z4+o5I+Z9X)];}
,fn:function(){this[f0o]();}
}
,formMessage:function(a,b){var l0J="irm",Y9X="confirm",u7J="nfirm",Y2="ows",c=b[(Z4J.o6I+Y2)]({selected:!0}
)[(h5J+Z4J.q2+z0J+B4)](),e=a[(S3I+G5+Z4J.F1I)][(C3X+f1J+Z4J.q2)];return ("string"===typeof e[(Z4J.V2+M7J+s7X+o5I)]?e[(f2J+u7J)]:e[Y9X][c.length]?e[(Z4J.V2+Z4J.w1I+Z4J.F1I+c8I+l0J)][c.length]:e[(P0I+l0J)][F4])[(Z4J.o6I+Z4J.q2+M7I+Y7I)](/%d/g,c.length);}
,formTitle:null,action:function(a,b,c,e){var g1="remov",Q3J="mMes",E9X="Buttons";a=e[G8];a[(Z4J.o6I+Z4J.q2+Z8J+l9J)](b[(Z4J.o6I+O2+Z4J.n6I)]({selected:!0}
)[(S3I+D7X+z0J+B4)](),{buttons:e[(s8+Z4J.o6I+o5I+E9X)],message:e[(c8I+Z4J.w1I+Z4J.o6I+Q3J+Z4J.n6I+Z4J.Y8+n6)],title:e[(c8I+Z4J.w1I+Z4J.o6I+R6X+Z4J.i0I+Z4J.z5I+Z4J.q2)]||a[(D7I+R6)][(g1+Z4J.q2)][j2]}
);}
}
}
);f[(c8I+S3I+k0o+Z4J.q2+Z4J.n6I)]={}
;f[(j3+z1+S5I+S3I+A1J)]=function(a,b){var X5X="calendar",t5X="matc",z2X="sta",D8X="-time",O4J="ndar",D3J="-date",k3="</div></div>",E3="<span>:</span>",Y6J='-time">',Y8J='lend',f9I='-year"/></div></div><div class="',g4J='th',r1X='</button></div><div class="',a4X='conRi',X2="evi",C5='nLeft',M9J='-title"><div class="',n1I='-label"><span/><select class="',s0o='ut',J5J="sed",K1="YYY",k1J="ntj",N6="tetim",n7X="YYYY-MM-DD",H8I="lassP";this[Z4J.V2]=d[H3I](!E0,{}
,f[H1J][(y9I+c8I+Z4J.Y8+g8J+Z4J.I2I)],b);var c=this[Z4J.V2][(Z4J.V2+H8I+Z4J.o6I+Z4J.q2+c8I+Y4X)],e=this[Z4J.V2][k1I];if(!j[H7I]&&n7X!==this[Z4J.V2][(c8I+Z4J.w1I+Z4J.o6I+A9J+Z4J.i0I)])throw (u3+o6+Z4J.w1I+Z4J.o6I+W4J+w8+Z4J.Y8+N6+Z4J.q2+n4I+j0I+S3I+Z4J.i0I+y3I+Z4J.w1I+n4J+W4J+o5I+S7+Z4J.q2+k1J+Z4J.n6I+W4J+Z4J.w1I+Z4J.F1I+Z4J.z5I+Z4J.g7I+W4J+Z4J.i0I+y3I+Z4J.q2+W4J+c8I+Z4J.w1I+t6X+Z4J.Y8+Z4J.i0I+c3+V9+K1+F6X+g6+g6+F6X+j3+j3+G4J+Z4J.V2+Q+W4J+N8+Z4J.q2+W4J+Z4J.R0I+J5J);var g=function(a){var x8I='utto',B1J='wn',i7X='Do',O0I='U',q6J='con',d0o='ck',f9X='lo',U0I='meb';return g8I+c+(m6+c0X+T7I+U0I+f9X+d0o+b0X+m2I+v3+q2X+B2I+P7I+o5X+i8X)+c+(m6+T7I+q6J+O0I+H7J+b0X+Z4I+t4X+y2)+e[(k6I+Z4J.o6I+Z4J.q2+g0J+Q7X+q5J)]+(b0o+Z4I+s0o+c0X+d9I+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+n1I+c+F6X+a+(t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+Z2J+i8X)+c+(m6+T7I+B2I+o8J+i7X+B1J+b0X+Z4I+x8I+v9I+y2)+e[c6X]+(P0o+N8+Z4J.R0I+Z4J.i0I+Z4J.i0I+t7+U+w8+S3I+g0J+U+w8+P9X+N2X);}
,g=d(g8I+c+(b0X+m2I+v3+q2X+B2I+P7I+q4I+n9J+n9J+i8X)+c+(m6+m2I+q4I+j2J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+b6+n9J+i8X)+c+M9J+c+(m6+T7I+A7X+C5+b0X+Z4I+B0X+c0X+c0X+o8J+y2)+e[(k6I+Z4J.o6I+X2+Z4J.w1I+Z4J.R0I+Z4J.n6I)]+(b0o+Z4I+s0o+Z0X+v9I+o9+m2I+T7I+Y7J+B6I+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X)+c+(m6+T7I+a4X+P0J+v0J+c0X+b0X+Z4I+t4X+y2)+e[c6X]+r1X+c+n1I+c+(m6+A9I+d9I+v9I+g4J+t3X+m2I+T7I+Y7J+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+o5X+i8X)+c+n1I+c+f9I+c+(m6+B2I+q4I+Y8J+L6+t3X+m2I+v3+B6I+m2I+v3+q2X+B2I+U9+n9J+i8X)+c+Y6J+g(C1X)+E3+g(N2J)+E3+g(Z5I)+g(K9J)+k3);this[Z6J]={container:g,date:g[(b9+Z4J.F1I+w8)](Z4J.l0X+c+D3J),title:g[(b9+F9X)](Z4J.l0X+c+(F6X+Z4J.i0I+W6)),calendar:g[T9X](Z4J.l0X+c+(F6X+Z4J.V2+Z4J.Y8+Z4J.z5I+Z4J.q2+O4J)),time:g[T9X](Z4J.l0X+c+D8X),input:d(a)}
;this[Z4J.n6I]={d:c3X,display:c3X,namespace:(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+Z4J.o6I+F6X+w8+z1+Z4J.q2+v0o+Z4J.q2+F6X)+f[H1J][(z1J+Z4J.F1I+z2X+Z4J.F1I+Z9J)]++,parts:{date:c3X!==this[Z4J.V2][(c8I+u2+F6)][e6X](/[YMD]/),time:c3X!==this[Z4J.V2][o7J][(t5X+y3I)](/[Hhm]/),seconds:-N0!==this[Z4J.V2][(c8I+u1X+z1)][(h5J+p5+s1+c8I)](Z4J.n6I),hours12:c3X!==this[Z4J.V2][(c8I+u1X+Z4J.Y8+Z4J.i0I)][(A9J+Z4J.i0I+O9J)](/[haA]/)}
}
;this[(Z6J)][Q9J][(Z4J.Y8+k6I+k6I+q8+w8)](this[Z6J][(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)])[(Z4J.Y8+k6I+k6I+q8+w8)](this[(w8+Z4J.w1I+o5I)][Y0I]);this[(w8+S7)][(w8+Z4J.Y8+I6I)][(Z4J.Y8+k6I+k6I+C5I)](this[Z6J][(Z4J.i0I+S3I+q3I+Z4J.q2)])[(l4X+w8)](this[Z6J][X5X]);this[t2X]();}
;d[(Z4J.q2+S8X)](f.DateTime.prototype,{destroy:function(){var S8I="iner";this[(F4+y3I+S3I+w8+Z4J.q2)]();this[(w8+Z4J.w1I+o5I)][(H0X+B7+S8I)]()[(Z4J.w1I+f4)]("").empty();this[(Z6J)][(S3I+r4)][t9J](".editor-datetime");}
,max:function(a){var R4X="ander",t0I="Titl",x7I="maxDate";this[Z4J.V2][x7I]=a;this[(L6J+Q8I+S3I+Z4J.w1I+h3X+t0I+Z4J.q2)]();this[(z6+C0+Z4J.Y8+Z4J.z5I+R4X)]();}
,min:function(a){var j9I="etC",Z3="_optionsTitle";this[Z4J.V2][R6J]=a;this[Z3]();this[(n8J+j9I+X0I+Q+w8+Z4J.q2+Z4J.o6I)]();}
,owns:function(a){return 0<d(a)[p7I]()[k6X](this[(Z6J)][(H0X+u2X+Z4J.o6I)]).length;}
,val:function(a,b){var A8X="Cal",b2="setTi",V1J="toString",V5J="oUt",E8I="toDa",E4I="Lo",a7X="ome",b0I="tc";if(a===h)return this[Z4J.n6I][w8];if(a instanceof Date)this[Z4J.n6I][w8]=this[z3J](a);else if(null===a||""===a)this[Z4J.n6I][w8]=null;else if("string"===typeof a)if(j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]){var c=j[H7I][(Z4J.R0I+b0I)](a,this[Z4J.V2][o7J],this[Z4J.V2][(o5I+a7X+Z4J.F1I+Z4J.i0I+E4I+Z4J.V2+w2X)],this[Z4J.V2][N3I]);this[Z4J.n6I][w8]=c[(S3I+Z4J.n6I+q7+Z4J.Y8+u1I+w8)]()?c[(E8I+Z4J.i0I+Z4J.q2)]():null;}
else c=a[e6X](/(\d{4})\-(\d{2})\-(\d{2})/),this[Z4J.n6I][w8]=c?new Date(Date[(G2J)](c[1],c[2]-1,c[3])):null;if(b||b===h)this[Z4J.n6I][w8]?this[j0o]():this[(Z6J)][j0X][(g0J+X0I)](a);this[Z4J.n6I][w8]||(this[Z4J.n6I][w8]=this[(F4+c1+X6+V5J+Z4J.V2)](new Date));this[Z4J.n6I][p6J]=new Date(this[Z4J.n6I][w8][V1J]());this[(F4+b2+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.n6I+Z4J.q2+Z4J.i0I+A8X+Z4J.Y8+F9X+Z4J.q2+Z4J.o6I)]();this[(z6+Z4J.i0I+X6+v0o+Z4J.q2)]();}
,_constructor:function(){var J3J="_setTitle",k2="atetim",p1I="Pm",X9="cond",M3X="sInc",U3X="nut",q0o="_optionsTime",a7J="s1",A0X="onsT",t9X="sT",J5="ast",Q2J="eblo",C7X="tim",v4X="par",d6X="isp",P0X="ime",a=this,b=this[Z4J.V2][N7X],c=this[Z4J.V2][(D1X+Z4J.F1I)];this[Z4J.n6I][(k6I+Z4J.Y8+Z4J.o6I+Z4J.i0I+Z4J.n6I)][c1]||this[Z6J][(w8+G4)][v3J]((H0J+Z4J.n6I+V7I+Z4J.g7I),(w0I+Z4J.q2));this[Z4J.n6I][B8X][Y0I]||this[Z6J][(Z4J.i0I+P0X)][v3J]((w8+d6X+c5J),"none");this[Z4J.n6I][(v4X+Z4J.I2I)][(u1+Z4J.V2+t7+w8+Z4J.n6I)]||(this[(Z6J)][Y0I][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("div.editor-datetime-timeblock")[(Z4J.q2+j1I)](2)[(Z4J.o6I+Z4J.q2+F2X)](),this[(Z6J)][(C7X+Z4J.q2)][(Z4J.V2+y3I+S3I+Z0I+C3X+Z4J.F1I)]("span")[(Z4J.q2+j1I)](1)[V9I]());this[Z4J.n6I][B8X][i4X]||this[Z6J][Y0I][I7X]((w8+P9X+Z4J.l0X+Z4J.q2+w8+Z9X+u2+F6X+w8+Z4J.Y8+Z4J.i0I+Z4J.q2+t1I+A1J+F6X+Z4J.i0I+S3I+o5I+Q2J+Z4J.V2+u3I))[(Z4J.z5I+J5)]()[V9I]();this[(L6J+k6I+t1I+t7+t9X+S3I+Z4J.i0I+Z4J.z5I+Z4J.q2)]();this[(F4+Z4J.w1I+k6I+Z4J.i0I+S3I+A0X+v0o+Z4J.q2)]("hours",this[Z4J.n6I][B8X][(y3I+Z4J.w1I+g5J+a7J+w6X)]?12:24,1);this[q0o]("minutes",60,this[Z4J.V2][(u6J+U3X+Z4J.q2+M3X+C3X+A1J+g3X)]);this[q0o]((Z4J.n6I+Z4J.V1I+t7+w8+Z4J.n6I),60,this[Z4J.V2][(u1+X9+Z4J.n6I+x1+Z4J.F1I+Z4J.V2+C3X+A1J+g3X)]);this[u8]("ampm",["am","pm"],c[(a0+p1I)]);this[Z6J][j0X][t7]((c8I+Z4J.w1I+E8+Z4J.l0X+Z4J.q2+H0J+Z4J.i0I+u2+F6X+w8+z1+Z4J.q2+Y0I+W4J+Z4J.V2+q6I+Z4J.l0X+Z4J.q2+w8+n2I+F6X+w8+Z4J.Y8+I6I+Z4J.i0I+v0o+Z4J.q2),function(){var B9="isabl";if(!a[(w8+Z4J.w1I+o5I)][(Q9J)][(S3I+Z4J.n6I)]((J0o+g0J+r9X+S3I+N8+Z4J.z5I+Z4J.q2))&&!a[(w8+Z4J.w1I+o5I)][j0X][(S3I+Z4J.n6I)]((J0o+w8+B9+u9))){a[y1](a[(w8+Z4J.w1I+o5I)][j0X][(e7J+Z4J.z5I)](),false);a[J2]();}
}
)[(t7)]((l6+Z4J.g7I+s3J+Z4J.l0X+Z4J.q2+o6+Z4J.w1I+Z4J.o6I+F6X+w8+k2+Z4J.q2),function(){var r3J="isib",H5J="ntai";a[Z6J][(Z4J.V2+Z4J.w1I+H5J+Z4J.F1I+Z4J.q2+Z4J.o6I)][(r9X)]((J0o+g0J+r3J+m0I))&&a[y1](a[Z6J][j0X][(g0J+X0I)](),false);}
);this[(Z6J)][Q9J][t7]((Z4J.V2+C3I+M5X+Z4J.q2),(Z4J.n6I+Z4J.q2+Z4J.z5I+Z4J.V1I+Z4J.i0I),function(){var I3J="itio",A4J="_setTime",N1="econ",b5="TCMi",F0="utp",K0="_wr",I0o="_set",r6="UTCHou",a3I="UT",j7X="mpm",h5I="art",F2I="Cla",x9X="has",D3="alander",N7="_correctMonth",c=d(this),f=c[(g0J+X0I)]();if(c[F4J](b+"-month")){a[N7](a[Z4J.n6I][p6J],f);a[J3J]();a[(F4+u1+Z4J.i0I+G4X+D3)]();}
else if(c[(x9X+X7J+L1)](b+(F6X+Z4J.g7I+Z4J.q2+v6))){a[Z4J.n6I][p6J][(Z4J.n6I+K5I+Q8J+Z4J.R0I+Z4J.z5I+D3X)](f);a[(z6+Z4J.i0I+W7I+q3I+Z4J.q2)]();a[(z6+C0+Z4J.Y8+l7I+Z4J.F1I+l8)]();}
else if(c[F4J](b+(F6X+y3I+E5J+Z4J.n6I))||c[(y3I+Z4J.Y8+Z4J.n6I+F2I+t8)](b+(F6X+Z4J.Y8+o5I+Q9I))){if(a[Z4J.n6I][(k6I+h5I+Z4J.n6I)][i4X]){c=d(a[Z6J][(f2J+Z4J.F1I+B7+S3I+G9X+Z4J.o6I)])[(K3J+w8)]("."+b+(F6X+y3I+Z4J.w1I+Z4J.R0I+B9X))[y1]()*1;f=d(a[Z6J][(Z4J.V2+Z4J.w1I+g3X+Z4J.Y8+S3I+Z4J.F1I+Q2)])[(c8I+Y0o+w8)]("."+b+(F6X+Z4J.Y8+j7X))[(g0J+X0I)]()===(Q9I);a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+a3I+G4X+z8+Z4J.w1I+Z4J.R0I+Z4J.o6I+Z4J.n6I)](c===12&&!f?0:f&&c!==12?c+12:c);}
else a[Z4J.n6I][w8][(Z4J.n6I+Z4J.q2+Z4J.i0I+r6+Z4J.o6I+Z4J.n6I)](f);a[(I0o+X6+v0o+Z4J.q2)]();a[(K0+S3I+Z4J.i0I+Z4J.q2+s1+F0+n4J)](true);}
else if(c[(y3I+Z4J.Y8+Z4J.n6I+n1+Z4J.n6I)](b+"-minutes")){a[Z4J.n6I][w8][(u1+Z4J.i0I+D7+b5+Z5X+Z4J.i0I+Z4J.q2+Z4J.n6I)](f);a[(F4+u1+Z4J.i0I+X6+P0X)]();a[j0o](true);}
else if(c[F4J](b+(F6X+Z4J.n6I+N1+w5I))){a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+R0+Z4J.V1I+Z4J.w1I+F9X+Z4J.n6I)](f);a[A4J]();a[j0o](true);}
a[(w8+S7)][(S3I+Z4J.F1I+W2I)][(c8I+Z4J.w1I+v5J+Z4J.n6I)]();a[(F4+m0J+I3J+Z4J.F1I)]();}
)[t7]("click",function(c){var l0="ocus",o5="eOut",h7J="rit",D0J="setUTCDate",k5J="Mo",c9X="setUTCFullYear",y5="dIn",m9J="cte",H6J="ption",f9J="nD",P4J="asC",U6I="edIn",Q5="dex",p9J="dI",d5="selectedIndex",Z5J="tTi",a5I="corre",U1="nRi",z0X="lan",F0I="CMon",d1X="etUT",Q0o="CM",e5X="setUT",E9="eft",D0X="onL",D5X="pag",I9X="Cas",k9X="we",F6J="toLo",C2X="arget",f=c[(Z4J.i0I+C2X)][L0o][(F6J+k9X+Z4J.o6I+I9X+Z4J.q2)]();if(f!==(T8J)){c[(Z4J.n6I+Z4J.i0I+Z4J.w1I+k6I+T3X+D5X+Z4J.Y8+Z4J.i0I+Q7X+Z4J.F1I)]();if(f==="button"){c=d(c[d6J]);f=c.parent();if(!f[(y3I+Z4J.Y8+Z4J.n6I+X7J+L1)]((w8+r9X+Z4J.Y8+B2X+Z4J.q2+w8)))if(f[(y3I+Z1+X7J+Z4J.Y8+Z4J.n6I+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+D0X+E9))){a[Z4J.n6I][p6J][(e5X+Q0o+Z4J.w1I+g3X+y3I)](a[Z4J.n6I][p6J][(Z8I+d1X+F0I+U1I)]()-1);a[J3J]();a[(z6+C0+Z4J.Y8+z0X+y9I+Z4J.o6I)]();a[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][O6I]();}
else if(f[F4J](b+(F6X+S3I+Z4J.V2+Z4J.w1I+U1+Z8I+y3I+Z4J.i0I))){a[(F4+a5I+i8J+g6+t7+U1I)](a[Z4J.n6I][(S0+k6I+Z4J.z5I+y3)],a[Z4J.n6I][(w8+S3I+A9X+Z4J.Y8+Z4J.g7I)][f5J]()+1);a[(n8J+Z4J.q2+Z5J+q3I+Z4J.q2)]();a[(n8J+Z4J.A4+G4X+X0I+Z4J.Y8+Z4J.F1I+l8)]();a[(w8+S7)][(S3I+n8X+n4J)][(O6I)]();}
else if(f[(C3I+Z4J.n6I+G4X+Z4J.z5I+Z1+Z4J.n6I)](b+(F6X+S3I+Z4J.V2+t7+g8X))){c=f.parent()[(T9X)]((I2J+K3X))[0];c[d5]=c[(Z4J.n6I+Z4J.q2+p5J+Z4J.q2+p9J+Z4J.F1I+Q5)]!==c[V6X].length-1?c[(Z4J.n6I+w7+K3X+U6I+w8+p5)]+1:0;d(c)[l2]();}
else if(f[(y3I+P4J+Z4J.z5I+L1)](b+(F6X+S3I+f2J+f9J+Z4J.w1I+g9I))){c=f.parent()[(K3J+w8)]((I2J+K3X))[0];c[d5]=c[(u1+Z4J.z5I+K3X+Z4J.q2+w8+x1+D7X+z0J)]===0?c[(Z4J.w1I+H6J+Z4J.n6I)].length-1:c[(Z4J.n6I+Z4J.q2+m0I+m9J+y5+w8+Z4J.q2+z0J)]-1;d(c)[l2]();}
else{if(!a[Z4J.n6I][w8])a[Z4J.n6I][w8]=a[z3J](new Date);a[Z4J.n6I][w8][c9X](c.data("year"));a[Z4J.n6I][w8][(Z4J.n6I+Z4J.A4+D7+W0I+k5J+Z4J.F1I+Z4J.i0I+y3I)](c.data((o5I+Z4J.w1I+r1J)));a[Z4J.n6I][w8][D0J](c.data((w8+y3)));a[(F4+j0J+h7J+o5+k6I+Z4J.R0I+Z4J.i0I)](true);setTimeout(function(){a[(F4+h1I+w8+Z4J.q2)]();}
,10);}
}
else a[(Z6J)][j0X][(c8I+l0)]();}
}
);}
,_compareDates:function(a,b){var Z3X="_dateToUtcString",X8X="cS",I8J="dateToUt";return this[(F4+I8J+X8X+Z4J.i0I+b7J+Z8I)](a)===this[Z3X](b);}
,_correctMonth:function(a,b){var N4X="Mont",K4="setUTCMonth",a1X="sI",c8J="_da",c=this[(c8J+Z4J.g7I+a1X+Z4J.F1I+g6+t7+Z4J.i0I+y3I)](a[W2X](),b),e=a[Y1I]()>c;a[K4](b);e&&(a[(Z4J.n6I+Z4J.q2+o1J+G4X+j3+z1+Z4J.q2)](c),a[(u1+m8+W0I+N4X+y3I)](b));}
,_daysInMonth:function(a,b){return [31,0===a%4&&(0!==a%100||0===a%400)?29:28,31,30,31,30,31,31,30,31,30,31][b];}
,_dateToUtc:function(a){var H9I="getS",t0X="getHours";return new Date(Date[G2J](a[D8J](),a[(Z8I+Z4J.A4+g6+S3J+y3I)](),a[(R5+j3+Z4J.Y8+I6I)](),a[t0X](),a[(R5+g6+S3I+Z5X+c1X)](),a[(H9I+Z4J.q2+Z4J.V2+t7+w5I)]()));}
,_dateToUtcString:function(a){var v4I="getU",q1J="tUTCMont",r8J="_pad",w1J="lYe";return a[(R5+D7+Q8J+g8J+w1J+v6)]()+"-"+this[r8J](a[(n6+q1J+y3I)]()+1)+"-"+this[(F4+k6I+b4)](a[(v4I+X6+G4X+N8J+Z4J.i0I+Z4J.q2)]());}
,_hide:function(){var e4I="clic",i5J="dow",r3I="esp",a=this[Z4J.n6I][(g7X+o5I+r3I+N4+Z4J.q2)];this[Z6J][(Z4J.V2+Z4J.w1I+Z4J.F1I+u2X+Z4J.o6I)][K7X]();d(j)[(Z4J.w1I+f4)]("."+a);d(q)[(Z4J.w1I+c8I+c8I)]((l6+Z4J.g7I+i5J+Z4J.F1I+Z4J.l0X)+a);d("div.DTE_Body_Content")[(Z4J.w1I+f4)]("scroll."+a);d((G8X+w8+Z4J.g7I))[t9J]((e4I+u3I+Z4J.l0X)+a);}
,_hours24To12:function(a){return 0===a?12:12<a?a-12:a;}
,_htmlDay:function(a){var S5='ay',q6X='tt',E5="day",B2="disa";if(a.empty)return '<td class="empty"></td>';var b=[(w8+y3)],c=this[Z4J.V2][N7X];a[(B2+N8+Z4J.z5I+Z4J.q2+w8)]&&b[q7I]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I));a[(Z4J.i0I+G1+Z4J.Y8+Z4J.g7I)]&&b[q7I]("today");a[r4X]&&b[(l2I+w5)]("selected");return '<td data-day="'+a[(E5)]+(k6J+B2I+t8J+n9J+n9J+i8X)+b[W6I](" ")+'"><button class="'+c+(F6X+N8+Z4J.R0I+E2I+Z4J.w1I+Z4J.F1I+W4J)+c+(m6+m2I+q4I+F2J+k6J+c0X+H3J+i8X+Z4I+B0X+q6X+d9I+v9I+k6J+m2I+h1+q4I+m6+F2J+m8I+L6+i8X)+a[(j1+Z4J.Y8+Z4J.o6I)]+'" data-month="'+a[(Z8J+Z4J.F1I+U1I)]+(k6J+m2I+h1+q4I+m6+m2I+S5+i8X)+a[E5]+(H6)+a[(E5)]+(P0o+N8+n4J+Z4J.i0I+t7+U+Z4J.i0I+w8+N2X);}
,_htmlMonth:function(a,b){var Y9="><",a1I="Mon",c7I='ead',h6X="kN",e8I="showWeekNumber",p0I="refi",X3J="_htmlWeekOfYear",f3X="Nu",H4X="owWeek",d2J="_htmlDay",c4="fu",W5="etUTC",S0o="ys",q4J="sab",U6J="_compareDates",d3J="_comp",u4J="Secon",L1X="UTCMin",m5J="setUTCHours",g5="setSeconds",V0J="setUTCMinutes",T2="TCHo",S3="axDate",l7X="irstD",u8I="TCDa",i7J="_daysInMonth",c=new Date,e=this[i7J](a,b),f=(new Date(Date[G2J](a,b,1)))[(Z8I+Z4J.q2+m8+u8I+Z4J.g7I)](),g=[],h=[];0<this[Z4J.V2][G7I]&&(f-=this[Z4J.V2][(c8I+l7X+y3)],0>f&&(f+=7));for(var i=e+f,j=i;7<j;)j-=7;var i=i+(7-j),j=this[Z4J.V2][R6J],m=this[Z4J.V2][(o5I+S3)];j&&(j[(Z4J.n6I+K5I+T2+Z4J.R0I+B9X)](0),j[V0J](0),j[g5](0));m&&(m[m5J](23),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+L1X+Z4J.R0I+c1X)](59),m[(Z4J.n6I+Z4J.q2+Z4J.i0I+u4J+w5I)](59));for(var n=0,p=0;n<i;n++){var o=new Date(Date[G2J](a,b,1+(n-f))),q=this[Z4J.n6I][w8]?this[(d3J+v6+Z4J.q2+N8J+c1X)](o,this[Z4J.n6I][w8]):!1,r=this[U6J](o,c),s=n<f||n>=e+f,t=j&&o<j||m&&o>m,v=this[Z4J.V2][(H0J+q4J+Z4J.z5I+Z4J.q2+j3+Z4J.Y8+S0o)];d[(r9X+X0+Z4J.o6I+y3)](v)&&-1!==d[(S3I+Z4J.F1I+U4X+Z4J.o6I+Y8X+Z4J.g7I)](o[(Z8I+W5+N8J+Z4J.g7I)](),v)?t=!0:(c4+M7X+Z4J.i0I+S3I+t7)===typeof v&&!0===v(o)&&(t=!0);h[(k6I+Z4J.R0I+w5)](this[d2J]({day:1+(n-f),month:b,year:a,selected:q,today:r,disabled:t,empty:s}
));7===++p&&(this[Z4J.V2][(Z4J.n6I+y3I+H4X+f3X+o5I+N8+Q2)]&&h[(Z4J.R0I+Z4J.F1I+Z4J.n6I+h1I+c8I+Z4J.i0I)](this[X3J](n-f,b,a)),g[q7I]("<tr>"+h[W6I]("")+(P0o+Z4J.i0I+Z4J.o6I+N2X)),h=[],p=0);}
c=this[Z4J.V2][(Z4J.V2+q2J+i1+p0I+z0J)]+(F6X+Z4J.i0I+Z4J.Y8+l3);this[Z4J.V2][e8I]&&(c+=(W4J+j0J+Z4J.q2+Z4J.q2+h6X+Z4J.R0I+P7J+Z4J.q2+Z4J.o6I));return (x5+c0X+M9I+K2X+q2X+B2I+P7I+b6+n9J+i8X)+c+(b0X+c0X+v0J+c7I+y2)+this[(F4+h0J+Z4J.z5I+a1I+Z4J.i0I+y3I+w7I+b4)]()+(P0o+Z4J.i0I+W7X+w8+Y9+Z4J.i0I+N8+i2X+N2X)+g[W6I]("")+(P0o+Z4J.i0I+N8+Z4J.w1I+g3I+U+Z4J.i0I+Z4J.w2+Z4J.z5I+Z4J.q2+N2X);}
,_htmlMonthHead:function(){var x5I="ush",v7I="Num",O2I="eek",a=[],b=this[Z4J.V2][G7I],c=this[Z4J.V2][(S3I+U1X+B0o+Z4J.F1I)],e=function(a){var T8I="weekdays";for(a+=b;7<=a;)a-=7;return c[T8I][a];}
;this[Z4J.V2][(Z4J.n6I+y3I+O2+j0I+O2I+v7I+N8+Z4J.q2+Z4J.o6I)]&&a[(k6I+x5I)]("<th></th>");for(var d=0;7>d;d++)a[(l2I+Z4J.n6I+y3I)]((M4X+Z4J.i0I+y3I+N2X)+e(d)+(P0o+Z4J.i0I+y3I+N2X));return a[(Z4J.i5I+Z4J.w1I+S3I+Z4J.F1I)]("");}
,_htmlWeekOfYear:function(a,b,c){var l3J="classPr",j8I="CDa",l7="ei",e=new Date(c,0,1),a=Math[(Z4J.V2+l7+Z4J.z5I)](((new Date(c,b,a)-e)/864E5+e[(Z8I+Z4J.q2+o1J+j8I+Z4J.g7I)]()+1)/7);return '<td class="'+this[Z4J.V2][(l3J+Z4J.q2+c8I+S3I+z0J)]+(m6+R7J+m8I+m8I+b9I+H6)+a+(P0o+Z4J.i0I+w8+N2X);}
,_options:function(a,b,c){var n8I="assP";c||(c=b);a=this[Z6J][(H0X+B7+S3I+F3I)][T9X]((u1+p5J+Z4J.l0X)+this[Z4J.V2][(Z4J.V2+Z4J.z5I+n8I+Z4J.o6I+Z4J.q2+b9+z0J)]+"-"+a);a.empty();for(var e=0,d=b.length;e<d;e++)a[w1X]('<option value="'+b[e]+(H6)+c[e]+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionSet:function(a,b){var Z0o="unknown",B1I="ected",k2J="refix",w5X="clas",c=this[(w8+Z4J.w1I+o5I)][(f2J+g3X+Z4J.Y8+Y0o+Q2)][(c8I+h5J)]("select."+this[Z4J.V2][(w5X+x7X+k2J)]+"-"+a),e=c.parent()[(Z4J.V2+w7X+w8+Z4J.o6I+q8)]("span");c[y1](b);c=c[(c8I+Y0o+w8)]((Y7X+J0o+Z4J.n6I+w7+B1I));e[(E4J+o5I+Z4J.z5I)](0!==c.length?c[(I6I+z0J+Z4J.i0I)]():this[Z4J.V2][k1I][Z0o]);}
,_optionsTime:function(a,b,c){var x0J="fix",a=this[Z6J][(H0X+Z4J.i0I+Z4J.Y8+Y5J+Z4J.o6I)][T9X]((u1+m0I+i8J+Z4J.l0X)+this[Z4J.V2][(Q4J+Z1+Z4J.n6I+i1+Z4J.o6I+Z4J.q2+x0J)]+"-"+a),e=0,d=b,f=12===b?function(a){return a;}
:this[(j6J+Z4J.Y8+w8)];12===b&&(e=1,d=13);for(b=e;b<d;b+=c)a[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]('<option value="'+b+'">'+f(b)+(P0o+Z4J.w1I+k6I+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+N2X));}
,_optionsTitle:function(){var M1X="_range",H4J="hs",n3J="_r",w7J="mon",p9I="opt",V0X="yearRange",f9="Ye",o4="tFull",M6J="rRang",V5="yea",W0X="getF",a=this[Z4J.V2][(D7I+R6)],b=this[Z4J.V2][(o5I+S3I+Z4J.F1I+N8J+Z4J.i0I+Z4J.q2)],c=this[Z4J.V2][(A9J+z0J+n7J+Z4J.q2)],b=b?b[(n6+P1+Z4J.R0I+q5I+V9+Z4J.q2+v6)]():null,c=c?c[(W0X+g8J+D3X)]():null,b=null!==b?b:(new Date)[D8J]()-this[Z4J.V2][(V5+M6J+Z4J.q2)],c=null!==c?c:(new Date)[(n6+o4+f9+Z4J.Y8+Z4J.o6I)]()+this[Z4J.V2][V0X];this[(F4+p9I+s4+Z4J.n6I)]((w7J+Z4J.i0I+y3I),this[(n3J+Q+n6)](0,11),a[(w7J+Z4J.i0I+H4J)]);this[u8]("year",this[M1X](b,c));}
,_pad:function(a){return 10>a?"0"+a:a;}
,_position:function(){var e2X="ndTo",j5I="erHeight",E8J="out",G3X="onta",a=this[Z6J][(Y0o+W2I)][(t9J+Y9J)](),b=this[(Z6J)][(Z4J.V2+G3X+S3I+Z4J.F1I+Z4J.q2+Z4J.o6I)],c=this[(w8+S7)][(S3I+r4)][(E8J+j5I)]();b[v3J]({top:a.top+c,left:a[s2I]}
)[(Z4J.Y8+N0J+Z4J.q2+e2X)]("body");var e=b[u6I](),f=d("body")[(Z4J.n6I+Z4J.V2+P1X+g6J+k6I)]();a.top+c+e-f>d(j).height()&&(a=a.top-e,b[(Z4J.V2+Z4J.n6I+Z4J.n6I)]((Z4J.i0I+Z4J.w1I+k6I),0>a?0:a));}
,_range:function(a,b){for(var c=[],e=a;e<=b;e++)c[q7I](e);return c;}
,_setCalander:function(){var R8="isplay",f5="lM",p0="_htm";this[Z6J][(Z4J.V2+w2X+Z4J.F1I+Z4J.C6J+Z4J.o6I)].empty()[w1X](this[(p0+f5+t7+Z4J.i0I+y3I)](this[Z4J.n6I][(w8+R8)][W2X](),this[Z4J.n6I][(w8+S3I+Z4J.n6I+V7I+Z4J.g7I)][(Z8I+Z4J.A4+D7+W0I+g6+Z4J.w1I+r1J)]()));}
,_setTitle:function(){var c4I="lY",I7="CFul",H6X="displ";this[(F4+Z4J.w1I+k6I+Z4J.i0I+Q7X+Z4J.F1I+w9+Z4J.i0I)]((Z8J+g3X+y3I),this[Z4J.n6I][(H6X+Z4J.Y8+Z4J.g7I)][f5J]());this[L3I]((Z4J.g7I+H5I),this[Z4J.n6I][p6J][(Z8I+Z4J.q2+m8+X6+I7+c4I+Z4J.q2+Z4J.Y8+Z4J.o6I)]());}
,_setTime:function(){var z9I="optio",l1J="Mi",d7I="4T",j3J="_ho",s4I="hou",H8="ptionS",b5J="getUTCHours",a=this[Z4J.n6I][w8],b=a?a[b5J]():0;this[Z4J.n6I][B8X][i4X]?(this[(F4+Z4J.w1I+H8+Z4J.q2+Z4J.i0I)]((s4I+B9X),this[(j3J+g5J+Z4J.n6I+w6X+d7I+Z4J.w1I+U1X+w6X)](b)),this[L3I]("ampm",12>b?(Z4J.Y8+o5I):(k6I+o5I))):this[L3I]((I9J+g5J+Z4J.n6I),b);this[L3I]((o5I+S3I+Z4J.F1I+Z4J.R0I+c1X),a?a[(Z8I+Z4J.q2+m8+W0I+l1J+Z4J.F1I+n4J+Z4J.q2+Z4J.n6I)]():0);this[(F4+z9I+Z4J.F1I+R0+Z4J.q2+Z4J.i0I)]("seconds",a?a[(n6+Z4J.i0I+w9+H0X+w5I)]():0);}
,_show:function(){var t1="yd",u0I="scr",Y="_position",V1="esiz",F1X="mesp",a=this,b=this[Z4J.n6I][(g7X+F1X+Y7I)];this[(F4+E7I+Z4J.n6I+S3I+Z4J.i0I+s4)]();d(j)[t7]("scroll."+b+(W4J+Z4J.o6I+V1+Z4J.q2+Z4J.l0X)+b,function(){a[Y]();}
);d("div.DTE_Body_Content")[(Z4J.w1I+Z4J.F1I)]((u0I+A0I+Z4J.z5I+Z4J.l0X)+b,function(){a[Y]();}
);d(q)[t7]((l6+t1+o0I+Z4J.l0X)+b,function(b){var b8J="key",z3="ey",x9J="eyCo";(9===b[(u3I+x9J+y9I)]||27===b[(u3I+z3+G4X+O1X)]||13===b[(b8J+G4X+O1X)])&&a[(M4)]();}
);setTimeout(function(){d("body")[t7]("click."+b,function(b){var X1X="rg";!d(b[d6J])[(k6I+v6+q8+Z4J.i0I+Z4J.n6I)]()[k6X](a[(w8+Z4J.w1I+o5I)][(Z4J.V2+S3J+A7+F3I)]).length&&b[(B7+X1X+Z4J.A4)]!==a[(Z6J)][(Y0o+W2I)][0]&&a[M4]();}
);}
,10);}
,_writeOutput:function(a){var Y6I="_pa",a2J="Yea",T5I="momentLocale",p3="utc",b=this[Z4J.n6I][w8],b=j[(Z8J+o5I+Z4J.q2+Z4J.F1I+Z4J.i0I)]?j[H7I][p3](b,h,this[Z4J.V2][T5I],this[Z4J.V2][N3I])[o7J](this[Z4J.V2][o7J]):b[(n6+m8+X6+G4X+X5+q5I+a2J+Z4J.o6I)]()+"-"+this[(Y6I+w8)](b[f5J]()+1)+"-"+this[(j6J+Z4J.Y8+w8)](b[Y1I]());this[Z6J][(S3I+n8X+Z4J.R0I+Z4J.i0I)][(e7J+Z4J.z5I)](b);a&&this[Z6J][(S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][O6I]();}
}
);f[(j3+z1+Z4J.q2+X6+S3I+A1J)][(F4+e9X+V3+Z4J.q2)]=E0;f[H1J][(w8+Z4J.q2+g5X+Z4J.n6I)]={classPrefix:L4J,disableDays:c3X,firstDay:N0,format:(V9+r8+V9+F6X+g6+g6+F6X+j3+j3),i18n:f[(w8+W9+Z4J.Y8+g8J+Z4J.I2I)][(D1X+Z4J.F1I)][(w8+Z4J.Y8+Z4J.i0I+O7J+Z4J.q2)],maxDate:c3X,minDate:c3X,minutesIncrement:N0,momentStrict:!E0,momentLocale:q8,secondsIncrement:N0,showWeekNumber:!N0,yearRange:f2I}
;var I=function(a,b){var Q1X="div.upload button",D4I="...",f4J="hoose",i6="uploadText";if(c3X===b||b===h)b=a[i6]||(G4X+f4J+W4J+c8I+S3I+Z4J.z5I+Z4J.q2+D4I);a[(L3X+l2I+Z4J.i0I)][(b9+F9X)](Q1X)[z6I](b);}
,M=function(a,b,c){var U2="]",Y2X="=",W7="[",b4J="nder",l3X="oDr",i7="E_Upl",i4="agex",w6I="eav",R3I="drop",I6X="Drag",n8="pT",y2I="gDro",A6="dragDrop",k0="eRea",n3I='ered',D0o='ell',v7X='ll',v2='ton',X='lue',y0I='V',a9='il',x6='yp',M1I='np',O9='" /><',L2X='load',c3J='_ta',z0I='itor_uplo',F5J="asses",e=a[(Z4J.V2+Z4J.z5I+F5J)][y0o][g8],g=d((x5+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+m2I+z0I+q4I+m2I+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+m8I+B0X+c3J+Z4I+K2X+b0X+m2I+v3+q2X+B2I+t8J+e0J+i8X+G9J+d9I+R7J+b0X+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+n9J+n9J+i8X+B2I+B5+P7I+q2X+B0X+H7J+L2X+b0X+Z4I+t4X+q2X+B2I+P7I+o5X+i8X)+e+(O9+T7I+M1I+B0X+c0X+q2X+c0X+x6+m8I+i8X+c2I+a9+m8I+t3X+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+P7I+q4I+e0J+i8X+B2I+B5+P7I+q2X+B2I+K2X+L6+y0I+q4I+X+b0X+Z4I+B0X+c0X+v2+q2X+B2I+t8J+e0J+i8X)+e+(s4X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+T7I+Y7J+q2X+B2I+U9+n9J+i8X+G9J+d9I+R7J+q2X+n9J+m8I+A7X+v9I+m2I+b0X+m2I+v3+q2X+B2I+P7I+q4I+e0J+i8X+B2I+m8I+v7X+b0X+m2I+v3+q2X+B2I+P7I+b6+n9J+i8X+m2I+G9J+d9I+H7J+b0X+n9J+H7J+q4I+v9I+P8X+m2I+T7I+Y7J+o9+m2I+v3+B6I+m2I+v3+q2X+B2I+t8J+n9J+n9J+i8X+B2I+D0o+b0X+m2I+T7I+Y7J+q2X+B2I+t8J+e0J+i8X+G9J+V6+m2I+n3I+t3X+m2I+v3+o9+m2I+T7I+Y7J+o9+m2I+T7I+Y7J+o9+m2I+v3+y2));b[(F4+S3I+Z4J.F1I+l2I+Z4J.i0I)]=g;b[(E4+N8+m0I+w8)]=!E0;I(b);if(j[(o3+S3I+Z4J.z5I+k0+l8)]&&!N0!==b[A6]){g[T9X]((H0J+g0J+Z4J.l0X+w8+X6X+W4J+Z4J.n6I+o8I+Z4J.F1I))[(Z4J.i0I+s0X)](b[(J4I+Z4J.Y8+y2I+n8+Z4J.q2+z0J+Z4J.i0I)]||(I6X+W4J+Z4J.Y8+Z4J.F1I+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+W4J+Z4J.Y8+W4J+c8I+G6J+Z4J.q2+W4J+y3I+Q2+Z4J.q2+W4J+Z4J.i0I+Z4J.w1I+W4J+Z4J.R0I+M7I+y5J));var h=g[(c8I+S3I+Z4J.F1I+w8)]((w8+P9X+Z4J.l0X+w8+Z4J.o6I+Z4J.w1I+k6I));h[(t7)](R3I,function(e){var V6J="eClas",c9="dataTransfer",Z8X="lEv",L9X="orig";b[x4J]&&(f[(Z4J.R0I+A5I+b4)](a,b,e[(L9X+S3I+Z4J.F1I+Z4J.Y8+Z8X+Z4J.q2+Z4J.F1I+Z4J.i0I)][c9][G0I],I,c),h[(Z4J.o6I+i2J+g0J+V6J+Z4J.n6I)]((a0X+Z4J.o6I)));return !N0;}
)[t7]((L4I+Z8I+Z4J.z5I+w6I+Z4J.q2+W4J+w8+Z4J.o6I+i4+Z9X),function(){var o5J="over",O5I="oveC";b[x4J]&&h[(Z4J.o6I+Z4J.q2+o5I+O5I+q2J)](o5J);return !N0;}
)[(t7)]((J4I+L9+a0X+Z4J.o6I),function(){b[(F4+q8+Z4J.Y8+N8+P3I)]&&h[d8J]((a0X+Z4J.o6I));return !N0;}
);a[(Z4J.w1I+Z4J.F1I)](Y5X,function(){var m6X="_Upl",l9I="ver";d(Q5X)[t7]((L4I+Z8I+Z4J.w1I+l9I+Z4J.l0X+j3+X6+i7+Z4J.w1I+Z4J.Y8+w8+W4J+w8+k7X+k6I+Z4J.l0X+j3+X7+m6X+h6+w8),function(){return !N0;}
);}
)[(t7)](d5I,function(){var l6I="E_U",m7I="gov";d((N8+G1+Z4J.g7I))[(d6+c8I)]((w8+Z4J.o6I+Z4J.Y8+m7I+Q2+Z4J.l0X+j3+X6+i7+h6+w8+W4J+w8+Z4J.o6I+Z4J.w1I+k6I+Z4J.l0X+j3+X6+l6I+k6I+Z4J.z5I+Z4J.w1I+b4));}
);}
else g[d8J]((Z4J.F1I+l3X+Z4J.w1I+k6I)),g[(Z4J.Y8+N0J+Z4J.q2+F9X)](g[(c8I+S3I+Z4J.F1I+w8)]((w8+S3I+g0J+Z4J.l0X+Z4J.o6I+Z4J.q2+b4J+Z4J.q2+w8)));g[(b9+Z4J.F1I+w8)](I0I)[t7]((Z4J.V2+u1I+z9J),function(){f[j3I][r2][Y9J][L5I](a,b,g0I);}
);g[T9X]((Y0o+l2I+Z4J.i0I+W7+Z4J.i0I+Z4J.g7I+g6I+Y2X+c8I+S3I+Z4J.z5I+Z4J.q2+U2))[(t7)]((Z4J.V2+y3I+Z4J.Y8+M5X+Z4J.q2),function(){f[r2](a,b,this[(c8I+S3I+m0I+Z4J.n6I)],I,function(b){var M2="input[type=file]";c[(d5J+Z4J.z5I)](a,b);g[T9X](M2)[(g0J+Z4J.Y8+Z4J.z5I)](g0I);}
);}
);return g;}
,A=function(a){setTimeout(function(){var d0J="trigge";a[(d0J+Z4J.o6I)]((v1+Z4J.F1I+n6),{editor:!E0,editorSet:!E0}
);}
,E0);}
,s=f[(c8I+S3I+Z4J.q2+Z4J.z5I+w8+Y5I+k6I+B4)],p=d[(p5+Z4J.i0I+q8+w8)](!E0,{}
,f[(E1)][w8J],{get:function(a){return a[(F4+S3I+Z4J.F1I+k6I+n4J)][(g0J+X0I)]();}
,set:function(a,b){a[m8X][y1](b);A(a[(F4+S3I+Z4J.F1I+W2I)]);}
,enable:function(a){a[(m8X)][x3I]((S0+Z4J.Y8+N8+Z4J.z5I+u9),q9I);}
,disable:function(a){var e3X="isab";a[m8X][(x3I)]((w8+e3X+Z4J.z5I+u9),v3X);}
}
);s[e5]={create:function(a){a[(F4+y1)]=a[o0X];return c3X;}
,get:function(a){return a[C7];}
,set:function(a,b){a[(W5J+Z4J.Y8+Z4J.z5I)]=b;}
}
;s[A6I]=d[H3I](!E0,{}
,p,{create:function(a){a[(F4+Y0o+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+Z4J.R0I+Z4J.i0I+i9X))[l5X](d[H3I]({id:f[T0J](a[(J1J)]),type:(k0X),readonly:A6I}
,a[(z1+U8I)]||{}
));return a[(F4+S3I+P3J+Z4J.i0I)][E0];}
}
);s[k0X]=d[H3I](!E0,{}
,p,{create:function(a){a[(m8X)]=d((M4X+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I+i9X))[(Z4J.Y8+c2J)](d[H3I]({id:f[T0J](a[(J1J)]),type:(W6X+Z4J.i0I)}
,a[l5X]||{}
));return a[(F4+S3I+r4)][E0];}
}
);s[(o8I+Z4J.n6I+Z4J.n6I+j0J+Z4J.w1I+I3X)]=d[(Z4J.q2+z0J+Z4J.i0I+Z4J.q2+Z4J.F1I+w8)](!E0,{}
,p,{create:function(a){var e8J="word";a[m8X]=d((M4X+S3I+n8X+n4J+i9X))[l5X](d[(p5+Z4J.i0I+Z4J.q2+F9X)]({id:f[T0J](a[(S3I+w8)]),type:(o8I+t8+e8J)}
,a[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]||{}
));return a[m8X][E0];}
}
);s[P5X]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var g3J="tend",R1J="tar";a[(z1J+Z4J.F1I+k6I+n4J)]=d((M4X+Z4J.i0I+Z4J.q2+z0J+R1J+Z4J.q2+Z4J.Y8+i9X))[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)](d[(p5+g3J)]({id:f[T0J](a[J1J])}
,a[l5X]||{}
));return a[(F4+Y0o+l2I+Z4J.i0I)][E0];}
}
);s[(I2J+K3X)]=d[(p5+I6I+F9X)](!0,{}
,p,{_addOptions:function(a,b){var Y4="placeholderDisabled",D7J="olderDi",X6I="ceh",u7="placeholderValue",R7X="rVa",u9I="olde",D9="eh",w3I="lac",n5J="eholde",c=a[(m8X)][0][V6X],e=0;c.length=0;if(a[(M7I+N4+n5J+Z4J.o6I)]!==h){e=e+1;c[0]=new Option(a[s4J],a[(k6I+w3I+D9+u9I+R7X+Z4J.z5I+Z4J.R0I+Z4J.q2)]!==h?a[u7]:"");var d=a[(k6I+Z4J.z5I+Z4J.Y8+X6I+D7J+Z4J.n6I+Z4J.Y8+B2X+Z4J.q2+w8)]!==h?a[Y4]:true;c[0][(y3I+J1J+w8+Z4J.q2+Z4J.F1I)]=d;c[0][c6I]=d;}
b&&f[z4J](b,a[d1],function(a,b,d){c[d+e]=new Option(b,a);c[d+e][z5J]=a;}
);}
,create:function(a){var P0="ipOpts",v9X="ele";a[m8X]=d((M4X+Z4J.n6I+v9X+Z4J.V2+Z4J.i0I+i9X))[l5X](d[(Z4J.q2+z0J+Z4J.i0I+C5I)]({id:f[T0J](a[J1J]),multiple:a[s8J]===true}
,a[(Z4J.Y8+c2J)]||{}
))[(t7)]((Z4J.V2+y3I+Z4J.Y8+Z4J.F1I+Z8I+Z4J.q2+Z4J.l0X+w8+Z4J.i0I+Z4J.q2),function(b,c){var o9J="_lastSet";if(!c||!c[(u9+S3I+Z4J.i0I+u2)])a[o9J]=s[T8J][(Z8I+Z4J.q2+Z4J.i0I)](a);}
);s[(u1+Z4J.z5I+Z4J.V1I+Z4J.i0I)][k3X](a,a[V6X]||a[P0]);return a[(L3X+W2I)][0];}
,update:function(a,b){var w3="lastS",Q4X="ddOp";s[(P2J+Z4J.i0I)][(y7J+Q4X+Z4J.i0I+S3I+Z4J.w1I+Z4J.F1I+Z4J.n6I)](a,b);var c=a[(F4+w3+Z4J.q2+Z4J.i0I)];c!==h&&s[T8J][(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,c,true);A(a[(F4+Y0o+k6I+n4J)]);}
,get:function(a){var b=a[m8X][(b9+F9X)]((Z4J.w1I+Q8I+S3I+t7+J0o+Z4J.n6I+Z4J.q2+m0I+i8J+Z4J.q2+w8))[(A9J+k6I)](function(){return this[(F4+u9+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+y1)];}
)[(Q3I+T0)]();return a[s8J]?a[(Z4J.n6I+Z4J.q2+o8I+Y8X+Z4J.i0I+Z4J.w1I+Z4J.o6I)]?b[W6I](a[z1I]):b:b.length?b[0]:null;}
,set:function(a,b,c){var E1I="ple",A8="tS";if(!c)a[(T1J+Z1+A8+Z4J.A4)]=b;a[(x4X+Z4J.z5I+t1I+k6I+Z4J.z5I+Z4J.q2)]&&a[z1I]&&!d[(r9X+U4X+P8J+Z4J.g7I)](b)?b=b[z5X](a[(u1+k6I+Z4J.Y8+Y8X+Q3I+Z4J.o6I)]):d[S8](b)||(b=[b]);var e,f=b.length,g,h=false,i=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)][T9X]("option");a[(z1J+n8X+n4J)][(c8I+Y0o+w8)]((V7+p9X+Z4J.F1I))[(s8X)](function(){g=false;for(e=0;e<f;e++)if(this[(F4+Z4J.q2+H0J+E7+y1)]==b[e]){h=g=true;break;}
this[r4X]=g;}
);if(a[s4J]&&!h&&!a[(o5I+I8I+S3I+E1I)]&&i.length)i[0][r4X]=true;c||A(a[(L3X+l2I+Z4J.i0I)]);return h;}
,destroy:function(a){a[(z1J+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(Z4J.w1I+f4)]((v1+Z4J.F1I+n6+Z4J.l0X+w8+Z4J.i0I+Z4J.q2));}
}
);s[M2X]=d[(Z4J.q2+z0+F9X)](!0,{}
,p,{_addOptions:function(a,b){var d8X="sPa",c=a[(L3X+k6I+Z4J.R0I+Z4J.i0I)].empty();b&&f[(k6I+A7+B9X)](b,a[(V7+Z4J.i0I+Q7X+Z4J.F1I+d8X+S3I+Z4J.o6I)],function(b,g,h){var T2J="eId",I9="af";c[w1X]('<div><input id="'+f[(Z4J.n6I+I9+T2J)](a[(J1J)])+"_"+h+'" type="checkbox" /><label for="'+f[(Z4J.n6I+I9+Z4J.q2+x1+w8)](a[J1J])+"_"+h+(H6)+g+"</label></div>");d((h5+Z4J.i0I+J0o+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.i0I),c)[(Z4J.Y8+E2I+Z4J.o6I)]((g0J+X0I+Z4J.R0I+Z4J.q2),b)[0][z5J]=b;}
);}
,create:function(a){var D6="pti",n0="Op",k3I="kbo";a[m8X]=d((M4X+w8+P9X+t4I));s[(O9J+Z4J.V1I+k3I+z0J)][(F4+Z4J.Y8+w8+w8+n0+t1I+t7+Z4J.n6I)](a,a[(Z4J.w1I+D6+p3J)]||a[(H0o+n0+Z4J.I2I)]);return a[(L3X+k6I+n4J)][0];}
,get:function(a){var W3X="rato",i8="jo",b=[];a[m8X][(T9X)]("input:checked")[(Z4J.q2+Z4J.Y8+O9J)](function(){b[(l2I+Z4J.n6I+y3I)](this[z5J]);}
);return !a[(u1+k6I+Z4J.Y8+Z4J.o6I+Z4J.Y8+Q3I+Z4J.o6I)]?b:b.length===1?b[0]:b[(i8+S3I+Z4J.F1I)](a[(u1+o8I+W3X+Z4J.o6I)]);}
,set:function(a,b){var c=a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)][(b9+Z4J.F1I+w8)]((h5+Z4J.i0I));!d[S8](b)&&typeof b===(z6X+Y0o+Z8I)?b=b[(Z4J.n6I+k6I+Z4J.z5I+Z9X)](a[z1I]||"|"):d[S8](b)||(b=[b]);var e,f=b.length,g;c[s8X](function(){g=false;for(e=0;e<f;e++)if(this[z5J]==b[e]){g=true;break;}
this[(O9J+Z4J.V1I+u3I+Z4J.q2+w8)]=g;}
);A(c);}
,enable:function(a){a[(P6X+Z4J.i0I)][T9X]((Y0o+k6I+n4J))[(k6I+k7X+k6I)]((H0J+Z4J.n6I+Z4J.w2+P3I),false);}
,disable:function(a){a[m8X][T9X]((S3I+r4))[(G0J+V7)]("disabled",true);}
,update:function(a,b){var r4J="ddO",c=s[M2X],d=c[(Z8I+Z4J.q2+Z4J.i0I)](a);c[(F4+Z4J.Y8+r4J+Q8I+J5X)](a,b);c[(Z4J.n6I+Z4J.q2+Z4J.i0I)](a,d);}
}
);s[r7J]=d[H3I](!0,{}
,p,{_addOptions:function(a,b){var c=a[m8X].empty();b&&f[(k6I+Z4J.Y8+S3I+Z4J.o6I+Z4J.n6I)](b,a[d1],function(b,g,h){var P8='me',m3I='dio';c[(e0+K4X)]('<div><input id="'+f[T0J](a[J1J])+"_"+h+(k6J+c0X+H3J+i8X+G9J+q4I+m3I+k6J+v9I+q4I+P8+i8X)+a[(Z4J.F1I+a0+Z4J.q2)]+'" /><label for="'+f[T0J](a[(S3I+w8)])+"_"+h+'">'+g+(P0o+Z4J.z5I+Z4J.Y8+N8+w7+U+w8+S3I+g0J+N2X));d("input:last",c)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value",b)[0][(F4+u9+T1+Z4J.o6I+W5J+X0I)]=b;}
);}
,create:function(a){var m4I="ptio",n0X="Opt";a[(z1J+n8X+Z4J.R0I+Z4J.i0I)]=d((M4X+w8+P9X+t4I));s[(Z4J.o6I+b4+Q7X)][(F4+Z4J.Y8+N9I+n0X+S3I+p3J)](a,a[(Z4J.w1I+m4I+Z4J.F1I+Z4J.n6I)]||a[(H0o+s1+Q8I+Z4J.n6I)]);this[(t7)]("open",function(){a[m8X][T9X]("input")[s8X](function(){var c6J="reC";if(this[(j6J+c6J+y3I+Z4J.q2+O0o+w8)])this[B6J]=true;}
);}
);return a[m8X][0];}
,get:function(a){a=a[(F4+S3I+r4)][(c8I+S3I+F9X)]((X4X+Z4J.R0I+Z4J.i0I+J0o+Z4J.V2+t7X+u3I+u9));return a.length?a[0][(F4+Z4J.q2+w8+Z9X+x2J+y1)]:h;}
,set:function(a,b){a[m8X][(b9+Z4J.F1I+w8)]((Y0o+k6I+n4J))[(Z4J.q2+Z4J.Y8+Z4J.V2+y3I)](function(){var n2X="eck",A1I="_preChecked";this[A1I]=false;if(this[(F4+Z4J.q2+w8+S3I+Z4J.i0I+Z4J.w1I+Z4J.o6I+F4+g0J+X0I)]==b)this[(F4+k6I+Z4J.o6I+X7I+t7X+u3I+u9)]=this[B6J]=true;else this[(F4+k6I+Z4J.o6I+Z4J.q2+G4X+y3I+n2X+Z4J.q2+w8)]=this[B6J]=false;}
);A(a[m8X][(c8I+S3I+Z4J.F1I+w8)]("input:checked"));}
,enable:function(a){a[(m8X)][(K3J+w8)]("input")[x3I]("disabled",false);}
,disable:function(a){a[m8X][(c8I+Y0o+w8)]((S3I+n8X+Z4J.R0I+Z4J.i0I))[(p4J+k6I)]("disabled",true);}
,update:function(a,b){var m2="eq",y8J="ilt",c=s[(Z4J.o6I+Z4J.Y8+H0J+Z4J.w1I)],d=c[(R5)](a);c[k3X](a,b);var f=a[m8X][T9X]("input");c[(Y9J)](a,f[(c8I+y8J+Q2)]('[value="'+d+'"]').length?d:f[(m2)](0)[(Z4J.Y8+Z4J.i0I+Z4J.i0I+Z4J.o6I)]("value"));}
}
);s[(w8+Z4J.Y8+Z4J.i0I+Z4J.q2)]=d[H3I](!0,{}
,p,{create:function(a){var z2="../../",g2J="teIm",k9="mage",q0J="eI",i6X="822",p8="_2",T4X="ker",X5I="For",C9="dateFormat",L0X="dC";a[(F4+S3I+Z4J.F1I+k6I+Z4J.R0I+Z4J.i0I)]=d((M4X+S3I+n8X+n4J+t4I))[l5X](d[H3I]({id:f[T0J](a[J1J]),type:(Z4J.i0I+Z4J.q2+z0J+Z4J.i0I)}
,a[(z1+Z4J.i0I+Z4J.o6I)]));if(d[(w8+Z4J.Y8+I6I+k6I+M3J+l6+Z4J.o6I)]){a[(F4+S3I+n8X+Z4J.R0I+Z4J.i0I)][(Z4J.Y8+w8+L0X+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]("jqueryui");if(!a[C9])a[(Z4J.C6J+I6I+X5I+A9J+Z4J.i0I)]=d[(c1+S1I+Z4J.V2+T4X)][(v0+o3+G4X+p8+i6X)];if(a[(w8+z1+q0J+k9)]===h)a[(Z4J.C6J+g2J+Z4J.Y8+Z8I+Z4J.q2)]=(z2+S3I+o5I+L9+Z4J.q2+Z4J.n6I+w0X+Z4J.V2+Z4J.Y8+Z4J.z5I+q8+w8+Z4J.q2+Z4J.o6I+Z4J.l0X+k6I+Z4J.F1I+Z8I);setTimeout(function(){var y7X="dateImage",P6="Fo";d(a[(L3X+l2I+Z4J.i0I)])[(Z4J.l1+i3X+Z4J.V2+l6+Z4J.o6I)](d[H3I]({showOn:(N8+Z4J.w1I+U1I),dateFormat:a[(Z4J.l1+Z4J.q2+P6+Z4J.o6I+o5I+z1)],buttonImage:a[y7X],buttonImageOnly:true}
,a[(l5J)]));d("#ui-datepicker-div")[v3J]("display",(w0I+Z4J.q2));}
,10);}
else a[m8X][(Z4J.Y8+E2I+Z4J.o6I)]("type",(Z4J.l1+Z4J.q2));return a[(z1J+P3J+Z4J.i0I)][0];}
,set:function(a,b){var n1J="etDa",E4X="atep";d[o0J]&&a[(F4+S3I+Z4J.F1I+k6I+n4J)][F4J]((C3I+Z4J.n6I+j3+E4X+S3I+Z4J.V2+u3I+Q2))?a[m8X][o0J]((Z4J.n6I+n1J+Z4J.i0I+Z4J.q2),b)[l2]():d(a[(z1J+P3J+Z4J.i0I)])[y1](b);}
,enable:function(a){d[o0J]?a[(z1J+n8X+Z4J.R0I+Z4J.i0I)][o0J]("enable"):d(a[(z1J+Z4J.F1I+l2I+Z4J.i0I)])[(G0J+V7)]("disabled",false);}
,disable:function(a){d[(Z4J.l1+i3X+O0o+Z4J.o6I)]?a[(F4+Y0o+l2I+Z4J.i0I)][o0J]("disable"):d(a[(z1J+P3J+Z4J.i0I)])[(p4J+k6I)]((H0J+Z4J.n6I+Z4J.Y8+l3+w8),true);}
,owns:function(a,b){var f6I="epick",f8J="nts",s2J="icker",m6J="paren";return d(b)[(m6J+Z4J.I2I)]((w8+S3I+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+z1+W2+s2J)).length||d(b)[(o8I+C3X+f8J)]((H0J+g0J+Z4J.l0X+Z4J.R0I+S3I+F6X+w8+Z4J.Y8+Z4J.i0I+f6I+Z4J.q2+Z4J.o6I+F6X+y3I+h7I+Q2)).length?true:false;}
}
);s[P4]=d[(Z4J.q2+e2+C5I)](!E0,{}
,p,{create:function(a){var E3X="cker";a[(Z0+n4J)]=d((M4X+S3I+Z4J.F1I+W2I+t4I))[(Z4J.Y8+Z4J.i0I+U8I)](d[(Z4J.q2+z0J+Z4J.i0I+C5I)](v3X,{id:f[T0J](a[(S3I+w8)]),type:(W6X+Z4J.i0I)}
,a[l5X]));a[(F4+k6I+S3I+E3X)]=new f[(N8J+I6I+W7I+o5I+Z4J.q2)](a[(L3X+W2I)],d[H3I]({format:a[o7J],i18n:this[(D7I+B0o+Z4J.F1I)][(w8+z1+Z4J.q2+Y0I)]}
,a[l5J]));return a[(L3X+W2I)][E0];}
,set:function(a,b){a[(F4+S1I+z9J+Z4J.q2+Z4J.o6I)][(y1)](b);A(a[m8X]);}
,owns:function(a,b){return a[(j6J+S3I+z9J+Q2)][v2J](b);}
,destroy:function(a){var K3="stroy",F4I="_picker";a[F4I][(y9I+K3)]();}
,minDate:function(a,b){a[(F4+k6I+M3J+l6+Z4J.o6I)][(u6J+Z4J.F1I)](b);}
,maxDate:function(a,b){a[(F4+k6I+S3I+O0o+Z4J.o6I)][(o5I+Z4J.Y8+z0J)](b);}
}
);s[(Z4J.R0I+A5I+Z4J.Y8+w8)]=d[(Z4J.q2+z0J+N5X+w8)](!E0,{}
,p,{create:function(a){var b=this;return M(b,a,function(c){var x2="Type";f[(c8I+S3I+Z4J.q2+Z0I+x2+Z4J.n6I)][(Z4J.R0I+M7I+Z4J.w1I+Z4J.Y8+w8)][Y9J][(Z4J.V2+Z4J.Y8+q5I)](b,a,c[E0]);}
);}
,get:function(a){return a[(F4+g0J+X0I)];}
,set:function(a,b){var i9I="dito",T2I="dl",n3="ger",e5I="trig",Q6X="noClear",d9J="rT",X8I="lea",H1="FileT",A2X="div.rendered";a[(F4+g0J+Z4J.Y8+Z4J.z5I)]=b;var c=a[(z1J+n8X+Z4J.R0I+Z4J.i0I)];if(a[(w8+N9X+Z4J.g7I)]){var d=c[T9X](A2X);a[(F4+e7J+Z4J.z5I)]?d[(E4J+o5I+Z4J.z5I)](a[(w8+S3I+H2+l7I+Z4J.g7I)](a[C7])):d.empty()[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.n6I+k6I+Z4J.Y8+Z4J.F1I+N2X)+(a[(Z4J.F1I+Z4J.w1I+H1+Z4J.q2+z0J+Z4J.i0I)]||"No file")+"</span>");}
d=c[T9X](I0I);if(b&&a[(Q4J+Z4J.q2+Z4J.Y8+Z4J.o6I+X6+Z4J.q2+z0J+Z4J.i0I)]){d[z6I](a[(Z4J.V2+X8I+d9J+p5+Z4J.i0I)]);c[(J8I+Z4J.w1I+g0J+X7I+Z4J.z5I+Z4J.Y8+Z4J.n6I+Z4J.n6I)]((Z4J.F1I+Z4J.w1I+X7J+H5I));}
else c[(b8X+p2J+Z4J.n6I)](Q6X);a[(P6X+Z4J.i0I)][T9X]((X4X+Z4J.R0I+Z4J.i0I))[(e5I+n3+z8+Z4J.Y8+Z4J.F1I+T2I+Z4J.q2+Z4J.o6I)]((r2+Z4J.l0X+Z4J.q2+i9I+Z4J.o6I),[a[(C7)]]);}
,enable:function(a){a[m8X][T9X]((S3I+r4))[(x3I)]((H0J+Z4J.n6I+Z4J.Y8+N8+P3I),q9I);a[(E4+N8+P3I)]=v3X;}
,disable:function(a){var w4X="_en";a[(F4+S3I+r4)][T9X]((X4X+n4J))[x3I](c6I,v3X);a[(w4X+Z4J.Y8+l3+w8)]=q9I;}
}
);s[(r2+g6+Q+Z4J.g7I)]=d[(s0X+Z4J.q2+F9X)](!0,{}
,p,{create:function(a){var T9="uploadMany",b=this,c=M(b,a,function(c){var M7="ldT";a[C7]=a[(W5J+X0I)][o1I](c);f[(c8I+S3I+Z4J.q2+M7+O7X+B4)][T9][Y9J][(d5J+Z4J.z5I)](b,a,a[(F4+e7J+Z4J.z5I)]);}
);c[(Z4J.Y8+w8+w8+G4X+Z4J.z5I+L1)]((p6+Z4J.i0I+S3I))[(t7)]("click",(u0o+Z4J.i0I+Z4J.w1I+Z4J.F1I+Z4J.l0X+Z4J.o6I+Z4J.q2+f1J+Z4J.q2),function(c){var D4J="stopPropagation";c[D4J]();c=d(this).data((S3I+w8+z0J));a[C7][(Z4J.n6I+k6I+u1I+Z9J)](c,1);f[j3I][T9][Y9J][(L7J+Z4J.z5I+Z4J.z5I)](b,a,a[(W5J+X0I)]);}
);return c;}
,get:function(a){return a[(W5J+X0I)];}
,set:function(a,b){var J9X="_va",S7J="noFileText",k3J="appendTo",L7="ust",t3I="lec",b1I="Uplo";b||(b=[]);if(!d[S8](b))throw (b1I+b4+W4J+Z4J.V2+A0I+t3I+G5X+Z4J.n6I+W4J+o5I+L7+W4J+y3I+Z4J.Y8+l9J+W4J+Z4J.Y8+Z4J.F1I+W4J+Z4J.Y8+Z4J.o6I+Y8X+Z4J.g7I+W4J+Z4J.Y8+Z4J.n6I+W4J+Z4J.Y8+W4J+g0J+X0I+N1J);a[(F4+g0J+X0I)]=b;var c=this,e=a[m8X];if(a[(S0+k6I+c5J)]){e=e[(K3J+w8)]((I1+Z4J.l0X+Z4J.o6I+Z4J.q2+Z4J.F1I+w8+Q2+Z4J.q2+w8)).empty();if(b.length){var f=d("<ul/>")[k3J](e);d[s8X](b,function(b,d){var z9='dx',i1J='ov';f[(e0+k6I+Z4J.q2+Z4J.F1I+w8)]((M4X+Z4J.z5I+S3I+N2X)+a[p6J](d,b)+' <button class="'+c[T4][y0o][g8]+(q2X+G9J+m8I+A9I+i1J+m8I+k6J+m2I+h1+q4I+m6+T7I+z9+i8X)+b+'">&times;</button></li>');}
);}
else e[(Z4J.Y8+X1I+w8)]((M4X+Z4J.n6I+k6I+Q+N2X)+(a[S7J]||"No files")+(P0o+Z4J.n6I+o8I+Z4J.F1I+N2X));}
a[(Z0+n4J)][T9X]("input")[g4I]("upload.editor",[a[(J9X+Z4J.z5I)]]);}
,enable:function(a){var V7X="bled";a[m8X][(K3J+w8)]((S3I+r4))[(k6I+X6X)]("disabled",false);a[(N9J+g7X+V7X)]=true;}
,disable:function(a){a[m8X][T9X]("input")[(G0J+Z4J.w1I+k6I)]((w8+S3I+i0+N8+Z4J.z5I+u9),true);a[x4J]=false;}
}
);r[(p5+Z4J.i0I)][D5I]&&d[H3I](f[(b9+Z4J.q2+Z0I+X6+Z4J.g7I+g6I+Z4J.n6I)],r[s0X][D5I]);r[(s0X)][(Z4J.q2+H0J+Z4J.i0I+Z4J.w1I+g1J+S3I+w7+w5I)]=f[(v7+h8J+m5+Z4J.n6I)];f[(c8I+G6J+Z4J.q2+Z4J.n6I)]={}
;f.prototype.CLASS=P9J;f[L7I]=(U1X+Z4J.l0X+z7X+Z4J.l0X+n9X);return f;}
);
/*! Bootstrap integration for DataTables' Editor
 * ©2015 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-bs', 'datatables.net-editor'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-bs')(root, $).$;
			}

			if ( ! $.fn.dataTable.Editor ) {
				require('datatables.net-editor')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/*
 * Set the default display controller to be our bootstrap control 
 */
DataTable.Editor.defaults.display = "bootstrap";


/*
 * Alter the buttons that Editor adds to TableTools so they are suitable for bootstrap
 */
var i18nDefaults = DataTable.Editor.defaults.i18n;
i18nDefaults.create.title = "<h3>"+i18nDefaults.create.title+"</h3>";
i18nDefaults.edit.title = "<h3>"+i18nDefaults.edit.title+"</h3>";
i18nDefaults.remove.title = "<h3>"+i18nDefaults.remove.title+"</h3>";

var tt = DataTable.TableTools;
if ( tt ) {
	tt.BUTTONS.editor_create.formButtons[0].className = "btn btn-primary";
	tt.BUTTONS.editor_edit.formButtons[0].className = "btn btn-primary";
	tt.BUTTONS.editor_remove.formButtons[0].className = "btn btn-danger";
}


/*
 * Change the default classes from Editor to be classes for Bootstrap
 */
$.extend( true, $.fn.dataTable.Editor.classes, {
	"header": {
		"wrapper": "DTE_Header modal-header"
	},
	"body": {
		"wrapper": "DTE_Body modal-body"
	},
	"footer": {
		"wrapper": "DTE_Footer modal-footer"
	},
	"form": {
		"tag": "form-horizontal",
		"button": "btn btn-default"
	},
	"field": {
		"wrapper": "DTE_Field",
		"label":   "col-lg-4 control-label",
		"input":   "col-lg-8 controls",
		"error":   "error has-error",
		"msg-labelInfo": "help-block",
		"msg-info":      "help-block",
		"msg-message":   "help-block",
		"msg-error":     "help-block",
		"multiValue":    "well well-sm multi-value",
		"multiInfo":     "small",
		"multiRestore":  "well well-sm multi-restore"
	}
} );


/*
 * Bootstrap display controller - this is effectively a proxy to the Bootstrap
 * modal control.
 */

var self;

DataTable.Editor.display.bootstrap = $.extend( true, {}, DataTable.Editor.models.displayController, {
	/*
	 * API methods
	 */
	"init": function ( dte ) {
		// init can be called multiple times (one for each Editor instance), but
		// we only support a single construct here (shared between all Editor
		// instances)
		if ( ! self._dom.content ) {
			self._dom.content = $(
				'<div class="modal fade">'+
					'<div class="modal-dialog">'+
						'<div class="modal-content"/>'+
					'</div>'+
				'</div>'
			);

			self._dom.close = $('<button class="close">&times;</div>');

			self._dom.close.click( function () {
				self._dte.close('icon');
			} );

			$(document).on('click', 'div.modal', function (e) {
				if ( $(e.target).hasClass('modal') && self._shown ) {
					self._dte.background();
				}
			} );

			dte.on( 'open.dtebs', function ( e, type ) {
				if ( type === 'inline' || type === 'bubble' ) {
					$('div.DTE input[type=text], div.DTE select, div.DTE textarea').addClass( 'form-control' );
				}
			} );
		}

		return self;
	},

	"open": function ( dte, append, callback ) {
		if ( self._shown ) {
			if ( callback ) {
				callback();
			}
			return;
		}

		self._dte = dte;
		self._shown = true;

		var content = self._dom.content.find('div.modal-content');
		content.children().detach();
		content.append( append );

		$('div.modal-header', append).prepend( self._dom.close );

		$(self._dom.content)
			.one('shown.bs.modal', function () {
				// Can only give elements focus when shown
				if ( self._dte.s.setFocus ) {
					self._dte.s.setFocus.focus();
				}

				if ( callback ) {
					callback();
				}
			})
			.one('hidden', function () {
				self._shown = false;
			})
			.appendTo( 'body' )
			.modal( {
				backdrop: "static",
				keyboard: false
			} );

		$('input:not([type=checkbox]):not([type=radio]), select, textarea', self._dom.content)
			.addClass( 'form-control' );
	},

	"close": function ( dte, callback ) {
		if ( !self._shown ) {
			if ( callback ) {
				callback();
			}
			return;
		}

		$(self._dom.content)
			.one( 'hidden.bs.modal', function () {
				$(this).detach();
			} )
			.modal('hide');

		self._dte = dte;
		self._shown = false;

		if ( callback ) {
			callback();
		}
	},

	node: function ( dte ) {
		return self._dom.content[0];
	},


	/*
	 * Private properties
	 */
	 "_shown": false,
	"_dte": null,
	"_dom": {}
} );

self = DataTable.Editor.display.bootstrap;


return DataTable.Editor;
}));
/*!
 Bootstrap integration for DataTables' Editor
 ©2015 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-bs","datatables.net-editor"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,d){a||(a=window);if(!d||!d.fn.dataTable)d=require("datatables.net-bs")(a,d).$;d.fn.dataTable.Editor||require("datatables.net-editor")(a,d);return c(d,a,a.document)}:c(jQuery,window,document)})(function(c,a,d){a=c.fn.dataTable;a.Editor.defaults.display="bootstrap";var e=a.Editor.defaults.i18n;
e.create.title="<h3>"+e.create.title+"</h3>";e.edit.title="<h3>"+e.edit.title+"</h3>";e.remove.title="<h3>"+e.remove.title+"</h3>";if(e=a.TableTools)e.BUTTONS.editor_create.formButtons[0].className="btn btn-primary",e.BUTTONS.editor_edit.formButtons[0].className="btn btn-primary",e.BUTTONS.editor_remove.formButtons[0].className="btn btn-danger";c.extend(!0,c.fn.dataTable.Editor.classes,{header:{wrapper:"DTE_Header modal-header"},body:{wrapper:"DTE_Body modal-body"},footer:{wrapper:"DTE_Footer modal-footer"},
form:{tag:"form-horizontal",button:"btn btn-default"},field:{wrapper:"DTE_Field",label:"col-lg-4 control-label",input:"col-lg-8 controls",error:"error has-error","msg-labelInfo":"help-block","msg-info":"help-block","msg-message":"help-block","msg-error":"help-block",multiValue:"well well-sm multi-value",multiInfo:"small",multiRestore:"well well-sm multi-restore"}});var b;a.Editor.display.bootstrap=c.extend(!0,{},a.Editor.models.displayController,{init:function(a){if(!b._dom.content){b._dom.content=
c('<div class="modal fade"><div class="modal-dialog"><div class="modal-content"/></div></div>');b._dom.close=c('<button class="close">&times;</div>');b._dom.close.click(function(){b._dte.close("icon")});c(d).on("click","div.modal",function(a){c(a.target).hasClass("modal")&&b._shown&&b._dte.background()});a.on("open.dtebs",function(b,a){(a==="inline"||a==="bubble")&&c("div.DTE input[type=text], div.DTE select, div.DTE textarea").addClass("form-control")})}return b},open:function(a,e,d){if(b._shown)d&&
d();else{b._dte=a;b._shown=true;a=b._dom.content.find("div.modal-content");a.children().detach();a.append(e);c("div.modal-header",e).prepend(b._dom.close);c(b._dom.content).one("shown.bs.modal",function(){b._dte.s.setFocus&&b._dte.s.setFocus.focus();d&&d()}).one("hidden",function(){b._shown=false}).appendTo("body").modal({backdrop:"static",keyboard:false});c("input:not([type=checkbox]):not([type=radio]), select, textarea",b._dom.content).addClass("form-control")}},close:function(a,d){if(b._shown){c(b._dom.content).one("hidden.bs.modal",
function(){c(this).detach()}).modal("hide");b._dte=a;b._shown=false}d&&d()},node:function(){return b._dom.content[0]},_shown:!1,_dte:null,_dom:{}});b=a.Editor.display.bootstrap;return a.Editor});
/*! Foundation integration for DataTables' Editor
 * ©2015 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-zf', 'datatables.net-editor'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-zf')(root, $).$;
			}

			if ( ! $.fn.dataTable.Editor ) {
				require('datatables.net-editor')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/*
 * Set the default display controller to be our foundation control 
 */
DataTable.Editor.defaults.display = "foundation";


/*
 * Change the default classes from Editor to be classes for Foundation
 */
$.extend( true, $.fn.dataTable.Editor.classes, {
	field: {
		wrapper:         "DTE_Field row",
		label:           "small-4 columns inline",
		input:           "small-8 columns",
		error:           "error",
		multiValue:      "panel radius multi-value",
		multiInfo:       "small",
		multiRestore:    "panel radius multi-restore",
		"msg-labelInfo": "label secondary",
		"msg-info":      "label secondary",
		"msg-message":   "label secondary",
		"msg-error":     "label alert"
	},
	form: {
		button:  "button small"
	}
} );


/*
 * Foundation display controller - this is effectively a proxy to the Foundation
 * modal control.
 */
var self;

DataTable.Editor.display.foundation = $.extend( true, {}, DataTable.Editor.models.displayController, {
	/*
	 * API methods
	 */
	"init": function ( dte ) {
		self._dom.content = $(
			'<div class="reveal reveal-modal" data-reveal />'
		);
		self._dom.close = $('<button class="close close-button">&times;</div>');

		self._dom.close.click( function () {
			self._dte.close('icon');
		} );

		return self;
	},

	"open": function ( dte, append, callback ) {
		if ( self._shown ) {
			if ( callback ) {
				callback();
			}
			return;
		}

		self._dte = dte;
		self._shown = true;

		var content = self._dom.content;
		content.children().detach();
		content.append( append );
		content.prepend( self._dom.close );

		$(self._dom.content)
			.one('opened.fndtn.reveal', function () {
				if ( callback ) {
					callback();
				}
			})
			.one('closed.fndtn.reveal', function () {
				self._shown = false;
			});

		if ( window.Foundation && window.Foundation.Reveal ) {
			// Foundation 6
			if ( ! self._reveal ) {
				self._reveal = new window.Foundation.Reveal( self._dom.content, {
					closeOnClick: false
				} );
			}

			$(self._dom.content).appendTo('body');
			self._reveal.open();
		}
		else {
			// Foundation 5
			$(self._dom.content).foundation( 'reveal','open' );
		}

		$(document).on('click.dte-zf', 'div.reveal-modal-bg, div.reveal-overlay', function () {
			self._dte.background();
		} );
	},

	"close": function ( dte, callback ) {
		if ( !self._shown ) {
			if ( callback ) {
				callback();
			}
			return;
		}

		if ( self._reveal ) {
			self._reveal.close();
		}
		else {
			$(self._dom.content).foundation( 'reveal', 'close' );
		}

		$(document).off( 'click.dte-zf' );

		self._dte = dte;
		self._shown = false;

		if ( callback ) {
			callback();
		}
	},

	node: function ( dte ) {
		return self._dom.content[0];
	},


	/*
	 * Private properties
	 */
	 "_shown": false,
	"_dte": null,
	"_dom": {}
} );

self = DataTable.Editor.display.foundation;


return DataTable.Editor;
}));
/*!
 Foundation integration for DataTables' Editor
 ©2015 SpryMedia Ltd - datatables.net/license
*/

(function(b){"function"===typeof define&&define.amd?define(["jquery","datatables.net-zf","datatables.net-editor"],function(c){return b(c,window,document)}):"object"===typeof exports?module.exports=function(c,d){c||(c=window);if(!d||!d.fn.dataTable)d=require("datatables.net-zf")(c,d).$;d.fn.dataTable.Editor||require("datatables.net-editor")(c,d);return b(d,c,c.document)}:b(jQuery,window,document)})(function(b,c,d){var e=b.fn.dataTable;e.Editor.defaults.display="foundation";b.extend(!0,b.fn.dataTable.Editor.classes,
{field:{wrapper:"DTE_Field row",label:"small-4 columns inline",input:"small-8 columns",error:"error",multiValue:"panel radius multi-value",multiInfo:"small",multiRestore:"panel radius multi-restore","msg-labelInfo":"label secondary","msg-info":"label secondary","msg-message":"label secondary","msg-error":"label alert"},form:{button:"button small"}});var a;e.Editor.display.foundation=b.extend(!0,{},e.Editor.models.displayController,{init:function(){a._dom.content=b('<div class="reveal reveal-modal" data-reveal />');
a._dom.close=b('<button class="close close-button">&times;</div>');a._dom.close.click(function(){a._dte.close("icon")});return a},open:function(f,e,g){if(a._shown)g&&g();else{a._dte=f;a._shown=true;f=a._dom.content;f.children().detach();f.append(e);f.prepend(a._dom.close);b(a._dom.content).one("opened.fndtn.reveal",function(){g&&g()}).one("closed.fndtn.reveal",function(){a._shown=false});if(c.Foundation&&c.Foundation.Reveal){if(!a._reveal)a._reveal=new c.Foundation.Reveal(a._dom.content,{closeOnClick:false});
b(a._dom.content).appendTo("body");a._reveal.open()}else b(a._dom.content).foundation("reveal","open");b(d).on("click.dte-zf","div.reveal-modal-bg, div.reveal-overlay",function(){a._dte.background()})}},close:function(c,e){if(a._shown){a._reveal?a._reveal.close():b(a._dom.content).foundation("reveal","close");b(d).off("click.dte-zf");a._dte=c;a._shown=false}e&&e()},node:function(){return a._dom.content[0]},_shown:!1,_dte:null,_dom:{}});a=e.Editor.display.foundation;return e.Editor});
/*! jQuery UI integration for DataTables' Editor
 * ©2015 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-jqui', 'datatables.net-editor'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-jqui')(root, $).$;
			}

			if ( ! $.fn.dataTable.Editor ) {
				require('datatables.net-editor')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var Editor = DataTable.Editor;
var doingClose = false;

/*
 * Set the default display controller to be our foundation control 
 */
Editor.defaults.display = "jqueryui";

/*
 * Change the default classes from Editor to be classes for Bootstrap
 */
$.extend( true, $.fn.dataTable.Editor.classes, {
	form: {
		button:  "btn ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"
	}
} );

/*
 * jQuery UI display controller - this is effectively a proxy to the jQuery UI
 * modal control.
 */
Editor.display.jqueryui = $.extend( true, {}, Editor.models.displayController, {
	init: function ( dte ) {
		dte.__dialouge = $('<div/>')
			.css('display', 'none')
			.appendTo('body')
			.dialog( $.extend( true, Editor.display.jqueryui.modalOptions, {
				autoOpen: false,
				buttons: { "A": function () {} }, // fake button so the button container is created
				closeOnEscape: false // allow editor's escape function to run
			} ) );

		// Need to know when the dialogue is closed using its own trigger
		// so we can reset the form
		$(dte.__dialouge).on( 'dialogclose', function (e) {
			if ( ! doingClose ) {
				dte.close();
			}
		} );

		return Editor.display.jqueryui;
	},

	open: function ( dte, append, callback ) {
		dte.__dialouge
			.append( append )
			.dialog( 'open' );

		$(dte.dom.formError).appendTo(
			dte.__dialouge.parent().find('div.ui-dialog-buttonpane')
		);

		dte.__dialouge.parent().find('.ui-dialog-title').html( dte.dom.header.innerHTML );
		dte.__dialouge.parent().addClass('DTED');

		// Modify the Editor buttons to be jQuery UI suitable
		var buttons = $(dte.dom.buttons)
			.children()
			.addClass( 'ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only' )
			.each( function () {
				$(this).wrapInner( '<span class="ui-button-text" />' );
			} );

		// Move the buttons into the jQuery UI button set
		dte.__dialouge.parent().find('div.ui-dialog-buttonset')
			.empty()
			.append( buttons.parent() );

		if ( callback ) {
			callback();
		}
	},

	close: function ( dte, callback ) {
		if ( dte.__dialouge ) {
			// Don't want to trigger a close() call from dialogclose!
			doingClose = true;
			dte.__dialouge.dialog( 'close' );
			doingClose = false;
		}

		if ( callback ) {
			callback();
		}
	},

	node: function ( dte ) {
		return dte.__dialouge[0];
	},

	// jQuery UI dialogues perform their own focus capture
	captureFocus: false
} );


Editor.display.jqueryui.modalOptions = {
	width: 600,
	modal: true
};


return DataTable.Editor;
}));
/*!
 jQuery UI integration for DataTables' Editor
 ©2015 SpryMedia Ltd - datatables.net/license
*/

(function(b){"function"===typeof define&&define.amd?define(["jquery","datatables.net-jqui","datatables.net-editor"],function(c){return b(c,window,document)}):"object"===typeof exports?module.exports=function(c,a){c||(c=window);if(!a||!a.fn.dataTable)a=require("datatables.net-jqui")(c,a).$;a.fn.dataTable.Editor||require("datatables.net-editor")(c,a);return b(a,c,c.document)}:b(jQuery,window,document)})(function(b){var c=b.fn.dataTable,a=c.Editor,e=!1;a.defaults.display="jqueryui";b.extend(!0,b.fn.dataTable.Editor.classes,
{form:{button:"btn ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only"}});a.display.jqueryui=b.extend(!0,{},a.models.displayController,{init:function(d){d.__dialouge=b("<div/>").css("display","none").appendTo("body").dialog(b.extend(true,a.display.jqueryui.modalOptions,{autoOpen:false,buttons:{A:function(){}},closeOnEscape:false}));b(d.__dialouge).on("dialogclose",function(){e||d.close()});return a.display.jqueryui},open:function(d,a,c){d.__dialouge.append(a).dialog("open");b(d.dom.formError).appendTo(d.__dialouge.parent().find("div.ui-dialog-buttonpane"));
d.__dialouge.parent().find(".ui-dialog-title").html(d.dom.header.innerHTML);d.__dialouge.parent().addClass("DTED");a=b(d.dom.buttons).children().addClass("ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only").each(function(){b(this).wrapInner('<span class="ui-button-text" />')});d.__dialouge.parent().find("div.ui-dialog-buttonset").empty().append(a.parent());c&&c()},close:function(a,b){if(a.__dialouge){e=true;a.__dialouge.dialog("close");e=false}b&&b()},node:function(a){return a.__dialouge[0]},
captureFocus:!1});a.display.jqueryui.modalOptions={width:600,modal:!0};return c.Editor});
(function() {
  var slice = [].slice;

  this.ActionCable = {
    INTERNAL: {
      "message_types": {
        "welcome": "welcome",
        "ping": "ping",
        "confirmation": "confirm_subscription",
        "rejection": "reject_subscription"
      },
      "default_mount_path": "/cable",
      "protocols": ["actioncable-v1-json", "actioncable-unsupported"]
    },
    createConsumer: function(url) {
      var ref;
      if (url == null) {
        url = (ref = this.getConfig("url")) != null ? ref : this.INTERNAL.default_mount_path;
      }
      return new ActionCable.Consumer(this.createWebSocketURL(url));
    },
    getConfig: function(name) {
      var element;
      element = document.head.querySelector("meta[name='action-cable-" + name + "']");
      return element != null ? element.getAttribute("content") : void 0;
    },
    createWebSocketURL: function(url) {
      var a;
      if (url && !/^wss?:/i.test(url)) {
        a = document.createElement("a");
        a.href = url;
        a.href = a.href;
        a.protocol = a.protocol.replace("http", "ws");
        return a.href;
      } else {
        return url;
      }
    },
    startDebugging: function() {
      return this.debugging = true;
    },
    stopDebugging: function() {
      return this.debugging = null;
    },
    log: function() {
      var messages;
      messages = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (this.debugging) {
        messages.push(Date.now());
        return console.log.apply(console, ["[ActionCable]"].concat(slice.call(messages)));
      }
    }
  };

  if (typeof window !== "undefined" && window !== null) {
    window.ActionCable = this.ActionCable;
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = this.ActionCable;
  }

}).call(this);
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ActionCable.ConnectionMonitor = (function() {
    var clamp, now, secondsSince;

    ConnectionMonitor.pollInterval = {
      min: 3,
      max: 30
    };

    ConnectionMonitor.staleThreshold = 6;

    function ConnectionMonitor(connection) {
      this.connection = connection;
      this.visibilityDidChange = bind(this.visibilityDidChange, this);
      this.reconnectAttempts = 0;
    }

    ConnectionMonitor.prototype.start = function() {
      if (!this.isRunning()) {
        this.startedAt = now();
        delete this.stoppedAt;
        this.startPolling();
        document.addEventListener("visibilitychange", this.visibilityDidChange);
        return ActionCable.log("ConnectionMonitor started. pollInterval = " + (this.getPollInterval()) + " ms");
      }
    };

    ConnectionMonitor.prototype.stop = function() {
      if (this.isRunning()) {
        this.stoppedAt = now();
        this.stopPolling();
        document.removeEventListener("visibilitychange", this.visibilityDidChange);
        return ActionCable.log("ConnectionMonitor stopped");
      }
    };

    ConnectionMonitor.prototype.isRunning = function() {
      return (this.startedAt != null) && (this.stoppedAt == null);
    };

    ConnectionMonitor.prototype.recordPing = function() {
      return this.pingedAt = now();
    };

    ConnectionMonitor.prototype.recordConnect = function() {
      this.reconnectAttempts = 0;
      this.recordPing();
      delete this.disconnectedAt;
      return ActionCable.log("ConnectionMonitor recorded connect");
    };

    ConnectionMonitor.prototype.recordDisconnect = function() {
      this.disconnectedAt = now();
      return ActionCable.log("ConnectionMonitor recorded disconnect");
    };

    ConnectionMonitor.prototype.startPolling = function() {
      this.stopPolling();
      return this.poll();
    };

    ConnectionMonitor.prototype.stopPolling = function() {
      return clearTimeout(this.pollTimeout);
    };

    ConnectionMonitor.prototype.poll = function() {
      return this.pollTimeout = setTimeout((function(_this) {
        return function() {
          _this.reconnectIfStale();
          return _this.poll();
        };
      })(this), this.getPollInterval());
    };

    ConnectionMonitor.prototype.getPollInterval = function() {
      var interval, max, min, ref;
      ref = this.constructor.pollInterval, min = ref.min, max = ref.max;
      interval = 5 * Math.log(this.reconnectAttempts + 1);
      return Math.round(clamp(interval, min, max) * 1000);
    };

    ConnectionMonitor.prototype.reconnectIfStale = function() {
      if (this.connectionIsStale()) {
        ActionCable.log("ConnectionMonitor detected stale connection. reconnectAttempts = " + this.reconnectAttempts + ", pollInterval = " + (this.getPollInterval()) + " ms, time disconnected = " + (secondsSince(this.disconnectedAt)) + " s, stale threshold = " + this.constructor.staleThreshold + " s");
        this.reconnectAttempts++;
        if (this.disconnectedRecently()) {
          return ActionCable.log("ConnectionMonitor skipping reopening recent disconnect");
        } else {
          ActionCable.log("ConnectionMonitor reopening");
          return this.connection.reopen();
        }
      }
    };

    ConnectionMonitor.prototype.connectionIsStale = function() {
      var ref;
      return secondsSince((ref = this.pingedAt) != null ? ref : this.startedAt) > this.constructor.staleThreshold;
    };

    ConnectionMonitor.prototype.disconnectedRecently = function() {
      return this.disconnectedAt && secondsSince(this.disconnectedAt) < this.constructor.staleThreshold;
    };

    ConnectionMonitor.prototype.visibilityDidChange = function() {
      if (document.visibilityState === "visible") {
        return setTimeout((function(_this) {
          return function() {
            if (_this.connectionIsStale() || !_this.connection.isOpen()) {
              ActionCable.log("ConnectionMonitor reopening stale connection on visibilitychange. visbilityState = " + document.visibilityState);
              return _this.connection.reopen();
            }
          };
        })(this), 200);
      }
    };

    now = function() {
      return new Date().getTime();
    };

    secondsSince = function(time) {
      return (now() - time) / 1000;
    };

    clamp = function(number, min, max) {
      return Math.max(min, Math.min(max, number));
    };

    return ConnectionMonitor;

  })();

}).call(this);
(function() {
  var i, message_types, protocols, ref, supportedProtocols, unsupportedProtocol,
    slice = [].slice,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  ref = ActionCable.INTERNAL, message_types = ref.message_types, protocols = ref.protocols;

  supportedProtocols = 2 <= protocols.length ? slice.call(protocols, 0, i = protocols.length - 1) : (i = 0, []), unsupportedProtocol = protocols[i++];

  ActionCable.Connection = (function() {
    Connection.reopenDelay = 500;

    function Connection(consumer) {
      this.consumer = consumer;
      this.open = bind(this.open, this);
      this.subscriptions = this.consumer.subscriptions;
      this.monitor = new ActionCable.ConnectionMonitor(this);
      this.disconnected = true;
    }

    Connection.prototype.send = function(data) {
      if (this.isOpen()) {
        this.webSocket.send(JSON.stringify(data));
        return true;
      } else {
        return false;
      }
    };

    Connection.prototype.open = function() {
      if (this.isActive()) {
        ActionCable.log("Attempted to open WebSocket, but existing socket is " + (this.getState()));
        throw new Error("Existing connection must be closed before opening");
      } else {
        ActionCable.log("Opening WebSocket, current state is " + (this.getState()) + ", subprotocols: " + protocols);
        if (this.webSocket != null) {
          this.uninstallEventHandlers();
        }
        this.webSocket = new WebSocket(this.consumer.url, protocols);
        this.installEventHandlers();
        this.monitor.start();
        return true;
      }
    };

    Connection.prototype.close = function(arg) {
      var allowReconnect, ref1;
      allowReconnect = (arg != null ? arg : {
        allowReconnect: true
      }).allowReconnect;
      if (!allowReconnect) {
        this.monitor.stop();
      }
      if (this.isActive()) {
        return (ref1 = this.webSocket) != null ? ref1.close() : void 0;
      }
    };

    Connection.prototype.reopen = function() {
      var error, error1;
      ActionCable.log("Reopening WebSocket, current state is " + (this.getState()));
      if (this.isActive()) {
        try {
          return this.close();
        } catch (error1) {
          error = error1;
          return ActionCable.log("Failed to reopen WebSocket", error);
        } finally {
          ActionCable.log("Reopening WebSocket in " + this.constructor.reopenDelay + "ms");
          setTimeout(this.open, this.constructor.reopenDelay);
        }
      } else {
        return this.open();
      }
    };

    Connection.prototype.getProtocol = function() {
      var ref1;
      return (ref1 = this.webSocket) != null ? ref1.protocol : void 0;
    };

    Connection.prototype.isOpen = function() {
      return this.isState("open");
    };

    Connection.prototype.isActive = function() {
      return this.isState("open", "connecting");
    };

    Connection.prototype.isProtocolSupported = function() {
      var ref1;
      return ref1 = this.getProtocol(), indexOf.call(supportedProtocols, ref1) >= 0;
    };

    Connection.prototype.isState = function() {
      var ref1, states;
      states = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      return ref1 = this.getState(), indexOf.call(states, ref1) >= 0;
    };

    Connection.prototype.getState = function() {
      var ref1, state, value;
      for (state in WebSocket) {
        value = WebSocket[state];
        if (value === ((ref1 = this.webSocket) != null ? ref1.readyState : void 0)) {
          return state.toLowerCase();
        }
      }
      return null;
    };

    Connection.prototype.installEventHandlers = function() {
      var eventName, handler;
      for (eventName in this.events) {
        handler = this.events[eventName].bind(this);
        this.webSocket["on" + eventName] = handler;
      }
    };

    Connection.prototype.uninstallEventHandlers = function() {
      var eventName;
      for (eventName in this.events) {
        this.webSocket["on" + eventName] = function() {};
      }
    };

    Connection.prototype.events = {
      message: function(event) {
        var identifier, message, ref1, type;
        if (!this.isProtocolSupported()) {
          return;
        }
        ref1 = JSON.parse(event.data), identifier = ref1.identifier, message = ref1.message, type = ref1.type;
        switch (type) {
          case message_types.welcome:
            this.monitor.recordConnect();
            return this.subscriptions.reload();
          case message_types.ping:
            return this.monitor.recordPing();
          case message_types.confirmation:
            return this.subscriptions.notify(identifier, "connected");
          case message_types.rejection:
            return this.subscriptions.reject(identifier);
          default:
            return this.subscriptions.notify(identifier, "received", message);
        }
      },
      open: function() {
        ActionCable.log("WebSocket onopen event, using '" + (this.getProtocol()) + "' subprotocol");
        this.disconnected = false;
        if (!this.isProtocolSupported()) {
          ActionCable.log("Protocol is unsupported. Stopping monitor and disconnecting.");
          return this.close({
            allowReconnect: false
          });
        }
      },
      close: function(event) {
        ActionCable.log("WebSocket onclose event");
        if (this.disconnected) {
          return;
        }
        this.disconnected = true;
        this.monitor.recordDisconnect();
        return this.subscriptions.notifyAll("disconnected", {
          willAttemptReconnect: this.monitor.isRunning()
        });
      },
      error: function() {
        return ActionCable.log("WebSocket onerror event");
      }
    };

    return Connection;

  })();

}).call(this);
(function() {
  var slice = [].slice;

  ActionCable.Subscriptions = (function() {
    function Subscriptions(consumer) {
      this.consumer = consumer;
      this.subscriptions = [];
    }

    Subscriptions.prototype.create = function(channelName, mixin) {
      var channel, params, subscription;
      channel = channelName;
      params = typeof channel === "object" ? channel : {
        channel: channel
      };
      subscription = new ActionCable.Subscription(this.consumer, params, mixin);
      return this.add(subscription);
    };

    Subscriptions.prototype.add = function(subscription) {
      this.subscriptions.push(subscription);
      this.consumer.ensureActiveConnection();
      this.notify(subscription, "initialized");
      this.sendCommand(subscription, "subscribe");
      return subscription;
    };

    Subscriptions.prototype.remove = function(subscription) {
      this.forget(subscription);
      if (!this.findAll(subscription.identifier).length) {
        this.sendCommand(subscription, "unsubscribe");
      }
      return subscription;
    };

    Subscriptions.prototype.reject = function(identifier) {
      var i, len, ref, results, subscription;
      ref = this.findAll(identifier);
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        subscription = ref[i];
        this.forget(subscription);
        this.notify(subscription, "rejected");
        results.push(subscription);
      }
      return results;
    };

    Subscriptions.prototype.forget = function(subscription) {
      var s;
      this.subscriptions = (function() {
        var i, len, ref, results;
        ref = this.subscriptions;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          s = ref[i];
          if (s !== subscription) {
            results.push(s);
          }
        }
        return results;
      }).call(this);
      return subscription;
    };

    Subscriptions.prototype.findAll = function(identifier) {
      var i, len, ref, results, s;
      ref = this.subscriptions;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        s = ref[i];
        if (s.identifier === identifier) {
          results.push(s);
        }
      }
      return results;
    };

    Subscriptions.prototype.reload = function() {
      var i, len, ref, results, subscription;
      ref = this.subscriptions;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        subscription = ref[i];
        results.push(this.sendCommand(subscription, "subscribe"));
      }
      return results;
    };

    Subscriptions.prototype.notifyAll = function() {
      var args, callbackName, i, len, ref, results, subscription;
      callbackName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      ref = this.subscriptions;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        subscription = ref[i];
        results.push(this.notify.apply(this, [subscription, callbackName].concat(slice.call(args))));
      }
      return results;
    };

    Subscriptions.prototype.notify = function() {
      var args, callbackName, i, len, results, subscription, subscriptions;
      subscription = arguments[0], callbackName = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];
      if (typeof subscription === "string") {
        subscriptions = this.findAll(subscription);
      } else {
        subscriptions = [subscription];
      }
      results = [];
      for (i = 0, len = subscriptions.length; i < len; i++) {
        subscription = subscriptions[i];
        results.push(typeof subscription[callbackName] === "function" ? subscription[callbackName].apply(subscription, args) : void 0);
      }
      return results;
    };

    Subscriptions.prototype.sendCommand = function(subscription, command) {
      var identifier;
      identifier = subscription.identifier;
      return this.consumer.send({
        command: command,
        identifier: identifier
      });
    };

    return Subscriptions;

  })();

}).call(this);
(function() {
  ActionCable.Subscription = (function() {
    var extend;

    function Subscription(consumer, params, mixin) {
      this.consumer = consumer;
      if (params == null) {
        params = {};
      }
      this.identifier = JSON.stringify(params);
      extend(this, mixin);
    }

    Subscription.prototype.perform = function(action, data) {
      if (data == null) {
        data = {};
      }
      data.action = action;
      return this.send(data);
    };

    Subscription.prototype.send = function(data) {
      return this.consumer.send({
        command: "message",
        identifier: this.identifier,
        data: JSON.stringify(data)
      });
    };

    Subscription.prototype.unsubscribe = function() {
      return this.consumer.subscriptions.remove(this);
    };

    extend = function(object, properties) {
      var key, value;
      if (properties != null) {
        for (key in properties) {
          value = properties[key];
          object[key] = value;
        }
      }
      return object;
    };

    return Subscription;

  })();

}).call(this);
(function() {
  ActionCable.Consumer = (function() {
    function Consumer(url) {
      this.url = url;
      this.subscriptions = new ActionCable.Subscriptions(this);
      this.connection = new ActionCable.Connection(this);
    }

    Consumer.prototype.send = function(data) {
      return this.connection.send(data);
    };

    Consumer.prototype.connect = function() {
      return this.connection.open();
    };

    Consumer.prototype.disconnect = function() {
      return this.connection.close({
        allowReconnect: false
      });
    };

    Consumer.prototype.ensureActiveConnection = function() {
      if (!this.connection.isActive()) {
        return this.connection.open();
      }
    };

    return Consumer;

  })();

}).call(this);
// Action Cable provides the framework to deal with WebSockets in Rails.
// You can generate new channels where WebSocket features live using the rails generate channel command.
//




(function() {
  this.App || (this.App = {});

  App.cable = ActionCable.createConsumer();

}).call(this);
(function() {


}).call(this);
// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//





$(document).ready(function get_json(){
   $.getJSON({
       type: 'GET',
       url: 'http://localhost:3000/json',
       dataType: 'json',
       success: function(data) {
           var items = []
           $.each(data, function(key, val) {
            console.log(val);
            items.push(
                  '<tr><td>' + val.name + '</td><td>' +  val.manufacturer + '</td><td>' + val.colour + '</td></tr>');
           });
           $(document).ready( function () {
             $('#table_id').DataTable({
               data: data,
               columns: [
                 { data: 'name' },
                 { data: 'manufacturer' },
                 { data: 'colour' }
               ]
             });
           });
        }
   });
   return false;
});
